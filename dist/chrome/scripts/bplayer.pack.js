(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var rootParent = {}

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.foo = function () { return 42 }
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */
function Buffer (arg) {
  if (!(this instanceof Buffer)) {
    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
    if (arguments.length > 1) return new Buffer(arg, arguments[1])
    return new Buffer(arg)
  }

  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    this.length = 0
    this.parent = undefined
  }

  // Common case.
  if (typeof arg === 'number') {
    return fromNumber(this, arg)
  }

  // Slightly less common case.
  if (typeof arg === 'string') {
    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
  }

  // Unusual.
  return fromObject(this, arg)
}

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function fromNumber (that, length) {
  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < length; i++) {
      that[i] = 0
    }
  }
  return that
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

  // Assumption: byteLength() return value is always < kMaxLength.
  var length = byteLength(string, encoding) | 0
  that = allocate(that, length)

  that.write(string, encoding)
  return that
}

function fromObject (that, object) {
  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

  if (isArray(object)) return fromArray(that, object)

  if (object == null) {
    throw new TypeError('must start with number, buffer, array or string')
  }

  if (typeof ArrayBuffer !== 'undefined') {
    if (object.buffer instanceof ArrayBuffer) {
      return fromTypedArray(that, object)
    }
    if (object instanceof ArrayBuffer) {
      return fromArrayBuffer(that, object)
    }
  }

  if (object.length) return fromArrayLike(that, object)

  return fromJsonObject(that, object)
}

function fromBuffer (that, buffer) {
  var length = checked(buffer.length) | 0
  that = allocate(that, length)
  buffer.copy(that, 0, 0, length)
  return that
}

function fromArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Duplicate of fromArray() to keep fromArray() monomorphic.
function fromTypedArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  // Truncating the elements is probably not what people expect from typed
  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
  // of the old Buffer constructor.
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(array)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromTypedArray(that, new Uint8Array(array))
  }
  return that
}

function fromArrayLike (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
// Returns a zero-length buffer for inputs that don't conform to the spec.
function fromJsonObject (that, object) {
  var array
  var length = 0

  if (object.type === 'Buffer' && isArray(object.data)) {
    array = object.data
    length = checked(array.length) | 0
  }
  that = allocate(that, length)

  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
} else {
  // pre-set for values that may exist in the future
  Buffer.prototype.length = undefined
  Buffer.prototype.parent = undefined
}

function allocate (that, length) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that.length = length
  }

  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
  if (fromPool) that.parent = rootParent

  return that
}

function checked (length) {
  // Note: cannot use `length < kMaxLength` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (subject, encoding) {
  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

  var buf = new Buffer(subject, encoding)
  delete buf.parent
  return buf
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  var i = 0
  var len = Math.min(x, y)
  while (i < len) {
    if (a[i] !== b[i]) break

    ++i
  }

  if (i !== len) {
    x = a[i]
    y = b[i]
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

  if (list.length === 0) {
    return new Buffer(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; i++) {
      length += list[i].length
    }
  }

  var buf = new Buffer(length)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

function byteLength (string, encoding) {
  if (typeof string !== 'string') string = '' + string

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'binary':
      // Deprecated
      case 'raw':
      case 'raws':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  start = start | 0
  end = end === undefined || end === Infinity ? this.length : end | 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return 0
  return Buffer.compare(this, b)
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
  byteOffset >>= 0

  if (this.length === 0) return -1
  if (byteOffset >= this.length) return -1

  // Negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

  if (typeof val === 'string') {
    if (val.length === 0) return -1 // special case: looking for empty string always fails
    return String.prototype.indexOf.call(this, val, byteOffset)
  }
  if (Buffer.isBuffer(val)) {
    return arrayIndexOf(this, val, byteOffset)
  }
  if (typeof val === 'number') {
    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
    }
    return arrayIndexOf(this, [ val ], byteOffset)
  }

  function arrayIndexOf (arr, val, byteOffset) {
    var foundIndex = -1
    for (var i = 0; byteOffset + i < arr.length; i++) {
      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
      } else {
        foundIndex = -1
      }
    }
    return -1
  }

  throw new TypeError('val must be string, number or Buffer')
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) throw new Error('Invalid hex string')
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    var swap = encoding
    encoding = offset
    offset = length | 0
    length = swap
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'binary':
        return binaryWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function binarySlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
  }

  if (newBuf.length) newBuf.parent = this.parent || this

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('index out of range')
  if (offset < 0) throw new RangeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; i--) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; i++) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function fill (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new RangeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; i++) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"base64-js":2,"ieee754":3,"isarray":4}],2:[function(require,module,exports){
;(function (exports) {
  'use strict'

  var i
  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
  var lookup = []
  for (i = 0; i < code.length; i++) {
    lookup[i] = code[i]
  }
  var revLookup = []

  for (i = 0; i < code.length; ++i) {
    revLookup[code.charCodeAt(i)] = i
  }
  revLookup['-'.charCodeAt(0)] = 62
  revLookup['_'.charCodeAt(0)] = 63

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

  function decode (elt) {
    var v = revLookup[elt.charCodeAt(0)]
    return v !== undefined ? v : -1
  }

  function b64ToByteArray (b64) {
    var i, j, l, tmp, placeHolders, arr

    if (b64.length % 4 > 0) {
      throw new Error('Invalid string. Length must be a multiple of 4')
    }

    // the number of equal signs (place holders)
    // if there are two placeholders, than the two characters before it
    // represent one byte
    // if there is only one, then the three characters before it represent 2 bytes
    // this is just a cheap hack to not do indexOf twice
    var len = b64.length
    placeHolders = b64.charAt(len - 2) === '=' ? 2 : b64.charAt(len - 1) === '=' ? 1 : 0

    // base64 is 4/3 + up to two characters of the original data
    arr = new Arr(b64.length * 3 / 4 - placeHolders)

    // if there are placeholders, only get up to the last complete 4 chars
    l = placeHolders > 0 ? b64.length - 4 : b64.length

    var L = 0

    function push (v) {
      arr[L++] = v
    }

    for (i = 0, j = 0; i < l; i += 4, j += 3) {
      tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
      push((tmp & 0xFF0000) >> 16)
      push((tmp & 0xFF00) >> 8)
      push(tmp & 0xFF)
    }

    if (placeHolders === 2) {
      tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
      push(tmp & 0xFF)
    } else if (placeHolders === 1) {
      tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
      push((tmp >> 8) & 0xFF)
      push(tmp & 0xFF)
    }

    return arr
  }

  function encode (num) {
    return lookup[num]
  }

  function tripletToBase64 (num) {
    return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
  }

  function encodeChunk (uint8, start, end) {
    var temp
    var output = []
    for (var i = start; i < end; i += 3) {
      temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
      output.push(tripletToBase64(temp))
    }
    return output.join('')
  }

  function uint8ToBase64 (uint8) {
    var i
    var extraBytes = uint8.length % 3 // if we have 1 byte left, pad 2 bytes
    var output = ''
    var parts = []
    var temp, length
    var maxChunkLength = 16383 // must be multiple of 3

    // go through the array every three bytes, we'll deal with trailing stuff later

    for (i = 0, length = uint8.length - extraBytes; i < length; i += maxChunkLength) {
      parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > length ? length : (i + maxChunkLength)))
    }

    // pad the end with zeros, but make sure to not forget the extra bytes
    switch (extraBytes) {
      case 1:
        temp = uint8[uint8.length - 1]
        output += encode(temp >> 2)
        output += encode((temp << 4) & 0x3F)
        output += '=='
        break
      case 2:
        temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
        output += encode(temp >> 10)
        output += encode((temp >> 4) & 0x3F)
        output += encode((temp << 2) & 0x3F)
        output += '='
        break
      default:
        break
    }

    parts.push(output)

    return parts.join('')
  }

  exports.toByteArray = b64ToByteArray
  exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],3:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],4:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],5:[function(require,module,exports){
(function (global,Buffer){
(function (console, $hx_exports) { "use strict";
$hx_exports.tannus = $hx_exports.tannus || {};
$hx_exports.tannus.sys = $hx_exports.tannus.sys || {};
;$hx_exports.tannus.media = $hx_exports.tannus.media || {};
;$hx_exports.tannus.ds = $hx_exports.tannus.ds || {};
;$hx_exports.tannus.css = $hx_exports.tannus.css || {};
$hx_exports.tannus.css.vals = $hx_exports.tannus.css.vals || {};
$hx_exports.bplayer = $hx_exports.bplayer || {};
$hx_exports.bplayer.core = $hx_exports.bplayer.core || {};
$hx_exports.bplayer.core.media = $hx_exports.bplayer.core.media || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var crayon_Application = function() {
	var _g = this;
	this.win = window;
	this.self = tannus_ds_CObj.create(this);
	var rtitle = new tannus_io__$Pointer_Ref(function() {
		return _g.win.document.title;
	},function(v) {
		return _g.win.document.title = v;
	});
	var _this = this.self;
	var tmp;
	var tmp2;
	var o = _this.o;
	var tmp3;
	if(o == null) tmp2 = null; else if(o.__properties__ && (tmp3 = o.__properties__["get_" + "__defineGetter__"])) tmp2 = o[tmp3](); else tmp2 = o.__defineGetter__;
	var func = tmp2;
	tmp = func.apply(_this.o,["title",rtitle.getter]);
	tmp;
	var tmp1;
	var tmp4;
	var o1 = _this.o;
	var tmp5;
	if(o1 == null) tmp4 = null; else if(o1.__properties__ && (tmp5 = o1.__properties__["get_" + "__defineSetter__"])) tmp4 = o1[tmp5](); else tmp4 = o1.__defineSetter__;
	var func1 = tmp4;
	tmp1 = func1.apply(_this.o,["title",rtitle.setter]);
	tmp1;
	this.body = new crayon_Body(this);
};
$hxClasses["crayon.Application"] = crayon_Application;
crayon_Application.__name__ = ["crayon","Application"];
crayon_Application.prototype = {
	start: function() {
	}
	,title: null
	,win: null
	,self: null
	,body: null
	,__class__: crayon_Application
};
var BPlayer = $hx_exports.bplayer.BPlayer = function() {
	crayon_Application.call(this);
	this.background = this.win.__backgroundPage;
	this.launchData = this.win.launchData;
	this.player = null;
	this.playerPage = null;
	this.rootGallery = null;
	this.galleryPage = null;
	this.app_data = null;
};
$hxClasses["BPlayer"] = BPlayer;
BPlayer.__name__ = ["BPlayer"];
BPlayer.main = function() {
	BPlayer.instance = new BPlayer();
	BPlayer.instance.start();
};
BPlayer.__super__ = crayon_Application;
BPlayer.prototype = $extend(crayon_Application.prototype,{
	start: function() {
		var _g = this;
		this.getApplicationData(function(db) {
			if(_g.launchData != null) _g.processLaunchData(); else _g.processDatabase();
		});
	}
	,processLaunchData: function() {
		var _g1 = this;
		var l = this.launchData;
		if(l.id != null) {
			console.log("handler id: " + l.id);
			if(l.items != null && l.items.length > 0) {
				var providers = l.items.map(function(_) {
					return new bplayer_core_media_FileEntryMediaProvider(_.entry);
				});
				console.log(providers);
				this.openPlayer(function() {
					var _g = 0;
					while(_g < providers.length) {
						var p = providers[_g];
						++_g;
						_g1.player.addMedia(p);
					}
				});
			}
		} else this.processDatabase();
	}
	,processDatabase: function() {
		var _g = this;
		var d = this.app_data;
		if(d.sessions.getAttribute("main") != null) {
			var session = d.sessions.getAttribute("main");
			console.log(session);
			if(Lambda.empty(session.queue)) this.openRootGalleryPage(); else this.openPlayer(function() {
				_g.player.setSession(session,function() {
					console.log("Session restored");
				});
			});
		} else this.openRootGalleryPage();
	}
	,getApplicationData: function(callback) {
		if(this.app_data == null) this.app_data = new bplayer_db_ApplicationData();
		var tmp;
		var f = callback;
		var a1 = this.app_data;
		tmp = function() {
			f(a1);
		};
		this.app_data._ready.once(tmp);
		this.app_data.init();
	}
	,openGalleryPage: function(gallery,callback) {
		if(this.galleryPage == null) {
			this.galleryPage = new bplayer_ui_GalleryPage(gallery,this.app_data);
			this.galleryPage.onready(callback);
		}
		if(!this.galleryPage["is"](".active")) this.body.open(this.galleryPage);
	}
	,openRootGalleryPage: function(callback) {
		var _g = this;
		if(callback == null) callback = function() {
		};
		this.getRootGallery(function(gallery) {
			gallery.sort(bplayer_ds_GallerySorters.alphabetical);
			_g.openGalleryPage(gallery,callback);
		});
	}
	,openPlayerPage: function() {
		this.body.open(this.getPlayerPage());
	}
	,getPlayer: function() {
		if(this.player == null) {
			this.player = new bplayer_core_Player();
			this.player.data = this.app_data;
			var self = tannus_ds_CObj.create(this.win);
			var val = this.player;
			self.set("player",val);
		}
		return this.player;
	}
	,getPlayerPage: function() {
		if(this.playerPage == null) this.playerPage = new bplayer_ui_PlayerPage(this.app_data,this.getPlayer());
		return this.playerPage;
	}
	,openPlayer: function(callback) {
		var tmp;
		var _this = this.getPlayerPage();
		tmp = _this["is"](".active");
		if(!tmp) this.body.open(this.getPlayerPage());
		this.getPlayer().onready(function() {
			if(callback != null) callback();
		});
	}
	,resolveMediaPath: function(path) {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			try {
				var rootKey = path.getRoot();
				var afterRoot = new bplayer_core_media_MediaPath(path.d.slice(1,null));
				var mgp = _g.app_data.getFolderGroup(rootKey);
				mgp.then(function(group) {
					console.log("Got [" + group.getTitle() + "] group");
					bplayer_core_media_MediaTools.follow(group,afterRoot,function(provider) {
						console.log("Got MediaProvider");
						accept(provider);
					});
				});
				mgp.unless(function(error) {
					reject(error);
				});
			} catch( error1 ) {
				if (error1 instanceof js__$Boot_HaxeError) error1 = error1.val;
				reject(error1);
			}
		},null);
	}
	,openMediaFromPath: function(path) {
		var _g = this;
		this.resolveMediaPath(path).then(function(provider) {
			_g.openPlayer(function() {
				var p = _g.getPlayer();
				p.clear();
				p.load(provider,function() {
					console.log("successfully opened and loaded media from MediaPath");
				});
			});
		});
	}
	,chooseNewSourceFolder: function(callback) {
		var _g = this;
		var dp = tannus_chrome_FileSystem.chooseDirectory();
		dp.then(function(dir) {
			_g.app_data.addFolderToGallery(dir);
			callback();
		});
		dp.unless(function(error) {
			console.log(error);
		});
	}
	,getRootGallery: function(callback) {
		var _g = this;
		if(this.rootGallery == null) {
			var p = bplayer_core_media_GalleryTools.loadGallery(this.app_data);
			p.then(function(g) {
				_g.rootGallery = g;
				callback(_g.rootGallery);
			});
			p.unless(function(error) {
				window.console.error(error);
			});
		} else {
			var tmp;
			var f = callback;
			var a1 = this.rootGallery;
			tmp = function() {
				f(a1);
			};
			window.requestAnimationFrame(tmp);
		}
	}
	,background: null
	,launchData: null
	,rootGallery: null
	,galleryPage: null
	,player: null
	,playerPage: null
	,app_data: null
	,__class__: BPlayer
});
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) this.r.lastIndex = 0;
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		var tmp;
		if(this.r.m != null && n >= 0 && n < this.r.m.length) tmp = this.r.m[n]; else throw new js__$Boot_HaxeError("EReg::matched");
		return tmp;
	}
	,matchedPos: function() {
		if(this.r.m == null) throw new js__$Boot_HaxeError("No string matched");
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) len = -1;
		var tmp;
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0?s:HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) this.r.s = s;
			tmp = b;
		} else {
			var b1 = this.match(len < 0?HxOverrides.substr(s,pos,null):HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			tmp = b1;
		}
		return tmp;
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) break; else if(!this.matchSub(s,offset)) {
				var x = HxOverrides.substr(s,offset,null);
				buf_b += x == null?"null":"" + x;
				break;
			}
			var p = this.matchedPos();
			var x1 = HxOverrides.substr(s,offset,p.pos - offset);
			buf_b += x1 == null?"null":"" + x1;
			var x2 = f(this);
			buf_b += x2 == null?"null":"" + x2;
			if(p.len == 0) {
				var x3 = HxOverrides.substr(s,p.pos,1);
				buf_b += x3 == null?"null":"" + x3;
				offset = p.pos + 1;
			} else offset = p.pos + p.len;
			if(!this.r.global) break;
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			var x4 = HxOverrides.substr(s,offset,null);
			buf_b += x4 == null?"null":"" + x4;
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) return undefined;
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(pos != null && pos != 0 && len != null && len < 0) return "";
	if(len == null) len = s.length;
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) pos = 0;
	} else if(len < 0) len = s.length + len - pos;
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) i = 0;
	}
	while(i < len) {
		if(a[i] === obj) return i;
		i++;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = HxOverrides.indexOf(a,obj,0);
	if(i == -1) return false;
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = ["IntIterator"];
IntIterator.prototype = {
	min: null
	,max: null
	,__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var i = $it0.next();
		a.push(i);
	}
	return a;
};
Lambda.has = function(it,elt) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(x == elt) return true;
	}
	return false;
};
Lambda.iter = function(it,f) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		f(x);
	}
};
Lambda.empty = function(it) {
	return !$iterator(it)().hasNext();
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = [item];
		if(this.h == null) this.h = x; else this.q[1] = x;
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = [item,this.h];
		this.h = x;
		if(this.q == null) this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l[0] == v) {
				if(prev == null) this.h = l[1]; else prev[1] = l[1];
				if(this.q == l) this.q = prev;
				this.length--;
				return true;
			}
			prev = l;
			l = l[1];
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListIterator = function(head) {
	this.head = head;
	this.val = null;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	head: null
	,val: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		this.val = this.head[0];
		this.head = this.head[1];
		return this.val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return null;
	}
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) a.push(f);
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
};
Reflect.compare = function(a,b) {
	return a == b?0:a > b?1:-1;
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) return true;
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) return false;
	return f1.scope == f2.scope && f1.method == f2.method && f1.method != null;
};
Reflect.isObject = function(v) {
	if(v == null) return false;
	var t = typeof(v);
	return t == "string" || t == "object" && v.__enum__ == null || t == "function" && (v.__name__ || v.__ename__) != null;
};
Reflect.isEnumValue = function(v) {
	return v != null && v.__enum__ != null;
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) return false;
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		var value = Reflect.field(o,f);
		o2[f] = value;
	}
	return o2;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Slambda = function() { };
$hxClasses["Slambda"] = Slambda;
Slambda.__name__ = ["Slambda"];
var Slambda1 = function() { };
$hxClasses["Slambda1"] = Slambda1;
Slambda1.__name__ = ["Slambda1"];
var Slambda2 = function() { };
$hxClasses["Slambda2"] = Slambda2;
Slambda2.__name__ = ["Slambda2"];
var Slambda3 = function() { };
$hxClasses["Slambda3"] = Slambda3;
Slambda3.__name__ = ["Slambda3"];
var Slambda4 = function() { };
$hxClasses["Slambda4"] = Slambda4;
Slambda4.__name__ = ["Slambda4"];
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) v = parseInt(x);
	if(isNaN(v)) return null;
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.startsWith = function(s,start) {
	return s.length >= start.length && HxOverrides.substr(s,0,start.length) == start;
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	return slen >= elen && HxOverrides.substr(s,slen - elen,elen) == end;
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	return c > 8 && c < 14 || c == 32;
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) r++;
	if(r > 0) return HxOverrides.substr(s,r,l - r); else return s;
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) r++;
	if(r > 0) return HxOverrides.substr(s,0,l - r); else return s;
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	while(true) {
		s = "0123456789ABCDEF".charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) break;
	}
	if(digits != null) while(s.length < digits) s = "0" + s;
	return s;
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getEnum = function(o) {
	if(o == null) return null;
	return o.__enum__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) return null;
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) return null;
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) return null;
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
	return null;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) throw new js__$Boot_HaxeError("No such constructor " + constr);
	if(Reflect.isFunction(f)) {
		if(params == null) throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		var tmp;
		var func = f;
		tmp = func.apply(e,params);
		return tmp;
	}
	if(params != null && params.length != 0) throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.getEnumConstructs = function(e) {
	var a = e.__constructs__;
	return a.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "string":
		return ValueType.TClass(String);
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) return ValueType.TInt;
		return ValueType.TFloat;
	case "object":
		if(v == null) return ValueType.TNull;
		var e = v.__enum__;
		if(e != null) return ValueType.TEnum(e);
		var c = js_Boot.getClass(v);
		if(c != null) return ValueType.TClass(c);
		return ValueType.TObject;
	case "function":
		if(v.__name__ || v.__ename__) return ValueType.TObject;
		return ValueType.TFunction;
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,children: null
	,attributeMap: null
	,get: function(att) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		var tmp;
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) tmp = _this.getReserved(att); else tmp = _this.h[att];
		return tmp;
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) _this.setReserved(att,value); else _this.h[att] = value;
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		var tmp;
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) tmp = _this.existsReserved(att); else tmp = _this.h.hasOwnProperty(att);
		return tmp;
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.attributeMap.keys();
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		var tmp;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) _g.push(child);
		}
		tmp = _g;
		var ret = tmp;
		return HxOverrides.iter(ret);
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		if(x.parent == this) return; else if(x.parent != null) x.parent.removeChild(x);
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		return HxOverrides.remove(this.children,x);
	}
	,__class__: Xml
};
var bplayer_System = function() { };
$hxClasses["bplayer.System"] = bplayer_System;
bplayer_System.__name__ = ["bplayer","System"];
bplayer_System.__properties__ = {get_isChromeApp:"get_isChromeApp"}
bplayer_System.get_isChromeApp = function() {
	var w = window;
	if(Object.prototype.hasOwnProperty.call(w,"chrome")) {
		var chrome = w.chrome;
		var tmp;
		var tmp1;
		if(chrome == null) tmp = null; else if(chrome.__properties__ && (tmp1 = chrome.__properties__["get_" + "app"])) tmp = chrome[tmp1](); else tmp = chrome.app;
		var app = tmp;
		if(app != null && Object.prototype.hasOwnProperty.call(app,"runtime")) return true;
	}
	return false;
};
var tannus_ds_Task = function() {
	this._doing = false;
	this.onkill = new tannus_io_VoidSignal();
	this.onfinish = new tannus_io_VoidSignal();
};
$hxClasses["tannus.ds.Task"] = tannus_ds_Task;
tannus_ds_Task.__name__ = ["tannus","ds","Task"];
tannus_ds_Task.prototype = {
	start: function() {
		if(!this._doing) this._doing = true; else throw new js__$Boot_HaxeError("Error: Task already running");
	}
	,perform: function(done) {
		this.start();
		this.onfinish.once(done);
		this.action($bind(this,this.finish));
	}
	,action: function(done) {
		done();
	}
	,finish: function() {
		this._doing = false;
		this.onfinish.call();
	}
	,abort: function() {
		if(this._doing) {
			this.onkill.call();
			this._doing = false;
		} else throw new js__$Boot_HaxeError("Error: Cannot abort a Task that is not running!");
	}
	,toAsync: function() {
		var tmp;
		var f = $bind(this,this.perform);
		tmp = function(a1) {
			f(a1);
		};
		return tmp;
	}
	,_doing: null
	,get_doing: function() {
		return this._doing;
	}
	,onkill: null
	,onfinish: null
	,__class__: tannus_ds_Task
	,__properties__: {get_doing:"get_doing"}
};
var tannus_ds_ProgressiveTask = function() {
	tannus_ds_Task.call(this);
	this.onProgress = new tannus_io_Signal();
	this.set_completion(0);
};
$hxClasses["tannus.ds.ProgressiveTask"] = tannus_ds_ProgressiveTask;
tannus_ds_ProgressiveTask.__name__ = ["tannus","ds","ProgressiveTask"];
tannus_ds_ProgressiveTask.__super__ = tannus_ds_Task;
tannus_ds_ProgressiveTask.prototype = $extend(tannus_ds_Task.prototype,{
	progress: function(amount) {
		this.set_completion(this.completion + amount);
	}
	,completion: null
	,set_completion: function(v) {
		this.onProgress.broadcast(v);
		return this.completion = v;
	}
	,onProgress: null
	,__class__: tannus_ds_ProgressiveTask
	,__properties__: $extend(tannus_ds_Task.prototype.__properties__,{set_completion:"set_completion"})
});
var tannus_ds_StandardTask = function() {
	tannus_ds_ProgressiveTask.call(this);
	this.statusChange = new tannus_io_Signal();
	this.resultChange = new tannus_io_Signal();
	this._res = null;
	this._status = null;
};
$hxClasses["tannus.ds.StandardTask"] = tannus_ds_StandardTask;
tannus_ds_StandardTask.__name__ = ["tannus","ds","StandardTask"];
tannus_ds_StandardTask.__super__ = tannus_ds_ProgressiveTask;
tannus_ds_StandardTask.prototype = $extend(tannus_ds_ProgressiveTask.prototype,{
	get_status: function() {
		return this._status;
	}
	,set_status: function(v) {
		var tmp;
		var prev = this.get_status();
		tmp = [v,prev];
		var change = tmp;
		var r = this._status = v;
		this.statusChange.broadcast(change);
		return r;
	}
	,get_result: function() {
		return this._res;
	}
	,set_result: function(v) {
		var change = [v,this._res];
		var r = this._res = v;
		this.resultChange.broadcast(change);
		return r;
	}
	,_res: null
	,_status: null
	,statusChange: null
	,resultChange: null
	,__class__: tannus_ds_StandardTask
	,__properties__: $extend(tannus_ds_ProgressiveTask.prototype.__properties__,{set_result:"set_result",get_result:"get_result",set_status:"set_status",get_status:"get_status"})
});
var bplayer_async_ThumbnailLoader = function(m) {
	tannus_ds_StandardTask.call(this);
	this.media = m;
	this.set_result([]);
	this.set_status("waiting..");
	this.thumbnailLoaded = new tannus_io_Signal();
};
$hxClasses["bplayer.async.ThumbnailLoader"] = bplayer_async_ThumbnailLoader;
bplayer_async_ThumbnailLoader.__name__ = ["bplayer","async","ThumbnailLoader"];
bplayer_async_ThumbnailLoader.__super__ = tannus_ds_StandardTask;
bplayer_async_ThumbnailLoader.prototype = $extend(tannus_ds_StandardTask.prototype,{
	setDimensionMutator: function(mutator) {
		this.mutateDimensions = mutator;
	}
	,load: function(times,callback) {
		this.times = times;
		this.perform(function() {
			if(callback != null) callback();
		});
	}
	,action: function(done) {
		var _g = this;
		var video = new bplayer_display_Video();
		video.load(this.media.getSource(),function() {
			var videoRect = new tannus_geom2_Rect(video.vid.videoWidth,video.vid.videoHeight);
			videoRect = _g.mutateDimensions(videoRect);
			var v = videoRect.d.get(2);
			video.vid.width = v;
			var v1 = videoRect.d.get(3);
			video.vid.height = v1;
			_g.canvas = gryffin_display_Canvas.create(videoRect.d.get(2),videoRect.d.get(3));
			var stack = new tannus_ds_AsyncStack();
			var _g1 = 0;
			var _g2 = _g.times;
			while(_g1 < _g2.length) {
				var time = _g2[_g1];
				++_g1;
				_g.loadThumbnail(video,time,stack);
			}
			stack.run(function() {
				console.log(_g.get_result());
				done();
			});
		});
	}
	,loadThumbnail: function(video,time,stack) {
		var _g = this;
		var cw = this.canvas.canvas.width;
		var ch = this.canvas.canvas.height;
		stack.under(function(done) {
			var on_can_render = function() {
				_g.canvas._ctx.get().drawImage(video.vid,0,0,cw,ch,0,0,cw,ch);
				var image = _g.canvas.getImage(function(img) {
				});
				_g.thumbResult(time,image);
				window.requestAnimationFrame(done);
			};
			video.onseekend.once(on_can_render);
			video.vid.currentTime = time;
		});
	}
	,thumbResult: function(time,image) {
		var o = { time : time, image : image};
		this.get_result().push(o);
		this.thumbnailLoaded.broadcast(o);
	}
	,tr: function(time,image) {
		return { time : time, image : image};
	}
	,mutateDimensions: function(rect) {
		return new tannus_geom2_Rect(rect.d.get(0),rect.d.get(1),rect.d.get(2),rect.d.get(3));
	}
	,media: null
	,times: null
	,thumbnailLoaded: null
	,canvas: null
	,thumbnailSize: null
	,__class__: bplayer_async_ThumbnailLoader
});
var gryffin_core_EventDispatcher = function() {
	this.__sigs = new haxe_ds_StringMap();
	this.__metaBind();
};
$hxClasses["gryffin.core.EventDispatcher"] = gryffin_core_EventDispatcher;
gryffin_core_EventDispatcher.__name__ = ["gryffin","core","EventDispatcher"];
gryffin_core_EventDispatcher.prototype = {
	sig: function(name) {
		if(!(function($this) {
			var $r;
			var _this = $this.__sigs;
			$r = __map_reserved[name] != null?_this.existsReserved(name):_this.h.hasOwnProperty(name);
			return $r;
		}(this))) {
			var value = new tannus_io_Signal();
			var _this1 = this.__sigs;
			if(__map_reserved[name] != null) _this1.setReserved(name,value); else _this1.h[name] = value;
		}
		return (function($this) {
			var $r;
			var _this2 = $this.__sigs;
			$r = __map_reserved[name] != null?_this2.getReserved(name):_this2.h[name];
			return $r;
		}(this));
	}
	,on: function(name,handler) {
		var _this = this.sig(name);
		_this.listen(handler,false);
	}
	,once: function(name,handler) {
		var _this = this.sig(name);
		_this.listen(handler,true);
	}
	,when: function(name,test,handler) {
		this.sig(name).when(test,handler);
	}
	,times: function(name,count,handler) {
		this.sig(name).times(count,handler);
	}
	,every: function(name,interval,handler) {
		this.sig(name).every(interval,handler);
	}
	,off: function(name,handler) {
		var s = this.sig(name);
		if(handler != null) s.ignore(handler); else s.handlers = [];
	}
	,ignore: function(name,handler) {
		this.off(name,handler);
	}
	,dispatch: function(name,data) {
		var _this = this.sig(name);
		_this.broadcast(data);
	}
	,call: function(name,data) {
		this.dispatch(name,data);
	}
	,forward: function(event,target) {
		var tmp;
		var f = $bind(target,target.call);
		var a1 = event;
		tmp = function(a2) {
			f(a1,a2);
		};
		this.on(event,tmp);
	}
	,forwardAll: function(events,target) {
		var _g = 0;
		while(_g < events.length) {
			var e = events[_g];
			++_g;
			this.forward(e,target);
		}
	}
	,__metaBind: function() {
		var klass = js_Boot.getClass(this);
		var tmp;
		var d = haxe_rtti_Meta.getFields(klass);
		tmp = tannus_ds_CObj.create(d);
		var meta = tmp;
		var self = tannus_ds_CObj.create(this);
		var _g = 0;
		var _g1 = meta.keys();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var tmp1;
			var tmp2;
			var o = meta.o;
			var tmp3;
			if(o == null) tmp2 = null; else if(o.__properties__ && (tmp3 = o.__properties__["get_" + key])) tmp2 = o[tmp3](); else tmp2 = o[key];
			var d1 = tmp2;
			tmp1 = tannus_ds_CObj.create(d1);
			var metas = tmp1;
			if(Object.prototype.hasOwnProperty.call(metas.o,"on")) {
				var tmp4;
				var o1 = metas.o;
				var tmp7;
				if(o1 == null) tmp4 = null; else if(o1.__properties__ && (tmp7 = o1.__properties__["get_" + "on"])) tmp4 = o1[tmp7](); else tmp4 = o1.on;
				var args = tmp4;
				var tmp5;
				var o2 = self.o;
				var tmp8;
				if(o2 == null) tmp5 = null; else if(o2.__properties__ && (tmp8 = o2.__properties__["get_" + key])) tmp5 = o2[tmp8](); else tmp5 = o2[key];
				var handler = tmp5;
				var tmp6;
				var o3 = [this];
				var a1 = [handler];
				tmp6 = (function(a1,o3) {
					return function(a2) {
						return Reflect.callMethod(o3[0],a1[0],a2);
					};
				})(a1,o3);
				handler = Reflect.makeVarArgs(tmp6);
				var _g2 = 0;
				while(_g2 < args.length) {
					var name = args[_g2];
					++_g2;
					this.__mbind(name,handler);
				}
			}
		}
	}
	,__mbind: function(key,handler) {
		var forwardPattern = new EReg("\\[([A-Z0-9_]+)\\]->(.+)","gi");
		if(tannus_ds_StringUtils.has(key,",")) {
			var keys = key.split(",").map(function(item) {
				return StringTools.trim(item);
			});
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				this.__mbind(k,handler);
			}
		} else if(forwardPattern.match(key)) {
			var data = tannus_io__$RegEx_RegEx_$Impl_$.matches(forwardPattern,key)[0];
			var self = tannus_ds_CObj.create(this);
			gryffin_Tools.defer(function() {
				var tmp;
				var key1 = data[1];
				var tmp1;
				var o = self.o;
				var tmp2;
				if(o == null) tmp1 = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + key1])) tmp1 = o[tmp2](); else tmp1 = o[key1];
				tmp = tmp1;
				var field = tmp;
				field.__mbind(data[2],handler);
			});
		} else this.on(key,handler);
	}
	,__sigs: null
	,__class__: gryffin_core_EventDispatcher
};
var gryffin_core_Entity = function() {
	gryffin_core_EventDispatcher.call(this);
	this.id = gryffin_Tools.makeUniqueIdentifier(8);
	this._cached = false;
	this._hidden = false;
	this.destroyed = false;
	this.set_parent(null);
	this.priority = 0;
	this.effects = [];
	this.once("activated",$bind(this,this.init));
};
$hxClasses["gryffin.core.Entity"] = gryffin_core_Entity;
gryffin_core_Entity.__name__ = ["gryffin","core","Entity"];
gryffin_core_Entity.__super__ = gryffin_core_EventDispatcher;
gryffin_core_Entity.prototype = $extend(gryffin_core_EventDispatcher.prototype,{
	'delete': function() {
		this.destroyed = true;
		gryffin_Tools.deleteUniqueIdentifier(this.id);
	}
	,restore: function() {
		this.destroyed = false;
		this.stage.addChild(this);
		gryffin_Tools.used_idents.push(this.id);
	}
	,hide: function() {
		this._hidden = true;
	}
	,show: function() {
		this._hidden = false;
	}
	,cache: function() {
		this._cached = true;
	}
	,uncache: function() {
		this._cached = false;
	}
	,toggleCache: function() {
		(this._cached?$bind(this,this.uncache):$bind(this,this.cache))();
	}
	,toggleHidden: function() {
		(this._hidden?$bind(this,this.show):$bind(this,this.hide))();
	}
	,isHidden: function() {
		return this._hidden;
	}
	,isCached: function() {
		return this._cached;
	}
	,init: function(s) {
		this.calculateGeometry(new tannus_geom_CRectangle(0,0,s.canvas.canvas.width,s.canvas.canvas.height));
	}
	,update: function(s) {
		var _g = 0;
		var _g1 = this.effects;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.active(this)) e.affect(this);
		}
	}
	,render: function(s,c) {
	}
	,addSibling: function(sibling) {
		var _g = this;
		if(this.stage == null) this.on("activated",function(s) {
			_g.addSibling(sibling);
		}); else if(this.parent != null) this.parent.addChild(sibling); else this.stage.addChild(sibling);
	}
	,containsPoint: function(p) {
		return false;
	}
	,calculateGeometry: function(r) {
	}
	,'is': function(selector) {
		var sel = new tannus_nore_CSelector(selector);
		return sel.test(this);
	}
	,addEffect: function(e) {
		if(!Lambda.has(this.effects,e)) {
			e.attach(this);
			this.effects.push(e);
		}
	}
	,removeEffect: function(e) {
		HxOverrides.remove(this.effects,e);
	}
	,getChildren: function() {
		return [];
	}
	,parentUntil: function(test) {
		if(this.parent == null) return null; else if(test(this.parent)) return this.parent; else return this.parent.parentUntil(test);
	}
	,_cached: null
	,_hidden: null
	,effects: null
	,destroyed: null
	,priority: null
	,stage: null
	,parent: null
	,set_parent: function(p) {
		if(p != null && !js_Boot.__instanceof(p,gryffin_core_EntityContainer)) throw new js__$Boot_HaxeError("Not a container!");
		return this.parent = p;
	}
	,id: null
	,__class__: gryffin_core_Entity
	,__properties__: {set_parent:"set_parent"}
});
var gryffin_core_Container = function() { };
$hxClasses["gryffin.core.Container"] = gryffin_core_Container;
gryffin_core_Container.__name__ = ["gryffin","core","Container"];
gryffin_core_Container.prototype = {
	addChild: null
	,__class__: gryffin_core_Container
};
var gryffin_core_EntityContainer = function() {
	gryffin_core_Entity.call(this);
	this.children = [];
};
$hxClasses["gryffin.core.EntityContainer"] = gryffin_core_EntityContainer;
gryffin_core_EntityContainer.__name__ = ["gryffin","core","EntityContainer"];
gryffin_core_EntityContainer.__interfaces__ = [gryffin_core_Container];
gryffin_core_EntityContainer.__super__ = gryffin_core_Entity;
gryffin_core_EntityContainer.prototype = $extend(gryffin_core_Entity.prototype,{
	addChild: function(e) {
		var _g = this;
		if(!Lambda.has(this.children,e)) {
			this.children.push(e);
			e.set_parent(this);
			if(this.stage != null) {
				var tmp;
				var _this = this.stage.registry;
				var key = e.id;
				if(__map_reserved[key] != null) _this.setReserved(key,e); else _this.h[key] = e;
				tmp = e;
				tmp;
				e.stage = this.stage;
				var tmp1;
				var _this1 = this.stage;
				tmp1 = new tannus_geom_CRectangle(0,0,_this1.canvas.canvas.width,_this1.canvas.canvas.height);
				this.calculateGeometry(tmp1);
				e.dispatch("activated",this.stage);
			} else this.on("activated",function(s) {
				var tmp2;
				var _this2 = s.registry;
				var key1 = e.id;
				if(__map_reserved[key1] != null) _this2.setReserved(key1,e); else _this2.h[key1] = e;
				tmp2 = e;
				tmp2;
				e.stage = s;
				_g.calculateGeometry(new tannus_geom_CRectangle(0,0,s.canvas.canvas.width,s.canvas.canvas.height));
				e.dispatch("activated",s);
			});
		}
	}
	,hasChild: function(child) {
		return Lambda.has(this.getChildren(),child);
	}
	,getChildren: function() {
		return this.children.filter($bind(this,this.isValidChild));
	}
	,get: function(selector) {
		return new gryffin_core_Selection(new tannus_nore_CSelector(selector),$bind(this,this.getChildren));
	}
	,update: function(s) {
		gryffin_core_Entity.prototype.update.call(this,s);
		var filt = tannus_ds_ArrayTools.splitfilter(this.children,function(e) {
			return !e.destroyed;
		});
		var _g = 0;
		var _g1 = filt.fail;
		while(_g < _g1.length) {
			var e1 = _g1[_g];
			++_g;
			this.stage.registry.remove(e1.id);
		}
		this.children = filt.pass;
		haxe_ds_ArraySort.sort(this.children,function(a,b) {
			return a.priority - b.priority;
		});
		var _g2 = 0;
		var _g11 = this.getChildren();
		while(_g2 < _g11.length) {
			var e2 = _g11[_g2];
			++_g2;
			if(!e2._cached && this.shouldChildUpdate(e2)) e2.update(s);
		}
	}
	,render: function(s,c) {
		gryffin_core_Entity.prototype.render.call(this,s,c);
		var _g = 0;
		var _g1 = this.getChildren();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e._hidden && this.shouldChildRender(e)) e.render(s,c);
		}
	}
	,calculateGeometry: function(rect) {
		gryffin_core_Entity.prototype.calculateGeometry.call(this,rect);
		var _g = 0;
		var _g1 = this.getChildren();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.calculateGeometry(rect);
		}
	}
	,getEntitiesAtPoint: function(p) {
		var res = [];
		var _g = 0;
		var _g1 = this.getChildren();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.containsPoint(p)) {
				res.push(e);
				if(js_Boot.__instanceof(e,gryffin_core_EntityContainer)) {
					var c = e;
					res = res.concat(c.getEntitiesAtPoint(p));
				}
			}
		}
		return res;
	}
	,getEntityAtPoint: function(p) {
		var target = null;
		var tmp;
		var _this = this.getChildren();
		tmp = _this.slice();
		var targets = tmp;
		targets.reverse();
		var _g = 0;
		while(_g < targets.length) {
			var e = targets[_g];
			++_g;
			if(e.containsPoint(p)) {
				target = e;
				if(js_Boot.__instanceof(e,gryffin_core_EntityContainer)) {
					var c = e;
					var etarget = c.getEntityAtPoint(p);
					if(etarget != null) target = etarget;
				}
				break;
			}
		}
		return target;
	}
	,getEntityAt: function(x,y) {
		return this.getEntityAtPoint(new tannus_geom_TPoint(x,y,0));
	}
	,isValidChild: function(child) {
		return true;
	}
	,shouldChildUpdate: function(child) {
		return true;
	}
	,shouldChildRender: function(child) {
		return true;
	}
	,children: null
	,__class__: gryffin_core_EntityContainer
});
var bplayer_core_Ent = function() {
	this._cc = false;
	gryffin_core_EntityContainer.call(this);
	this.rect = new tannus_geom_CRectangle(0,0,0,0);
};
$hxClasses["bplayer.core.Ent"] = bplayer_core_Ent;
bplayer_core_Ent.__name__ = ["bplayer","core","Ent"];
bplayer_core_Ent.__super__ = gryffin_core_EntityContainer;
bplayer_core_Ent.prototype = $extend(gryffin_core_EntityContainer.prototype,{
	containsPoint: function(p) {
		var tmp;
		var _this = this.rect;
		var ox = p.get_x();
		var oy = p.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) tmp = oy < _this.y + _this.height; else tmp = false;
		} else tmp = false;
		return tmp;
	}
	,update: function(stage) {
		gryffin_core_EntityContainer.prototype.update.call(this,stage);
	}
	,getPage: function() {
		var _g = this;
		return this.parentUntil(function(e) {
			return e["is"]("gryffin.ui.Page") && e.hasChild(_g);
		});
	}
	,get_x: function() {
		return this.rect.x;
	}
	,set_x: function(v) {
		return this.rect.x = v;
	}
	,get_y: function() {
		return this.rect.y;
	}
	,set_y: function(v) {
		return this.rect.y = v;
	}
	,get_w: function() {
		return this.rect.width;
	}
	,set_w: function(v) {
		return this.rect.width = v;
	}
	,get_h: function() {
		return this.rect.height;
	}
	,set_h: function(v) {
		return this.rect.height = v;
	}
	,get_pos: function() {
		var _g = this;
		var tmp;
		var x = new tannus_io__$Pointer_Ref(function() {
			return _g.rect.x;
		},function(v) {
			return _g.rect.x = v;
		});
		var y = new tannus_io__$Pointer_Ref(function() {
			return _g.rect.y;
		},function(v1) {
			return _g.rect.y = v1;
		});
		tmp = new tannus_geom_LinkedPoint(x,y,null);
		return tmp;
	}
	,set_pos: function(v) {
		var tmp;
		var tmp1;
		var v1 = v.get_x();
		tmp1 = this.rect.x = v1;
		var x = tmp1;
		var tmp2;
		var v2 = v.get_y();
		tmp2 = this.rect.y = v2;
		var y = tmp2;
		tmp = new tannus_geom_TPoint(x,y,0);
		return tmp;
	}
	,get_centerX: function() {
		return this.rect.x + this.get_w() / 2;
	}
	,set_centerX: function(v) {
		var tmp;
		var v1 = v - this.get_w() / 2;
		tmp = this.rect.x = v1;
		return tmp;
	}
	,get_centerY: function() {
		return this.rect.y + this.get_h() / 2;
	}
	,set_centerY: function(v) {
		var tmp;
		var v1 = v - this.get_h() / 2;
		tmp = this.rect.y = v1;
		return tmp;
	}
	,get_center: function() {
		var _g = this;
		var tmp;
		var x = new tannus_io__$Pointer_Ref(function() {
			return _g.get_centerX();
		},function(v) {
			return _g.set_centerX(v);
		});
		var y = new tannus_io__$Pointer_Ref(function() {
			return _g.get_centerY();
		},function(v1) {
			return _g.set_centerY(v1);
		});
		tmp = new tannus_geom_LinkedPoint(x,y,null);
		return tmp;
	}
	,set_center: function(v) {
		return this.rect.set_center(v);
	}
	,rect: null
	,_cc: null
	,__class__: bplayer_core_Ent
	,__properties__: $extend(gryffin_core_EntityContainer.prototype.__properties__,{set_center:"set_center",get_center:"get_center",set_centerY:"set_centerY",get_centerY:"get_centerY",set_centerX:"set_centerX",get_centerX:"get_centerX",set_pos:"set_pos",get_pos:"get_pos",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"})
});
var bplayer_core_Gallery = function() {
	this.entries = [];
};
$hxClasses["bplayer.core.Gallery"] = bplayer_core_Gallery;
bplayer_core_Gallery.__name__ = ["bplayer","core","Gallery"];
bplayer_core_Gallery.prototype = {
	addEntry: function(e) {
		this.entries.push(e);
	}
	,getEntry: function(index) {
		return this.entries[index];
	}
	,iterator: function() {
		return new bplayer_core_GalleryIterator(this);
	}
	,sort: function(compare) {
		haxe_ds_ArraySort.sort(this.entries,compare);
	}
	,get_length: function() {
		return this.entries.length;
	}
	,entries: null
	,__class__: bplayer_core_Gallery
	,__properties__: {get_length:"get_length"}
};
var bplayer_core_GalleryIterator = function(g) {
	this.g = g;
	this.i = 0;
};
$hxClasses["bplayer.core.GalleryIterator"] = bplayer_core_GalleryIterator;
bplayer_core_GalleryIterator.__name__ = ["bplayer","core","GalleryIterator"];
bplayer_core_GalleryIterator.prototype = {
	g: null
	,i: null
	,hasNext: function() {
		return this.i < this.g.entries.length;
	}
	,next: function() {
		return this.g.getEntry(this.i++);
	}
	,__class__: bplayer_core_GalleryIterator
};
var bplayer_core_GalleryEntry = $hxClasses["bplayer.core.GalleryEntry"] = { __ename__ : ["bplayer","core","GalleryEntry"], __constructs__ : ["EMedia","EGroup"] };
bplayer_core_GalleryEntry.EMedia = function(media) { var $x = ["EMedia",0,media]; $x.__enum__ = bplayer_core_GalleryEntry; $x.toString = $estr; return $x; };
bplayer_core_GalleryEntry.EGroup = function(mediaGroup) { var $x = ["EGroup",1,mediaGroup]; $x.__enum__ = bplayer_core_GalleryEntry; $x.toString = $estr; return $x; };
var bplayer_core_MediaType = $hxClasses["bplayer.core.MediaType"] = { __ename__ : ["bplayer","core","MediaType"], __constructs__ : ["TVideo","TAudio"] };
bplayer_core_MediaType.TVideo = ["TVideo",0];
bplayer_core_MediaType.TVideo.toString = $estr;
bplayer_core_MediaType.TVideo.__enum__ = bplayer_core_MediaType;
bplayer_core_MediaType.TAudio = ["TAudio",1];
bplayer_core_MediaType.TAudio.toString = $estr;
bplayer_core_MediaType.TAudio.__enum__ = bplayer_core_MediaType;
var bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$ = {};
$hxClasses["bplayer.core._PlaybackMode.PlaybackMode_Impl_"] = bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$;
bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.__name__ = ["bplayer","core","_PlaybackMode","PlaybackMode_Impl_"];
bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$._new = function(mode) {
	return mode;
};
bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.clone = function(this1) {
	return this1.clone();
};
bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.pull = function(this1,o) {
	this1.pull(o);
};
bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.equals = function(this1,b) {
	return this1.get_volume() == b.get_volume() && this1.get_playbackRate() == b.get_playbackRate() && this1.get_muted() == b.get_muted() && this1.get_paused() == b.get_paused() && this1.get_shuffle() == b.get_shuffle();
};
bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.base = function() {
	return new bplayer_core_mode_BasePlaybackMode();
};
bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.create = function(volume,rate,muted,shuffle,paused) {
	var m = new bplayer_core_mode_BasePlaybackMode();
	m.set_volume(volume);
	m.set_playbackRate(rate);
	m.set_muted(muted);
	m.set_paused(paused);
	m.set_shuffle(shuffle);
	return m;
};
bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.fromPlayer = function(p) {
	var tmp;
	var this1 = p.data.settings.getAttribute("shuffle");
	if(this1 != null) tmp = this1; else tmp = false;
	return bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.create(p.get_volume(),p.get_playbackRate(),p.get_muted(),tmp,p.get_paused());
};
var bplayer_core_Player = function() {
	this.data_ready = false;
	this.mediaLocked = false;
	this.minimized = false;
	var _g = this;
	bplayer_core_Ent.call(this);
	this.page = null;
	this.theme = new bplayer_display_ColorScheme();
	this.display = new bplayer_core_PlayerDisplay(this);
	this.controls = new bplayer_core_PlayerControls(this);
	this.controls_view = new bplayer_ui_PlayerControlsView(this);
	this.addChild(this.controls_view);
	this.on_data_ready = new tannus_io_VoidSignal();
	this.on_data_ready.once(function() {
		_g.data_ready = true;
	});
	this.mediaChange = new tannus_io_Signal();
	this.contextChange = new tannus_io_Signal();
	this.sessionChange = new tannus_io_Signal();
	this.uiVisibilityToggled = new tannus_io_Signal();
	this.mode = new bplayer_core_mode_BasePlaybackMode();
	this.queue = new bplayer_core_Queue();
	this.set_currentMedia(null);
	this.set_show_ui(true);
};
$hxClasses["bplayer.core.Player"] = bplayer_core_Player;
bplayer_core_Player.__name__ = ["bplayer","core","Player"];
bplayer_core_Player.__super__ = bplayer_core_Ent;
bplayer_core_Player.prototype = $extend(bplayer_core_Ent.prototype,{
	init: function(stage) {
		var _g = this;
		bplayer_core_Ent.prototype.init.call(this,stage);
		this.display.init(stage);
		this.onready(function() {
			var tmp;
			var f = $bind(_g,_g.push_profile);
			tmp = function() {
				f(function() {
				});
			};
			_g.mode.changed.on(tmp);
		});
		this.initialize_data();
	}
	,update: function(stage) {
		bplayer_core_Ent.prototype.update.call(this,stage);
		if(this.context != null) this.context.update(stage);
		this.display.update(stage);
	}
	,render: function(stage,c) {
		if(this.context != null) this.context.render(stage,c);
		this.display.render(stage,c);
		bplayer_core_Ent.prototype.render.call(this,stage,c);
	}
	,calculateGeometry: function(r) {
		bplayer_core_Ent.prototype.calculateGeometry.call(this,r);
		this.set_w(r.width);
		this.set_h(r.height);
	}
	,onready: function(action) {
		if(this.data_ready) gryffin_Tools.defer(action); else this.on_data_ready.once(action);
	}
	,initialize_data: function() {
		var _g = this;
		if(this.data == null) this.data = new bplayer_db_ApplicationData();
		if(!this.data._isready) this.data.init(function() {
			_g.on_data_ready.call();
		}); else gryffin_Tools.defer(($_=this.on_data_ready,$bind($_,$_.fire)));
	}
	,play: function() {
		if(this.context != null) this.context.play();
	}
	,pause: function() {
		if(this.context != null) this.context.pause();
	}
	,stop: function() {
		if(this.context != null) this.context.stop();
	}
	,togglePlayback: function() {
		if(this.context != null) this.context.togglePlayback();
	}
	,skip: function(index) {
		var _g = this;
		if(this.currentMedia != null) {
			var mp = this.queue.get(this.queue.indexOf(this.provider) + index);
			if(mp != null) this.load(mp,function() {
				_g.sessionAltered();
			});
		}
	}
	,load: function(mp,can_manip,can_play) {
		var _g = this;
		if(can_manip == null) can_manip = function() {
		};
		if(can_play == null) can_play = function() {
		};
		if(this.mediaLocked) return;
		var p = mp.getMedia();
		p.then(function(media) {
			_g.set_currentMedia(media);
			_g.provider = mp;
			_g.context.readyEvent.once(can_play);
			_g.context.canManipulateEvent.once(can_manip);
		});
		p.unless(function(error) {
			console.log(error);
		});
	}
	,addMedia: function(m,autoLoad,callback) {
		if(autoLoad == null) autoLoad = true;
		this.queue.push(m);
		if(!this.mediaLocked && autoLoad && this.queue.get_length() == 1) this.load(m,callback); else if(callback != null) gryffin_Tools.defer(callback);
	}
	,setQueue: function(q,autoLoad,callback) {
		if(autoLoad == null) autoLoad = true;
		var _g = this;
		var done = function() {
			_g.sessionAltered();
			if(callback != null) callback();
		};
		this.clear();
		this.queue = q;
		if(autoLoad) this.load(this.queue.get(0),done); else if(callback != null) gryffin_Tools.defer(done);
	}
	,close: function() {
		if(this.page != null && this.page.previousPage != null) this.page.back(); else BPlayer.instance.openRootGalleryPage();
	}
	,clear: function() {
		if(this.mediaLocked) return;
		this.stop();
		this.queue = new bplayer_core_Queue();
		this.sessionAltered();
	}
	,back: function() {
		this.clear();
		this.close();
	}
	,minimize: function() {
		this.minimized = true;
		this.close();
	}
	,toggleFullscreen: function() {
		var w = chrome_Windows.lib.current();
		if(w.isFullscreen()) w.restore(); else w.fullscreen();
	}
	,applyMode: function(mode) {
		this.set_volume(mode.get_volume());
		this.set_playbackRate(mode.get_playbackRate());
		this.set_muted(mode.get_muted());
		var v = mode.get_shuffle();
		this.data.settings.setAttribute("shuffle",v);
		if(mode.get_paused()) this.pause(); else this.play();
	}
	,getCurrentMediaMode: function() {
		var tmp;
		var this1 = this.data.settings.getAttribute("shuffle");
		if(this1 != null) tmp = this1; else tmp = false;
		return bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.create(this.get_volume(),this.get_playbackRate(),this.get_muted(),tmp,this.get_paused());
	}
	,modesSynced: function() {
		var tmp;
		var tmp1;
		var this2 = this.data.settings.getAttribute("shuffle");
		if(this2 != null) tmp1 = this2; else tmp1 = false;
		var this1 = bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.create(this.get_volume(),this.get_playbackRate(),this.get_muted(),tmp1,this.get_paused());
		var b = this.mode;
		if(this1.get_volume() == b.get_volume() && this1.get_playbackRate() == b.get_playbackRate() && this1.get_muted() == b.get_muted() && this1.get_paused() == b.get_paused()) tmp = this1.get_shuffle() == b.get_shuffle(); else tmp = false;
		return tmp;
	}
	,openUserSelectedFiles: function(callback) {
		var _g = this;
		if(callback == null) callback = function(x) {
		};
		this.pause();
		var p = bplayer_sys_FileSystem.chooseFiles();
		p.then(function(entries) {
			var loader = new bplayer_core_media_FileSystemMediaLoader();
			loader.load(entries,function(medias) {
				var pl = new bplayer_core_Queue(medias);
				if(!Lambda.empty(medias)) {
					var tmp;
					var f = callback;
					tmp = function() {
						f(true);
					};
					_g.setQueue(pl,null,tmp);
				} else callback(false);
			});
		});
		p.unless(function(error) {
			callback(false);
		});
	}
	,pull_profile: function(done) {
		var smode = this.data.profile.get_mode();
		if(smode != null) this.mode.pull(smode);
		done();
	}
	,savePlayerData: function(callback) {
		if(callback == null) callback = function() {
		};
		var stack = new tannus_ds_AsyncStack();
		stack.under($bind(this,this.push_profile));
		stack.under($bind(this,this.push_session));
		stack.run(callback);
	}
	,loadPlayerData: function(callback) {
		var stack = new tannus_ds_AsyncStack();
		stack.under($bind(this,this.pull_profile));
		stack.under($bind(this,this.pull_session));
		stack.run(callback);
	}
	,push_profile: function(done) {
		this.data.profile.set_mode(this.mode);
		done();
	}
	,push_session: function(done) {
		this.data.sessions.saveSession(bplayer_core_Session.fromPlayer(this));
		done();
	}
	,pull_session: function(done) {
		var session = this.data.sessions.getAttribute("main");
		if(session != null) this.setSession(session,done); else done();
	}
	,getSession: function() {
		return bplayer_core_Session.fromPlayer(this);
	}
	,setSession: function(session,callback) {
		session.apply(this,callback);
		this.sessionAltered();
	}
	,sessionAltered: function() {
		var sess = bplayer_core_Session.fromPlayer(this);
		this.sessionChange.broadcast(sess);
		this.last_session = sess;
	}
	,isMediaLocked: function() {
		return this.mediaLocked;
	}
	,lockMedia: function() {
		this.mediaLocked = true;
	}
	,unlockMedia: function() {
		this.mediaLocked = false;
	}
	,loadThumbnails: function(times,callback) {
		var loader = new bplayer_async_ThumbnailLoader(this.currentMedia);
		loader.mutateDimensions = function(r) {
			r.d.set(2,320);
			r.d.set(3,240);
			return r;
		};
		loader.load(times,function() {
			var results = loader.get_result();
			callback(results);
		});
	}
	,currentMedia: null
	,set_currentMedia: function(m) {
		var pcm = this.currentMedia;
		var pc = this.context;
		if(m == null) this.context = null; else this.context = m.getContext();
		var returnValue = this.currentMedia = m;
		var mediaDelta = [this.currentMedia,pcm];
		this.mediaChange.broadcast(mediaDelta);
		var contextDelta = [this.context,pc];
		this.contextChange.broadcast(contextDelta);
		return returnValue;
	}
	,get_duration: function() {
		if(this.context != null) return this.context.mo.get_duration(); else return tannus_media__$Duration_Duration_$Impl_$._new();
	}
	,get_currentTime: function() {
		if(this.context != null) return this.context.mo.get_currentTime(); else return 0;
	}
	,set_currentTime: function(v) {
		if(this.context != null) return this.context.mo.set_currentTime(v); else return 0;
	}
	,get_volume: function() {
		if(this.context != null) return this.context.mo.get_volume(); else return 0;
	}
	,set_volume: function(v) {
		if(this.context != null) return this.context.mo.set_volume(v); else return 0;
	}
	,get_playbackRate: function() {
		if(this.context != null) return this.context.mo.get_playbackRate(); else return 0;
	}
	,set_playbackRate: function(v) {
		if(this.context != null) return this.context.mo.set_playbackRate(v); else return 0;
	}
	,get_paused: function() {
		if(this.context != null) return this.context.mo.get_paused(); else return false;
	}
	,get_muted: function() {
		if(this.context != null) return this.context.mo.get_muted(); else return false;
	}
	,set_muted: function(v) {
		if(this.context != null) return this.context.mo.set_muted(v); else return false;
	}
	,get_progress: function() {
		if(this.context != null) {
			var tmp;
			var _this = this.get_duration();
			tmp = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
			return tannus_math__$Percent_Percent_$Impl_$.percent(this.get_currentTime(),tmp);
		} else return 0;
	}
	,set_progress: function(v) {
		if(this.context != null) {
			var tmp;
			var _this = this.get_duration();
			tmp = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
			this.set_currentTime(tmp * (v / 100));
		}
		return this.get_progress();
	}
	,get_m: function() {
		return this.context;
	}
	,get_displayRect: function() {
		var r = new tannus_geom2_Rect(Math.ceil(this.rect.x),Math.ceil(this.rect.y),Math.ceil(this.get_w()),Math.ceil(this.get_h()));
		return r;
	}
	,get_fullscreen: function() {
		var w = chrome_Windows.lib.current();
		return w.isFullscreen();
	}
	,get_status: function() {
		var status;
		if(this.currentMedia != null) {
			var ctx = this.context;
			var media = ctx.mo;
			var me;
			if(js_Boot.__instanceof(media,bplayer_display_Video)) me = (js_Boot.__cast(media , bplayer_display_Video)).vid; else if(js_Boot.__instanceof(media,bplayer_display_Audio)) me = (js_Boot.__cast(media , bplayer_display_Audio)).sound; else me = null;
			var readyState = me.readyState;
			switch(readyState) {
			case 0:case 1:
				status = bplayer_core_PlayerStatus.Waiting;
				break;
			case 2:case 3:case 4:
				if(me.ended) status = bplayer_core_PlayerStatus.Ended; else if(me.paused) status = bplayer_core_PlayerStatus.Paused; else status = bplayer_core_PlayerStatus.Playing;
				break;
			default:
				status = bplayer_core_PlayerStatus.Empty;
				throw new js__$Boot_HaxeError("Error: Cheeks are puffy");
			}
		} else status = bplayer_core_PlayerStatus.Empty;
		return status;
	}
	,show_ui: null
	,set_show_ui: function(value) {
		if(value != this.show_ui) {
			var psui = this.show_ui;
			var result = this.show_ui = value;
			var delta = [result,psui];
			this.uiVisibilityToggled.broadcast(delta);
			return result;
		} else return this.show_ui;
	}
	,data: null
	,theme: null
	,display: null
	,controls: null
	,controls_view: null
	,page: null
	,queue: null
	,mode: null
	,minimized: null
	,mediaLocked: null
	,data_ready: null
	,on_data_ready: null
	,context: null
	,provider: null
	,last_session: null
	,mediaChange: null
	,contextChange: null
	,sessionChange: null
	,uiVisibilityToggled: null
	,__class__: bplayer_core_Player
	,__properties__: $extend(bplayer_core_Ent.prototype.__properties__,{set_show_ui:"set_show_ui",get_status:"get_status",get_fullscreen:"get_fullscreen",get_displayRect:"get_displayRect",get_m:"get_m",set_progress:"set_progress",get_progress:"get_progress",set_muted:"set_muted",get_muted:"get_muted",get_paused:"get_paused",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_volume:"set_volume",get_volume:"get_volume",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",get_duration:"get_duration",set_currentMedia:"set_currentMedia"})
});
var bplayer_core_PlayerControls = function(p) {
	this.player = p;
	this.shift = false;
	this.alt = false;
	this.ctrl = false;
	this.meta = false;
};
$hxClasses["bplayer.core.PlayerControls"] = bplayer_core_PlayerControls;
bplayer_core_PlayerControls.__name__ = ["bplayer","core","PlayerControls"];
bplayer_core_PlayerControls.prototype = {
	play: function() {
		this.player.mode.set_paused(false);
	}
	,pause: function() {
		this.player.mode.set_paused(true);
	}
	,togglePlayback: function() {
		this.player.mode.set_paused(!this.player.mode.get_paused());
	}
	,toggleMuted: function() {
		this.player.mode.set_muted(!this.player.mode.get_muted());
	}
	,toggleShuffle: function() {
		this.player.mode.set_shuffle(!this.player.mode.get_shuffle());
	}
	,jump: function(mod) {
		var _g = this.player;
		_g.set_currentTime(_g.get_currentTime() + this.getJumpTime() * mod);
	}
	,adjustPlaybackRate: function(mod) {
		var _g = this.player.mode;
		_g.set_playbackRate(_g.get_playbackRate() + this.getPlaybackRateJump() / 100 * mod);
	}
	,resetPlaybackRate: function() {
		this.player.mode.set_playbackRate(1.0);
	}
	,back: function() {
		this.player.back();
	}
	,minimize: function() {
		this.player.minimize();
	}
	,adjustVolume: function(mod) {
		var _g = this.player;
		_g.set_volume(_g.get_volume() + this.getVolumeJump() / 100.0 * mod);
	}
	,getJumpTime: function() {
		var time = 2;
		if(this.shift) time = 10; else if(this.alt) time = 30; else if(this.ctrl) time = 60;
		return time;
	}
	,getPlaybackRateJump: function() {
		var i;
		if(this.ctrl) i = 50; else if(this.alt) i = 10; else if(this.shift) i = 5; else i = 1;
		return i;
	}
	,getVolumeJump: function() {
		var i = 5;
		if(this.shift) i = 1;
		return i;
	}
	,applyMods: function(mods) {
		this.alt = false;
		this.shift = false;
		this.meta = false;
		this.ctrl = false;
		var _g = 0;
		while(_g < mods.length) {
			var m = mods[_g];
			++_g;
			switch(m) {
			case "alt":
				this.alt = true;
				break;
			case "ctrl":
				this.ctrl = true;
				break;
			case "shift":
				this.shift = true;
				break;
			case "super":
				this.meta = true;
				break;
			}
		}
	}
	,get_mode: function() {
		return this.player.mode;
	}
	,get_m: function() {
		return this.player.mode;
	}
	,player: null
	,shift: null
	,alt: null
	,ctrl: null
	,meta: null
	,__class__: bplayer_core_PlayerControls
	,__properties__: {get_m:"get_m",get_mode:"get_mode"}
};
var bplayer_core_PlayerDisplay = function(p) {
	bplayer_core_Ent.call(this);
	this.player = p;
};
$hxClasses["bplayer.core.PlayerDisplay"] = bplayer_core_PlayerDisplay;
bplayer_core_PlayerDisplay.__name__ = ["bplayer","core","PlayerDisplay"];
bplayer_core_PlayerDisplay.__super__ = bplayer_core_Ent;
bplayer_core_PlayerDisplay.prototype = $extend(bplayer_core_Ent.prototype,{
	init: function(stage) {
		bplayer_core_Ent.prototype.init.call(this,stage);
		this.player.mediaChange.listen($bind(this,this.mediaChange),false);
		this.player.contextChange.listen($bind(this,this.contextChange),false);
		this.player.uiVisibilityToggled.listen($bind(this,this.uiVisibilityChange),false);
		this.player.sessionChange.listen($bind(this,this.sessionAltered),false);
	}
	,update: function(stage) {
		bplayer_core_Ent.prototype.update.call(this,stage);
		var target = this.player.get_displayRect();
		var tmp;
		var _x = target.d.get(0);
		var _y = target.d.get(1);
		var _width = target.d.get(2);
		var _height = target.d.get(3);
		tmp = new tannus_geom_CRectangle(_x,_y,_width,_height);
		this.rect = tmp;
		if(this.player.context != null) {
			var pos = new tannus_geom2_Point(target.d.get(0),target.d.get(1));
			this.player.context.target.set_topLeft(pos);
			this.player.context.resize(target.d.get(2),target.d.get(3));
			var tmp2;
			var _this = this.player;
			var tmp3;
			var this2 = _this.data.settings.getAttribute("shuffle");
			if(this2 != null) tmp3 = this2; else tmp3 = false;
			var this1 = bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.create(_this.get_volume(),_this.get_playbackRate(),_this.get_muted(),tmp3,_this.get_paused());
			var b = _this.mode;
			if(this1.get_volume() == b.get_volume() && this1.get_playbackRate() == b.get_playbackRate() && this1.get_muted() == b.get_muted() && this1.get_paused() == b.get_paused()) tmp2 = this1.get_shuffle() == b.get_shuffle(); else tmp2 = false;
			if(!tmp2) this.player.applyMode(this.player.mode);
		}
		var events = ["mousemove","click","keydown"];
		var times = events.map(function(_) {
			return stage.mostRecentOccurrenceTime(_);
		});
		var tmp1;
		var _e = times;
		tmp1 = function(predicate) {
			return tannus_math_TMath.smallest(_e,predicate);
		};
		var min = tmp1(function(_1) {
			return new Date().getTime() - _1;
		});
		if(min > 4000) this.player.set_show_ui(false); else this.player.set_show_ui(true);
	}
	,render: function(stage,c) {
		bplayer_core_Ent.prototype.render.call(this,stage,c);
	}
	,mediaChange: function(delta) {
	}
	,contextChange: function(delta) {
		if(delta[1] != null) delta[1].detach(this.player);
		if(delta[0] != null) delta[0].attach(this.player);
	}
	,uiVisibilityChange: function(delta) {
		{
			var _g = delta[1];
			var _g1 = delta[0];
			switch(_g) {
			case true:
				switch(_g1) {
				case false:
					this.player.stage.set_cursor("none");
					break;
				default:
				}
				break;
			case false:
				switch(_g1) {
				case true:
					this.player.stage.set_cursor("default");
					break;
				default:
				}
				break;
			default:
			}
		}
	}
	,sessionAltered: function(sess) {
		console.log("Session has updated");
		this.player.savePlayerData();
	}
	,get_m: function() {
		return this.player.context;
	}
	,player: null
	,__class__: bplayer_core_PlayerDisplay
	,__properties__: $extend(bplayer_core_Ent.prototype.__properties__,{get_m:"get_m"})
});
var bplayer_core_PlayerStatus = $hxClasses["bplayer.core.PlayerStatus"] = { __ename__ : ["bplayer","core","PlayerStatus"], __constructs__ : ["Empty","Waiting","Playing","Paused","Ended"] };
bplayer_core_PlayerStatus.Empty = ["Empty",0];
bplayer_core_PlayerStatus.Empty.toString = $estr;
bplayer_core_PlayerStatus.Empty.__enum__ = bplayer_core_PlayerStatus;
bplayer_core_PlayerStatus.Waiting = ["Waiting",1];
bplayer_core_PlayerStatus.Waiting.toString = $estr;
bplayer_core_PlayerStatus.Waiting.__enum__ = bplayer_core_PlayerStatus;
bplayer_core_PlayerStatus.Playing = ["Playing",2];
bplayer_core_PlayerStatus.Playing.toString = $estr;
bplayer_core_PlayerStatus.Playing.__enum__ = bplayer_core_PlayerStatus;
bplayer_core_PlayerStatus.Paused = ["Paused",3];
bplayer_core_PlayerStatus.Paused.toString = $estr;
bplayer_core_PlayerStatus.Paused.__enum__ = bplayer_core_PlayerStatus;
bplayer_core_PlayerStatus.Ended = ["Ended",4];
bplayer_core_PlayerStatus.Ended.toString = $estr;
bplayer_core_PlayerStatus.Ended.__enum__ = bplayer_core_PlayerStatus;
var bplayer_core_Queue = function(list) {
	this.tracks = [];
	this.title = "My Playlist";
	this.changed = new tannus_io_VoidSignal();
	if(list != null) this.tracks = this.tracks.concat(list);
};
$hxClasses["bplayer.core.Queue"] = bplayer_core_Queue;
bplayer_core_Queue.__name__ = ["bplayer","core","Queue"];
bplayer_core_Queue.prototype = {
	push: function(m) {
		if(!this.has(m)) {
			this.tracks.push(m);
			this.changed.call();
		}
	}
	,pop: function() {
		var res = this.tracks.pop();
		this.changed.call();
		return res;
	}
	,unshift: function(m) {
		if(!this.has(m)) {
			this.tracks.unshift(m);
			this.changed.call();
		}
	}
	,shift: function() {
		var res = this.tracks.shift();
		this.changed.call();
		return res;
	}
	,copy: function() {
		return new bplayer_core_Queue(this.tracks.slice());
	}
	,concat: function(q) {
		return new bplayer_core_Queue(this.tracks.concat(q.tracks));
	}
	,slice: function(pos,end) {
		return new bplayer_core_Queue(this.tracks.slice(pos,end));
	}
	,sort: function(f) {
		this.tracks.sort(f);
		this.changed.call();
	}
	,insert: function(m,i) {
		this.tracks.splice(i,0,m);
		this.changed.call();
	}
	,move: function(m,index) {
		if(this.has(m)) this.remove(m);
		this.insert(m,index);
	}
	,has: function(m) {
		return Lambda.has(this.tracks,m);
	}
	,remove: function(m) {
		var rem = HxOverrides.remove(this.tracks,m);
		if(rem) this.changed.call();
		return rem;
	}
	,indexOf: function(m) {
		return HxOverrides.indexOf(this.tracks,m,0);
	}
	,get: function(index) {
		return this.tracks[index];
	}
	,getNext: function(m) {
		return this.get(this.indexOf(m) + 1);
	}
	,getPrevious: function(m) {
		return this.get(this.indexOf(m) - 1);
	}
	,loadWith: function(player,callback) {
		var stack = new tannus_ds_AsyncStack();
		var _g = 0;
		var _g1 = this.tracks;
		while(_g < _g1.length) {
			var m = [_g1[_g]];
			++_g;
			stack.under((function(m) {
				return function(done) {
					player.addMedia(m[0],null,done);
				};
			})(m));
		}
		stack.run(function() {
			callback();
		});
	}
	,alt: function() {
		this.changed.call();
	}
	,empty: function() {
		return Lambda.empty(this.tracks);
	}
	,get_length: function() {
		return this.tracks.length;
	}
	,title: null
	,changed: null
	,tracks: null
	,__class__: bplayer_core_Queue
	,__properties__: {get_length:"get_length"}
};
var bplayer_core_Session = function() {
	this.queue = [];
	this.playing = { index : -1, time : 0};
};
$hxClasses["bplayer.core.Session"] = bplayer_core_Session;
bplayer_core_Session.__name__ = ["bplayer","core","Session"];
bplayer_core_Session.fromPlayer = function(p) {
	var sess = new bplayer_core_Session();
	sess.pullFromPlayer(p);
	return sess;
};
bplayer_core_Session.fromByteArray = function(data) {
	var s = new bplayer_core_Session();
	s.pullFromByteArray(data);
	return s;
};
bplayer_core_Session.prototype = {
	pullFromPlayer: function(p) {
		this.queue = [];
		var _g1 = 0;
		var _g = p.queue.get_length();
		while(_g1 < _g) {
			var index = _g1++;
			var m = p.queue.get(index);
			var url = this.getUrlForMediaProvider(m);
			if(url != "error") this.queue.push({ url : url});
		}
		if(p.provider != null) {
			this.playing.index = p.queue.indexOf(p.provider);
			this.playing.time = Math.floor(p.get_currentTime());
		}
	}
	,getUrlForMediaProvider: function(media) {
		if(js_Boot.__instanceof(media,bplayer_core_media_FileEntryMediaProvider)) {
			var tmp;
			var entry = (js_Boot.__cast(media , bplayer_core_media_FileEntryMediaProvider)).entry;
			tmp = chrome.fileSystem.retainEntry(entry);
			return tmp;
		}
		return "error";
	}
	,toByteArray: function() {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		var out = tmp;
		out.pushFloat(this.queue.length);
		var _g = 0;
		var _g1 = this.queue;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			out.pushFloat(m.url.length);
			out.appendString(m.url);
		}
		out.push(this.playing.index > -1?1:0);
		if(this.playing.index > -1) {
			out.push(this.playing.index);
			out.pushFloat(this.playing.time);
		}
		return out;
	}
	,pullFromByteArray: function(data) {
		data.position = 0;
		var len = data.readInt32();
		var _g = 0;
		while(_g < len) {
			_g++;
			this.queue.push({ url : data.readString(data.readInt32())});
		}
		var tmp;
		var this1 = data.get(data.position++);
		tmp = this1 == 1;
		var isPlaying = tmp;
		if(isPlaying) {
			this.playing.index = data.get(data.position++);
			this.playing.time = data.readInt32();
		}
	}
	,apply: function(player,done) {
		var _g = this;
		var tmp;
		var array = this.queue.map(function(_) {
			return _.url;
		});
		tmp = tannus_ds_promises_PromiseTools.batch(array.map(tannus_chrome_FileSystemTools.restorePromise));
		var ep = tmp;
		ep.then(function(entries) {
			var loader = new bplayer_core_media_FileSystemMediaLoader();
			loader.load(entries,function(providers) {
				var playlist = new bplayer_core_Queue(providers);
				player.setQueue(playlist,false,function() {
					var nowPlaying = playlist.get(_g.playing.index);
					player.load(nowPlaying,function() {
						player.set_currentTime(_g.playing.time);
						done();
					});
				});
			});
			done();
		});
		ep.unless(function(error) {
			throw new js__$Boot_HaxeError(error);
		});
	}
	,hxSerialize: function(s) {
		var tmp;
		var f = $bind(s,s.serialize);
		tmp = function(v) {
			f(v);
		};
		var w = tmp;
		w(this.queue.length);
		var _g = 0;
		var _g1 = this.queue;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			w(item.url);
		}
		w(this.playing.index);
		w(this.playing.time);
	}
	,hxUnserialize: function(u) {
		this.queue = [];
		this.playing = { index : -1, time : 0};
		var tmp;
		var f = $bind(u,u.unserialize);
		tmp = function() {
			return f();
		};
		var v = tmp;
		var count = v();
		var _g = 0;
		while(_g < count) {
			_g++;
			this.queue.push({ url : v()});
		}
		this.playing.index = v();
		this.playing.time = v();
	}
	,empty: function() {
		return Lambda.empty(this.queue);
	}
	,queue: null
	,playing: null
	,__class__: bplayer_core_Session
};
var bplayer_core_media_MediaContext = function(m) {
	var _g = this;
	this.media = m;
	this.canvas = gryffin_display_Canvas.create(0,0);
	this.target = new tannus_geom2_Rect();
	this.readyEvent = new tannus_io_VoidSignal();
	this.canManipulateEvent = new tannus_io_VoidSignal();
	this._ready = false;
	this.readyEvent.once(function() {
		_g._ready = true;
	});
};
$hxClasses["bplayer.core.media.MediaContext"] = bplayer_core_media_MediaContext;
bplayer_core_media_MediaContext.__name__ = ["bplayer","core","media","MediaContext"];
bplayer_core_media_MediaContext.prototype = {
	resize: function(width,height) {
		this.canvas.resize(width,height);
		this.target.d.set(2,width);
		this.target.d.set(3,height);
	}
	,move: function(pos) {
		this.target.set_topLeft(pos);
	}
	,moveTo: function(x,y) {
		var pos = new tannus_geom2_Point(x,y);
		this.target.set_topLeft(pos);
	}
	,update: function(stage) {
		if(!(this.target.d.get(2) == this.canvas.canvas.width && this.target.d.get(3) == this.canvas.canvas.height)) this.resize(this.target.d.get(2),this.target.d.get(3));
	}
	,render: function(stage,c) {
		var cc = this.canvas._ctx.get();
		cc.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		this.paint(stage,cc);
		c.drawComponent(this.canvas,0,0,this.canvas.canvas.width,this.canvas.canvas.height,this.target.d.get(0),this.target.d.get(1),this.target.d.get(2),this.target.d.get(3));
	}
	,paint: function(stage,c) {
		c.ctx.beginPath();
		c.set_fillStyle("black");
		c.ctx.rect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		c.ctx.closePath();
		c.ctx.fill();
	}
	,attach: function(p) {
		p.page.set_title(this.media.getTitle());
	}
	,detach: function(p) {
		this.mo.pause();
		this.mo.clear();
	}
	,getMediaObject: function() {
		return this.mo;
	}
	,play: function() {
		this.mo.play();
	}
	,pause: function() {
		this.mo.pause();
	}
	,togglePlayback: function() {
		(this.mo.get_paused()?$bind(this,this.play):$bind(this,this.pause))();
	}
	,stop: function() {
		this.mo.clear();
		this.mo.destroy();
		console.log("media stopped");
	}
	,get_width: function() {
		return this.canvas.canvas.width;
	}
	,get_height: function() {
		return this.canvas.canvas.height;
	}
	,get_duration: function() {
		return this.mo.get_duration();
	}
	,get_currentTime: function() {
		return this.mo.get_currentTime();
	}
	,set_currentTime: function(v) {
		return this.mo.set_currentTime(v);
	}
	,get_volume: function() {
		return this.mo.get_volume();
	}
	,set_volume: function(v) {
		return this.mo.set_volume(v);
	}
	,get_playbackRate: function() {
		return this.mo.get_playbackRate();
	}
	,set_playbackRate: function(v) {
		return this.mo.set_playbackRate(v);
	}
	,get_paused: function() {
		return this.mo.get_paused();
	}
	,get_muted: function() {
		return this.mo.get_muted();
	}
	,set_muted: function(v) {
		return this.mo.set_muted(v);
	}
	,media: null
	,mediaType: null
	,canvas: null
	,target: null
	,readyEvent: null
	,canManipulateEvent: null
	,_ready: null
	,mo: null
	,__class__: bplayer_core_media_MediaContext
	,__properties__: {set_muted:"set_muted",get_muted:"get_muted",get_paused:"get_paused",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_volume:"set_volume",get_volume:"get_volume",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",get_duration:"get_duration",get_height:"get_height",get_width:"get_width"}
};
var bplayer_core_media_AudioMediaContext = function(m) {
	var _g = this;
	bplayer_core_media_MediaContext.call(this,m);
	this.audio = new bplayer_display_Audio();
	this.audio.set_src(this.media.getSource());
	this.mo = this.audio;
	this.visualizer = null;
	this.audio.oncanplay.once(function() {
		_g.player = BPlayer.instance.getPlayer();
		_g.visualizer = Type.createInstance(_g.get_visualizer_class(),[_g,_g.player]);
		_g.visualizer.buildTree(function() {
			_g.readyEvent.call();
		});
	});
};
$hxClasses["bplayer.core.media.AudioMediaContext"] = bplayer_core_media_AudioMediaContext;
bplayer_core_media_AudioMediaContext.__name__ = ["bplayer","core","media","AudioMediaContext"];
bplayer_core_media_AudioMediaContext.__super__ = bplayer_core_media_MediaContext;
bplayer_core_media_AudioMediaContext.prototype = $extend(bplayer_core_media_MediaContext.prototype,{
	paint: function(stage,c) {
		if(this.visualizer != null) this.visualizer.render(stage,c); else {
			c.ctx.save();
			c.set_fillStyle("black");
			c.fillRect(this.target.d.get(0),this.target.d.get(1),this.target.d.get(2),this.target.d.get(3));
			c.ctx.restore();
		}
	}
	,update: function(stage) {
		bplayer_core_media_MediaContext.prototype.update.call(this,stage);
		if(this.visualizer != null) this.visualizer.update(stage);
	}
	,attach: function(p) {
		bplayer_core_media_MediaContext.prototype.attach.call(this,p);
		this.player = p;
	}
	,onready: function(f) {
		if(this._ready) gryffin_Tools.defer(f); else this.readyEvent.once(f);
	}
	,get_visualizer_class: function() {
		return bplayer_display_SpectographAudioVisualizer;
	}
	,audio: null
	,visualizer: null
	,player: null
	,__class__: bplayer_core_media_AudioMediaContext
	,__properties__: $extend(bplayer_core_media_MediaContext.prototype.__properties__,{get_visualizer_class:"get_visualizer_class"})
});
var bplayer_core_media_MediaEntry = function() { };
$hxClasses["bplayer.core.media.MediaEntry"] = bplayer_core_media_MediaEntry;
bplayer_core_media_MediaEntry.__name__ = ["bplayer","core","media","MediaEntry"];
bplayer_core_media_MediaEntry.prototype = {
	getTitle: null
	,getKey: null
	,getPathKey: null
	,getParent: null
	,__class__: bplayer_core_media_MediaEntry
};
var bplayer_core_media_MediaImpl = function() {
	this.mediaGroup = null;
};
$hxClasses["bplayer.core.media.MediaImpl"] = bplayer_core_media_MediaImpl;
bplayer_core_media_MediaImpl.__name__ = ["bplayer","core","media","MediaImpl"];
bplayer_core_media_MediaImpl.__interfaces__ = [bplayer_core_media_MediaEntry];
bplayer_core_media_MediaImpl.prototype = {
	getTitle: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getKey: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getPathKey: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getParent: function() {
		return this.mediaGroup;
	}
	,getSource: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getContext: function() {
		return new bplayer_core_media_MediaContext(this);
	}
	,getlib: function(f) {
		BPlayer.instance.getApplicationData(function(db) {
			f(db.library);
		});
	}
	,hasMediaInfo: function() {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var f = function(lib) {
				lib.hasMediaInfo(_g.getTitle()).then(accept).unless(reject);
			};
			BPlayer.instance.getApplicationData(function(db) {
				f(db.library);
			});
		},null).bool();
	}
	,queryMediaInfo: function() {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			BPlayer.instance.getApplicationData(function(db) {
				db.library.getMediaInfo(_g.getTitle()).then(accept).unless(reject);
			});
		},null);
	}
	,addMediaInfo: function() {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var f = function(lib) {
				lib.putMedia(_g).then(accept).unless(reject);
			};
			BPlayer.instance.getApplicationData(function(db) {
				f(db.library);
			});
		},null);
	}
	,getMediaInfo: function() {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			_g.hasMediaInfo().yep(function() {
				_g.queryMediaInfo().then(accept).unless(reject);
			}).nope(function() {
				_g.addMediaInfo().then(accept).unless(reject);
			}).unless(function(error) {
				reject(error);
			});
		},null);
	}
	,gmi: function(callback) {
		this.getMediaInfo().then(callback).unless(function(error) {
			callback(null);
		});
	}
	,mediaGroup: null
	,__class__: bplayer_core_media_MediaImpl
};
var bplayer_core_media_FileMediaImpl = function(entry,file) {
	bplayer_core_media_MediaImpl.call(this);
	this.entry = entry;
	this.file = file;
};
$hxClasses["bplayer.core.media.FileMediaImpl"] = bplayer_core_media_FileMediaImpl;
bplayer_core_media_FileMediaImpl.__name__ = ["bplayer","core","media","FileMediaImpl"];
bplayer_core_media_FileMediaImpl.__super__ = bplayer_core_media_MediaImpl;
bplayer_core_media_FileMediaImpl.prototype = $extend(bplayer_core_media_MediaImpl.prototype,{
	getSource: function() {
		return this.file.getObjectURL();
	}
	,getTitle: function() {
		return this.entry.name;
	}
	,getPathKey: function() {
		return this.entry.name;
	}
	,getKey: function() {
		return "" + this.file.file.size + "#" + this.file.file.name;
	}
	,entry: null
	,file: null
	,__class__: bplayer_core_media_FileMediaImpl
});
var bplayer_core_media_AudioMediaImpl = function(entry,file) {
	bplayer_core_media_FileMediaImpl.call(this,entry,file);
};
$hxClasses["bplayer.core.media.AudioMediaImpl"] = bplayer_core_media_AudioMediaImpl;
bplayer_core_media_AudioMediaImpl.__name__ = ["bplayer","core","media","AudioMediaImpl"];
bplayer_core_media_AudioMediaImpl.__super__ = bplayer_core_media_FileMediaImpl;
bplayer_core_media_AudioMediaImpl.prototype = $extend(bplayer_core_media_FileMediaImpl.prototype,{
	getContext: function() {
		return new bplayer_core_media_AudioMediaContext(this);
	}
	,__class__: bplayer_core_media_AudioMediaImpl
});
var bplayer_core_media_BaseMediaLoader = function() {
	tannus_ds_StandardTask.call(this);
	this.set_result([]);
	this.sources = [];
	this.errors = [];
};
$hxClasses["bplayer.core.media.BaseMediaLoader"] = bplayer_core_media_BaseMediaLoader;
bplayer_core_media_BaseMediaLoader.__name__ = ["bplayer","core","media","BaseMediaLoader"];
bplayer_core_media_BaseMediaLoader.__super__ = tannus_ds_StandardTask;
bplayer_core_media_BaseMediaLoader.prototype = $extend(tannus_ds_StandardTask.prototype,{
	load: function(srcs,callback) {
		var _g = this;
		this.sources = srcs;
		this.perform(function() {
			if(callback != null) callback(_g.get_result());
		});
	}
	,action: function(complete) {
		var _g2 = this;
		var stack = new tannus_ds_AsyncStack();
		var _g = 0;
		var _g1 = this.sources;
		while(_g < _g1.length) {
			var src = [_g1[_g]];
			++_g;
			stack.under((function(src) {
				return function(next) {
					_g2.loadSource(src[0],(function() {
						return function(error,media) {
							if(error != null) _g2.errors.push(error); else if(media != null) _g2.get_result().push(media);
							next();
						};
					})());
				};
			})(src));
		}
		stack.run(complete);
	}
	,loadSource: function(source,callback) {
		callback(null,null);
	}
	,sources: null
	,errors: null
	,__class__: bplayer_core_media_BaseMediaLoader
});
var bplayer_core_media_MediaProvider = function() {
	this._media = null;
	this.updateEvent = new tannus_io_VoidSignal();
	this.disconnectEvent = new tannus_io_VoidSignal();
	this.mediaGroup = null;
};
$hxClasses["bplayer.core.media.MediaProvider"] = bplayer_core_media_MediaProvider;
bplayer_core_media_MediaProvider.__name__ = ["bplayer","core","media","MediaProvider"];
bplayer_core_media_MediaProvider.create = function(title,provider) {
	return new bplayer_core_media_DefaultMediaProvider(title,provider);
};
bplayer_core_media_MediaProvider.prototype = {
	getName: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,getMedia: function() {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			if(_g._media == null) _g.toMedia().then(function(m) {
				_g._media = m;
			}).then(accept).unless(reject); else gryffin_Tools.defer(function() {
				accept(_g._media);
			});
		},null);
	}
	,toMedia: function() {
		throw new js__$Boot_HaxeError("not implemented");
	}
	,mediaGroup: null
	,_media: null
	,updateEvent: null
	,disconnectEvent: null
	,__class__: bplayer_core_media_MediaProvider
};
var bplayer_core_media_FileEntryMediaProvider = function(f) {
	bplayer_core_media_MediaProvider.call(this);
	this.entry = f;
};
$hxClasses["bplayer.core.media.FileEntryMediaProvider"] = bplayer_core_media_FileEntryMediaProvider;
bplayer_core_media_FileEntryMediaProvider.__name__ = ["bplayer","core","media","FileEntryMediaProvider"];
bplayer_core_media_FileEntryMediaProvider.__super__ = bplayer_core_media_MediaProvider;
bplayer_core_media_FileEntryMediaProvider.prototype = $extend(bplayer_core_media_MediaProvider.prototype,{
	entry: null
	,getName: function() {
		return this.entry.name;
	}
	,toMedia: function() {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var tmp;
			var this1 = _g.entry;
			tmp = new tannus_html_fs_FilePromise(function(give) {
				give(this1);
			});
			var f = tmp;
			f.then(function(file) {
				var mime = file.file.type;
				var media = null;
				if((tannus_ds_StringUtils.has(mime,"/")?mime.substring(0,mime.indexOf("/")):mime) == "video") media = new bplayer_core_media_VideoMediaImpl(_g.entry,file); else if((tannus_ds_StringUtils.has(mime,"/")?mime.substring(0,mime.indexOf("/")):mime) == "audio") media = new bplayer_core_media_AudioMediaImpl(_g.entry,file); else reject("invalid file type");
				if(media == null) media = new bplayer_core_media_MediaImpl();
				media.mediaGroup = _g.mediaGroup;
				accept(media);
			});
			f.unless(function(error) {
				reject(error);
			});
		},null);
	}
	,__class__: bplayer_core_media_FileEntryMediaProvider
});
var bplayer_core_media_FileSystemMediaLoader = function() {
	bplayer_core_media_BaseMediaLoader.call(this);
};
$hxClasses["bplayer.core.media.FileSystemMediaLoader"] = bplayer_core_media_FileSystemMediaLoader;
bplayer_core_media_FileSystemMediaLoader.__name__ = ["bplayer","core","media","FileSystemMediaLoader"];
bplayer_core_media_FileSystemMediaLoader.__super__ = bplayer_core_media_BaseMediaLoader;
bplayer_core_media_FileSystemMediaLoader.prototype = $extend(bplayer_core_media_BaseMediaLoader.prototype,{
	loadSource: function(e,provide) {
		if(e.isFile) {
			var m = new bplayer_core_media_FileEntryMediaProvider(e);
			provide(null,m);
		} else provide("Error: provided entry is a directory",null);
	}
	,__class__: bplayer_core_media_FileSystemMediaLoader
});
var tannus_ds_Promise = function(exec,nocall) {
	if(nocall == null) nocall = false;
	this.back = null;
	this.in_progress = false;
	this.executor = exec;
	this.fulfillment = new tannus_io_Signal();
	this.rejection = new tannus_io_Signal();
	this.derived = [];
	if(!nocall) this.make();
};
$hxClasses["tannus.ds.Promise"] = tannus_ds_Promise;
tannus_ds_Promise.__name__ = ["tannus","ds","Promise"];
tannus_ds_Promise.prototype = {
	fulfill: function(v) {
		this.in_progress = false;
		this.fulfillment.broadcast(v);
	}
	,reject: function(err) {
		this.in_progress = false;
		var data = err;
		this.rejection.broadcast(data);
	}
	,derive: function(der) {
		this.derived.push(der);
	}
	,then: function(callback) {
		this.fulfillment.listen(callback,false);
		return this;
	}
	,unless: function(callback) {
		this.rejection.listen(callback,false);
		return this;
	}
	,always: function(cb) {
		var called = false;
		this.then(function(x) {
			if(!called) {
				cb();
				called = true;
			}
		});
		this.unless(function(e) {
			if(!called) {
				cb();
				called = true;
			}
		});
	}
	,transform: function(change) {
		var _g = this;
		var res1 = new tannus_ds_Promise(function(res,err) {
			_g.then(function(val) {
				res(change(val));
			});
			_g.unless(function(error) {
				err(error);
			});
		});
		this.attach(res1);
		return res1;
	}
	,parent: function() {
		if(this.back != null) return this.back; else throw new js__$Boot_HaxeError("PromiseError: Cannot read field 'back' from the given Promise, as it has not yet been assigned");
	}
	,attach: function(child) {
		this.derive(child);
		child.back = this;
		return this;
	}
	,make: function(cb) {
		var _g = this;
		if(cb == null) cb = function() {
		};
		if(!this.in_progress) {
			this.in_progress = true;
			var stack = new tannus_ds_AsyncStack();
			var _g1 = 0;
			var _g11 = this.derived;
			while(_g1 < _g11.length) {
				var child = [_g11[_g1]];
				++_g1;
				stack.under((function(child) {
					return function(nxt) {
						child[0].make(nxt);
					};
				})(child));
			}
			stack.run(function() {
				var ff = function(x) {
					_g.fulfill(x);
					cb();
				};
				var rj = function(e) {
					_g.reject(e);
					cb();
				};
				_g.executor(ff,rj);
			});
		} else {
			var tmp;
			var run = 0;
			var rm = function() {
				if(run < 1) {
					_g.make();
					run++;
				}
			};
			tmp = rm;
			var remake = tmp;
			this.fulfillment.listen(function(x1) {
				remake();
			},true);
			this.rejection.listen(function(x2) {
				remake();
			},true);
		}
	}
	,print: function() {
		this.then(function(x) {
			console.log(x);
		});
		return this;
	}
	,typeError: function(msg) {
		return "TypeError: " + msg;
	}
	,bool: function() {
		var _g = this;
		var res = new tannus_ds_promises_BoolPromise(function(yep,nope) {
			_g.then(function(data) {
				if(typeof(data) == "boolean") yep(data); else nope("TypeError: " + ("Cannot cast " + Std.string(data) + " to Boolean!"));
			});
			_g.unless(nope);
		});
		this.attach(res);
		return res;
	}
	,string: function() {
		var _g = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_g.then(function(data) {
				if(typeof(data) == "string") accept(Std.string(data) + ""); else reject("TypeError: " + ("Cannot cast " + Std.string(data) + " to String"));
			});
		});
		this.attach(res);
		return res;
	}
	,array: function() {
		var _g = this;
		var res = new tannus_ds_promises_ArrayPromise(function(yep,nope) {
			_g.then(function(data) {
				try {
					data = Array.prototype.slice.call(data,0);
					yep(data);
				} catch( error ) {
					if (error instanceof js__$Boot_HaxeError) error = error.val;
					nope(error);
				}
			});
			_g.unless(nope);
		});
		this.attach(res);
		return res;
	}
	,object: function() {
		var _g = this;
		var res = new tannus_ds_promises_ObjectPromise(function(reply,reject) {
			_g.then(function(data) {
				var stype = tannus_internal_TypeTools.typename(data);
				var tmp;
				if(!(typeof(data) == "boolean") && !(typeof(data) == "number")) {
					var tmp1;
					if((data instanceof Array)) tmp1 = data.__enum__ == null; else tmp1 = false;
					tmp = !tmp1;
				} else tmp = false;
				if(tmp && !(typeof(data) == "string")) {
					var _g1 = Type["typeof"](data);
					switch(_g1[1]) {
					case 4:case 6:
						reply(data);
						break;
					default:
						reject("TypeError: " + ("Cannot cast " + stype + " to Object"));
					}
				} else reject("TypeError: " + ("Cannot cast " + stype + " to Object"));
			});
		});
		this.attach(res);
		return res;
	}
	,eq: function(other) {
		var _g = this;
		return new tannus_ds_promises_BoolPromise(function(done,fail) {
			_g.then(function(data) {
				{
					var _g1 = other;
					switch(_g1[1]) {
					case 0:
						var val = _g1[2];
						done(val == data);
						break;
					case 1:
						var prom = _g1[2];
						prom.then(function(val1) {
							done(val1 == data);
						});
						prom.unless(fail);
						break;
					}
				}
			});
			_g.unless(fail);
		});
	}
	,executor: null
	,fulfillment: null
	,rejection: null
	,in_progress: null
	,derived: null
	,back: null
	,__class__: tannus_ds_Promise
};
var bplayer_core_media_GalleryPromise = function(f) {
	tannus_ds_Promise.call(this,f);
};
$hxClasses["bplayer.core.media.GalleryPromise"] = bplayer_core_media_GalleryPromise;
bplayer_core_media_GalleryPromise.__name__ = ["bplayer","core","media","GalleryPromise"];
bplayer_core_media_GalleryPromise.__super__ = tannus_ds_Promise;
bplayer_core_media_GalleryPromise.prototype = $extend(tannus_ds_Promise.prototype,{
	__class__: bplayer_core_media_GalleryPromise
});
var bplayer_core_media_GalleryTools = function() { };
$hxClasses["bplayer.core.media.GalleryTools"] = bplayer_core_media_GalleryTools;
bplayer_core_media_GalleryTools.__name__ = ["bplayer","core","media","GalleryTools"];
bplayer_core_media_GalleryTools.entries = function(gp) {
	return new tannus_ds_Promise(function(accept,reject) {
		[];
		var mgp = gp.get();
		mgp.then(function(mg) {
			var providers = mg.getAllProviders();
			var entries = providers.map(function(_) {
				return bplayer_core_GalleryEntry.EMedia(_);
			});
			accept(entries);
		});
		mgp.unless(function(error) {
			reject(error);
		});
	},null).array();
};
bplayer_core_media_GalleryTools.gallery = function(group) {
	return new bplayer_core_media_GalleryPromise(function(accept,reject) {
		var ep = bplayer_core_media_GalleryTools.entries(group);
		ep.then(function(entries) {
			var gallery = new bplayer_core_Gallery();
			var _g = 0;
			while(_g < entries.length) {
				var e = entries[_g];
				++_g;
				gallery.addEntry(e);
			}
			accept(gallery);
		});
		ep.unless(reject);
	});
};
bplayer_core_media_GalleryTools.allEntries = function(providers) {
	return new tannus_ds_Promise(function(accept,reject) {
		var results = [];
		var stack = new tannus_ds_AsyncStack();
		var _g = 0;
		while(_g < providers.length) {
			var p = [providers[_g]];
			++_g;
			stack.under((function(p) {
				return function(done) {
					var pelp = bplayer_core_media_GalleryTools.entries(p[0]);
					pelp.unless((function() {
						return function(_) {
							reject(_);
							return;
						};
					})());
					pelp.then((function() {
						return function(el) {
							results.push(el);
							done();
						};
					})());
				};
			})(p));
		}
		stack.run(function() {
			accept(tannus_ds_ArrayTools.flatten(results));
		});
	},null).array();
};
bplayer_core_media_GalleryTools.arrayGallery = function(providers) {
	return new bplayer_core_media_GalleryPromise(function(accept,reject) {
		var ep = bplayer_core_media_GalleryTools.allEntries(providers);
		ep.then(function(entries) {
			var gallery = new bplayer_core_Gallery();
			var _g = 0;
			while(_g < entries.length) {
				var e = entries[_g];
				++_g;
				gallery.addEntry(e);
			}
			accept(gallery);
		});
		ep.unless(reject);
	});
};
bplayer_core_media_GalleryTools.getTitle = function(e) {
	switch(e[1]) {
	case 0:
		return e[2].getName();
	case 1:
		return e[2].getTitle();
	}
};
bplayer_core_media_GalleryTools.getMedia = function(entry,callback) {
	switch(entry[1]) {
	case 0:
		entry[2].getMedia().then(callback);
		break;
	case 1:
		throw new js__$Boot_HaxeError("cannot perform this action on a group");
		break;
	}
};
bplayer_core_media_GalleryTools.getContext = function(entry,callback) {
	bplayer_core_media_GalleryTools.getMedia(entry,function(media) {
		callback(media.getContext());
	});
};
bplayer_core_media_GalleryTools.toMediaProvider = function(wfe) {
	return new bplayer_core_media_FileEntryMediaProvider(wfe);
};
bplayer_core_media_GalleryTools.galleryPromise = function(promise) {
	return new bplayer_core_media_GalleryPromise(function(yep,nope) {
		promise.then(yep).unless(nope);
	});
};
bplayer_core_media_GalleryTools.loadGallery = function(database) {
	return bplayer_core_media_GalleryTools.galleryPromise(new tannus_ds_Promise(function(accept,reject) {
		var pp = database.loadRootLevelGalleryProviders();
		pp.then(function(providers) {
			var gp = bplayer_core_media_GalleryTools.arrayGallery(providers);
			gp.then(function(gallery) {
				accept(gallery);
			});
			gp.unless(function(_) {
				reject(_);
				return;
			});
		});
		pp.unless(function(_1) {
			reject(_1);
			return;
		});
	},null));
};
var bplayer_core_media__$Media_Media_$Impl_$ = {};
$hxClasses["bplayer.core.media._Media.Media_Impl_"] = bplayer_core_media__$Media_Media_$Impl_$;
bplayer_core_media__$Media_Media_$Impl_$.__name__ = ["bplayer","core","media","_Media","Media_Impl_"];
bplayer_core_media__$Media_Media_$Impl_$.__properties__ = {get_source:"get_source",get_key:"get_key",get_title:"get_title"}
bplayer_core_media__$Media_Media_$Impl_$._new = function(m) {
	return m;
};
bplayer_core_media__$Media_Media_$Impl_$.get_title = function(this1) {
	return this1.getTitle();
};
bplayer_core_media__$Media_Media_$Impl_$.get_key = function(this1) {
	return this1.getKey();
};
bplayer_core_media__$Media_Media_$Impl_$.get_source = function(this1) {
	return this1.getSource();
};
var bplayer_core_media_MediaGroup = function() {
	this.updateEvent = new tannus_io_VoidSignal();
	this.disconnectEvent = new tannus_io_VoidSignal();
};
$hxClasses["bplayer.core.media.MediaGroup"] = bplayer_core_media_MediaGroup;
bplayer_core_media_MediaGroup.__name__ = ["bplayer","core","media","MediaGroup"];
bplayer_core_media_MediaGroup.__interfaces__ = [bplayer_core_media_MediaEntry];
bplayer_core_media_MediaGroup.prototype = {
	getKey: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getPathKey: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getTitle: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getParent: function() {
		return null;
	}
	,getNames: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getMedia: function(name) {
		return bplayer_core_media_MediaProvider.create(name,this.getMediaProvider(name));
	}
	,getMediaProvider: function(name) {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getAllProviders: function() {
		return this.getNames().map($bind(this,this.getMedia));
	}
	,getAll: function() {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var stack = new tannus_ds_AsyncStack();
			var all = [];
			var _g1 = 0;
			var _g2 = _g.getAllProviders();
			while(_g1 < _g2.length) {
				var p = _g2[_g1];
				++_g1;
				var pp = p.getMedia();
				pp.then($arrayPushClosure(all));
				pp.unless(function(error) {
					reject(error);
				});
			}
			stack.run(function() {
				accept(all);
			});
		},null).array();
	}
	,updateEvent: null
	,disconnectEvent: null
	,__class__: bplayer_core_media_MediaGroup
};
var bplayer_core_media_MediaGroupProvider = function() {
};
$hxClasses["bplayer.core.media.MediaGroupProvider"] = bplayer_core_media_MediaGroupProvider;
bplayer_core_media_MediaGroupProvider.__name__ = ["bplayer","core","media","MediaGroupProvider"];
bplayer_core_media_MediaGroupProvider.prototype = {
	get: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getTitle: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,getKey: function() {
		throw new js__$Boot_HaxeError("unimplimented");
	}
	,__class__: bplayer_core_media_MediaGroupProvider
};
var bplayer_core_media_MediaInfoTools = function() { };
$hxClasses["bplayer.core.media.MediaInfoTools"] = bplayer_core_media_MediaInfoTools;
bplayer_core_media_MediaInfoTools.__name__ = ["bplayer","core","media","MediaInfoTools"];
bplayer_core_media_MediaInfoTools.readInfo = function(m,f) {
	m.getMediaInfo().then(f);
};
bplayer_core_media_MediaInfoTools.editInfo = function(m,edit,callback) {
	if(callback == null) callback = function() {
	};
	bplayer_core_media_MediaInfoTools.readInfo(m,function(info) {
		edit(info);
		info.push().always(callback);
	});
};
var bplayer_core_media_MediaPath = $hx_exports.bplayer.core.media.MediaPath = function(a) {
	this.d = a.slice();
};
$hxClasses["bplayer.core.media.MediaPath"] = bplayer_core_media_MediaPath;
bplayer_core_media_MediaPath.__name__ = ["bplayer","core","media","MediaPath"];
bplayer_core_media_MediaPath.isReference = function(s) {
	return tannus_ds_StringUtils.has(s,":");
};
bplayer_core_media_MediaPath.fromEntries = function(a) {
	return new bplayer_core_media_MediaPath(a.map(function(_) {
		return _.getPathKey();
	}));
};
bplayer_core_media_MediaPath.pathTo = function(m) {
	var tmp;
	var a = bplayer_core_media_MediaTools.getMediaLineage(m);
	tmp = new bplayer_core_media_MediaPath(a.map(function(_) {
		return _.getPathKey();
	}));
	return tmp;
};
bplayer_core_media_MediaPath.fromString = function(s) {
	return new bplayer_core_media_MediaPath(s.split("/").map(function(_) {
		return StringTools.trim(_);
	}).filter(function(_1) {
		return !(_1.length == 0);
	}));
};
bplayer_core_media_MediaPath.prototype = {
	slice: function(start,end) {
		return new bplayer_core_media_MediaPath(this.d.slice(start,end));
	}
	,clone: function() {
		return new bplayer_core_media_MediaPath(this.d.slice(0,null));
	}
	,isValid: function() {
		return this.d.length > 0 && bplayer_core_media_MediaPath.isReference(this.d[0]);
	}
	,toStack: function() {
		return new tannus_ds_Stack(this.d);
	}
	,toString: function() {
		return "/" + this.d.join("/");
	}
	,getRoot: function() {
		if(!(this.d.length > 0 && bplayer_core_media_MediaPath.isReference(this.d[0]))) throw new js__$Boot_HaxeError("Error: \"" + this.d[0] + "\" is not a valid path-root");
		return this.d[0];
	}
	,get_basename: function() {
		return this.d[this.d.length - 1];
	}
	,get_length: function() {
		return this.d.length;
	}
	,get_folder: function() {
		return new bplayer_core_media_MediaPath(this.d.slice(0,-1));
	}
	,d: null
	,__class__: bplayer_core_media_MediaPath
	,__properties__: {get_folder:"get_folder",get_length:"get_length",get_basename:"get_basename"}
};
var bplayer_core_media_DefaultMediaProvider = function(title,provider) {
	bplayer_core_media_MediaProvider.call(this);
	this.provider = provider;
	this.title = title;
};
$hxClasses["bplayer.core.media.DefaultMediaProvider"] = bplayer_core_media_DefaultMediaProvider;
bplayer_core_media_DefaultMediaProvider.__name__ = ["bplayer","core","media","DefaultMediaProvider"];
bplayer_core_media_DefaultMediaProvider.__super__ = bplayer_core_media_MediaProvider;
bplayer_core_media_DefaultMediaProvider.prototype = $extend(bplayer_core_media_MediaProvider.prototype,{
	provider: null
	,title: null
	,toMedia: function() {
		return new tannus_ds_Promise(this.provider);
	}
	,getName: function() {
		return this.title;
	}
	,__class__: bplayer_core_media_DefaultMediaProvider
});
var bplayer_core_media_MediaTools = function() { };
$hxClasses["bplayer.core.media.MediaTools"] = bplayer_core_media_MediaTools;
bplayer_core_media_MediaTools.__name__ = ["bplayer","core","media","MediaTools"];
bplayer_core_media_MediaTools.getMediaGroupProvider = function(dir) {
	return new bplayer_core_media_WebDirectoryMediaGroupProvider(dir);
};
bplayer_core_media_MediaTools.getMediaLineage = function(m) {
	var a = [];
	var entry = m;
	while(entry != null) {
		a.push(entry);
		entry = entry.getParent();
	}
	a.reverse();
	return a;
};
bplayer_core_media_MediaTools.follow = function(group,path,callback) {
	if(path.d.length == 1) {
		var mp = group.getMedia(path.d[path.d.length - 1]);
		callback(mp);
	} else throw new js__$Boot_HaxeError("Error: Sub-groups are not yet supported");
};
bplayer_core_media_MediaTools.getProvider = function(entry) {
	switch(entry[1]) {
	case 0:
		return entry[2];
	default:
		throw new js__$Boot_HaxeError("Error: Cannot get MediaProvider from " + Std.string(entry));
	}
};
var bplayer_core_media_Selection = function(array) {
	bplayer_core_Queue.call(this,array);
};
$hxClasses["bplayer.core.media.Selection"] = bplayer_core_media_Selection;
bplayer_core_media_Selection.__name__ = ["bplayer","core","media","Selection"];
bplayer_core_media_Selection.__super__ = bplayer_core_Queue;
bplayer_core_media_Selection.prototype = $extend(bplayer_core_Queue.prototype,{
	play: function(p) {
		p.clear();
		this.loadWith(p,function() {
			p.play();
		});
	}
	,addToQueue: function(p) {
		this.loadWith(p,function() {
			var tmp;
			var this1 = p.data.settings.getAttribute("shuffle");
			if(this1 != null) tmp = this1; else tmp = false;
			if(tmp) {
				var r = new tannus_math_Random();
				p.queue = new bplayer_core_Queue(r.shuffle(p.queue.tracks));
			}
		});
	}
	,__class__: bplayer_core_media_Selection
});
var bplayer_core_media_WebDirectoryMediaGroupProvider = function(dir) {
	bplayer_core_media_MediaGroupProvider.call(this);
	this.dir = dir;
};
$hxClasses["bplayer.core.media.WebDirectoryMediaGroupProvider"] = bplayer_core_media_WebDirectoryMediaGroupProvider;
bplayer_core_media_WebDirectoryMediaGroupProvider.__name__ = ["bplayer","core","media","WebDirectoryMediaGroupProvider"];
bplayer_core_media_WebDirectoryMediaGroupProvider.__super__ = bplayer_core_media_MediaGroupProvider;
bplayer_core_media_WebDirectoryMediaGroupProvider.prototype = $extend(bplayer_core_media_MediaGroupProvider.prototype,{
	get: function() {
		var _g = this;
		return tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.read(this.dir.createReader()).transform(function(ea) {
			return _g.createGroup(ea);
		});
	}
	,createGroup: function(entries) {
		return new bplayer_core_media_WebDirectoryMediaGroup(this.dir,entries);
	}
	,getTitle: function() {
		return this.dir.name;
	}
	,getKey: function() {
		return this.dir.name;
	}
	,dir: null
	,__class__: bplayer_core_media_WebDirectoryMediaGroupProvider
});
var bplayer_core_media_SourceDirectoryMediaGroupProvider = function(d,key) {
	bplayer_core_media_WebDirectoryMediaGroupProvider.call(this,d);
	this.entryKey = key;
};
$hxClasses["bplayer.core.media.SourceDirectoryMediaGroupProvider"] = bplayer_core_media_SourceDirectoryMediaGroupProvider;
bplayer_core_media_SourceDirectoryMediaGroupProvider.__name__ = ["bplayer","core","media","SourceDirectoryMediaGroupProvider"];
bplayer_core_media_SourceDirectoryMediaGroupProvider.__super__ = bplayer_core_media_WebDirectoryMediaGroupProvider;
bplayer_core_media_SourceDirectoryMediaGroupProvider.prototype = $extend(bplayer_core_media_WebDirectoryMediaGroupProvider.prototype,{
	getKey: function() {
		return this.entryKey;
	}
	,createGroup: function(entities) {
		return new bplayer_core_media_SourceDirectoryMediaGroup(this.dir,entities,this.getKey());
	}
	,entryKey: null
	,__class__: bplayer_core_media_SourceDirectoryMediaGroupProvider
});
var bplayer_core_media_WebDirectoryMediaGroup = function(d,entries) {
	bplayer_core_media_MediaGroup.call(this);
	this.entries = entries.slice();
	this.names = entries.map(function(_) {
		return _.name;
	});
	this.dir = d;
};
$hxClasses["bplayer.core.media.WebDirectoryMediaGroup"] = bplayer_core_media_WebDirectoryMediaGroup;
bplayer_core_media_WebDirectoryMediaGroup.__name__ = ["bplayer","core","media","WebDirectoryMediaGroup"];
bplayer_core_media_WebDirectoryMediaGroup.__super__ = bplayer_core_media_MediaGroup;
bplayer_core_media_WebDirectoryMediaGroup.prototype = $extend(bplayer_core_media_MediaGroup.prototype,{
	getNames: function() {
		return this.names;
	}
	,getTitle: function() {
		return this.dir.name;
	}
	,getKey: function() {
		return this.dir.name;
	}
	,getPathKey: function() {
		return this.dir.name;
	}
	,getMedia: function(name) {
		return new bplayer_core_media_FileEntryMediaProvider(this.entries[HxOverrides.indexOf(this.names,name,0)]);
	}
	,names: null
	,entries: null
	,dir: null
	,__class__: bplayer_core_media_WebDirectoryMediaGroup
});
var bplayer_core_media_SourceDirectoryMediaGroup = function(d,e,key) {
	bplayer_core_media_WebDirectoryMediaGroup.call(this,d,e);
	this.entryKey = key;
};
$hxClasses["bplayer.core.media.SourceDirectoryMediaGroup"] = bplayer_core_media_SourceDirectoryMediaGroup;
bplayer_core_media_SourceDirectoryMediaGroup.__name__ = ["bplayer","core","media","SourceDirectoryMediaGroup"];
bplayer_core_media_SourceDirectoryMediaGroup.__super__ = bplayer_core_media_WebDirectoryMediaGroup;
bplayer_core_media_SourceDirectoryMediaGroup.prototype = $extend(bplayer_core_media_WebDirectoryMediaGroup.prototype,{
	getKey: function() {
		return this.entryKey;
	}
	,getPathKey: function() {
		return this.entryKey;
	}
	,entryKey: null
	,__class__: bplayer_core_media_SourceDirectoryMediaGroup
});
var bplayer_core_media_VideoMediaContext = function(m) {
	bplayer_core_media_MediaContext.call(this,m);
	this.video = new bplayer_display_Video();
	this.video.set_src(this.media.getSource());
	this.video.oncanplay.once(($_=this.readyEvent,$bind($_,$_.fire)));
	this.video.onloadedmetadata.once(($_=this.canManipulateEvent,$bind($_,$_.fire)));
	this.mo = this.video;
};
$hxClasses["bplayer.core.media.VideoMediaContext"] = bplayer_core_media_VideoMediaContext;
bplayer_core_media_VideoMediaContext.__name__ = ["bplayer","core","media","VideoMediaContext"];
bplayer_core_media_VideoMediaContext.__super__ = bplayer_core_media_MediaContext;
bplayer_core_media_VideoMediaContext.prototype = $extend(bplayer_core_media_MediaContext.prototype,{
	paint: function(stage,c) {
		c.drawComponent(this.video,0,0,this.video.vid.width,this.video.vid.height,0,0,this.canvas.canvas.width,this.canvas.canvas.height);
	}
	,attach: function(player) {
		bplayer_core_media_MediaContext.prototype.attach.call(this,player);
		var startTime = 0;
		var complete = function() {
			if(startTime != 0) player.set_currentTime(startTime);
		};
		bplayer_core_media_MediaInfoTools.editInfo(this.media,function(info) {
			var tmp;
			var o = info.data.o;
			var tmp3;
			if(o == null) tmp = null; else if(o.__properties__ && (tmp3 = o.__properties__["get_" + "duration"])) tmp = o[tmp3](); else tmp = o.duration;
			var tmp1;
			var _this = player.get_duration();
			tmp1 = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
			if(tmp != tmp1) {
				var tmp4;
				var _this1 = player.get_duration();
				tmp4 = 3600 * _this1.hours + 60 * _this1.minutes + _this1.seconds;
				var v = tmp4;
				info.data.set("duration",v);
			}
			var tmp2;
			var o1 = info.data.o;
			var tmp5;
			if(o1 == null) tmp2 = null; else if(o1.__properties__ && (tmp5 = o1.__properties__["get_" + "last_time"])) tmp2 = o1[tmp5](); else tmp2 = o1.last_time;
			if(tmp2 != null) {
				var tmp6;
				var o2 = info.data.o;
				var tmp7;
				if(o2 == null) tmp6 = null; else if(o2.__properties__ && (tmp7 = o2.__properties__["get_" + "last_time"])) tmp6 = o2[tmp7](); else tmp6 = o2.last_time;
				startTime = tmp6;
			}
		},complete);
	}
	,detach: function(player) {
		var time = player.get_currentTime();
		bplayer_core_media_MediaContext.prototype.detach.call(this,player);
		bplayer_core_media_MediaInfoTools.editInfo(this.media,function(info) {
			info.data.set("last_time",time);
		});
	}
	,video: null
	,__class__: bplayer_core_media_VideoMediaContext
});
var bplayer_core_media_VideoMediaImpl = function(entry,file) {
	bplayer_core_media_FileMediaImpl.call(this,entry,file);
};
$hxClasses["bplayer.core.media.VideoMediaImpl"] = bplayer_core_media_VideoMediaImpl;
bplayer_core_media_VideoMediaImpl.__name__ = ["bplayer","core","media","VideoMediaImpl"];
bplayer_core_media_VideoMediaImpl.__super__ = bplayer_core_media_FileMediaImpl;
bplayer_core_media_VideoMediaImpl.prototype = $extend(bplayer_core_media_FileMediaImpl.prototype,{
	getContext: function() {
		return new bplayer_core_media_VideoMediaContext(this);
	}
	,__class__: bplayer_core_media_VideoMediaImpl
});
var bplayer_core_mode_IPlaybackMode = function() { };
$hxClasses["bplayer.core.mode.IPlaybackMode"] = bplayer_core_mode_IPlaybackMode;
bplayer_core_mode_IPlaybackMode.__name__ = ["bplayer","core","mode","IPlaybackMode"];
bplayer_core_mode_IPlaybackMode.prototype = {
	get_volume: null
	,set_volume: null
	,get_playbackRate: null
	,set_playbackRate: null
	,get_muted: null
	,set_muted: null
	,get_shuffle: null
	,set_shuffle: null
	,get_paused: null
	,set_paused: null
	,volumeChanged: null
	,playbackRateChanged: null
	,mutedChanged: null
	,shuffleChanged: null
	,pausedChanged: null
	,changed: null
	,clone: null
	,pull: null
	,__class__: bplayer_core_mode_IPlaybackMode
	,__properties__: {set_paused:"set_paused",get_paused:"get_paused",set_shuffle:"set_shuffle",get_shuffle:"get_shuffle",set_muted:"set_muted",get_muted:"get_muted",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_volume:"set_volume",get_volume:"get_volume"}
};
var bplayer_core_mode_BasePlaybackMode = function() {
	this.d = new bplayer_core_mode_PlaybackModeData();
	this.volumeChanged = this.d.volumeChanged;
	this.playbackRateChanged = this.d.playbackRateChanged;
	this.mutedChanged = this.d.mutedChanged;
	this.pausedChanged = this.d.pausedChanged;
	this.shuffleChanged = this.d.shuffleChanged;
	this.changed = this.d.changed;
};
$hxClasses["bplayer.core.mode.BasePlaybackMode"] = bplayer_core_mode_BasePlaybackMode;
bplayer_core_mode_BasePlaybackMode.__name__ = ["bplayer","core","mode","BasePlaybackMode"];
bplayer_core_mode_BasePlaybackMode.__interfaces__ = [bplayer_core_mode_IPlaybackMode];
bplayer_core_mode_BasePlaybackMode.prototype = {
	clone: function() {
		var mode = new bplayer_core_mode_BasePlaybackMode();
		mode.d = this.d.clone();
		return mode;
	}
	,pull: function(o) {
		this.set_volume(o.get_volume());
		this.set_playbackRate(o.get_playbackRate());
		this.set_muted(o.get_muted());
		this.set_paused(o.get_paused());
		this.set_shuffle(o.get_shuffle());
	}
	,get_volume: function() {
		return this.d.volume;
	}
	,set_volume: function(v) {
		return this.d.set_volume(v);
	}
	,get_playbackRate: function() {
		return this.d.playbackRate;
	}
	,set_playbackRate: function(v) {
		return this.d.set_playbackRate(v);
	}
	,get_muted: function() {
		return this.d.muted;
	}
	,set_muted: function(v) {
		return this.d.set_muted(v);
	}
	,get_paused: function() {
		return this.d.paused;
	}
	,set_paused: function(v) {
		return this.d.set_paused(v);
	}
	,get_shuffle: function() {
		return this.d.shuffle;
	}
	,set_shuffle: function(v) {
		return this.d.set_shuffle(v);
	}
	,volumeChanged: null
	,playbackRateChanged: null
	,mutedChanged: null
	,shuffleChanged: null
	,pausedChanged: null
	,changed: null
	,d: null
	,__class__: bplayer_core_mode_BasePlaybackMode
	,__properties__: {set_shuffle:"set_shuffle",get_shuffle:"get_shuffle",set_paused:"set_paused",get_paused:"get_paused",set_muted:"set_muted",get_muted:"get_muted",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_volume:"set_volume",get_volume:"get_volume"}
};
var bplayer_core_mode_PlaybackModeData = function() {
	this.volumeChanged = new tannus_io_Signal();
	this.playbackRateChanged = new tannus_io_Signal();
	this.mutedChanged = new tannus_io_Signal();
	this.shuffleChanged = new tannus_io_Signal();
	this.pausedChanged = new tannus_io_Signal();
	this.changed = new tannus_io_VoidSignal();
	this.set_volume(1.0);
	this.set_playbackRate(1.0);
	this.set_muted(false);
	this.set_shuffle(false);
	this.set_paused(false);
};
$hxClasses["bplayer.core.mode.PlaybackModeData"] = bplayer_core_mode_PlaybackModeData;
bplayer_core_mode_PlaybackModeData.__name__ = ["bplayer","core","mode","PlaybackModeData"];
bplayer_core_mode_PlaybackModeData.prototype = {
	clone: function() {
		var d = new bplayer_core_mode_PlaybackModeData();
		d.set_volume(this.volume);
		d.set_playbackRate(this.playbackRate);
		d.set_muted(this.muted);
		d.set_paused(this.paused);
		d.set_shuffle(this.shuffle);
		return d;
	}
	,pull: function(o) {
		this.set_volume(o.volume);
		this.set_playbackRate(o.playbackRate);
		this.set_muted(o.muted);
		this.set_paused(o.paused);
		this.set_shuffle(o.shuffle);
	}
	,delta: function(previous,current) {
		return [current,previous];
	}
	,ch: function() {
		this.changed.call();
	}
	,volume: null
	,set_volume: function(v) {
		var tmp;
		var current = this.volume = v;
		tmp = [current,this.volume];
		var data = tmp;
		this.volumeChanged.broadcast(data);
		this.changed.call();
		return this.volume;
	}
	,playbackRate: null
	,set_playbackRate: function(v) {
		var tmp;
		var current = this.playbackRate = v;
		tmp = [current,this.playbackRate];
		var data = tmp;
		this.playbackRateChanged.broadcast(data);
		this.changed.call();
		return this.playbackRate;
	}
	,muted: null
	,set_muted: function(v) {
		var tmp;
		var current = this.muted = v;
		tmp = [current,this.muted];
		var data = tmp;
		this.mutedChanged.broadcast(data);
		this.changed.call();
		return this.muted;
	}
	,shuffle: null
	,set_shuffle: function(v) {
		var tmp;
		var current = this.shuffle = v;
		tmp = [current,this.shuffle];
		var data = tmp;
		this.shuffleChanged.broadcast(data);
		this.changed.call();
		return this.shuffle;
	}
	,paused: null
	,set_paused: function(v) {
		var tmp;
		var current = this.paused = v;
		tmp = [current,this.paused];
		var data = tmp;
		this.pausedChanged.broadcast(data);
		this.changed.call();
		return this.paused;
	}
	,volumeChanged: null
	,playbackRateChanged: null
	,mutedChanged: null
	,shuffleChanged: null
	,pausedChanged: null
	,changed: null
	,__class__: bplayer_core_mode_PlaybackModeData
	,__properties__: {set_paused:"set_paused",set_shuffle:"set_shuffle",set_muted:"set_muted",set_playbackRate:"set_playbackRate",set_volume:"set_volume"}
};
var tannus_io_EventDispatcher = function() {
	this.__checkEvents = true;
	this._sigs = new haxe_ds_StringMap();
};
$hxClasses["tannus.io.EventDispatcher"] = tannus_io_EventDispatcher;
tannus_io_EventDispatcher.__name__ = ["tannus","io","EventDispatcher"];
tannus_io_EventDispatcher.prototype = {
	addSignal: function(name,sig) {
		var tmp;
		var alt = new tannus_io_Signal();
		if(sig != null) tmp = sig; else tmp = alt;
		var v = tmp;
		var _this = this._sigs;
		if(__map_reserved[name] != null) _this.setReserved(name,v); else _this.h[name] = v;
		v;
	}
	,addSignals: function(names) {
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			this.addSignal(name);
		}
	}
	,getSignal: function(name) {
		if(!this.canDispatch(name)) {
			if(this.__checkEvents) throw new js__$Boot_HaxeError("InvalidEvent: \"" + name + "\" is not a valid Event"); else {
				var v = new tannus_io_Signal();
				var _this = this._sigs;
				if(__map_reserved[name] != null) _this.setReserved(name,v); else _this.h[name] = v;
				v;
			}
		}
		var tmp;
		var _this1 = this._sigs;
		if(__map_reserved[name] != null) tmp = _this1.getReserved(name); else tmp = _this1.h[name];
		return tmp;
	}
	,canDispatch: function(name) {
		var tmp;
		var _this = this._sigs;
		if(__map_reserved[name] != null) tmp = _this.existsReserved(name); else tmp = _this.h.hasOwnProperty(name);
		return tmp;
	}
	,on: function(name,action,once) {
		var _this = this.getSignal(name);
		_this.listen(action,once);
	}
	,once: function(name,action) {
		this.on(name,action,true);
	}
	,dispatch: function(name,data) {
		var _this = this.getSignal(name);
		_this.broadcast(data);
	}
	,off: function(name,action) {
		var sig = this.getSignal(name);
		if(action != null) sig.ignore(action); else sig.handlers = [];
	}
	,when: function(name,test,action) {
		this.getSignal(name).when(test,action);
	}
	,_sigs: null
	,__checkEvents: null
	,__class__: tannus_io_EventDispatcher
};
var tannus_ds_Destructible = function() { };
$hxClasses["tannus.ds.Destructible"] = tannus_ds_Destructible;
tannus_ds_Destructible.__name__ = ["tannus","ds","Destructible"];
tannus_ds_Destructible.prototype = {
	destroy: null
	,__class__: tannus_ds_Destructible
};
var tannus_mvc_Asset = function() { };
$hxClasses["tannus.mvc.Asset"] = tannus_mvc_Asset;
tannus_mvc_Asset.__name__ = ["tannus","mvc","Asset"];
tannus_mvc_Asset.__interfaces__ = [tannus_ds_Destructible];
tannus_mvc_Asset.prototype = {
	detach: null
	,__class__: tannus_mvc_Asset
};
var tannus_mvc_Model = function() {
	this.autoSave = false;
	var _g = this;
	tannus_io_EventDispatcher.call(this);
	this.am = new tannus_mvc_ModelCollection(this);
	this.change = new tannus_io_Signal();
	this.assets = [];
	this.readyReqs = new tannus_mvc_Requirements();
	this._isready = false;
	this._ready = new tannus_io_VoidSignal();
	this._ready.once(function() {
		_g._isready = true;
	});
	this._a = new haxe_ds_StringMap();
	this._bindMethodsToEvents();
	var saving = false;
	this.change.listen(function(c) {
		if(_g.autoSave && !saving) {
			saving = true;
			_g.sync(function() {
				saving = false;
			});
		}
	},false);
};
$hxClasses["tannus.mvc.Model"] = tannus_mvc_Model;
tannus_mvc_Model.__name__ = ["tannus","mvc","Model"];
tannus_mvc_Model.__interfaces__ = [tannus_mvc_Asset];
tannus_mvc_Model.__super__ = tannus_io_EventDispatcher;
tannus_mvc_Model.prototype = $extend(tannus_io_EventDispatcher.prototype,{
	init: function(cb) {
		var _g = this;
		if(cb != null) this._ready.once(cb);
		this.readyReqs.meet(function() {
			_g.sync(function() {
				_g._ready.call();
			});
		});
	}
	,onready: function(f) {
		this._ready.once(f);
	}
	,link: function(item) {
		this.assets.push(item);
	}
	,unlink: function(item) {
		HxOverrides.remove(this.assets,item);
	}
	,destroy: function() {
		var _g = 0;
		var _g1 = this.assets;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			a.destroy();
		}
	}
	,detach: function() {
		var _g = 0;
		var _g1 = this.assets;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			a.detach();
		}
	}
	,require: function(name,task) {
		var _this = this.readyReqs.tasks;
		if(__map_reserved[name] != null) _this.setReserved(name,task); else _this.h[name] = task;
	}
	,sync: function(done) {
		done();
	}
	,save: function() {
		this.sync(function() {
		});
	}
	,watch: function(f) {
		this.change.listen(f,false);
	}
	,unwatch: function(f) {
		if(f == null) this.change.handlers = []; else this.change.ignore(f);
	}
	,watchKey: function(key,f) {
		this.change.listen(function(c) {
			if(c.name == key) f();
		},false);
	}
	,getAttribute: function(key) {
		return (function($this) {
			var $r;
			var _this = $this._a;
			$r = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
			return $r;
		}(this));
	}
	,get: function(k) {
		return this.getAttribute(k);
	}
	,mget: function(k) {
		return this.getAttribute(k);
	}
	,setAttribute: function(key,value) {
		var d = { name : key, value : (function($this) {
			var $r;
			var prev = $this.getAttribute(key);
			$r = [value,prev];
			return $r;
		}(this))};
		var _this1 = this._a;
		if(__map_reserved[key] != null) _this1.setReserved(key,value); else _this1.h[key] = value;
		var curr = (function($this) {
			var $r;
			var _this = $this._a;
			$r = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
			return $r;
		}(this));
		this.change.broadcast(d);
		return curr;
	}
	,set: function(key,value) {
		return this.setAttribute(key,value);
	}
	,reference: function(key) {
		var ref = new tannus_io__$Pointer_Ref((function($this) {
			var $r;
			var f = $bind($this,$this.getAttribute);
			var a1 = key;
			$r = function() {
				return f(a1);
			};
			return $r;
		}(this)),(function($this) {
			var $r;
			var f1 = $bind($this,$this.setAttribute);
			var a11 = key;
			$r = function(a2) {
				return f1(a11,a2);
			};
			return $r;
		}(this)));
		return ref;
	}
	,attribute: function(key,dv) {
		var a = new tannus_mvc_Attribute(this,key);
		if(dv != null) a.defaultValue = dv;
		return this.bindAttribute(a);
	}
	,listAttribute: function(key,dv) {
		var a = new tannus_mvc_ListAttribute(this,key);
		if(dv != null) a.defaultValue = dv;
		return this.bindAttribute(a);
	}
	,bindAttribute: function(a) {
		if(a.model != this) a.rebind(this);
		this.am.addAttribute(a);
		return a;
	}
	,hasAttribute: function(name) {
		return (function($this) {
			var $r;
			var _this = $this._a;
			$r = __map_reserved[name] != null?_this.existsReserved(name):_this.h.hasOwnProperty(name);
			return $r;
		}(this));
	}
	,exists: function(key) {
		return this.hasAttribute(key);
	}
	,removeAttribute: function(name) {
		return this._a.remove(name);
	}
	,remove: function(key) {
		return this.removeAttribute(key);
	}
	,allAttributes: function() {
		var tmp;
		var _g = [];
		var $it0 = this._a.keys();
		while( $it0.hasNext() ) {
			var k = $it0.next();
			_g.push(k);
		}
		tmp = _g;
		return tmp;
	}
	,keys: function() {
		return this.allAttributes();
	}
	,clearAttributes: function() {
		var _g = 0;
		var _g1 = this.allAttributes();
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			this.removeAttribute(item);
		}
		this.save();
	}
	,clear: function() {
		this.clearAttributes();
	}
	,_bindMethodsToEvents: function() {
		var cclass = js_Boot.getClass(this);
		var data = haxe_rtti_Meta.getFields(cclass);
		var _g = 0;
		var _g1 = Reflect.fields(data);
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			var field = (function($this) {
				var $r;
				var this1 = (function($this) {
					var $r;
					var tmp;
					$r = data == null?null:data.__properties__ && (tmp = data.__properties__["get_" + name])?data[tmp]():data[name];
					return $r;
				}($this));
				$r = this1 != null?this1:this1;
				return $r;
			}(this));
			if(Object.prototype.hasOwnProperty.call(field,"handle")) {
				var events = (function($this) {
					var $r;
					var tmp1;
					$r = field == null?null:field.__properties__ && (tmp1 = field.__properties__["get_" + "handle"])?field[tmp1]():field.handle;
					return $r;
				}(this));
				var val = (function($this) {
					var $r;
					var tmp2;
					$r = $this.__properties__ && (tmp2 = $this.__properties__["get_" + name])?$this[tmp2]():$this[name];
					return $r;
				}(this));
				if(!Reflect.isFunction(val)) throw new js__$Boot_HaxeError("TypeError: Cannot bind field " + name + "!");
				var _g2 = 0;
				while(_g2 < events.length) {
					var event = events[_g2];
					++_g2;
					if(!this.canDispatch(event)) this.addSignal(event);
					this.on(event,val);
				}
			}
		}
	}
	,get_isReady: function() {
		return this._isready;
	}
	,autoSave: null
	,am: null
	,assets: null
	,readyReqs: null
	,change: null
	,_ready: null
	,_isready: null
	,_a: null
	,__class__: tannus_mvc_Model
	,__properties__: {get_isReady:"get_isReady"}
});
var tannus_mvc_StoredModel = function() {
	tannus_mvc_Model.call(this);
};
$hxClasses["tannus.mvc.StoredModel"] = tannus_mvc_StoredModel;
tannus_mvc_StoredModel.__name__ = ["tannus","mvc","StoredModel"];
tannus_mvc_StoredModel.__super__ = tannus_mvc_Model;
tannus_mvc_StoredModel.prototype = $extend(tannus_mvc_Model.prototype,{
	getAttribute: function(key) {
		return this.storage.get(this.map_key(key));
	}
	,setAttribute: function(key,value) {
		var tmp;
		var prev = this.getAttribute(key);
		tmp = [value,prev];
		var c = { name : key, value : tmp};
		var curr = this.storage.set(this.map_key(key),value);
		this.change.broadcast(c);
		return curr;
	}
	,removeAttribute: function(key) {
		var tmp;
		var prev = this.getAttribute(key);
		tmp = [null,prev];
		var c = { name : this.map_key(key), value : tmp};
		var had = this.storage.exists(this.map_key(key));
		this.storage.remove(this.map_key(key));
		this.change.broadcast(c);
		return had;
	}
	,hasAttribute: function(key) {
		return this.storage.exists(this.map_key(key));
	}
	,allAttributes: function() {
		return this.storage.keys();
	}
	,map_key: function(key) {
		return key;
	}
	,sync: function(f) {
		var _g = this;
		this.storage.fetch(function() {
			_g.storage.push(f);
		});
	}
	,rollback: function(cb) {
		this.storage.rollback();
		this.storage.fetch(function() {
			if(cb != null) cb();
		});
	}
	,storage: null
	,set_storage: function(v) {
		var _g = this;
		this.storage = v;
		var _this = this.readyReqs.tasks;
		if(__map_reserved.storage != null) _this.setReserved("storage",function(met) {
			_g.storage.init(met);
		}); else _this.h["storage"] = function(met) {
			_g.storage.init(met);
		};
		return this.storage;
	}
	,__class__: tannus_mvc_StoredModel
	,__properties__: $extend(tannus_mvc_Model.prototype.__properties__,{set_storage:"set_storage"})
});
var bplayer_db_ApplicationData = function() {
	tannus_mvc_StoredModel.call(this);
	var cs = new tannus_storage_chrome_ChromeStorage(chrome.storage.local);
	this.set_storage(cs);
	this.__attachAttributes();
};
$hxClasses["bplayer.db.ApplicationData"] = bplayer_db_ApplicationData;
bplayer_db_ApplicationData.__name__ = ["bplayer","db","ApplicationData"];
bplayer_db_ApplicationData.__super__ = tannus_mvc_StoredModel;
bplayer_db_ApplicationData.prototype = $extend(tannus_mvc_StoredModel.prototype,{
	__attachAttributes: function() {
		this.settings = new bplayer_db_ApplicationSettings(this);
		this.profile = new bplayer_db_ApplicationProfile(this);
		this.sessions = new bplayer_db_ApplicationSessions(this);
		this.library = new bplayer_db_ApplicationMediaDatabase(this);
	}
	,isGalleryEmpty: function() {
		var tmp;
		var this1 = this.getAttribute("locations");
		var alt = [];
		if(this1 != null) tmp = this1; else tmp = alt;
		return Lambda.empty(tmp);
	}
	,addFolderToGallery: function(dir) {
		var key = chrome.fileSystem.retainEntry(dir);
		var tmp;
		var this1 = this.getAttribute("locations");
		var alt = [];
		if(this1 != null) tmp = this1; else tmp = alt;
		var list = tmp;
		if(!Lambda.has(list,key)) list.push(key);
		this.setAttribute("locations",list);
		this.save();
	}
	,removeFolderFromGallery: function(dir) {
		var key = chrome.fileSystem.retainEntry(dir);
		var tmp;
		var this1 = this.getAttribute("locations");
		var alt = [];
		if(this1 != null) tmp = this1; else tmp = alt;
		var list = tmp;
		HxOverrides.remove(list,key);
		this.setAttribute("locations",list);
		this.save();
	}
	,loadGalleryFolders: function() {
		var stack = new tannus_ds_AsyncPool();
		var tmp;
		var this1 = this.getAttribute("locations");
		var alt = [];
		if(this1 != null) tmp = this1; else tmp = alt;
		var keys = tmp;
		var _g = 0;
		while(_g < keys.length) {
			var key = [keys[_g]];
			++_g;
			stack.push((function(key) {
				return function(index,provide) {
					var res = tannus_chrome_FileSystem.canRestore(key[0]);
					res.nope((function() {
						return function() {
							provide("Folder is no longer restorable",null);
						};
					})());
					res.yep((function(key) {
						return function() {
							chrome.fileSystem.restoreEntry(key[0],(function() {
								return function(entry) {
									if(chrome.runtime.lastError == null) {
										var folder = entry;
										provide(null,folder);
									} else provide(chrome.runtime.lastError,null);
								};
							})());
						};
					})(key));
				};
			})(key));
		}
		return new tannus_ds_Promise(function(accept,reject) {
			stack.run(function(results) {
				var folders = results.map(function(item) {
					return item.value;
				});
				accept(folders);
			});
		},null).array();
	}
	,loadRootLevelGalleryProviders: function() {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var gfp = _g.loadGalleryFolders();
			gfp.then(function(folders) {
				var providers = [];
				var tmp;
				var this1 = _g.getAttribute("locations");
				var alt = [];
				if(this1 != null) tmp = this1; else tmp = alt;
				var keys = tmp;
				var _g2 = 0;
				var _g1 = folders.length;
				while(_g2 < _g1) {
					var index = _g2++;
					providers.push(new bplayer_core_media_SourceDirectoryMediaGroupProvider(folders[index],keys[index]));
				}
				accept(providers);
			});
			gfp.unless(function(error) {
				reject(error);
			});
		},null).array();
	}
	,loadDirectoryByName: function(key) {
		return new tannus_ds_Promise(function(accept,reject) {
			chrome.fileSystem.restoreEntry(key,function(entry) {
				if(chrome.runtime.lastError == null && entry != null) {
					var folder = entry;
					accept(folder);
				} else reject(chrome.runtime.lastError);
			});
		},null);
	}
	,getFolderGroup: function(key) {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var dp = _g.loadDirectoryByName(key);
			dp.then(function(dir) {
				console.log("#magic");
				new bplayer_core_media_SourceDirectoryMediaGroupProvider(dir,key).get().then(accept).unless(reject);
			});
			dp.unless(function(error) {
				reject(error);
			});
		},null);
	}
	,get_galleryFolders: function() {
		var tmp;
		var this1 = this.getAttribute("locations");
		var alt = [];
		if(this1 != null) tmp = this1; else tmp = alt;
		return tmp;
	}
	,set_galleryFolders: function(v) {
		return this.setAttribute("locations",v);
	}
	,settings: null
	,profile: null
	,sessions: null
	,library: null
	,__class__: bplayer_db_ApplicationData
	,__properties__: $extend(tannus_mvc_StoredModel.prototype.__properties__,{set_galleryFolders:"set_galleryFolders",get_galleryFolders:"get_galleryFolders"})
});
var bplayer_db_ApplicationMediaDatabase = function(_db) {
	this.reddy = false;
	this.d = _db;
	this.onreddy = new tannus_io_VoidSignal();
	this.init();
};
$hxClasses["bplayer.db.ApplicationMediaDatabase"] = bplayer_db_ApplicationMediaDatabase;
bplayer_db_ApplicationMediaDatabase.__name__ = ["bplayer","db","ApplicationMediaDatabase"];
bplayer_db_ApplicationMediaDatabase.prototype = {
	onready: function(callback) {
		(this.reddy?foundation_Tools.defer:($_=this.onreddy,$bind($_,$_.once)))(callback);
	}
	,init: function() {
		var _g = this;
		var dbp = ida_backend_idb_IDBDatabase.open("library",1,$bind(this,this.build_db));
		dbp.then(function(_db) {
			_g.db = _db;
			_g.reddy = true;
			_g.onreddy.call();
		});
		dbp.unless(function(err) {
			window.console.error(err);
		});
	}
	,build_db: function(db) {
		var info = db.createObjectStore("media_info",{ keyPath : "title"});
		var tmp;
		var f = $bind(info,info.createIndex);
		tmp = function(a1,a2) {
			return f(a1,a2);
		};
		var i = tmp;
		i("duration","duration");
		i("starred","starred");
		i("viewed","viewed");
		i("rating","rating");
		i("last_time","last_time");
	}
	,getMediaInfoObject: function(id) {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var query = function() {
				var table = _g.db.transaction("media_info",null).objectStore("media_info");
				var infoObjectPromise = table.get(id);
				infoObjectPromise.then(function(rawMediaInfo) {
					accept(rawMediaInfo);
				});
				infoObjectPromise.unless(function(error) {
					window.console.error(error);
					reject(error);
				});
			};
			(_g.reddy?foundation_Tools.defer:($_=_g.onreddy,$bind($_,$_.once)))(query);
		},null);
	}
	,getMediaInfo: function(title) {
		var _g = this;
		return this.getMediaInfoObject(title).transform(function(raw) {
			if(raw == null) return null; else return new bplayer_db_MediaInfo(_g.d,raw);
		});
	}
	,putMediaInfoObject: function(rawInfo) {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var query = function() {
				var table = _g.db.transaction("media_info","readwrite").objectStore("media_info");
				var putPromise = table.put(rawInfo);
				putPromise.then(function(title) {
					_g.getMediaInfo(title).then(accept).unless(reject);
				});
				putPromise.unless(function(error) {
					reject(error);
				});
			};
			(_g.reddy?foundation_Tools.defer:($_=_g.onreddy,$bind($_,$_.once)))(query);
		},null);
	}
	,putMedia: function(m) {
		var rawRow = { title : m.getTitle(), duration : -1, starred : false, viewed : 0, rating : null, last_time : null};
		return this.putMediaInfoObject(rawRow);
	}
	,hasMediaInfo: function(title) {
		return this.getMediaInfoObject(title).transform(function(raw) {
			return raw != null;
		}).bool();
	}
	,tl: function(table,mode) {
		return this.db.transaction(table,mode).objectStore(table);
	}
	,d: null
	,db: null
	,onreddy: null
	,reddy: null
	,__class__: bplayer_db_ApplicationMediaDatabase
};
var bplayer_db_ApplicationProfile = function(db) {
	tannus_mvc_StoredModel.call(this);
	var sub = new tannus_storage_SubStorage(function() {
		return db.storage;
	});
	sub.prefix = "profile";
	this.set_storage(sub);
	db.require("profile",$bind(this,this.init));
};
$hxClasses["bplayer.db.ApplicationProfile"] = bplayer_db_ApplicationProfile;
bplayer_db_ApplicationProfile.__name__ = ["bplayer","db","ApplicationProfile"];
bplayer_db_ApplicationProfile.__super__ = tannus_mvc_StoredModel;
bplayer_db_ApplicationProfile.prototype = $extend(tannus_mvc_StoredModel.prototype,{
	mode2data: function(m) {
		return { volume : m.get_volume(), playbackRate : m.get_playbackRate(), muted : m.get_muted(), shuffle : m.get_shuffle(), paused : m.get_paused()};
	}
	,data2mode: function(d) {
		return bplayer_core__$PlaybackMode_PlaybackMode_$Impl_$.create(d.volume,d.playbackRate,d.muted,d.shuffle,d.paused);
	}
	,get_mode: function() {
		if(this.hasAttribute("mode")) {
			var data = this.getAttribute("mode");
			return this.data2mode(data);
		} else return null;
	}
	,set_mode: function(m) {
		if(m == null) {
			this.removeAttribute("mode");
			return null;
		} else {
			this.setAttribute("mode",this.mode2data(m));
			return m;
		}
	}
	,__class__: bplayer_db_ApplicationProfile
	,__properties__: $extend(tannus_mvc_StoredModel.prototype.__properties__,{set_mode:"set_mode",get_mode:"get_mode"})
});
var bplayer_db_ApplicationSessions = function(db) {
	tannus_mvc_StoredModel.call(this);
	var sub = new tannus_storage_SubStorage(function() {
		return db.storage;
	});
	sub.prefix = "sessions.";
	this.set_storage(sub);
	db.require("sessions",$bind(this,this.init));
};
$hxClasses["bplayer.db.ApplicationSessions"] = bplayer_db_ApplicationSessions;
bplayer_db_ApplicationSessions.__name__ = ["bplayer","db","ApplicationSessions"];
bplayer_db_ApplicationSessions.__super__ = tannus_mvc_StoredModel;
bplayer_db_ApplicationSessions.prototype = $extend(tannus_mvc_StoredModel.prototype,{
	saveSession: function(s) {
		if(Lambda.empty(s.queue)) this.setAttribute("main",null); else this.setAttribute("main",s);
	}
	,loadSession: function() {
		return this.getAttribute("main");
	}
	,get_session: function() {
		return this.getAttribute("main");
	}
	,set_session: function(v) {
		return this.setAttribute("main",v);
	}
	,__class__: bplayer_db_ApplicationSessions
	,__properties__: $extend(tannus_mvc_StoredModel.prototype.__properties__,{set_session:"set_session",get_session:"get_session"})
});
var bplayer_db_ApplicationSettings = function(db) {
	tannus_mvc_StoredModel.call(this);
	var sub = new tannus_storage_SubStorage(function() {
		return db.storage;
	});
	sub.prefix = "settings.";
	this.set_storage(sub);
	db.require("settings",$bind(this,this.init));
};
$hxClasses["bplayer.db.ApplicationSettings"] = bplayer_db_ApplicationSettings;
bplayer_db_ApplicationSettings.__name__ = ["bplayer","db","ApplicationSettings"];
bplayer_db_ApplicationSettings.__super__ = tannus_mvc_StoredModel;
bplayer_db_ApplicationSettings.prototype = $extend(tannus_mvc_StoredModel.prototype,{
	get_shuffle: function() {
		var tmp;
		var this1 = this.getAttribute("shuffle");
		if(this1 != null) tmp = this1; else tmp = false;
		return tmp;
	}
	,set_shuffle: function(v) {
		return this.setAttribute("shuffle",v);
	}
	,get_volume: function() {
		var tmp;
		var this1 = this.getAttribute("volume");
		if(this1 != null) tmp = this1; else tmp = 1.0;
		return tmp;
	}
	,set_volume: function(v) {
		return this.setAttribute("volume",v);
	}
	,get_speed: function() {
		var tmp;
		var this1 = this.getAttribute("speed");
		if(this1 != null) tmp = this1; else tmp = 1.0;
		return tmp;
	}
	,set_speed: function(v) {
		return this.setAttribute("speed",v);
	}
	,__class__: bplayer_db_ApplicationSettings
	,__properties__: $extend(tannus_mvc_StoredModel.prototype.__properties__,{set_speed:"set_speed",get_speed:"get_speed",set_volume:"set_volume",get_volume:"get_volume",set_shuffle:"set_shuffle",get_shuffle:"get_shuffle"})
});
var bplayer_db_MediaInfo = function(db,raw) {
	var _g = this;
	this.db = db;
	this.data = tannus_ds_CObj.create(raw);
	var self = tannus_ds_CObj.create(this);
	var tmp;
	var tmp1;
	var o = self.o;
	var tmp2;
	if(o == null) tmp1 = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + "__defineGetter__"])) tmp1 = o[tmp2](); else tmp1 = o.__defineGetter__;
	var func = tmp1;
	tmp = func.apply(self.o,["title",function() {
		var tmp3;
		var o1 = _g.data.o;
		var tmp4;
		if(o1 == null) tmp3 = null; else if(o1.__properties__ && (tmp4 = o1.__properties__["get_" + "title"])) tmp3 = o1[tmp4](); else tmp3 = o1.title;
		return tmp3;
	}]);
	tmp;
	var pointer = new tannus_io__$Pointer_Ref(function() {
		var tmp5;
		var o2 = _g.data.o;
		var tmp6;
		if(o2 == null) tmp5 = null; else if(o2.__properties__ && (tmp6 = o2.__properties__["get_" + "starred"])) tmp5 = o2[tmp6](); else tmp5 = o2.starred;
		return tmp5;
	},function(v) {
		return _g.data.set("starred",v);
	});
	var tmp7;
	var tmp9;
	var o3 = self.o;
	var tmp10;
	if(o3 == null) tmp9 = null; else if(o3.__properties__ && (tmp10 = o3.__properties__["get_" + "__defineGetter__"])) tmp9 = o3[tmp10](); else tmp9 = o3.__defineGetter__;
	var func1 = tmp9;
	tmp7 = func1.apply(self.o,["starred",pointer.getter]);
	tmp7;
	var tmp8;
	var tmp11;
	var o4 = self.o;
	var tmp12;
	if(o4 == null) tmp11 = null; else if(o4.__properties__ && (tmp12 = o4.__properties__["get_" + "__defineSetter__"])) tmp11 = o4[tmp12](); else tmp11 = o4.__defineSetter__;
	var func2 = tmp11;
	tmp8 = func2.apply(self.o,["starred",pointer.setter]);
	tmp8;
	var pointer1 = new tannus_io__$Pointer_Ref(function() {
		var tmp13;
		var o5 = _g.data.o;
		var tmp14;
		if(o5 == null) tmp13 = null; else if(o5.__properties__ && (tmp14 = o5.__properties__["get_" + "duration"])) tmp13 = o5[tmp14](); else tmp13 = o5.duration;
		return tmp13;
	},function(v1) {
		return _g.data.set("duration",v1);
	});
	var tmp15;
	var tmp17;
	var o6 = self.o;
	var tmp18;
	if(o6 == null) tmp17 = null; else if(o6.__properties__ && (tmp18 = o6.__properties__["get_" + "__defineGetter__"])) tmp17 = o6[tmp18](); else tmp17 = o6.__defineGetter__;
	var func3 = tmp17;
	tmp15 = func3.apply(self.o,["duration",pointer1.getter]);
	tmp15;
	var tmp16;
	var tmp19;
	var o7 = self.o;
	var tmp20;
	if(o7 == null) tmp19 = null; else if(o7.__properties__ && (tmp20 = o7.__properties__["get_" + "__defineSetter__"])) tmp19 = o7[tmp20](); else tmp19 = o7.__defineSetter__;
	var func4 = tmp19;
	tmp16 = func4.apply(self.o,["duration",pointer1.setter]);
	tmp16;
	var pointer2 = new tannus_io__$Pointer_Ref(function() {
		var tmp21;
		var o8 = _g.data.o;
		var tmp22;
		if(o8 == null) tmp21 = null; else if(o8.__properties__ && (tmp22 = o8.__properties__["get_" + "viewed"])) tmp21 = o8[tmp22](); else tmp21 = o8.viewed;
		return tmp21;
	},function(v2) {
		return _g.data.set("viewed",v2);
	});
	var tmp23;
	var tmp25;
	var o9 = self.o;
	var tmp26;
	if(o9 == null) tmp25 = null; else if(o9.__properties__ && (tmp26 = o9.__properties__["get_" + "__defineGetter__"])) tmp25 = o9[tmp26](); else tmp25 = o9.__defineGetter__;
	var func5 = tmp25;
	tmp23 = func5.apply(self.o,["viewed",pointer2.getter]);
	tmp23;
	var tmp24;
	var tmp27;
	var o10 = self.o;
	var tmp28;
	if(o10 == null) tmp27 = null; else if(o10.__properties__ && (tmp28 = o10.__properties__["get_" + "__defineSetter__"])) tmp27 = o10[tmp28](); else tmp27 = o10.__defineSetter__;
	var func6 = tmp27;
	tmp24 = func6.apply(self.o,["viewed",pointer2.setter]);
	tmp24;
	var pointer3 = new tannus_io__$Pointer_Ref(function() {
		var tmp29;
		var o11 = _g.data.o;
		var tmp30;
		if(o11 == null) tmp29 = null; else if(o11.__properties__ && (tmp30 = o11.__properties__["get_" + "rating"])) tmp29 = o11[tmp30](); else tmp29 = o11.rating;
		return tmp29;
	},function(v3) {
		return _g.data.set("rating",v3);
	});
	var tmp31;
	var tmp33;
	var o12 = self.o;
	var tmp34;
	if(o12 == null) tmp33 = null; else if(o12.__properties__ && (tmp34 = o12.__properties__["get_" + "__defineGetter__"])) tmp33 = o12[tmp34](); else tmp33 = o12.__defineGetter__;
	var func7 = tmp33;
	tmp31 = func7.apply(self.o,["rating",pointer3.getter]);
	tmp31;
	var tmp32;
	var tmp35;
	var o13 = self.o;
	var tmp36;
	if(o13 == null) tmp35 = null; else if(o13.__properties__ && (tmp36 = o13.__properties__["get_" + "__defineSetter__"])) tmp35 = o13[tmp36](); else tmp35 = o13.__defineSetter__;
	var func8 = tmp35;
	tmp32 = func8.apply(self.o,["rating",pointer3.setter]);
	tmp32;
	var pointer4 = new tannus_io__$Pointer_Ref(function() {
		var tmp37;
		var o14 = _g.data.o;
		var tmp38;
		if(o14 == null) tmp37 = null; else if(o14.__properties__ && (tmp38 = o14.__properties__["get_" + "last_time"])) tmp37 = o14[tmp38](); else tmp37 = o14.last_time;
		return tmp37;
	},function(v4) {
		return _g.data.set("last_time",v4);
	});
	var tmp39;
	var tmp41;
	var o15 = self.o;
	var tmp42;
	if(o15 == null) tmp41 = null; else if(o15.__properties__ && (tmp42 = o15.__properties__["get_" + "__defineGetter__"])) tmp41 = o15[tmp42](); else tmp41 = o15.__defineGetter__;
	var func9 = tmp41;
	tmp39 = func9.apply(self.o,["last_time",pointer4.getter]);
	tmp39;
	var tmp40;
	var tmp43;
	var o16 = self.o;
	var tmp44;
	if(o16 == null) tmp43 = null; else if(o16.__properties__ && (tmp44 = o16.__properties__["get_" + "__defineSetter__"])) tmp43 = o16[tmp44](); else tmp43 = o16.__defineSetter__;
	var func10 = tmp43;
	tmp40 = func10.apply(self.o,["last_time",pointer4.setter]);
	tmp40;
};
$hxClasses["bplayer.db.MediaInfo"] = bplayer_db_MediaInfo;
bplayer_db_MediaInfo.__name__ = ["bplayer","db","MediaInfo"];
bplayer_db_MediaInfo.prototype = {
	rebase: function(raw) {
		this.data = tannus_ds_CObj.create(raw);
	}
	,pull: function(callback) {
		var _g = this;
		var tmp;
		var o = this.data.o;
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "title"])) tmp = o[tmp1](); else tmp = o.title;
		var rawPromise = this.db.library.getMediaInfoObject(tmp);
		rawPromise.then(function(raw) {
			if(raw != null) _g.data = tannus_ds_CObj.create(raw);
			callback();
		});
		rawPromise.unless(function(error) {
			callback();
		});
	}
	,push: function() {
		return this.db.library.putMediaInfoObject(this.data.o);
	}
	,r: function(key) {
		var tmp;
		var o = this.data.o;
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + key])) tmp = o[tmp1](); else tmp = o[key];
		return tmp;
	}
	,w: function(key,value) {
		return this.data.set(key,value);
	}
	,getRaw: function() {
		return this.data.o;
	}
	,get_lib: function() {
		return this.db.library;
	}
	,get_title: function() {
		var tmp;
		var o = this.data.o;
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "title"])) tmp = o[tmp1](); else tmp = o.title;
		return tmp;
	}
	,get_starred: function() {
		var tmp;
		var o = this.data.o;
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "starred"])) tmp = o[tmp1](); else tmp = o.starred;
		return tmp;
	}
	,set_starred: function(v) {
		return this.data.set("starred",v);
	}
	,get_duration: function() {
		var tmp;
		var o = this.data.o;
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "duration"])) tmp = o[tmp1](); else tmp = o.duration;
		return tmp;
	}
	,set_duration: function(v) {
		return this.data.set("duration",v);
	}
	,get_viewed: function() {
		var tmp;
		var o = this.data.o;
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "viewed"])) tmp = o[tmp1](); else tmp = o.viewed;
		return tmp;
	}
	,set_viewed: function(v) {
		return this.data.set("viewed",v);
	}
	,get_rating: function() {
		var tmp;
		var o = this.data.o;
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "rating"])) tmp = o[tmp1](); else tmp = o.rating;
		return tmp;
	}
	,set_rating: function(v) {
		return this.data.set("rating",v);
	}
	,get_last_time: function() {
		var tmp;
		var o = this.data.o;
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "last_time"])) tmp = o[tmp1](); else tmp = o.last_time;
		return tmp;
	}
	,set_last_time: function(v) {
		return this.data.set("last_time",v);
	}
	,db: null
	,data: null
	,__class__: bplayer_db_MediaInfo
	,__properties__: {set_last_time:"set_last_time",get_last_time:"get_last_time",set_rating:"set_rating",get_rating:"get_rating",set_viewed:"set_viewed",get_viewed:"get_viewed",set_duration:"set_duration",get_duration:"get_duration",set_starred:"set_starred",get_starred:"get_starred",get_title:"get_title",get_lib:"get_lib"}
};
var gryffin_media_MediaObject = function() { };
$hxClasses["gryffin.media.MediaObject"] = gryffin_media_MediaObject;
gryffin_media_MediaObject.__name__ = ["gryffin","media","MediaObject"];
gryffin_media_MediaObject.prototype = {
	get_src: null
	,set_src: null
	,get_duration: null
	,get_currentTime: null
	,set_currentTime: null
	,get_time: null
	,set_time: null
	,get_progress: null
	,set_progress: null
	,get_playbackRate: null
	,set_playbackRate: null
	,get_paused: null
	,get_volume: null
	,set_volume: null
	,get_muted: null
	,set_muted: null
	,get_buffered: null
	,get_played: null
	,onload: null
	,onerror: null
	,onended: null
	,oncanplay: null
	,onplay: null
	,onpause: null
	,onprogress: null
	,onloadedmetadata: null
	,ondurationchange: null
	,onvolumechange: null
	,onratechange: null
	,clear: null
	,destroy: null
	,play: null
	,pause: null
	,load: null
	,__class__: gryffin_media_MediaObject
	,__properties__: {get_played:"get_played",get_buffered:"get_buffered",set_muted:"set_muted",get_muted:"get_muted",set_volume:"set_volume",get_volume:"get_volume",get_paused:"get_paused",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_progress:"set_progress",get_progress:"get_progress",set_time:"set_time",get_time:"get_time",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",get_duration:"get_duration",set_src:"set_src",get_src:"get_src"}
};
var tannus_ds_Stateful = function() { };
$hxClasses["tannus.ds.Stateful"] = tannus_ds_Stateful;
tannus_ds_Stateful.__name__ = ["tannus","ds","Stateful"];
tannus_ds_Stateful.prototype = {
	getState: null
	,setState: null
	,__class__: tannus_ds_Stateful
};
var gryffin_audio_Audio = function(s) {
	gryffin_core_EventDispatcher.call(this);
	var tmp;
	if(s != null) tmp = s; else {
		var tmp1;
		var _this = window.document;
		tmp1 = _this.createElement("audio");
		tmp = tmp1;
	}
	this.sound = tmp;
	this.onerror = new tannus_io_Signal();
	this.ondurationchange = new tannus_io_Signal();
	this.onvolumechange = new tannus_io_Signal();
	this.onratechange = new tannus_io_Signal();
	this.onstatechange = new tannus_io_Signal();
	this.onended = new tannus_io_VoidSignal();
	this.oncanplay = new tannus_io_VoidSignal();
	this.onplay = new tannus_io_VoidSignal();
	this.onpause = new tannus_io_VoidSignal();
	this.onload = new tannus_io_VoidSignal();
	this.onprogress = new tannus_io_Signal();
	this.onloadedmetadata = new tannus_io_VoidSignal();
	this.listen();
};
$hxClasses["gryffin.audio.Audio"] = gryffin_audio_Audio;
gryffin_audio_Audio.__name__ = ["gryffin","audio","Audio"];
gryffin_audio_Audio.__interfaces__ = [gryffin_media_MediaObject,tannus_ds_Stateful];
gryffin_audio_Audio.createSound = function() {
	var tmp;
	var _this = window.document;
	tmp = _this.createElement("audio");
	return tmp;
};
gryffin_audio_Audio.__super__ = gryffin_core_EventDispatcher;
gryffin_audio_Audio.prototype = $extend(gryffin_core_EventDispatcher.prototype,{
	destroy: function() {
		this.sound.remove();
	}
	,play: function() {
		this.sound.play();
		this.dispatch("play",null);
	}
	,pause: function() {
		this.sound.pause();
		this.dispatch("pause",null);
	}
	,load: function(url,can_manipulate,can_play) {
		this.pause();
		this.set_src(url);
		this.onloadedmetadata.once(function() {
			console.log("soundeo's metadata has been loaded");
			if(can_manipulate != null) can_manipulate();
		});
		this.oncanplay.once(function() {
			console.log("soundeo can be played now");
			if(can_play != null) can_play();
		});
		this.onerror.listen(function(error) {
			window.console.error(error);
		},true);
	}
	,getState: function() {
		return { 'volume' : this.sound.volume, 'speed' : this.sound.playbackRate};
	}
	,setState: function(state) {
		this.set_volume(state.volume);
		this.set_playbackRate(state.speed);
	}
	,clear: function() {
		var state = this.getState();
		this.pause();
		this.sound.remove();
		this.sound = null;
		var tmp;
		var _this = window.document;
		tmp = _this.createElement("audio");
		this.sound = tmp;
		this.setState(state);
	}
	,listen: function() {
		var _g = this;
		var tmp;
		var f = ($_=this.sound,$bind($_,$_.addEventListener));
		tmp = function(a1,a2) {
			f(a1,a2);
		};
		var on = tmp;
		on("error",function() {
			_g.onerror.broadcast(_g.sound.error);
		});
		on("ended",($_=this.onended,$bind($_,$_.fire)));
		on("canplay",($_=this.oncanplay,$bind($_,$_.fire)));
		on("play",($_=this.onplay,$bind($_,$_.fire)));
		on("pause",($_=this.onpause,$bind($_,$_.fire)));
		on("load",($_=this.onload,$bind($_,$_.fire)));
		on("progress",function(e) {
			var data = tannus_math__$Percent_Percent_$Impl_$.percent(_g.sound.currentTime,_g.sound.duration);
			_g.onprogress.broadcast(data);
		});
		on("loadedmetadata",($_=this.onloadedmetadata,$bind($_,$_.fire)));
		this.durationChanged();
		this.volumeChanged();
		this.rateChanged();
	}
	,durationChanged: function() {
		var _g = this;
		var last_duration = null;
		this.sound.addEventListener("durationchange",function() {
			var cur_dur = tannus_media_CDur.fromSecondsI(Math.floor(_g.sound.duration));
			var delta = [cur_dur,last_duration];
			_g.ondurationchange.broadcast(delta);
			last_duration = cur_dur;
		});
	}
	,volumeChanged: function() {
		var _g = this;
		var last_vol = this.sound.volume;
		this.sound.addEventListener("volumechange",function() {
			var delta = [_g.sound.volume,last_vol];
			_g.onvolumechange.broadcast(delta);
			var data = _g.getState();
			_g.onstatechange.broadcast(data);
			_g.dispatch("volumechange",delta);
			last_vol = _g.sound.volume;
		});
	}
	,rateChanged: function() {
		var _g = this;
		var last_rate = this.sound.playbackRate;
		this.sound.addEventListener("ratechange",function() {
			var delta = [_g.sound.playbackRate,last_rate];
			_g.onratechange.broadcast(delta);
			var data = _g.getState();
			_g.onstatechange.broadcast(data);
			_g.dispatch("ratechange",delta);
			last_rate = _g.sound.playbackRate;
		});
	}
	,get_src: function() {
		return Std.string(this.sound.currentSrc);
	}
	,set_src: function(v) {
		this.sound.src = v.toString();
		return this.get_src();
	}
	,get_duration: function() {
		return tannus_media_CDur.fromSecondsI(Math.floor(this.sound.duration));
	}
	,get_currentTime: function() {
		return this.sound.currentTime;
	}
	,set_currentTime: function(v) {
		return this.sound.currentTime = v;
	}
	,get_time: function() {
		return tannus_media_CDur.fromSecondsI(Math.floor(this.sound.currentTime));
	}
	,set_time: function(v) {
		this.sound.currentTime = 3600 * v.hours + 60 * v.minutes + v.seconds;
		return tannus_media_CDur.fromSecondsI(Math.floor(this.sound.currentTime));
	}
	,get_progress: function() {
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.sound.currentTime,this.sound.duration);
	}
	,set_progress: function(v) {
		this.sound.currentTime = this.sound.duration * (v / 100);
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.sound.currentTime,this.sound.duration);
	}
	,get_playbackRate: function() {
		return this.sound.playbackRate;
	}
	,set_playbackRate: function(v) {
		this.sound.playbackRate = v;
		this.sound.playbackRate = Math.round(this.sound.playbackRate * 100) / 100;
		return this.sound.playbackRate;
	}
	,get_paused: function() {
		return this.sound.paused;
	}
	,get_volume: function() {
		return this.sound.volume;
	}
	,set_volume: function(v) {
		return this.sound.volume = v < 0?0:v > 1?1:v;
	}
	,get_muted: function() {
		return this.sound.muted;
	}
	,set_muted: function(v) {
		return this.sound.muted = v;
	}
	,get_buffered: function() {
		return tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges(this.sound.buffered);
	}
	,get_played: function() {
		return tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges(this.sound.played);
	}
	,sound: null
	,onload: null
	,onerror: null
	,onended: null
	,oncanplay: null
	,onplay: null
	,onpause: null
	,onprogress: null
	,onloadedmetadata: null
	,ondurationchange: null
	,onvolumechange: null
	,onratechange: null
	,onstatechange: null
	,__class__: gryffin_audio_Audio
	,__properties__: {get_played:"get_played",get_buffered:"get_buffered",set_muted:"set_muted",get_muted:"get_muted",set_volume:"set_volume",get_volume:"get_volume",get_paused:"get_paused",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_progress:"set_progress",get_progress:"get_progress",set_time:"set_time",get_time:"get_time",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",get_duration:"get_duration",set_src:"set_src",get_src:"get_src"}
});
var bplayer_display_Audio = function() {
	gryffin_audio_Audio.call(this);
	this.__activate();
};
$hxClasses["bplayer.display.Audio"] = bplayer_display_Audio;
bplayer_display_Audio.__name__ = ["bplayer","display","Audio"];
bplayer_display_Audio.__super__ = gryffin_audio_Audio;
bplayer_display_Audio.prototype = $extend(gryffin_audio_Audio.prototype,{
	__activate: function() {
		var e = js.JQuery(this.sound);
		e.appendTo("body");
		e.css("display","none");
	}
	,togglePlayback: function() {
		(this.sound.paused?$bind(this,this.play):$bind(this,this.pause))();
	}
	,__class__: bplayer_display_Audio
});
var bplayer_display_AudioVisualizer = function(m,p) {
	this.ready = false;
	this.media = m;
	this.player = p;
	this.context = null;
};
$hxClasses["bplayer.display.AudioVisualizer"] = bplayer_display_AudioVisualizer;
bplayer_display_AudioVisualizer.__name__ = ["bplayer","display","AudioVisualizer"];
bplayer_display_AudioVisualizer.prototype = {
	buildTree: function(callback) {
		if(callback == null) callback = function() {
			return;
		};
		if(this.context != null) this.context.close(function() {
			return;
		});
		this.context = new gryffin_audio_AudioContext();
		var c = this.context;
		this.source = c.createSource(this.media.audio);
		this.splitter = c.createChannelSplitter(2);
		this.merger = c.createChannelMerger(2);
		this.leftAnalyser = c.createAnalyser();
		this.rightAnalyser = c.createAnalyser();
		this.source.connect(this.splitter);
		this.splitter.connect(this.leftAnalyser,[0]);
		this.splitter.connect(this.rightAnalyser,[1]);
		this.leftAnalyser.connect(this.merger,[0,0]);
		this.rightAnalyser.connect(this.merger,[0,1]);
		this.merger.connect(this.context.destination);
		var v = this.rightAnalyser.node.fftSize = 2048;
		this.leftAnalyser.node.fftSize = v;
		var v1 = this.rightAnalyser.node.smoothingTimeConstant = 0.8;
		this.leftAnalyser.node.smoothingTimeConstant = v1;
		this.ready = true;
		gryffin_Tools.defer(callback);
	}
	,destroy: function() {
		this.context.close(function() {
			console.log("AudioContext closed");
		});
	}
	,config: function(fftSize,smoothing) {
		if(smoothing == null) smoothing = 0.8;
		if(fftSize == null) fftSize = 2048;
		var v = this.rightAnalyser.node.fftSize = fftSize;
		this.leftAnalyser.node.fftSize = v;
		var v1 = this.rightAnalyser.node.smoothingTimeConstant = smoothing;
		this.leftAnalyser.node.smoothingTimeConstant = v1;
	}
	,update: function(stage) {
	}
	,render: function(stage,c) {
	}
	,get_audio: function() {
		return this.media.audio;
	}
	,get_fftSize: function() {
		return this.leftAnalyser.node.fftSize;
	}
	,set_fftSize: function(v) {
		var tmp;
		var v1 = this.rightAnalyser.node.fftSize = v;
		tmp = this.leftAnalyser.node.fftSize = v1;
		return tmp;
	}
	,get_smoothing: function() {
		return this.leftAnalyser.node.smoothingTimeConstant;
	}
	,set_smoothing: function(v) {
		var tmp;
		var v1 = this.rightAnalyser.node.smoothingTimeConstant = v;
		tmp = this.leftAnalyser.node.smoothingTimeConstant = v1;
		return tmp;
	}
	,media: null
	,player: null
	,context: null
	,source: null
	,splitter: null
	,merger: null
	,leftAnalyser: null
	,rightAnalyser: null
	,ready: null
	,__class__: bplayer_display_AudioVisualizer
	,__properties__: {set_smoothing:"set_smoothing",get_smoothing:"get_smoothing",set_fftSize:"set_fftSize",get_fftSize:"get_fftSize",get_audio:"get_audio"}
};
var bplayer_display_ColorScheme = function() {
	this.derived = new tannus_ds_dict_IntDict();
	this.did = 0;
	this.colors = [];
	this.colors.push(new tannus_graphics__$Color_TColor(34,34,34,null));
	this.colors.push(new tannus_graphics__$Color_TColor(242,122,72,null));
	this.colors.push(new tannus_graphics__$Color_TColor(230,230,230,null));
};
$hxClasses["bplayer.display.ColorScheme"] = bplayer_display_ColorScheme;
bplayer_display_ColorScheme.__name__ = ["bplayer","display","ColorScheme"];
bplayer_display_ColorScheme.prototype = {
	save: function(c) {
		var id = this.did++;
		this.derived.set(id,c);
		return id;
	}
	,restore: function(id) {
		return this.derived.m.h[id];
	}
	,exists: function(id) {
		return this.derived.exists(id);
	}
	,get_primary: function() {
		return this.colors[0];
	}
	,get_secondary: function() {
		return this.colors[1];
	}
	,get_tertiary: function() {
		return this.colors[2];
	}
	,colors: null
	,derived: null
	,did: null
	,__class__: bplayer_display_ColorScheme
	,__properties__: {get_tertiary:"get_tertiary",get_secondary:"get_secondary",get_primary:"get_primary"}
};
var bplayer_display_Icons = function() { };
$hxClasses["bplayer.display.Icons"] = bplayer_display_Icons;
bplayer_display_Icons.__name__ = ["bplayer","display","Icons"];
bplayer_display_Icons.playIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"play",f);
};
bplayer_display_Icons.pauseIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"pause",f);
};
bplayer_display_Icons.prevIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"previous",f);
};
bplayer_display_Icons.nextIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"next",f);
};
bplayer_display_Icons.expandIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"expand",f);
};
bplayer_display_Icons.collapseIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"collapse",f);
};
bplayer_display_Icons.clockIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"clock",f);
};
bplayer_display_Icons.muteIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"sound-muted",f);
};
bplayer_display_Icons.shuffleIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"shuffle",f);
};
bplayer_display_Icons.backIcon = function(w,h,f) {
	return bplayer_display_Icons.namedPath(w,h,"back",f);
};
bplayer_display_Icons.volumeIcon = function(w,h,i,f) {
	if(!(i >= 0 && i <= 3)) throw new js__$Boot_HaxeError("Error: icon \"volume" + i + "\" does not exist");
	return bplayer_display_Icons.namedPath(w,h,"sound" + i,f);
};
bplayer_display_Icons.volumeIcons = function(w,h,f) {
	var tmp;
	var _g = [];
	var _g1 = 0;
	while(_g1 < 4) {
		var i = _g1++;
		_g.push(bplayer_display_Icons.volumeIcon(w,h,i,f));
	}
	tmp = _g;
	return tmp;
};
bplayer_display_Icons.namedPath = function(w,h,name,f) {
	var tmp;
	var tmp1;
	var this2 = bplayer_display_Icons.icon_data;
	var tmp2;
	var tmp3;
	if(this2 == null) tmp2 = null; else if(this2.__properties__ && (tmp3 = this2.__properties__["get_" + name])) tmp2 = this2[tmp3](); else tmp2 = this2[name];
	tmp1 = tmp2;
	var this1 = tmp1;
	if(this1 != null) tmp = this1; else tmp = this1;
	return bplayer_display_Icons.spath(w,h,tmp,f);
};
bplayer_display_Icons.spath = function(w,h,d,f) {
	return bplayer_display_Icons.path(w,h,function(p) {
		p.attr("d",d);
		p.style.set_fill("#E6E6E6");
		if(f != null) f(p);
	});
};
bplayer_display_Icons.path = function(w,h,f) {
	return bplayer_display_Icons.icon(w,h,function(svg) {
		var path = new vex_svg_SVGPath();
		svg.append(path);
		f(path);
	});
};
bplayer_display_Icons.icon = function(w,h,f) {
	var svg = new vex_svg_SVGDocument();
	svg.set_width(w);
	svg.set_height(h);
	svg.set_viewBox(tannus_geom__$Rectangle_Rectangle_$Impl_$.fromArray([76,76]));
	f(svg);
	return svg;
};
bplayer_display_Icons.get = function(name) {
	var tmp;
	var tmp1;
	var this2 = bplayer_display_Icons.icon_data;
	var tmp2;
	var tmp3;
	if(this2 == null) tmp2 = null; else if(this2.__properties__ && (tmp3 = this2.__properties__["get_" + name])) tmp2 = this2[tmp3](); else tmp2 = this2[name];
	tmp1 = tmp2;
	var this1 = tmp1;
	if(this1 != null) tmp = this1; else tmp = this1;
	return tmp;
};
var bplayer_display_SpectographAudioVisualizer = function(m,p) {
	this.colorIds = null;
	this.rightData = null;
	this.leftData = null;
	bplayer_display_AudioVisualizer.call(this,m,p);
};
$hxClasses["bplayer.display.SpectographAudioVisualizer"] = bplayer_display_SpectographAudioVisualizer;
bplayer_display_SpectographAudioVisualizer.__name__ = ["bplayer","display","SpectographAudioVisualizer"];
bplayer_display_SpectographAudioVisualizer.__super__ = bplayer_display_AudioVisualizer;
bplayer_display_SpectographAudioVisualizer.prototype = $extend(bplayer_display_AudioVisualizer.prototype,{
	update: function(stage) {
	}
	,render: function(stage,c) {
		c.ctx.save();
		c.set_fillStyle("black");
		var r = this.media.target;
		c.fillRect(r.d.get(0),r.d.get(1),r.d.get(2),r.d.get(3));
		if(this.ready) this.waveform(stage,c);
		c.ctx.restore();
	}
	,waveform: function(stage,c) {
		c.set_lineWidth(2);
		var colors = this.getColors();
		var v = this.rightAnalyser.node.fftSize = 512;
		this.leftAnalyser.node.fftSize = v;
		var v1 = this.rightAnalyser.node.smoothingTimeConstant = 0.3;
		this.leftAnalyser.node.smoothingTimeConstant = v1;
		this.pullData();
		if(this.leftData != null) {
			c.ctx.beginPath();
			c.set_strokeStyle(colors[0].toString());
			this.drawAudioDataVertices(this.leftData,c);
			c.ctx.stroke();
		}
		if(this.rightData != null) {
			c.ctx.beginPath();
			c.set_strokeStyle(colors[1].toString());
			this.drawAudioDataVertices(this.rightData,c,function(_) {
				return 255 - _;
			});
			c.ctx.stroke();
		}
	}
	,drawSpectograph: function(c,data,color) {
		c.set_strokeStyle(color.toString());
		c.set_lineJoin(c.set_lineCap("round"));
		var lines;
		lines = this.calculateSpectographLines(data);
		var rand = new tannus_math_Random();
		var n = function() {
			return rand.randint(0,5);
		};
		var _g1 = 0;
		var _g = lines.length;
		while(_g1 < _g) {
			var index = _g1++;
			var line = lines[index];
			c.set_globalAlpha(1.0);
			c.set_lineWidth(3);
			c.ctx.beginPath();
			var tmp;
			var _this = line.d.get(0);
			tmp = _this.d.get(0);
			var x = tmp;
			var tmp1;
			var _this1 = line.d.get(0);
			tmp1 = _this1.d.get(1);
			var y = tmp1;
			c.ctx.moveTo(x,y);
			var tmp2;
			var _this2 = line.d.get(1);
			tmp2 = _this2.d.get(0);
			var x1 = tmp2;
			var tmp3;
			var _this3 = line.d.get(1);
			tmp3 = _this3.d.get(1);
			var y1 = tmp3;
			c.ctx.lineTo(x1,y1);
			c.ctx.stroke();
			c.set_globalAlpha(0.8);
			c.set_lineWidth(1);
			c.ctx.beginPath();
			var tmp4;
			var _this4 = line.d.get(0);
			tmp4 = _this4.d.get(0);
			var x2 = tmp4 - n();
			var tmp5;
			var _this5 = line.d.get(0);
			tmp5 = _this5.d.get(1);
			var y2 = tmp5 - n();
			c.ctx.moveTo(x2,y2);
			var tmp6;
			var _this6 = line.d.get(1);
			tmp6 = _this6.d.get(0);
			var x3 = tmp6 - n();
			var tmp7;
			var _this7 = line.d.get(1);
			tmp7 = _this7.d.get(1);
			var y3 = tmp7 - n();
			c.ctx.lineTo(x3,y3);
			c.ctx.stroke();
			c.ctx.beginPath();
			var tmp8;
			var _this8 = line.d.get(0);
			tmp8 = _this8.d.get(0);
			var x4 = tmp8 + n();
			var tmp9;
			var _this9 = line.d.get(0);
			tmp9 = _this9.d.get(1);
			var y4 = tmp9 + n();
			c.ctx.moveTo(x4,y4);
			var tmp10;
			var _this10 = line.d.get(1);
			tmp10 = _this10.d.get(0);
			var x5 = tmp10 + n();
			var tmp11;
			var _this11 = line.d.get(1);
			tmp11 = _this11.d.get(1);
			var y5 = tmp11 + n();
			c.ctx.lineTo(x5,y5);
			c.ctx.stroke();
		}
		c.ctx.stroke();
	}
	,calculateSpectographLines: function(data) {
		return this.calculateSpectographPoints(data).getLines(false);
	}
	,pullData: function() {
		var tmp;
		var _g = this.player.get_status();
		switch(_g[1]) {
		case 2:
			tmp = true;
			break;
		default:
			tmp = false;
		}
		var shouldPull = tmp;
		if(shouldPull) {
			this.leftData = this.leftAnalyser.getByteTimeDomainData();
			this.rightData = this.rightAnalyser.getByteTimeDomainData();
		}
	}
	,calculateSpectographPoints: function(data,array) {
		if(array == null) {
			array = new tannus_geom2_VertexArray();
			false;
		}
		var rect = this.media.target;
		var h = rect.d.get(3);
		var mid = h / 2;
		var sliceWidth = rect.d.get(2) * 1.0 / data.get_length();
		var x = 0;
		var _g1 = 0;
		var _g = data.get_length();
		while(_g1 < _g) {
			var i = _g1++;
			var offset = data.get_length() / 2 - Math.abs(data.get_length() / 2 - i);
			offset = offset / (data.get_length() / 2);
			var n = data.get(i) / 128.0;
			var y = mid + (mid - n * mid) * offset;
			var point = new tannus_geom2_Point(Math.round(x),Math.round(y));
			array.data[i] = point;
			x += sliceWidth;
		}
		return array;
	}
	,drawAudioDataVertices: function(data,c,f) {
		var rect = this.media.target;
		var h = rect.d.get(3);
		var mid = h / 2;
		var sliceWidth = rect.d.get(2) * 1.0 / data.get_length();
		var x = 0;
		var _g1 = 0;
		var _g = data.get_length();
		while(_g1 < _g) {
			var i = _g1++;
			var offset = data.get_length() / 2 - Math.abs(data.get_length() / 2 - i);
			offset = offset / (data.get_length() / 2);
			var di = data.get(i);
			if(f != null) di = f(di);
			var n = di / 128.0;
			var y = mid + (mid - n * mid) * offset;
			(i == 0?$bind(c,c.moveTo):$bind(c,c.lineTo))(x,y);
			x += sliceWidth;
		}
	}
	,quickDrawSpectograph: function(c,data,color,f) {
		c.set_lineJoin(c.set_lineCap("round"));
		var rect = this.media.target;
		var h = rect.d.get(3);
		var mid = h / 2;
		var sliceWidth = rect.d.get(2) * 1.0 / data.get_length();
		var rand = new tannus_math_Random();
		var colors = [color,color.lighten(20),color.darken(20)].map(function(_) {
			return _.toString();
		});
		[];
		var prev = null;
		var tmp;
		var this1;
		this1 = { x : null != null?null:0, y : null != null?null:0};
		tmp = this1;
		var pos = tmp;
		var _g1 = 0;
		var _g = data.get_length();
		while(_g1 < _g) {
			var i = _g1++;
			var offset = data.get_length() / 2 - Math.abs(data.get_length() / 2 - i);
			offset = offset / (data.get_length() / 2);
			var n = (f != null?f(data.get(i)):data.get(i)) / 128.0;
			pos.y = mid + (mid - n * mid) * offset;
			if(prev != null) {
				c.set_globalAlpha(1.0);
				c.set_lineWidth(rand.randint(2,4));
				c.set_strokeStyle(rand.choice(colors));
				c.ctx.beginPath();
				c.ctx.moveTo(prev.x,prev.y);
				c.ctx.lineTo(pos.x,pos.y);
				c.ctx.stroke();
			}
			var tmp1;
			var x = pos.x;
			var y = pos.y;
			var this2;
			this2 = { x : x != null?x:0, y : y != null?y:0};
			tmp1 = this2;
			prev = tmp1;
			pos.x += sliceWidth;
		}
		c.set_globalAlpha(1.0);
	}
	,drawInvertedAudioDataVertices: function(data,c) {
		var rect = this.media.target;
		var h = rect.d.get(3);
		var mid = h / 2;
		var sliceWidth = rect.d.get(2) * 1.0 / data.get_length();
		var x = 0;
		var _g1 = 0;
		var _g = data.get_length();
		while(_g1 < _g) {
			var i = _g1++;
			var offset = data.get_length() / 2 - Math.abs(data.get_length() / 2 - i);
			offset = offset / (data.get_length() / 2);
			var n = (255 - data.get(i)) / 128.0;
			var y = mid + (mid - n * mid) * offset;
			(i == 0?$bind(c,c.moveTo):$bind(c,c.lineTo))(x,y);
			x += sliceWidth;
		}
	}
	,getColors: function() {
		if(this.colorIds == null) {
			var base = this.player.theme.colors[1];
			var list = [];
			list.push(base);
			list.push(base.invert());
			this.colorIds = list.map(($_=this.player.theme,$bind($_,$_.save)));
			return list;
		} else return this.colorIds.map(($_=this.player.theme,$bind($_,$_.restore)));
	}
	,leftData: null
	,rightData: null
	,colorIds: null
	,__class__: bplayer_display_SpectographAudioVisualizer
});
var bplayer_display__$SpectographAudioVisualizer_Pos_$Impl_$ = {};
$hxClasses["bplayer.display._SpectographAudioVisualizer.Pos_Impl_"] = bplayer_display__$SpectographAudioVisualizer_Pos_$Impl_$;
bplayer_display__$SpectographAudioVisualizer_Pos_$Impl_$.__name__ = ["bplayer","display","_SpectographAudioVisualizer","Pos_Impl_"];
bplayer_display__$SpectographAudioVisualizer_Pos_$Impl_$._new = function(x,y) {
	var this1;
	this1 = { x : x != null?x:0, y : y != null?y:0};
	return this1;
};
bplayer_display__$SpectographAudioVisualizer_Pos_$Impl_$.clone = function(this1) {
	var tmp;
	var x = this1.x;
	var y = this1.y;
	var this2;
	this2 = { x : x != null?x:0, y : y != null?y:0};
	tmp = this2;
	return tmp;
};
var gryffin_display_Paintable = function() { };
$hxClasses["gryffin.display.Paintable"] = gryffin_display_Paintable;
gryffin_display_Paintable.__name__ = ["gryffin","display","Paintable"];
gryffin_display_Paintable.prototype = {
	paint: null
	,__class__: gryffin_display_Paintable
};
var gryffin_display_Video = function(el) {
	this.ready = false;
	gryffin_core_EventDispatcher.call(this);
	var tmp;
	if(el != null) tmp = el; else {
		var _this = window.document;
		tmp = _this.createElement("video");
	}
	this.vid = tmp;
	this.onerror = new tannus_io_Signal();
	this.ondurationchange = new tannus_io_Signal();
	this.onvolumechange = new tannus_io_Signal();
	this.onratechange = new tannus_io_Signal();
	this.onstatechange = new tannus_io_Signal();
	this.onseekbegin = new tannus_io_VoidSignal();
	this.onseekend = new tannus_io_VoidSignal();
	this.onended = new tannus_io_VoidSignal();
	this.oncanplay = new tannus_io_VoidSignal();
	this.onplay = new tannus_io_VoidSignal();
	this.onpause = new tannus_io_VoidSignal();
	this.onload = new tannus_io_VoidSignal();
	this.onprogress = new tannus_io_Signal();
	this.onloadeddata = new tannus_io_VoidSignal();
	this.onloadedmetadata = new tannus_io_VoidSignal();
	this.listen();
};
$hxClasses["gryffin.display.Video"] = gryffin_display_Video;
gryffin_display_Video.__name__ = ["gryffin","display","Video"];
gryffin_display_Video.__interfaces__ = [gryffin_media_MediaObject,tannus_ds_Stateful,gryffin_display_Paintable];
gryffin_display_Video.createVid = function() {
	var tmp;
	var _this = window.document;
	tmp = _this.createElement("video");
	return tmp;
};
gryffin_display_Video.__super__ = gryffin_core_EventDispatcher;
gryffin_display_Video.prototype = $extend(gryffin_core_EventDispatcher.prototype,{
	destroy: function() {
		this.vid.remove();
	}
	,paint: function(c,s,d) {
		if(this.ready) c.drawImage(this.vid,s.x,s.y,s.width,s.height,d.x,d.y,d.width,d.height); else {
			c.ctx.save();
			c.ctx.beginPath();
			c.set_fillStyle("black");
			c.ctx.rect(d.x,d.y,d.width,d.height);
			c.ctx.closePath();
			c.ctx.fill();
			c.ctx.restore();
		}
	}
	,capture: function(x,y,w,h) {
		if(y == null) y = 0;
		if(x == null) x = 0;
		if(w == null) w = this.vid.width - x;
		if(h == null) h = this.vid.height - y;
		var canvas = gryffin_display_Canvas.create(w,h);
		canvas._ctx.get().drawImage(this.vid,x,y,this.vid.width,this.vid.height,0,0,w,h);
		return canvas;
	}
	,clone: function() {
		var ce = this.vid.cloneNode(true);
		var cv = new gryffin_display_Video(ce);
		return cv;
	}
	,frames: function(jumpSeconds,oncapture) {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			var stack = new tannus_ds_AsyncStack();
			var results = [];
			var i = 0;
			var tmp;
			var _this = tannus_media_CDur.fromSecondsI(Math.floor(_g.vid.duration));
			tmp = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
			var len = tmp;
			while(i < len) {
				stack.under(function(next) {
					_g.get_frame(i < 0?0:i > len?len:i,results,function(canvas) {
						oncapture(i,canvas);
						next();
					});
				});
				i += jumpSeconds;
			}
			stack.run(function() {
				accept(results);
			});
		},null).array();
	}
	,get_frame: function(n,list,done) {
		var _g = this;
		gryffin_Tools.defer(function() {
			_g.vid.currentTime = n;
			_g.oncanplay.once(function() {
				var c = _g.capture();
				list.push(c);
				done(c);
			});
		});
	}
	,frameCount: function() {
		var tmp;
		var _this = tannus_media_CDur.fromSecondsI(Math.floor(this.vid.duration));
		tmp = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
		return tmp * 30;
	}
	,currentFrame: function() {
		var ct = tannus_media_CDur.fromSecondsI(Math.floor(this.vid.currentTime));
		return (3600 * ct.hours + 60 * ct.minutes + ct.seconds) * 30;
	}
	,gotoFrame: function(frameIndex) {
		this.vid.currentTime = frameIndex * 0.0333333333333333329;
	}
	,play: function() {
		this.vid.play();
		this.dispatch("play",null);
	}
	,pause: function() {
		this.vid.pause();
		this.dispatch("pause",null);
	}
	,load: function(url,can_manipulate,can_play) {
		this.pause();
		this.set_src(url);
		this.onloadedmetadata.once(function() {
			console.log("video's metadata has been loaded");
			if(can_manipulate != null) can_manipulate();
		});
		this.oncanplay.once(function() {
			console.log("video can be played now");
			if(can_play != null) can_play();
		});
		this.onerror.listen(function(error) {
			window.console.error(error);
		},true);
	}
	,getState: function() {
		return { 'volume' : this.vid.volume, 'speed' : this.vid.playbackRate};
	}
	,setState: function(state) {
		this.set_volume(state.volume);
		this.set_playbackRate(state.speed);
	}
	,clear: function() {
		var state = this.getState();
		this.pause();
		this.vid.remove();
		this.vid = null;
		var tmp;
		var _this = window.document;
		tmp = _this.createElement("video");
		this.vid = tmp;
		this.setState(state);
	}
	,listen: function() {
		var _g = this;
		var tmp;
		var f = ($_=this.vid,$bind($_,$_.addEventListener));
		tmp = function(a1,a2) {
			f(a1,a2);
		};
		var on = tmp;
		on("error",function() {
			_g.onerror.broadcast(_g.vid.error);
		});
		on("ended",($_=this.onended,$bind($_,$_.fire)));
		on("canplay",($_=this.oncanplay,$bind($_,$_.fire)));
		on("play",($_=this.onplay,$bind($_,$_.fire)));
		on("pause",($_=this.onpause,$bind($_,$_.fire)));
		on("load",($_=this.onload,$bind($_,$_.fire)));
		on("progress",function(e) {
			var data = tannus_math__$Percent_Percent_$Impl_$.percent(_g.vid.currentTime,_g.vid.duration);
			_g.onprogress.broadcast(data);
		});
		on("loadeddata",($_=this.onloadeddata,$bind($_,$_.fire)));
		on("loadedmetadata",($_=this.onloadedmetadata,$bind($_,$_.fire)));
		on("seeking",($_=this.onseekbegin,$bind($_,$_.fire)));
		on("seeked",($_=this.onseekend,$bind($_,$_.fire)));
		this.durationChanged();
		this.volumeChanged();
		this.rateChanged();
		this.onloadedmetadata.once(function() {
			_g.vid.width = _g.vid.videoWidth;
			_g.vid.height = _g.vid.videoHeight;
		});
	}
	,durationChanged: function() {
		var _g = this;
		var last_duration = null;
		this.vid.addEventListener("durationchange",function() {
			var cur_dur = tannus_media_CDur.fromSecondsI(Math.floor(_g.vid.duration));
			var delta = [cur_dur,last_duration];
			_g.ondurationchange.broadcast(delta);
			last_duration = cur_dur;
		});
	}
	,volumeChanged: function() {
		var _g = this;
		var last_vol = this.vid.volume;
		this.vid.addEventListener("volumechange",function() {
			var delta = [_g.vid.volume,last_vol];
			_g.onvolumechange.broadcast(delta);
			var data = _g.getState();
			_g.onstatechange.broadcast(data);
			_g.dispatch("volumechange",delta);
			last_vol = _g.vid.volume;
		});
	}
	,rateChanged: function() {
		var _g = this;
		var last_rate = this.vid.playbackRate;
		this.vid.addEventListener("ratechange",function() {
			var delta = [_g.vid.playbackRate,last_rate];
			_g.onratechange.broadcast(delta);
			var data = _g.getState();
			_g.onstatechange.broadcast(data);
			_g.dispatch("ratechange",delta);
			last_rate = _g.vid.playbackRate;
		});
	}
	,get_width: function() {
		return this.vid.width;
	}
	,set_width: function(v) {
		return this.vid.width = v;
	}
	,get_height: function() {
		return this.vid.height;
	}
	,set_height: function(v) {
		return this.vid.height = v;
	}
	,get_naturalWidth: function() {
		return this.vid.videoWidth;
	}
	,get_naturalHeight: function() {
		return this.vid.videoHeight;
	}
	,get_rect: function() {
		return new tannus_geom_CRectangle(0,0,this.vid.width,this.vid.height);
	}
	,get_src: function() {
		return Std.string(this.vid.currentSrc);
	}
	,set_src: function(v) {
		var _g = this;
		this.vid.src = v.toString();
		this.ready = false;
		this.onloadedmetadata.once(function() {
			_g.ready = true;
		});
		return this.get_src();
	}
	,get_duration: function() {
		return tannus_media_CDur.fromSecondsI(Math.floor(this.vid.duration));
	}
	,get_currentTime: function() {
		return this.vid.currentTime;
	}
	,set_currentTime: function(v) {
		return this.vid.currentTime = v;
	}
	,get_time: function() {
		return tannus_media_CDur.fromSecondsI(Math.floor(this.vid.currentTime));
	}
	,set_time: function(v) {
		this.vid.currentTime = 3600 * v.hours + 60 * v.minutes + v.seconds;
		return tannus_media_CDur.fromSecondsI(Math.floor(this.vid.currentTime));
	}
	,get_progress: function() {
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.vid.currentTime,this.vid.duration);
	}
	,set_progress: function(v) {
		this.vid.currentTime = this.vid.duration * (v / 100);
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.vid.currentTime,this.vid.duration);
	}
	,get_playbackRate: function() {
		return this.vid.playbackRate;
	}
	,set_playbackRate: function(v) {
		this.vid.playbackRate = v;
		this.vid.playbackRate = Math.round(this.vid.playbackRate * 100) / 100;
		return this.vid.playbackRate;
	}
	,get_paused: function() {
		return this.vid.paused;
	}
	,get_volume: function() {
		return this.vid.volume;
	}
	,set_volume: function(v) {
		return this.vid.volume = v < 0?0:v > 1?1:v;
	}
	,get_muted: function() {
		return this.vid.muted;
	}
	,set_muted: function(v) {
		return this.vid.muted = v;
	}
	,get_buffered: function() {
		return tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges(this.vid.buffered);
	}
	,get_played: function() {
		return tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges(this.vid.played);
	}
	,get_aspectRatio: function() {
		return new tannus_math_CRatio(this.vid.videoWidth,this.vid.videoHeight);
	}
	,vid: null
	,onload: null
	,onerror: null
	,onended: null
	,oncanplay: null
	,onplay: null
	,onpause: null
	,onprogress: null
	,onloadeddata: null
	,onloadedmetadata: null
	,onseekbegin: null
	,onseekend: null
	,ondurationchange: null
	,onvolumechange: null
	,onratechange: null
	,onstatechange: null
	,ready: null
	,__class__: gryffin_display_Video
	,__properties__: {get_aspectRatio:"get_aspectRatio",get_played:"get_played",get_buffered:"get_buffered",set_muted:"set_muted",get_muted:"get_muted",set_volume:"set_volume",get_volume:"get_volume",get_paused:"get_paused",set_playbackRate:"set_playbackRate",get_playbackRate:"get_playbackRate",set_progress:"set_progress",get_progress:"get_progress",set_time:"set_time",get_time:"get_time",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",get_duration:"get_duration",set_src:"set_src",get_src:"get_src",get_rect:"get_rect",get_naturalHeight:"get_naturalHeight",get_naturalWidth:"get_naturalWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
});
var bplayer_display_Video = function() {
	gryffin_display_Video.call(this);
	this.__activate();
};
$hxClasses["bplayer.display.Video"] = bplayer_display_Video;
bplayer_display_Video.__name__ = ["bplayer","display","Video"];
bplayer_display_Video.__super__ = gryffin_display_Video;
bplayer_display_Video.prototype = $extend(gryffin_display_Video.prototype,{
	__activate: function() {
		var e = js.JQuery(this.vid);
		e.appendTo("body");
		e.css("display","none");
	}
	,togglePlayback: function() {
		(this.vid.paused?$bind(this,this.play):$bind(this,this.pause))();
	}
	,__class__: bplayer_display_Video
});
var bplayer_ds_GallerySorters = function() { };
$hxClasses["bplayer.ds.GallerySorters"] = bplayer_ds_GallerySorters;
bplayer_ds_GallerySorters.__name__ = ["bplayer","ds","GallerySorters"];
bplayer_ds_GallerySorters.alphabetical = function(x,y) {
	return Reflect.compare(bplayer_core_media_GalleryTools.getTitle(x),bplayer_core_media_GalleryTools.getTitle(y));
};
var bplayer_sys_EnvironmentType = $hxClasses["bplayer.sys.EnvironmentType"] = { __ename__ : ["bplayer","sys","EnvironmentType"], __constructs__ : ["WebPage","ChromeApp"] };
bplayer_sys_EnvironmentType.WebPage = ["WebPage",0];
bplayer_sys_EnvironmentType.WebPage.toString = $estr;
bplayer_sys_EnvironmentType.WebPage.__enum__ = bplayer_sys_EnvironmentType;
bplayer_sys_EnvironmentType.ChromeApp = ["ChromeApp",1];
bplayer_sys_EnvironmentType.ChromeApp.toString = $estr;
bplayer_sys_EnvironmentType.ChromeApp.__enum__ = bplayer_sys_EnvironmentType;
var bplayer_sys_FileSystem = function() { };
$hxClasses["bplayer.sys.FileSystem"] = bplayer_sys_FileSystem;
bplayer_sys_FileSystem.__name__ = ["bplayer","sys","FileSystem"];
bplayer_sys_FileSystem.chooseFiles = function() {
	if(bplayer_System.get_isChromeApp()) return new tannus_ds_Promise(function(accept,reject) {
		var options = { acceptsMultiple : true};
		tannus_chrome_FileSystem.chooseEntry(options,function(raw_entries) {
			var entries = [];
			var _g = 0;
			while(_g < raw_entries.length) {
				var e = raw_entries[_g];
				++_g;
				if(e.isFile) entries.push(e);
			}
			accept(entries);
		});
	},null); else return new tannus_ds_Promise(function(accept1,reject1) {
		gryffin_Tools.defer(function() {
			accept1([]);
		});
	},null);
};
var gryffin_ui_Menu = function() {
	gryffin_core_Entity.call(this);
	this.rect = new tannus_geom_CRectangle(0,0,0,0);
	this.items = [];
	this.backgroundColor = tannus_graphics__$Color_TColor.fromString("#515147");
	this.orientation = false;
};
$hxClasses["gryffin.ui.Menu"] = gryffin_ui_Menu;
gryffin_ui_Menu.__name__ = ["gryffin","ui","Menu"];
gryffin_ui_Menu.__super__ = gryffin_core_Entity;
gryffin_ui_Menu.prototype = $extend(gryffin_core_Entity.prototype,{
	init: function(stage) {
		this._listen();
	}
	,item: function(options) {
		var i = new gryffin_ui_MenuItem(options);
		this.append(i);
		return i;
	}
	,append: function(child) {
		if(!Lambda.has(this.items,child)) {
			this.items.push(child);
			child.set_root(this);
		}
	}
	,render: function(s,c) {
		c.ctx.save();
		var lg = this.gradient(c);
		c.set_fillStyle(lg);
		c.fillRect(this.get_x(),this.get_y(),this.get_w(),this.get_h());
		var _g = 0;
		var _g1 = this.items;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			if(item.enabled) item.render(s,c);
		}
		c.ctx.restore();
	}
	,update: function(s) {
		gryffin_core_Entity.prototype.update.call(this,s);
		this.positionItems(s);
	}
	,gradient: function(c) {
		var amount = 8;
		var start = this.backgroundColor.lighten(amount - 2);
		var end = this.backgroundColor.darken(amount + 1);
		var tmp;
		var x0 = this.get_x();
		var y0 = this.get_y();
		var x1 = this.get_x();
		var y1 = this.get_y() + this.get_h();
		tmp = c.ctx.createLinearGradient(x0,y0,x1,y1);
		var lg = tmp;
		lg.addColorStop(0.0,start.toString());
		lg.addColorStop(1.0,end.toString());
		return lg;
	}
	,walk: function(list) {
		if(list == null) list = this.items;
		var results = [];
		var _g = 0;
		while(_g < list.length) {
			var item = list[_g];
			++_g;
			results.push(item);
			results = results.concat(this.walk(item.items));
		}
		return results;
	}
	,itemClicked: function(item) {
		if(!(!Lambda.empty(item.items))) {
			var _g = 0;
			var _g1 = this.walk();
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				i.set_showChildren(false);
			}
		}
	}
	,closeAll: function() {
		var _g = 0;
		var _g1 = this.items;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.close();
		}
	}
	,isAnyOpen: function() {
		var _g = 0;
		var _g1 = this.items;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.showChildren) return true;
		}
		return false;
	}
	,positionItems: function(s) {
		var ix = 10;
		var iy = 0;
		var itm = null;
		var maxw = 0;
		var _g = 0;
		var _g1 = this.items;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.update(s);
			itm = item;
			if(!item.enabled) continue;
			var _g2 = this.orientation;
			switch(_g2) {
			case false:
				ix += item.padding.left;
				item.set_x(this.get_x() + ix);
				item.set_y(this.get_y() + (this.get_h() - item.get_h()) / 2);
				var tmp;
				var a = item.get_w();
				if(a > maxw) tmp = a; else tmp = maxw;
				maxw = tmp;
				ix += item.get_w();
				ix += item.padding.right;
				break;
			case true:
				iy += item.padding.top;
				item.set_x(this.get_x() + ix + (this.get_w() - item.get_w()) / 2);
				item.set_y(this.get_y() + iy);
				var tmp1;
				var a1 = item.get_w();
				if(a1 > maxw) tmp1 = a1; else tmp1 = maxw;
				maxw = tmp1;
				iy += item.get_h();
				iy += item.padding.bottom;
				break;
			}
		}
		if(this.orientation == true && itm != null) {
			this.set_h(iy);
			this.set_w(maxw);
		}
	}
	,containsPoint: function(p) {
		var tmp;
		var _this = this.rect;
		var ox = p.get_x();
		var oy = p.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) tmp = oy < _this.y + _this.height; else tmp = false;
		} else tmp = false;
		return tmp;
	}
	,_listen: function() {
		var _g = this;
		this.stage.on("click",function(event) {
			if(!_g.containsPoint(event.position)) {
				var _g1 = 0;
				var _g2 = _g.items;
				while(_g1 < _g2.length) {
					var item = _g2[_g1];
					++_g1;
					if(item.hierarchyContainsPoint(event.position)) return;
				}
				_g.closeAll();
			}
		});
	}
	,get_x: function() {
		return this.rect.x;
	}
	,set_x: function(v) {
		return this.rect.x = v;
	}
	,get_y: function() {
		return this.rect.y;
	}
	,set_y: function(v) {
		return this.rect.y = v;
	}
	,get_w: function() {
		return this.rect.width;
	}
	,set_w: function(v) {
		return this.rect.width = v;
	}
	,get_h: function() {
		return this.rect.height;
	}
	,set_h: function(v) {
		return this.rect.height = v;
	}
	,get_pos: function() {
		var _g = this;
		var tmp;
		var x = new tannus_io__$Pointer_Ref(function() {
			return _g.get_x();
		},function(v) {
			return _g.set_x(v);
		});
		var y = new tannus_io__$Pointer_Ref(function() {
			return _g.get_y();
		},function(v1) {
			return _g.set_y(v1);
		});
		tmp = new tannus_geom_LinkedPoint(x,y,null);
		return tmp;
	}
	,rect: null
	,items: null
	,backgroundColor: null
	,orientation: null
	,__class__: gryffin_ui_Menu
	,__properties__: $extend(gryffin_core_Entity.prototype.__properties__,{get_pos:"get_pos",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"})
});
var bplayer_ui_AppMenu = function(p) {
	gryffin_ui_Menu.call(this);
	this.player = p;
	this.win = chrome_Windows.lib.current();
	this.box = new gryffin_display_TextBox();
	this.box.set_fontFamily("Ubuntu");
	this.box.set_fontSize(11);
	this.box.set_color(tannus_graphics__$Color_TColor.fromString("#FFFFFF"));
	this.mx = 0;
};
$hxClasses["bplayer.ui.AppMenu"] = bplayer_ui_AppMenu;
bplayer_ui_AppMenu.__name__ = ["bplayer","ui","AppMenu"];
bplayer_ui_AppMenu.__super__ = gryffin_ui_Menu;
bplayer_ui_AppMenu.prototype = $extend(gryffin_ui_Menu.prototype,{
	init: function(stage) {
		gryffin_ui_Menu.prototype.init.call(this,stage);
	}
	,update: function(stage) {
		gryffin_ui_Menu.prototype.update.call(this,stage);
		this.set_w(stage.canvas.canvas.width);
		this.set_h(28);
		this.box.set_text(this.win.contentWindow.document.title);
		this.box.autoScale(null,this.get_h() - 7);
		var higherPriority = stage.get("[priority > " + this.priority + "]").selected;
		if(!Lambda.empty(higherPriority)) {
			var highest = tannus_ds_ArrayTools.max(higherPriority,function(val) {
				return val.priority;
			}).priority;
			this.priority = highest + 1;
		}
		var mp = stage.getMousePosition();
		this.hovered = mp != null && this.containsPoint(mp);
	}
	,render: function(stage,c) {
		c.ctx.save();
		var lg = this.gradient(c);
		c.set_fillStyle(lg);
		c.fillRect(this.get_x(),this.get_y(),this.get_w(),this.get_h());
		if(!(!(this.hovered || this.isAnyOpen()))) {
			var _g = 0;
			var _g1 = this.items;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				if(item.enabled) item.render(stage,c);
			}
		} else {
			var by = this.get_y() + (this.get_h() - this.box.get_height()) / 2;
			c.drawComponent(this.box,0,0,this.box.get_width(),this.box.get_height(),this.get_x() + 10,by,this.box.get_width(),this.box.get_height());
		}
		c.ctx.restore();
	}
	,positionItems: function(s) {
		gryffin_ui_Menu.prototype.positionItems.call(this,s);
		var _g = 0;
		var _g1 = this.items;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			var tmp;
			var a = this.mx;
			var b = item.get_x() + item.get_w();
			if(a > b) tmp = a; else tmp = b;
			this.mx = tmp;
		}
	}
	,get_hideMenu: function() {
		return false;
	}
	,get_showTitle: function() {
		return !(this.hovered || this.isAnyOpen());
	}
	,win: null
	,player: null
	,box: null
	,hovered: null
	,mx: null
	,__class__: bplayer_ui_AppMenu
	,__properties__: $extend(gryffin_ui_Menu.prototype.__properties__,{get_showTitle:"get_showTitle",get_hideMenu:"get_hideMenu"})
});
var tannus_html_Elementable = function() { };
$hxClasses["tannus.html.Elementable"] = tannus_html_Elementable;
tannus_html_Elementable.__name__ = ["tannus","html","Elementable"];
tannus_html_Elementable.prototype = {
	toElement: null
	,__class__: tannus_html_Elementable
};
var foundation_WidgetAsset = function() { };
$hxClasses["foundation.WidgetAsset"] = foundation_WidgetAsset;
foundation_WidgetAsset.__name__ = ["foundation","WidgetAsset"];
foundation_WidgetAsset.__interfaces__ = [tannus_ds_Destructible];
foundation_WidgetAsset.prototype = {
	activate: null
	,__class__: foundation_WidgetAsset
};
var foundation_Widget = function() {
	this._built = false;
	this._active = false;
	this.parentElement = null;
	this.parentWidget = null;
	var _g = this;
	tannus_io_EventDispatcher.call(this);
	this.__checkEvents = false;
	this.set_el(null);
	this.styles = new foundation_Styles(new tannus_io__$Pointer_Ref(function() {
		return _g.el;
	},function(v) {
		return _g.set_el(v);
	}));
	this.assets = [];
	this.set_uid("wi-" + tannus_ds_Memory.allocRandomId(6));
};
$hxClasses["foundation.Widget"] = foundation_Widget;
foundation_Widget.__name__ = ["foundation","Widget"];
foundation_Widget.__interfaces__ = [tannus_html_Elementable,foundation_WidgetAsset];
foundation_Widget.__super__ = tannus_io_EventDispatcher;
foundation_Widget.prototype = $extend(tannus_io_EventDispatcher.prototype,{
	attach: function(asset) {
		this.assets.push(asset);
	}
	,destroy: function() {
		var _g = 0;
		var _g1 = this.assets;
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			x.destroy();
		}
		if(this.el != null) this.el.remove();
	}
	,toElement: function() {
		return this.el;
	}
	,'is': function(selector) {
		if(this.el == null) return false; else return this.el["is"](selector);
	}
	,engage: function() {
		tannus_html__$Element_Element_$Impl_$.plugin(this.el,"foundation");
	}
	,reflow: function() {
		window.Foundation.reInit(this.el);
	}
	,activate: function() {
		this._active = true;
		var _g = 0;
		var tmp;
		var tmp1;
		var jq = this.toElement().children();
		tmp1 = js.JQuery(jq);
		var this1 = tmp1;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = this1.length;
		while(_g21 < _g11) {
			var i = _g21++;
			var tmp2;
			var jq1 = this1.get(i);
			tmp2 = js.JQuery(jq1);
			_g2.push(tmp2);
		}
		tmp = _g2;
		var _g1 = tmp;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			try {
				var w = e.data("haxe-foundation-widget");
				if(w != null && !w._active) w.activate();
			} catch( error ) {
				if (error instanceof js__$Boot_HaxeError) error = error.val;
				window.console.error(error);
			}
		}
		this.dispatch("activate",this);
	}
	,build: function() {
		this.__ibuild();
	}
	,populate: function() {
	}
	,__ibuild: function() {
		this.populate();
		this._built = true;
		this.dispatch("build",this);
	}
	,appendTo: function(parent) {
		if(js_Boot.__instanceof(parent,foundation_Widget)) {
			var par = parent;
			par.append(this);
		} else {
			var par1 = js.JQuery(parent);
			par1.append(this.toElement());
			this.parentElement = par1;
			this.parentWidget = null;
		}
		this.__ac();
	}
	,append: function(child) {
		this._attach(child,function(l,r) {
			l.append(r);
		});
	}
	,prepend: function(child) {
		this._attach(child,function(l,r) {
			l.prepend(r);
		});
	}
	,after: function(tail) {
		this._attach(tail,function(l,r) {
			l.after(r);
		});
	}
	,before: function(head) {
		this._attach(head,function(l,r) {
			l.before(r);
		});
	}
	,_attach: function(child,attacher) {
		if(js_Boot.__instanceof(child,foundation_Widget)) this._attachWidget(child,attacher); else {
			var ch = js.JQuery(child);
			var tmp;
			var this1 = tannus_html__$Element_Element_$Impl_$.get_edata(ch);
			var key = tannus_ds_StringUtils.toCamelCase("haxe-foundation-widget");
			var this2 = this1().data();
			var tmp1;
			var tmp2;
			if(this2 == null) tmp1 = null; else if(this2.__properties__ && (tmp2 = this2.__properties__["get_" + key])) tmp1 = this2[tmp2](); else tmp1 = this2[key];
			tmp = tmp1;
			var hwd = tmp;
			if(hwd != null && js_Boot.__instanceof(hwd,foundation_Widget)) this._attachWidget(hwd,attacher); else this._attachElement(ch,attacher);
		}
		this.__ac();
	}
	,_attachWidget: function(child,attacher) {
		attacher(this.toElement(),child.toElement());
		this.attach(child);
		child.parentWidget = this;
		child.parentElement = this.toElement();
		if(this._active) child.activate();
	}
	,_attachElement: function(child,attacher) {
		attacher(this.toElement(),child);
	}
	,parentOf: function(child) {
		if(js_Boot.__instanceof(child,foundation_Widget)) {
			var cw = child;
			return cw.el.closest(this.el).length > 0;
		} else {
			var ce = js.JQuery(child);
			return ce.closest(this.el).length > 0;
		}
	}
	,childOf: function(parent) {
		if(js_Boot.__instanceof(parent,foundation_Widget)) return (js_Boot.__cast(parent , foundation_Widget)).parentOf(parent); else {
			var tmp;
			var this1 = js.JQuery(parent);
			tmp = this.el.closest(this1).length > 0;
			return tmp;
		}
	}
	,insertAt: function(child,index) {
		if(!this.parentOf(child)) this.append(child);
		if(js_Boot.__instanceof(child,foundation_Widget)) tannus_html__$Element_Element_$Impl_$.index(this.el,(js_Boot.__cast(child , foundation_Widget)).toElement(),index); else {
			var tmp;
			var tmp1;
			var this1 = js.JQuery(child);
			tmp1 = this1.get(0);
			var el = tmp1;
			tmp = js.JQuery(el);
			tannus_html__$Element_Element_$Impl_$.index(this.el,tmp,index);
		}
	}
	,replaceChild: function(child,repl) {
		if(this.parentOf(child)) {
			if(js_Boot.__instanceof(repl,foundation_Widget)) {
				var rw = repl;
				child.el.replaceWith(rw.el);
			} else child.el.replaceWith(js.JQuery(repl));
		}
	}
	,replaceWith: function(repl) {
		if(this.parentWidget != null) this.parentWidget.replaceChild(this,repl);
	}
	,animate: function(properties,options) {
		var o = options;
		this.el.animate(properties,{ duration : o.duration, easing : o.easing, queue : o.queue, step : function(now,tween) {
			if(o.step != null) ((function($this) {
				var $r;
				var this1 = o.step;
				$r = this1 != null?this1:this1;
				return $r;
			}(this)))(now);
		}, complete : function() {
			if(o.complete != null) ((function($this) {
				var $r;
				var this2 = o.complete;
				$r = this2 != null?this2:this2;
				return $r;
			}(this)))();
		}, progress : function(anim,progress,remaining) {
			if(o.progress != null) ((function($this) {
				var $r;
				var this3 = o.progress;
				$r = this3 != null?this3:this3;
				return $r;
			}(this)))(progress,remaining);
		}});
	}
	,parentWidgetUntil: function(test) {
		if(this.parentWidget != null) {
			var pw = this.parentWidget;
			if(test(pw)) return pw; else return pw.parentWidgetUntil(test);
		} else return null;
	}
	,parentElementUntil: function(test) {
		var t = this.el.parent();
		while(t.length > 0) {
			if(test(t)) return t;
			t = t.parent();
		}
		return null;
	}
	,rect: function(r) {
		if(r == null) {
			var rr = this.el.get(0).getBoundingClientRect();
			return new tannus_geom_CRectangle(rr.left,rr.top,rr.width,rr.height);
		} else {
			this.pos(new tannus_geom_TPoint(r.x,r.y,r.z));
			var tmp;
			var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
			tmp = this1.set("width",r.width + "px");
			var x = tmp;
			parseFloat(x);
			var tmp1;
			var this2 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
			tmp1 = this2.set("height",r.height + "px");
			var x1 = tmp1;
			parseFloat(x1);
			return this.rect();
		}
	}
	,pos: function(p) {
		if(p == null) {
			var r = this.el.get(0).getBoundingClientRect();
			return new tannus_geom_TPoint(r.left,r.top,0);
		} else {
			var _this = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
			var o = { 'left' : p.get_x() + "px", 'top' : p.get_y() + "px"};
			_this.applyObject(o);
			return this.pos();
		}
	}
	,get_css_property: function(name) {
		var tmp;
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		tmp = this1.get(name);
		return tmp;
	}
	,gcp: function(n) {
		var tmp;
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		tmp = this1.get(n);
		return tmp;
	}
	,gcp_float: function(n) {
		var tmp;
		var tmp2;
		var this2 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		tmp2 = this2.get(n);
		var this1 = tmp2;
		tmp = this1 != null;
		var tmp1;
		if(tmp) {
			var tmp3;
			var this2 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
			tmp3 = this2.get(n);
			var x = tmp3;
			tmp1 = parseFloat(x);
		} else tmp1 = null;
		return tmp1;
	}
	,gcp_int: function(n) {
		var tmp;
		var tmp2;
		var this2 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		tmp2 = this2.get(n);
		var this1 = tmp2;
		tmp = this1 != null;
		var tmp1;
		if(tmp) {
			var tmp3;
			var this2 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
			tmp3 = this2.get(n);
			tmp1 = Std.parseInt(tmp3);
		} else tmp1 = null;
		return tmp1;
	}
	,set_css_property: function(name,value) {
		var tmp;
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		tmp = this1.set(name,value);
		return tmp;
	}
	,scp: function(n,v) {
		var tmp;
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		tmp = this1.set(n,v);
		return tmp;
	}
	,scp_float: function(n,v,unit) {
		if(unit == null) unit = "px";
		var tmp;
		var tmp1;
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		tmp1 = this1.set(n,v + unit);
		var x = tmp1;
		tmp = parseFloat(x);
		return tmp;
	}
	,scp_int: function(n,v,unit) {
		if(unit == null) unit = "px";
		var tmp;
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		tmp = this1.set(n,v + unit);
		return Std.parseInt(tmp);
	}
	,addClass: function(name) {
		this.el.addClass(name);
	}
	,addClasses: function(names) {
		Lambda.iter(names,$bind(this,this.addClass));
	}
	,removeClass: function(name) {
		this.el.removeClass(name);
	}
	,toggleClass: function(name) {
		this.el.toggleClass(name);
	}
	,classes: function() {
		var tmp;
		var this1 = this.el.attr("class");
		tmp = this1 != null;
		return tmp?this.el.attr("class").split(" "):[];
	}
	,meta: function(name,value) {
		if(value == null) return this.el.data(name); else {
			this.el.data(name,value);
			return value;
		}
	}
	,forwardEvent: function(name,src,trans) {
		var _g = this;
		if(src == null) src = this.el;
		if(trans == null) trans = function(x) {
			return x;
		};
		src.on(name,function(raw_event) {
			var event = trans(raw_event);
			_g.dispatch(name,event);
		});
	}
	,unforwardEvent: function(name,src) {
		if(src == null) src = this.el;
		src.unbind(name);
	}
	,forwardEvents: function(names,src,trans) {
		var _g = 0;
		while(_g < names.length) {
			var n = names[_g];
			++_g;
			this.forwardEvent(n,src,trans);
		}
	}
	,onactivate: function(f) {
		if(this._active) window.requestAnimationFrame(f); else this.once("activated",f);
	}
	,__bindElement: function(e) {
		var this1 = tannus_html__$Element_Element_$Impl_$.get_edata(e);
		var key = tannus_ds_StringUtils.toCamelCase("haxe-foundation-widget");
		var this2 = this1().data();
		var tmp2;
		if(this2.__properties__ && (tmp2 = this2.__properties__["set_" + key])) this2[tmp2](this); else this2[key] = this;
		var tmp1;
		var tmp3;
		if(this2 == null) tmp1 = null; else if(this2.__properties__ && (tmp3 = this2.__properties__["get_" + key])) tmp1 = this2[tmp3](); else tmp1 = this2[key];
		tmp1;
		var tmp;
		var this3 = tannus_html__$Element_Element_$Impl_$.get_attributes(e);
		var tmp4;
		var this4 = this3();
		tmp4 = this4.get(0);
		tmp = tmp4.hasAttribute("id");
		if(!tmp) tannus_html__$Element_Element_$Impl_$.set(e,"id",this.uid);
	}
	,elementWidget: function(e) {
		var tmp;
		var this1 = tannus_html__$Element_Element_$Impl_$.get_edata(e);
		var key = tannus_ds_StringUtils.toCamelCase("haxe-foundation-widget");
		var this2 = this1().data();
		var tmp1;
		var tmp2;
		if(this2 == null) tmp1 = null; else if(this2.__properties__ && (tmp2 = this2.__properties__["get_" + key])) tmp1 = this2[tmp2](); else tmp1 = this2[key];
		tmp = tmp1;
		return tmp;
	}
	,nearestWidget: function(ee) {
		var e = ee;
		while(e != null) {
			var tmp;
			var this1 = tannus_html__$Element_Element_$Impl_$.get_edata(e);
			var key = tannus_ds_StringUtils.toCamelCase("haxe-foundation-widget");
			var this2 = this1().data();
			var tmp1;
			var tmp2;
			if(this2 == null) tmp1 = null; else if(this2.__properties__ && (tmp2 = this2.__properties__["get_" + key])) tmp1 = this2[tmp2](); else tmp1 = this2[key];
			tmp = tmp1;
			var ew = tmp;
			if(ew != null) return ew; else {
				e = e.parent();
				continue;
			}
		}
		return null;
	}
	,__ac: function() {
		var tmp;
		var other = js.JQuery("html");
		tmp = this.el.closest(other).length > 0;
		if(tmp && !this._active) this.activate();
	}
	,get_d: function() {
		var tmp;
		var this1 = window;
		tmp = this1.document;
		return tmp;
	}
	,get_doc: function() {
		var tmp;
		var tmp1;
		var this1 = window;
		tmp1 = this1.document;
		var jq = tmp1;
		tmp = js.JQuery(jq);
		return tmp;
	}
	,get_text: function() {
		return this.el.text();
	}
	,set_text: function(nt) {
		var tmp;
		var this1 = this.el;
		this1.text(nt);
		tmp = this1.text();
		return tmp;
	}
	,get_width: function() {
		return this.el.width() + 0.0;
	}
	,set_width: function(nw) {
		var tmp;
		var this1 = this.el;
		this1.width(Math.round(nw));
		tmp = this1.width() + 0.0;
		return tmp;
	}
	,get_height: function() {
		return this.el.height() + 0.0;
	}
	,set_height: function(nh) {
		var tmp;
		var this1 = this.el;
		this1.height(Math.round(nh));
		tmp = this1.height() + 0.0;
		return tmp;
	}
	,get_css: function() {
		return tannus_html__$Element_Element_$Impl_$.get_style(this.el);
	}
	,el: null
	,set_el: function(v) {
		this.el = v;
		return this.el;
	}
	,uid: null
	,set_uid: function(v) {
		this.uid = v;
		if(this.el != null) tannus_html__$Element_Element_$Impl_$.set(this.el,"id",this.uid);
		return this.uid;
	}
	,assets: null
	,styles: null
	,parentWidget: null
	,parentElement: null
	,_active: null
	,_built: null
	,__class__: foundation_Widget
	,__properties__: {set_uid:"set_uid",set_el:"set_el",get_css:"get_css",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_text:"set_text",get_text:"get_text",get_doc:"get_doc",get_d:"get_d"}
});
var foundation_Pane = function() {
	foundation_Widget.call(this);
	this.set_el(js.JQuery("<div></div>"));
};
$hxClasses["foundation.Pane"] = foundation_Pane;
foundation_Pane.__name__ = ["foundation","Pane"];
foundation_Pane.__super__ = foundation_Widget;
foundation_Pane.prototype = $extend(foundation_Widget.prototype,{
	__class__: foundation_Pane
});
var foundation_FlexPane = function() {
	foundation_Pane.call(this);
	this.addClass("columns");
	this._columnManager = new foundation_FlexColumnSizing(this);
};
$hxClasses["foundation.FlexPane"] = foundation_FlexPane;
foundation_FlexPane.__name__ = ["foundation","FlexPane"];
foundation_FlexPane.__super__ = foundation_Pane;
foundation_FlexPane.prototype = $extend(foundation_Pane.prototype,{
	getColumns: function(n) {
		return this._columnManager.sizeManager(n).get_size();
	}
	,setColumns: function(c,n) {
		return this._columnManager.sizeManager(n).set_size(c);
	}
	,get_columns: function() {
		return this._columnManager;
	}
	,_columnManager: null
	,__class__: foundation_FlexPane
	,__properties__: $extend(foundation_Pane.prototype.__properties__,{get_columns:"get_columns"})
});
var bplayer_ui_GalleryEntryView = function(e) {
	this.row = null;
	foundation_FlexPane.call(this);
	this.entry = e;
	this.build();
};
$hxClasses["bplayer.ui.GalleryEntryView"] = bplayer_ui_GalleryEntryView;
bplayer_ui_GalleryEntryView.__name__ = ["bplayer","ui","GalleryEntryView"];
bplayer_ui_GalleryEntryView.__super__ = foundation_FlexPane;
bplayer_ui_GalleryEntryView.prototype = $extend(foundation_FlexPane.prototype,{
	populate: function() {
		this.addClass("gallery-block");
		this.image = new foundation_Image();
		this.image.addClass("thumb");
		this.image.el.get(0).src = "../assets/icons/video.svg";
		this.append(this.image);
		var title = new foundation_Span();
		title.addClass("title");
		title.set_text(bplayer_core_media_GalleryTools.getTitle(this.entry));
		this.append(title);
		tannus_html__$Element_Element_$Impl_$.set(this.el,"title",bplayer_core_media_GalleryTools.getTitle(this.entry));
		tannus_html__$Element_Element_$Impl_$.plugin(this.el,"tooltip");
		this.forwardEvents(["click"],null,tannus_events_MouseEvent.fromJqEvent);
		this.on("click",$bind(this,this.onclick));
	}
	,onclick: function(event) {
		var _g = this;
		if(Lambda.has(event.emods,"ctrl")) this.toggleSelected(); else if(Lambda.has(event.emods,"shift")) {
			var gv = this.parentWidgetUntil(function(_) {
				return js_Boot.__instanceof(_,bplayer_ui_GalleryView);
			});
			var selectedEntries = gv.getSelectedEntryViews();
			var index = HxOverrides.indexOf(this.row.galleryView.rows,this.row,0) + HxOverrides.indexOf(this.row.entryViews,this,0);
			if(Lambda.empty(selectedEntries)) return; else {
				var tmp;
				var _this = selectedEntries[0];
				tmp = HxOverrides.indexOf(_this.row.galleryView.rows,_this.row,0) + HxOverrides.indexOf(_this.row.entryViews,_this,0);
				var firstIndex = tmp;
				var tmp1;
				var _this1 = selectedEntries[selectedEntries.length - 1];
				tmp1 = HxOverrides.indexOf(_this1.row.galleryView.rows,_this1.row,0) + HxOverrides.indexOf(_this1.row.entryViews,_this1,0);
				var lastIndex = tmp1;
				var range = null;
				if(index < firstIndex) range = gv.entries(index,firstIndex); else if(index > lastIndex) range = gv.entries(lastIndex,index); else return;
				if(range != null) {
					while( range.hasNext() ) {
						var entry = range.next();
						entry.toggleSelected();
					}
				}
			}
		} else {
			var app = BPlayer.instance;
			if(this.get_selected()) {
				var gv1 = this.parentWidgetUntil(function(_1) {
					return js_Boot.__instanceof(_1,bplayer_ui_GalleryView);
				});
				var selection = gv1.getSelection();
				app.openPlayer(function() {
					var player = app.getPlayer();
					player.onready(function() {
						selection.play(player);
					});
				});
			} else app.openPlayer(function() {
				var player1 = app.getPlayer();
				player1.onready(function() {
					player1.clear();
					{
						var _g1 = _g.entry;
						switch(_g1[1]) {
						case 0:
							var media = _g1[2];
							player1.addMedia(media);
							break;
						default:
							player1.back();
						}
					}
				});
				var this1 = window;
				var self = tannus_ds_CObj.create(this1);
				var val = player1;
				self.set("player",val);
			});
		}
	}
	,toggleSelected: function() {
		var options = { duration : 250, children : true, complete : function() {
			console.log("bitch");
		}};
		tannus_html__$Element_Element_$Impl_$.plugin(this.el,"toggleClass",["selected",options]);
	}
	,setSelected: function(value) {
		var options = { duration : 250, children : true, complete : function() {
			console.log("bitch");
		}};
		var action = (value?"add":"remove") + "Class";
		tannus_html__$Element_Element_$Impl_$.plugin(this.el,action,["selected",options]);
	}
	,getIndex: function() {
		return HxOverrides.indexOf(this.row.galleryView.rows,this.row,0) + HxOverrides.indexOf(this.row.entryViews,this,0);
	}
	,get_selected: function() {
		return this["is"](".selected");
	}
	,set_selected: function(v) {
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("selected");
		return this.get_selected();
	}
	,entry: null
	,image: null
	,row: null
	,__class__: bplayer_ui_GalleryEntryView
	,__properties__: $extend(foundation_FlexPane.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected"})
});
var crayon_PageController = function() {
	this.page = null;
};
$hxClasses["crayon.PageController"] = crayon_PageController;
crayon_PageController.__name__ = ["crayon","PageController"];
crayon_PageController.prototype = {
	attach: function(p) {
		this.page = p;
	}
	,detach: function(p) {
		this.page = null;
	}
	,page: null
	,__class__: crayon_PageController
};
var bplayer_ui_KeyControls = function() {
	crayon_PageController.call(this);
};
$hxClasses["bplayer.ui.KeyControls"] = bplayer_ui_KeyControls;
bplayer_ui_KeyControls.__name__ = ["bplayer","ui","KeyControls"];
bplayer_ui_KeyControls.__super__ = crayon_PageController;
bplayer_ui_KeyControls.prototype = $extend(crayon_PageController.prototype,{
	attach: function(p) {
		crayon_PageController.prototype.attach.call(this,p);
		this.bind();
	}
	,bind: function() {
		this.page.body.forwardEvent("keyup",null,tannus_events_KeyboardEvent.fromJqEvent);
		this.page.body.forwardEvent("keydown",null,tannus_events_KeyboardEvent.fromJqEvent);
		this.page.body.on("keydown",$bind(this,this.handleKey));
		this.page.body.on("keyup",$bind(this,this.handleKey));
	}
	,detach: function(p) {
		this.unbind();
		crayon_PageController.prototype.detach.call(this,p);
	}
	,unbind: function() {
		this.page.body.unforwardEvent("keyup");
		this.page.body.unforwardEvent("keydown");
		this.page.body.off("keyup");
		this.page.body.off("keydown");
	}
	,handleKey: function(event) {
	}
	,ignore: function(event) {
		return false;
	}
	,__class__: bplayer_ui_KeyControls
});
var bplayer_ui_GalleryKeyControls = function() {
	bplayer_ui_KeyControls.call(this);
};
$hxClasses["bplayer.ui.GalleryKeyControls"] = bplayer_ui_GalleryKeyControls;
bplayer_ui_GalleryKeyControls.__name__ = ["bplayer","ui","GalleryKeyControls"];
bplayer_ui_GalleryKeyControls.__super__ = bplayer_ui_KeyControls;
bplayer_ui_GalleryKeyControls.prototype = $extend(bplayer_ui_KeyControls.prototype,{
	handleKey: function(event) {
		if(this.ignore(event)) return; else if(event.type == "keydown") {
			var _g = event.key;
			switch(_g) {
			case 65:
				if(event.ctrlKey) this.page.galleryView.toggleSelectedForAll(); else return;
				break;
			case 13:case 32:
				var sel = this.page.galleryView.getSelection();
				if(!Lambda.empty(sel.tracks)) sel.play(BPlayer.instance.getPlayer());
				break;
			case 79:
				if(event.ctrlKey) {
					if(event.shiftKey) BPlayer.instance.chooseNewSourceFolder(function() {
						return;
					}); else BPlayer.instance.openPlayer(function() {
						BPlayer.instance.getPlayer().openUserSelectedFiles(function(anyOpened) {
							if(!anyOpened) BPlayer.instance.getPlayer().back();
						});
					});
				} else return;
				break;
			default:
				return;
			}
		} else return;
	}
	,get_gv: function() {
		return this.page.galleryView;
	}
	,get_app: function() {
		return BPlayer.instance;
	}
	,get_player: function() {
		return BPlayer.instance.getPlayer();
	}
	,__class__: bplayer_ui_GalleryKeyControls
	,__properties__: {get_player:"get_player",get_app:"get_app",get_gv:"get_gv"}
});
var crayon_Page = function() {
	this.opened = false;
	this.previousPage = null;
	foundation_Pane.call(this);
	this.body = null;
	this.set_title("");
	this.attachments = [];
};
$hxClasses["crayon.Page"] = crayon_Page;
crayon_Page.__name__ = ["crayon","Page"];
crayon_Page.__super__ = foundation_Pane;
crayon_Page.prototype = $extend(foundation_Pane.prototype,{
	open: function(body) {
		if(!this.opened) this.opened = true;
		this.body = body;
		this.set_active(true);
	}
	,reopen: function(body) {
		this.body = body;
		this.set_active(true);
	}
	,close: function() {
		this.destroy();
		this.set_active(false);
	}
	,back: function() {
		if(this.previousPage != null) this.body.open(this.previousPage);
	}
	,attachController: function(c) {
		this.attachments.push(c);
		c.attach(this);
	}
	,detachController: function(c) {
		HxOverrides.remove(this.attachments,c);
		c.detach(this);
	}
	,get_active: function() {
		return this["is"](".active");
	}
	,set_active: function(v) {
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("active");
		return this["is"](".active");
	}
	,title: null
	,set_title: function(v) {
		var r = this.title = v;
		if(this.body != null) this.body.application.title = this.title;
		return r;
	}
	,body: null
	,previousPage: null
	,opened: null
	,attachments: null
	,__class__: crayon_Page
	,__properties__: $extend(foundation_Pane.prototype.__properties__,{set_title:"set_title",set_active:"set_active",get_active:"get_active"})
});
var bplayer_ui_GalleryPage = function(g,d) {
	this.ready = false;
	this.scrollPos = null;
	var _g = this;
	crayon_Page.call(this);
	this.data = d;
	this.gallery = g;
	this.galleryView = null;
	this.player = null;
	this.playerPage = null;
	this.readyEvent = new tannus_io_VoidSignal();
	this.readyEvent.once(function() {
		_g.ready = true;
	});
	this.keyControls = new bplayer_ui_GalleryKeyControls();
	bplayer_ui_GalleryPage.instance = this;
};
$hxClasses["bplayer.ui.GalleryPage"] = bplayer_ui_GalleryPage;
bplayer_ui_GalleryPage.__name__ = ["bplayer","ui","GalleryPage"];
bplayer_ui_GalleryPage.getInstance = function() {
	return bplayer_ui_GalleryPage.instance;
};
bplayer_ui_GalleryPage.__super__ = crayon_Page;
bplayer_ui_GalleryPage.prototype = $extend(crayon_Page.prototype,{
	open: function(body) {
		crayon_Page.prototype.open.call(this,body);
		this.addGalleryView(this.gallery);
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		this1.set("overflow-y","scroll");
		body.forwardEvent("resize");
		body.on("resize",$bind(this,this.onresize));
		this.onresize(null);
		this.attachController(this.keyControls);
	}
	,reopen: function(body) {
		crayon_Page.prototype.reopen.call(this,body);
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		this1.set("display","block");
		this.onresize(null);
		if(this.scrollPos != null) this.el.scrollTop(this.scrollPos.d.get(1));
	}
	,close: function() {
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		this1.set("display","none");
		this.set_active(false);
	}
	,onready: function(callback) {
		if(!this.ready) window.requestAnimationFrame(callback); else this.readyEvent.once(callback);
	}
	,addGalleryView: function(g) {
		this.addButton();
		if(g == null) this.gallery = g;
		if(this.galleryView != null) {
			this.galleryView.destroy();
			this.galleryView = null;
		}
		this.galleryView = new bplayer_ui_GalleryView(this,this.gallery);
		this.append(this.galleryView);
		this.galleryView.onready(($_=this.readyEvent,$bind($_,$_.fire)));
	}
	,addButton: function() {
		var choose = new foundation_Button("Add Source Folder");
		choose.addClass("expanded");
		choose["is"]("." + "expanded");
		var c = tannus_html__$Element_Element_$Impl_$.get_style(choose.el);
		c.applyObject({ 'text-align' : "center", 'display' : "block"});
		this.append(choose);
		choose.on("click",function(event) {
			BPlayer.instance.chooseNewSourceFolder(function() {
				console.log("fuck my ass");
			});
		});
	}
	,onresize: function(event) {
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		var value = this.body.get_height() + "px";
		this1.set("max-height",value);
		console.log([this.body.get_width(),this.body.get_height()]);
	}
	,onscroll: function(event) {
		this.scrollPos = new tannus_geom2_Point(this.el.scrollLeft(),this.el.scrollTop());
	}
	,data: null
	,gallery: null
	,galleryView: null
	,keyControls: null
	,player: null
	,playerPage: null
	,scrollPos: null
	,ready: null
	,readyEvent: null
	,__class__: bplayer_ui_GalleryPage
});
var bplayer_ui_GalleryView = function(p,g) {
	this.ready = false;
	var _g = this;
	foundation_Pane.call(this);
	this.gallery = g;
	this.page = p;
	this.rows = [];
	this.styled = false;
	this.readyEvent = new tannus_io_VoidSignal();
	this.readyEvent.once(function() {
		_g.ready = true;
	});
	this.build();
};
$hxClasses["bplayer.ui.GalleryView"] = bplayer_ui_GalleryView;
bplayer_ui_GalleryView.__name__ = ["bplayer","ui","GalleryView"];
bplayer_ui_GalleryView.__super__ = foundation_Pane;
bplayer_ui_GalleryView.prototype = $extend(foundation_Pane.prototype,{
	onready: function(callback) {
		if(this.ready) gryffin_Tools.defer(callback); else this.readyEvent.once(callback);
	}
	,populate: function() {
		if(!this.styled) {
			this._style();
			this.styled = true;
		}
		var row;
		var _g_g = this.gallery;
		var _g_i = 0;
		while(_g_i < _g_g.entries.length) {
			var entry = _g_g.getEntry(_g_i++);
			if(Lambda.empty(this.rows) || row.entries.get_full()) {
				row = new bplayer_ui_GalleryViewRow(this);
				this.addRow(row);
				console.log(row);
			}
			row.addEntry(entry);
		}
		this.readyEvent.call();
	}
	,addRow: function(row) {
		this.rows.push(row);
		this.append(row);
	}
	,_style: function() {
		tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		this.addClass("gallery-main");
	}
	,getEntryByIndex: function(index) {
		var row = this.rows[index / 4 | 0];
		if(row != null) return row.entryViews[index % 4 | 0]; else return null;
	}
	,getEntrySlice: function(start,end) {
		var results = [];
		var _g = start;
		while(_g < end) {
			var i = _g++;
			results.push(this.getEntryByIndex(i));
		}
		return results;
	}
	,getSelectedEntryViews: function() {
		var sev = [];
		var _g = 0;
		var _g1 = this.rows;
		while(_g < _g1.length) {
			var row = _g1[_g];
			++_g;
			var _g3 = 0;
			var _g2 = row.entries.get_length();
			while(_g3 < _g2) {
				var index = _g3++;
				var entry = row.panes[index];
				if(entry.get_selected()) sev.push(entry);
			}
		}
		return sev;
	}
	,getSelection: function() {
		return new bplayer_core_media_Selection(this.getSelectedEntryViews().map(function(_) {
			return bplayer_core_media_MediaTools.getProvider(_.entry);
		}));
	}
	,setSelectedForAll: function(value) {
		var _g = this.entries();
		while(true) {
			var tmp;
			var _this = _g.ii;
			tmp = _this.min < _this.max;
			if(!tmp) break;
			var e = _g.g.getEntryByIndex(_g.ii.min++);
			e.setSelected(value);
		}
	}
	,selectAll: function() {
		this.setSelectedForAll(true);
	}
	,deselectAll: function() {
		this.setSelectedForAll(false);
	}
	,toggleSelectedForAll: function() {
		var _g = this.entries();
		while(true) {
			var tmp;
			var _this = _g.ii;
			tmp = _this.min < _this.max;
			if(!tmp) break;
			var e = _g.g.getEntryByIndex(_g.ii.min++);
			e.toggleSelected();
		}
	}
	,getEntryViewCount: function() {
		return this.gallery.entries.length;
	}
	,entries: function(start,end) {
		if(start == null) start = 0;
		if(end == null) end = this.gallery.entries.length;
		return new bplayer_ui_GalleryView_$EntryIterator(this,start,end);
	}
	,page: null
	,gallery: null
	,rows: null
	,styled: null
	,ready: null
	,readyEvent: null
	,__class__: bplayer_ui_GalleryView
});
var bplayer_ui_GalleryView_$EntryIterator = function(g,start,end) {
	this.g = g;
	this.ii = new IntIterator(start,end);
};
$hxClasses["bplayer.ui.GalleryView_EntryIterator"] = bplayer_ui_GalleryView_$EntryIterator;
bplayer_ui_GalleryView_$EntryIterator.__name__ = ["bplayer","ui","GalleryView_EntryIterator"];
bplayer_ui_GalleryView_$EntryIterator.prototype = {
	ii: null
	,g: null
	,hasNext: function() {
		var tmp;
		var _this = this.ii;
		tmp = _this.min < _this.max;
		return tmp;
	}
	,next: function() {
		return this.g.getEntryByIndex(this.ii.min++);
	}
	,__class__: bplayer_ui_GalleryView_$EntryIterator
};
var foundation_Row = function() {
	foundation_Pane.call(this);
	this.addClass("row");
};
$hxClasses["foundation.Row"] = foundation_Row;
foundation_Row.__name__ = ["foundation","Row"];
foundation_Row.__super__ = foundation_Pane;
foundation_Row.prototype = $extend(foundation_Pane.prototype,{
	collapse: function(doit,breakpoint) {
		if(breakpoint == null) breakpoint = "";
		if(doit == null) doit = true;
		(doit?$bind(this,this.addClass):$bind(this,this.removeClass))(breakpoint == null?"collapse":"" + breakpoint + "-collapse");
	}
	,uncollapse: function(breakpoint) {
		if(breakpoint == null) this.removeClass("collapse"); else {
			this.removeClass("" + breakpoint + "-collapse");
			this.addClass("" + breakpoint + "-uncollapse");
		}
	}
	,get_alignments: function() {
		var tmp;
		var this1 = this.el.attr("class");
		tmp = this1 != null;
		return tannus_ds_ArrayTools.mapfilter(tmp?this.el.attr("class").split(" "):[],function(item) {
			return StringTools.startsWith(item,"align-");
		},function(item1) {
			return tannus_ds_StringUtils.after(item1,"align-");
		});
	}
	,set_alignments: function(list) {
		var _g = 0;
		var _g1 = this.get_alignments();
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			this.removeClass("align-" + x);
		}
		var _g2 = 0;
		while(_g2 < list.length) {
			var x1 = list[_g2];
			++_g2;
			this.addClass("align-" + x1);
		}
		return list;
	}
	,__class__: foundation_Row
	,__properties__: $extend(foundation_Pane.prototype.__properties__,{set_alignments:"set_alignments",get_alignments:"get_alignments"})
});
var foundation_FlexRow = function(cols,autoBuild) {
	if(autoBuild == null) autoBuild = true;
	var _g = this;
	foundation_Row.call(this);
	this.el.css("max-width","100%");
	if(autoBuild) this.__buildPanes(cols);
	this.on("activate",function(x) {
		tannus_html__$Element_Element_$Impl_$.plugin(_g.el,"foundation");
	});
};
$hxClasses["foundation.FlexRow"] = foundation_FlexRow;
foundation_FlexRow.__name__ = ["foundation","FlexRow"];
foundation_FlexRow.__super__ = foundation_Row;
foundation_FlexRow.prototype = $extend(foundation_Row.prototype,{
	__buildPanes: function(list) {
		this.panes = [];
		var _g = 0;
		while(_g < list.length) {
			var count = list[_g];
			++_g;
			this.addPane(count);
		}
	}
	,addPane: function(size) {
		var pane = new foundation_FlexPane();
		var tmp;
		var _this1 = pane._columnManager.breakpoints.m;
		if(__map_reserved.small != null) tmp = _this1.getReserved("small"); else tmp = _this1.h["small"];
		var _this = tmp;
		_this.set_size(size);
		this.panes.push(pane);
		this.append(pane);
		return pane;
	}
	,pane: function(i) {
		return this.panes[i];
	}
	,iterator: function() {
		return HxOverrides.iter(this.panes);
	}
	,columns: function(breakpoint) {
		var setters = this.panes.map(function(item) {
			return ($_=item._columnManager.sizeManager(breakpoint),$bind($_,$_.set_size));
		});
		console.log(setters);
		return function(sizes) {
			var tups = tannus_ds_ArrayTools.zip(setters,sizes);
			var _g = 0;
			while(_g < tups.length) {
				var t = tups[_g];
				++_g;
				t.left(t.right);
			}
		};
	}
	,panes: null
	,__class__: foundation_FlexRow
});
var bplayer_ui_GalleryViewRow = function(gv) {
	foundation_FlexRow.call(this,[3,3,3,3],false);
	this.addClass("gallery-row");
	this.addClass("align-spaced");
	this.galleryView = gv;
	this.entries = new tannus_ds_data_Data(4,null);
	this.panes = [];
	this.entryViews = [];
};
$hxClasses["bplayer.ui.GalleryViewRow"] = bplayer_ui_GalleryViewRow;
bplayer_ui_GalleryViewRow.__name__ = ["bplayer","ui","GalleryViewRow"];
bplayer_ui_GalleryViewRow.__super__ = foundation_FlexRow;
bplayer_ui_GalleryViewRow.prototype = $extend(foundation_FlexRow.prototype,{
	addEntry: function(entry) {
		this.entries.add(entry);
		var view = new bplayer_ui_GalleryEntryView(entry);
		var tmp;
		var _this1 = view._columnManager.breakpoints.m;
		if(__map_reserved.small != null) tmp = _this1.getReserved("small"); else tmp = _this1.h["small"];
		var _this = tmp;
		_this.set_size(3);
		view.row = this;
		this.panes.push(view);
		this.entryViews.push(view);
		this.append(view);
		return view;
	}
	,get_full: function() {
		return this.entries.get_full();
	}
	,galleryView: null
	,entries: null
	,entryViews: null
	,__class__: bplayer_ui_GalleryViewRow
	,__properties__: $extend(foundation_FlexRow.prototype.__properties__,{get_full:"get_full"})
});
var bplayer_ui_PlayerControlButton = function() {
	this.hovered = false;
	bplayer_core_Ent.call(this);
	this.side = bplayer_ui_PlayerControlSide.Left;
	this.controls = null;
	this._listen();
};
$hxClasses["bplayer.ui.PlayerControlButton"] = bplayer_ui_PlayerControlButton;
bplayer_ui_PlayerControlButton.__name__ = ["bplayer","ui","PlayerControlButton"];
bplayer_ui_PlayerControlButton.__super__ = bplayer_core_Ent;
bplayer_ui_PlayerControlButton.prototype = $extend(bplayer_core_Ent.prototype,{
	update: function(stage) {
		if(this.controls == null) {
			this.controls = this.parentUntil(function(e) {
				return js_Boot.__instanceof(e,bplayer_core_PlayerControls);
			});
			if(this.controls != null) this.dispatch("linked",this.controls);
		} else this.set_w(this.set_h(this.controls.get_h() * 0.7));
		var hov = this.hovered;
		var mp = stage.getMousePosition();
		this.hovered = mp != null && this.containsPoint(mp);
		var ev = stage.mouseWatcher.getLastEvent();
		{
			var _g = this.hovered;
			switch(hov) {
			case false:
				switch(_g) {
				case true:
					this.dispatch("mouseenter",ev.clone());
					break;
				default:
				}
				break;
			case true:
				switch(_g) {
				case false:
					this.dispatch("mouseleave",ev.clone());
					break;
				default:
				}
				break;
			}
		}
		bplayer_core_Ent.prototype.update.call(this,stage);
	}
	,render: function(stage,c) {
		bplayer_core_Ent.prototype.render.call(this,stage,c);
	}
	,_listen: function() {
		this.on("click",$bind(this,this.click));
		this.on("mouseenter",$bind(this,this.mouseenter));
		this.on("mouseleave",$bind(this,this.mouseleave));
	}
	,click: function(event) {
	}
	,mouseenter: function(event) {
	}
	,mouseleave: function(event) {
	}
	,get_player: function() {
		return this.controls.player;
	}
	,get_mode: function() {
		return this.controls.player.mode;
	}
	,get_pc: function() {
		return this.controls.player.controls;
	}
	,get_media: function() {
		return this.controls.player.currentMedia;
	}
	,get_enabled: function() {
		return true;
	}
	,side: null
	,controls: null
	,hovered: null
	,__class__: bplayer_ui_PlayerControlButton
	,__properties__: $extend(bplayer_core_Ent.prototype.__properties__,{get_enabled:"get_enabled",get_media:"get_media",get_pc:"get_pc",get_mode:"get_mode",get_player:"get_player"})
});
var bplayer_ui_PlayerControlSide = $hxClasses["bplayer.ui.PlayerControlSide"] = { __ename__ : ["bplayer","ui","PlayerControlSide"], __constructs__ : ["Left","Right"] };
bplayer_ui_PlayerControlSide.Left = ["Left",0];
bplayer_ui_PlayerControlSide.Left.toString = $estr;
bplayer_ui_PlayerControlSide.Left.__enum__ = bplayer_ui_PlayerControlSide;
bplayer_ui_PlayerControlSide.Right = ["Right",1];
bplayer_ui_PlayerControlSide.Right.toString = $estr;
bplayer_ui_PlayerControlSide.Right.__enum__ = bplayer_ui_PlayerControlSide;
var bplayer_ui_PlayerControlsView = function(p) {
	this.bg_id = null;
	this.hovered = false;
	bplayer_core_Ent.call(this);
	this.player = p;
	this.hovered = false;
	this.addChild(new bplayer_ui_controls_Seekbar(this));
	this.addChild(new bplayer_ui_controls_PlaybackButton());
	this.addChild(new bplayer_ui_controls_ShuffleButton());
	this.addChild(new bplayer_ui_controls_PreviousButton());
	this.addChild(new bplayer_ui_controls_FullscreenButton());
	this.addChild(new bplayer_ui_controls_SpeedButton());
	this.addChild(new bplayer_ui_controls_VolumeButton());
	this.addChild(new bplayer_ui_controls_NextButton());
};
$hxClasses["bplayer.ui.PlayerControlsView"] = bplayer_ui_PlayerControlsView;
bplayer_ui_PlayerControlsView.__name__ = ["bplayer","ui","PlayerControlsView"];
bplayer_ui_PlayerControlsView.__super__ = bplayer_core_Ent;
bplayer_ui_PlayerControlsView.prototype = $extend(bplayer_core_Ent.prototype,{
	update: function(stage) {
		var mp = stage.getMousePosition();
		this.hovered = mp != null && this.containsPoint(mp);
		bplayer_core_Ent.prototype.update.call(this,stage);
	}
	,render: function(stage,c) {
		if(this.player.show_ui || this.hovered) {
			c.ctx.save();
			c.ctx.beginPath();
			var tmp;
			var this1 = this.getBackgroundColor();
			tmp = this1.toString();
			c.set_fillStyle(tmp);
			var r = this.rect;
			c.ctx.rect(r.x,r.y,r.width,r.height);
			c.ctx.closePath();
			c.ctx.fill();
			c.ctx.restore();
			bplayer_core_Ent.prototype.render.call(this,stage,c);
		}
	}
	,getBackgroundColor: function() {
		if(this.bg_id == null) {
			var bg = this.player.theme.colors[0].lighten(12);
			this.bg_id = this.player.theme.save(bg);
		}
		return this.player.theme.restore(this.bg_id);
	}
	,calculateGeometry: function(r) {
		this.set_w(this.player.get_w() * 0.9);
		this.set_h(60);
		var v = this.player.rect.y + this.player.get_h() - this.get_h() - 30;
		this.rect.y = v;
		this.set_centerX(this.player.get_centerX());
		this.positionButtons();
		bplayer_core_Ent.prototype.calculateGeometry.call(this,this.rect);
	}
	,positionButtons: function() {
		var buttons = this.getChildren().filter(function(item) {
			return js_Boot.__instanceof(item,bplayer_ui_PlayerControlButton);
		});
		var lbx = this.rect.x;
		var rbx = this.rect.x + this.get_w();
		var margin = 5;
		var _g = 0;
		while(_g < buttons.length) {
			var button = buttons[_g];
			++_g;
			if(!button.get_enabled()) continue;
			var _g1 = button.side;
			switch(_g1[1]) {
			case 0:
				button.rect.x = lbx;
				lbx += button.get_w();
				lbx += margin;
				break;
			case 1:
				rbx -= button.get_w();
				rbx -= margin;
				button.rect.x = rbx;
				break;
			}
			var v = this.rect.y + (this.get_h() - button.get_h());
			button.rect.y = v;
		}
	}
	,addChild: function(e) {
		if(js_Boot.__instanceof(e,bplayer_ui_PlayerControlButton)) (js_Boot.__cast(e , bplayer_ui_PlayerControlButton)).controls = this;
		bplayer_core_Ent.prototype.addChild.call(this,e);
	}
	,get_enabled: function() {
		return this.player.show_ui || this.hovered;
	}
	,player: null
	,hovered: null
	,bg_id: null
	,__class__: bplayer_ui_PlayerControlsView
	,__properties__: $extend(bplayer_core_Ent.prototype.__properties__,{get_enabled:"get_enabled"})
});
var bplayer_ui_PlayerKeyControls = function() {
	bplayer_ui_KeyControls.call(this);
};
$hxClasses["bplayer.ui.PlayerKeyControls"] = bplayer_ui_PlayerKeyControls;
bplayer_ui_PlayerKeyControls.__name__ = ["bplayer","ui","PlayerKeyControls"];
bplayer_ui_PlayerKeyControls.__super__ = bplayer_ui_KeyControls;
bplayer_ui_PlayerKeyControls.prototype = $extend(bplayer_ui_KeyControls.prototype,{
	handleKey: function(event) {
		if(this.ignore(event)) return; else {
			this.page.player.controls.applyMods(event.getModifiers());
			if(event.type == "keydown") {
				var _g = event.key;
				switch(_g) {
				case 32:
					var _this = this.page.player.controls;
					_this.player.mode.set_paused(!_this.player.mode.get_paused());
					break;
				case 8:
					this.page.player.controls.player.back();
					break;
				case 83:
					var _this1 = this.page.player.controls;
					var _g1 = _this1.player;
					_g1.set_volume(_g1.get_volume() + _this1.getVolumeJump() / 100.0 * -1);
					break;
				case 68:
					var _this2 = this.page.player.controls;
					var _g2 = _this2.player;
					_g2.set_volume(_g2.get_volume() + _this2.getVolumeJump() / 100.0);
					break;
				case 219:
					var _this3 = this.page.player.controls;
					var _g3 = _this3.player.mode;
					_g3.set_playbackRate(_g3.get_playbackRate() + _this3.getPlaybackRateJump() / 100 * -1);
					break;
				case 221:
					var _this4 = this.page.player.controls;
					var _g4 = _this4.player.mode;
					_g4.set_playbackRate(_g4.get_playbackRate() + _this4.getPlaybackRateJump() / 100);
					break;
				case 187:
					this.page.player.controls.player.mode.set_playbackRate(1.0);
					break;
				case 77:
					var _this5 = this.page.player.controls;
					_this5.player.mode.set_muted(!_this5.player.mode.get_muted());
					break;
				case 37:
					var _this6 = this.page.player.controls;
					var _g5 = _this6.player;
					_g5.set_currentTime(_g5.get_currentTime() + _this6.getJumpTime() * -1);
					break;
				case 39:
					var _this7 = this.page.player.controls;
					var _g6 = _this7.player;
					_g6.set_currentTime(_g6.get_currentTime() + _this7.getJumpTime());
					break;
				case 78:
					this.page.player.skip(1);
					break;
				case 80:
					this.page.player.skip(-1);
					break;
				case 79:
					if(event.ctrlKey) this.page.player.openUserSelectedFiles();
					break;
				default:
					console.log(event);
				}
			} else {
			}
		}
	}
	,get_player: function() {
		return this.page.player;
	}
	,get_c: function() {
		return this.page.player.controls;
	}
	,__class__: bplayer_ui_PlayerKeyControls
	,__properties__: {get_c:"get_c",get_player:"get_player"}
});
var bplayer_ui_PlayerPage = function(d,p) {
	this.shelved = false;
	crayon_Page.call(this);
	this.data = d;
	this.player = p;
	this.player.data = this.data;
	this.player.page = this;
	this.keyControls = new bplayer_ui_PlayerKeyControls();
};
$hxClasses["bplayer.ui.PlayerPage"] = bplayer_ui_PlayerPage;
bplayer_ui_PlayerPage.__name__ = ["bplayer","ui","PlayerPage"];
bplayer_ui_PlayerPage.__super__ = crayon_Page;
bplayer_ui_PlayerPage.prototype = $extend(crayon_Page.prototype,{
	open: function(body) {
		crayon_Page.prototype.open.call(this,body);
		this.canvas = body.application.win.document.createElement("canvas");
		this.append(this.canvas);
		this.stage = new gryffin_core_Stage(this.canvas);
		this.stage.fill();
		this.stage.addChild(this.player);
		this.attachController(this.keyControls);
	}
	,close: function() {
		this.stage.manager.pause();
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		this1.set("display","none");
		this.set_active(false);
		this.detachController(this.keyControls);
	}
	,reopen: function(body) {
		crayon_Page.prototype.reopen.call(this,body);
		this.stage.manager.resume();
		var this1 = tannus_html__$Element_Element_$Impl_$.get_style(this.el);
		this1.set("display","block");
		this.attachController(this.keyControls);
	}
	,canvas: null
	,stage: null
	,player: null
	,menu: null
	,data: null
	,keyControls: null
	,shelved: null
	,__class__: bplayer_ui_PlayerPage
});
var bplayer_ui_controls_IconButton = function() {
	bplayer_ui_PlayerControlButton.call(this);
	this.labelBox = new gryffin_display_TextBox();
	this.labelBox.set_fontFamily("Ubuntu");
	this.labelBox.set_fontSizeUnit("px");
	this.labelBox.set_fontSize(10);
	this.labelBox.set_color(tannus_graphics__$Color_TColor.fromString("#FFF"));
	this.icons = [];
};
$hxClasses["bplayer.ui.controls.IconButton"] = bplayer_ui_controls_IconButton;
bplayer_ui_controls_IconButton.__name__ = ["bplayer","ui","controls","IconButton"];
bplayer_ui_controls_IconButton.__super__ = bplayer_ui_PlayerControlButton;
bplayer_ui_controls_IconButton.prototype = $extend(bplayer_ui_PlayerControlButton.prototype,{
	init: function(s) {
		this.controls.player.onready($bind(this,this.__buildIcons));
	}
	,__buildIcons: function() {
	}
	,getIcon: function() {
		return this.icons[0];
	}
	,render: function(stage,c) {
		try {
			var i = this.getIcon();
			if(i == null) return;
			c.drawComponent(i,0,0,i.img.naturalWidth,i.img.naturalHeight,this.rect.x,this.rect.y,this.get_w(),this.get_h());
			if(StringTools.trim(this.labelBox.get_text()) != "") {
				var b = this.labelBox;
				c.drawComponent(b,0,0,b.get_width(),b.get_height(),this.rect.x,this.rect.y + this.get_h() - b.get_height() - 1,b.get_width(),b.get_height());
			}
		} catch( error ) {
			if (error instanceof js__$Boot_HaxeError) error = error.val;
			console.log(error);
		}
	}
	,get_label: function() {
		return this.labelBox.get_text();
	}
	,set_label: function(v) {
		return this.labelBox.set_text(v);
	}
	,icons: null
	,labelBox: null
	,__class__: bplayer_ui_controls_IconButton
	,__properties__: $extend(bplayer_ui_PlayerControlButton.prototype.__properties__,{set_label:"set_label",get_label:"get_label"})
});
var bplayer_ui_controls_FullscreenButton = function() {
	bplayer_ui_controls_IconButton.call(this);
	this.side = bplayer_ui_PlayerControlSide.Right;
};
$hxClasses["bplayer.ui.controls.FullscreenButton"] = bplayer_ui_controls_FullscreenButton;
bplayer_ui_controls_FullscreenButton.__name__ = ["bplayer","ui","controls","FullscreenButton"];
bplayer_ui_controls_FullscreenButton.__super__ = bplayer_ui_controls_IconButton;
bplayer_ui_controls_FullscreenButton.prototype = $extend(bplayer_ui_controls_IconButton.prototype,{
	__buildIcons: function() {
		var exp = bplayer_display_Icons.expandIcon(64,64);
		var col = bplayer_display_Icons.collapseIcon(64,64);
		this.icons = [exp,col].map(function(item) {
			return item.toImage();
		});
	}
	,getIcon: function() {
		return this.icons[!this.controls.player.get_fullscreen()?0:1];
	}
	,click: function(event) {
		this.controls.player.toggleFullscreen();
	}
	,__class__: bplayer_ui_controls_FullscreenButton
});
var bplayer_ui_controls_NextButton = function() {
	bplayer_ui_controls_IconButton.call(this);
	this.side = bplayer_ui_PlayerControlSide.Right;
};
$hxClasses["bplayer.ui.controls.NextButton"] = bplayer_ui_controls_NextButton;
bplayer_ui_controls_NextButton.__name__ = ["bplayer","ui","controls","NextButton"];
bplayer_ui_controls_NextButton.__super__ = bplayer_ui_controls_IconButton;
bplayer_ui_controls_NextButton.prototype = $extend(bplayer_ui_controls_IconButton.prototype,{
	__buildIcons: function() {
		this.icons.push(bplayer_display_Icons.nextIcon(64,64).toImage());
	}
	,getIcon: function() {
		return bplayer_ui_controls_IconButton.prototype.getIcon.call(this);
	}
	,click: function(event) {
		this.controls.player.skip(1);
	}
	,get_enabled: function() {
		return this.controls.player.queue.get_length() > 1;
	}
	,__class__: bplayer_ui_controls_NextButton
});
var bplayer_ui_controls_PlaybackButton = function() {
	bplayer_ui_controls_IconButton.call(this);
	this.side = bplayer_ui_PlayerControlSide.Left;
};
$hxClasses["bplayer.ui.controls.PlaybackButton"] = bplayer_ui_controls_PlaybackButton;
bplayer_ui_controls_PlaybackButton.__name__ = ["bplayer","ui","controls","PlaybackButton"];
bplayer_ui_controls_PlaybackButton.__super__ = bplayer_ui_controls_IconButton;
bplayer_ui_controls_PlaybackButton.prototype = $extend(bplayer_ui_controls_IconButton.prototype,{
	__buildIcons: function() {
		var play = bplayer_display_Icons.playIcon(64,64);
		var pause = bplayer_display_Icons.pauseIcon(64,64);
		this.icons = [play,pause].map(function(item) {
			return item.toImage();
		});
	}
	,getIcon: function() {
		return this.icons[this.controls.player.get_paused()?0:1];
	}
	,click: function(event) {
		var _this = this.controls.player.controls;
		_this.player.mode.set_paused(!_this.player.mode.get_paused());
	}
	,__class__: bplayer_ui_controls_PlaybackButton
});
var bplayer_ui_controls_PreviousButton = function() {
	bplayer_ui_controls_IconButton.call(this);
	this.side = bplayer_ui_PlayerControlSide.Left;
};
$hxClasses["bplayer.ui.controls.PreviousButton"] = bplayer_ui_controls_PreviousButton;
bplayer_ui_controls_PreviousButton.__name__ = ["bplayer","ui","controls","PreviousButton"];
bplayer_ui_controls_PreviousButton.__super__ = bplayer_ui_controls_IconButton;
bplayer_ui_controls_PreviousButton.prototype = $extend(bplayer_ui_controls_IconButton.prototype,{
	__buildIcons: function() {
		this.icons.push(bplayer_display_Icons.prevIcon(64,64).toImage());
	}
	,getIcon: function() {
		return bplayer_ui_controls_IconButton.prototype.getIcon.call(this);
	}
	,click: function(event) {
		if(this.get_enabled()) this.controls.player.skip(-1);
	}
	,get_enabled: function() {
		return this.controls.player.queue.get_length() > 1;
	}
	,__class__: bplayer_ui_controls_PreviousButton
});
var bplayer_ui_controls_Seekbar = function(c) {
	this.hovered = false;
	bplayer_core_Ent.call(this);
	this.controls = c;
	this.currentBox = new gryffin_display_TextBox();
	this.initBox(this.currentBox);
	this.totalBox = new gryffin_display_TextBox();
	this.initBox(this.totalBox);
	this.hoverLocation = null;
	this.thumb = new bplayer_ui_controls_ThumbPreviewBox(this);
	this.on("click",$bind(this,this.click));
};
$hxClasses["bplayer.ui.controls.Seekbar"] = bplayer_ui_controls_Seekbar;
bplayer_ui_controls_Seekbar.__name__ = ["bplayer","ui","controls","Seekbar"];
bplayer_ui_controls_Seekbar.__super__ = bplayer_core_Ent;
bplayer_ui_controls_Seekbar.prototype = $extend(bplayer_core_Ent.prototype,{
	init: function(stage) {
		bplayer_core_Ent.prototype.init.call(this,stage);
		this.controls.player.addChild(this.thumb);
	}
	,update: function(stage) {
		bplayer_core_Ent.prototype.update.call(this,stage);
		var mp = stage.getMousePosition();
		var _hov = this.hovered;
		this.hovered = mp != null && this.containsPoint(mp);
		var tmp;
		var tmp2;
		var n = this.controls.player.get_currentTime();
		tmp2 = tannus_media_CDur.fromSecondsI(Math.floor(n));
		var this1 = tmp2;
		tmp = this1.toString();
		this.currentBox.set_text(tmp);
		var tmp1;
		var this2 = this.controls.player.get_duration();
		tmp1 = this2.toString();
		this.totalBox.set_text(tmp1);
		if(this.hovered) this.hoverLocation = mp.clone(); else this.hoverLocation = null;
		{
			var _g = this.hovered;
			switch(_hov) {
			case false:
				switch(_g) {
				case true:
					this.mouseenter();
					break;
				default:
				}
				break;
			case true:
				switch(_g) {
				case false:
					this.mouseleave();
					break;
				default:
				}
				break;
			}
		}
	}
	,render: function(stage,c) {
		if(this.controls.player.currentMedia == null) return;
		c.ctx.save();
		var b = this.currentBox;
		c.drawComponent(b,0,0,b.get_width(),b.get_height(),this.rect.x + 5,this.rect.y,b.get_width(),b.get_height());
		b = this.totalBox;
		c.drawComponent(b,0,0,b.get_width(),b.get_height(),this.rect.x + this.get_w() - b.get_width() - 5,this.rect.y,b.get_width(),b.get_height());
		c.ctx.beginPath();
		var tmp;
		var this1 = this.getPlayedColor();
		tmp = this1.toString();
		c.set_fillStyle(tmp);
		var r = this.getCurrentRect();
		c.ctx.rect(r.x,r.y,r.width,r.height);
		c.ctx.closePath();
		c.ctx.fill();
		c.ctx.beginPath();
		c.set_fillStyle("white");
		var r1 = this.getRemainingRect();
		c.ctx.rect(r1.x,r1.y,r1.width,r1.height);
		c.ctx.closePath();
		c.ctx.fill();
		c.ctx.restore();
	}
	,calculateGeometry: function(r) {
		this.rect.x = r.x;
		this.rect.y = r.y;
		this.set_w(r.width);
		this.set_h(10);
	}
	,click: function(event) {
		this.controls.player.set_progress(this.getCurrentPercent());
	}
	,mouseenter: function() {
		return;
	}
	,mouseleave: function() {
	}
	,getCurrentPercent: function() {
		if(!this.hovered) return this.controls.player.get_progress(); else {
			var mp = this.stage.getMousePosition();
			var nx = mp.get_x() - (this.rect.x + this.currentBox.get_width() + 10);
			mp.set_x(nx);
			return tannus_math__$Percent_Percent_$Impl_$.percent(mp.get_x(),this.get_w() - this.currentBox.get_width() - this.totalBox.get_width() - 20);
		}
	}
	,getCurrentTime: function() {
		var cp = this.getCurrentPercent();
		var tmp;
		var _this = this.controls.player.get_duration();
		tmp = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
		var seconds = tmp * (cp / 100);
		return tannus_media_CDur.fromSecondsI(Math.floor(seconds));
	}
	,getCurrentRect: function() {
		var bw = this.get_w() - this.currentBox.get_width() - this.totalBox.get_width() - 20;
		var tmp;
		var _x = this.rect.x + this.currentBox.get_width() + 10;
		var tmp1;
		var this1 = this.getCurrentPercent();
		tmp1 = this1;
		var _width = bw * (tmp1 / 100);
		var _height = this.get_h();
		tmp = new tannus_geom_CRectangle(_x,this.rect.y,_width,_height);
		return tmp;
	}
	,getRemainingRect: function() {
		var bw = this.get_w() - this.currentBox.get_width() - this.totalBox.get_width() - 20;
		var tmp;
		var this1 = this.getCurrentPercent();
		tmp = this1;
		var cw = bw * (tmp / 100);
		var tmp1;
		var _x = this.rect.x + this.currentBox.get_width() + 10 + cw;
		var _height = this.get_h();
		tmp1 = new tannus_geom_CRectangle(_x,this.rect.y,bw - cw,_height);
		return tmp1;
	}
	,getPlayedColor: function() {
		return this.controls.player.theme.colors[1];
	}
	,initBox: function(b) {
		b.set_fontFamily("Ubuntu");
		b.set_fontSize(10);
		b.set_fontSizeUnit("px");
		b.set_color(tannus_graphics__$Color_TColor.fromString("#FFFFFF"));
	}
	,get_player: function() {
		return this.controls.player;
	}
	,get_progress: function() {
		return this.getCurrentPercent();
	}
	,controls: null
	,currentBox: null
	,totalBox: null
	,hovered: null
	,thumb: null
	,hoverLocation: null
	,_thumb: null
	,enterLocation: null
	,__class__: bplayer_ui_controls_Seekbar
	,__properties__: $extend(bplayer_core_Ent.prototype.__properties__,{get_progress:"get_progress",get_player:"get_player"})
});
var bplayer_ui_controls_ShuffleButton = function() {
	bplayer_ui_controls_IconButton.call(this);
	this.side = bplayer_ui_PlayerControlSide.Left;
};
$hxClasses["bplayer.ui.controls.ShuffleButton"] = bplayer_ui_controls_ShuffleButton;
bplayer_ui_controls_ShuffleButton.__name__ = ["bplayer","ui","controls","ShuffleButton"];
bplayer_ui_controls_ShuffleButton.__super__ = bplayer_ui_controls_IconButton;
bplayer_ui_controls_ShuffleButton.prototype = $extend(bplayer_ui_controls_IconButton.prototype,{
	__buildIcons: function() {
		var _g = this;
		this.icons.push(bplayer_display_Icons.shuffleIcon(64,64).toImage());
		this.icons.push(bplayer_display_Icons.shuffleIcon(64,64,function(p) {
			p.style.set_fill(_g.controls.player.theme.colors[1].toString());
		}).toImage());
	}
	,getIcon: function() {
		var tmp;
		var this1 = this.controls.player.data.settings.getAttribute("shuffle");
		if(this1 != null) tmp = this1; else tmp = false;
		return this.icons[tmp?1:0];
	}
	,click: function(event) {
		var _this = this.controls.player.controls;
		_this.player.mode.set_shuffle(!_this.player.mode.get_shuffle());
	}
	,__class__: bplayer_ui_controls_ShuffleButton
});
var bplayer_ui_controls_SpeedButton = function() {
	bplayer_ui_controls_IconButton.call(this);
	this.side = bplayer_ui_PlayerControlSide.Right;
};
$hxClasses["bplayer.ui.controls.SpeedButton"] = bplayer_ui_controls_SpeedButton;
bplayer_ui_controls_SpeedButton.__name__ = ["bplayer","ui","controls","SpeedButton"];
bplayer_ui_controls_SpeedButton.__super__ = bplayer_ui_controls_IconButton;
bplayer_ui_controls_SpeedButton.prototype = $extend(bplayer_ui_controls_IconButton.prototype,{
	update: function(stage) {
		var v = Math.round(this.controls.player.get_playbackRate() * 100) + "%";
		this.labelBox.set_text(v);
		bplayer_ui_controls_IconButton.prototype.update.call(this,stage);
	}
	,__buildIcons: function() {
		this.icons.push(bplayer_display_Icons.clockIcon(64,64).toImage());
	}
	,getIcon: function() {
		return bplayer_ui_controls_IconButton.prototype.getIcon.call(this);
	}
	,click: function(event) {
		this.controls.player.controls.player.mode.set_playbackRate(1.0);
	}
	,__class__: bplayer_ui_controls_SpeedButton
});
var bplayer_ui_controls_ThumbPreviewBox = function(seekbar) {
	bplayer_core_Ent.call(this);
	this.bar = seekbar;
	this.border = new gryffin_ui_Border(6,tannus_graphics__$Color_TColor.fromString("#333333"),5);
	this.tbox = new gryffin_display_TextBox();
	this.tbox.set_fontFamily("Ubuntu");
	this.tbox.set_fontSize(14);
	this.tbox.set_fontSizeUnit("px");
	this.tbox.set_color(tannus_graphics__$Color_TColor.fromString("#FFFFFF"));
};
$hxClasses["bplayer.ui.controls.ThumbPreviewBox"] = bplayer_ui_controls_ThumbPreviewBox;
bplayer_ui_controls_ThumbPreviewBox.__name__ = ["bplayer","ui","controls","ThumbPreviewBox"];
bplayer_ui_controls_ThumbPreviewBox.__super__ = bplayer_core_Ent;
bplayer_ui_controls_ThumbPreviewBox.prototype = $extend(bplayer_core_Ent.prototype,{
	init: function(stage) {
		bplayer_core_Ent.prototype.init.call(this,stage);
	}
	,update: function(stage) {
		bplayer_core_Ent.prototype.update.call(this,stage);
		this.updateSize(stage);
		if(this.get_target() != null) {
			var tmp;
			var _this = this.get_target();
			tmp = _this.d.get(0);
			this.set_centerX(tmp);
			var v = this.bar.rect.y - this.get_h() - 18;
			this.rect.y = v;
			var progress = this.bar.getCurrentPercent();
			var tmp1;
			var tmp2;
			var _this1 = this.bar.controls.player.get_duration();
			tmp2 = 3600 * _this1.hours + 60 * _this1.minutes + _this1.seconds;
			var n = tmp2 * (progress / 100);
			tmp1 = tannus_media_CDur.fromSecondsI(Math.floor(n));
			var ct = tmp1;
			this.tbox.set_text(ct.toString());
		}
	}
	,updateSize: function(stage) {
		this.set_w(this.tbox.get_width() + 30);
		this.set_h(20);
	}
	,render: function(stage,c) {
		if(!this.bar.hovered) return;
		c.ctx.save();
		if(this.bar._thumb != null) c.drawComponent(this.bar._thumb,0,0,this.bar._thumb.idata.width,this.bar._thumb.idata.height,this.rect.x,this.rect.y,this.get_w(),this.get_h() - 20);
		c.ctx.beginPath();
		c.set_fillStyle(this.border.color.toString());
		var y = this.rect.y + this.get_h() - 20;
		var w = this.get_w();
		c.ctx.rect(this.rect.x,y,w,20);
		c.ctx.closePath();
		c.ctx.fill();
		var ttr = new tannus_geom2_Rect(this.rect.x,this.rect.y + this.get_h() - 20,this.get_w(),20);
		var ttx = ttr.d.get(0) + ttr.d.get(2) / 2 - this.tbox.get_width() / 2;
		var tty = ttr.d.get(1) + ttr.d.get(3) / 2 - this.tbox.get_height() / 2;
		c.drawComponent(this.tbox,0,0,this.tbox.get_width(),this.tbox.get_height(),ttx,tty,this.tbox.get_width(),this.tbox.get_height());
		c.ctx.beginPath();
		c.set_shadowBlur(10);
		c.set_shadowColor(this.border.color.darken(12).toString());
		c.set_strokeStyle(this.border.color.toString());
		c.set_lineWidth(this.border.width);
		if(this.border.radius == 0) {
			var r = this.rect;
			c.ctx.rect(r.x,r.y,r.width,r.height);
		} else {
			var rect = this.rect;
			c.roundRect(rect.x,rect.y,rect.width,rect.height,this.border.radius);
		}
		c.ctx.closePath();
		c.ctx.stroke();
		c.ctx.restore();
	}
	,get_player: function() {
		return this.bar.controls.player;
	}
	,get_thumb: function() {
		return this.bar._thumb;
	}
	,get_target: function() {
		var p = this.bar.hoverLocation;
		if(p == null) return null; else return new tannus_geom2_Point(Math.floor(p.get_x()),Math.floor(p.get_y()));
	}
	,bar: null
	,border: null
	,tbox: null
	,__class__: bplayer_ui_controls_ThumbPreviewBox
	,__properties__: $extend(bplayer_core_Ent.prototype.__properties__,{get_target:"get_target",get_thumb:"get_thumb",get_player:"get_player"})
});
var bplayer_ui_controls_VolumeButton = function() {
	bplayer_ui_controls_IconButton.call(this);
	this.side = bplayer_ui_PlayerControlSide.Right;
	this.widget = new bplayer_ui_controls_VolumeWidget(this);
	this.widget.hide();
};
$hxClasses["bplayer.ui.controls.VolumeButton"] = bplayer_ui_controls_VolumeButton;
bplayer_ui_controls_VolumeButton.__name__ = ["bplayer","ui","controls","VolumeButton"];
bplayer_ui_controls_VolumeButton.__super__ = bplayer_ui_controls_IconButton;
bplayer_ui_controls_VolumeButton.prototype = $extend(bplayer_ui_controls_IconButton.prototype,{
	__buildIcons: function() {
		this.icons = bplayer_display_Icons.volumeIcons(64,64).map(function(item) {
			return item.toImage();
		});
		this.icons.push(bplayer_display_Icons.muteIcon(64,64).toImage());
	}
	,init: function(stage) {
		bplayer_ui_controls_IconButton.prototype.init.call(this,stage);
		this.parent.addSibling(this.widget);
	}
	,update: function(stage) {
		var v = Math.round((this.hovered?this.widget.getFactor():this.controls.player.get_volume()) * 100) + "";
		this.labelBox.set_text(v);
		bplayer_ui_controls_IconButton.prototype.update.call(this,stage);
	}
	,getIcon: function() {
		return this.icons[this.getIconIndex()];
	}
	,getIconIndex: function() {
		if(this.controls.player.get_muted()) return 4;
		var vol = Math.round(this.controls.player.get_volume() * 100);
		var index = vol >= 0 && vol <= 25?0:vol >= 26 && vol <= 50?1:vol >= 51 && vol <= 75?2:vol >= 76 && vol <= 100?3:4;
		return index;
	}
	,maybeHide: function() {
		var mp = this.stage.getMousePosition();
		if(mp == null) this.widget.hide(); else if(this.containsPoint(mp) || this.widget.containsPoint(mp)) return; else this.widget.hide();
	}
	,click: function(event) {
		var _this = this.controls.player.controls;
		_this.player.mode.set_muted(!_this.player.mode.get_muted());
	}
	,mouseenter: function(event) {
		this.widget.show();
		this.widget.calculateGeometry(this.rect);
	}
	,mouseleave: function(event) {
		window.setTimeout($bind(this,this.maybeHide),800);
	}
	,calculateGeometry: function(r) {
		bplayer_ui_controls_IconButton.prototype.calculateGeometry.call(this,r);
		this.widget.calculateGeometry(r);
	}
	,widget: null
	,__class__: bplayer_ui_controls_VolumeButton
});
var bplayer_ui_controls_VolumeWidget = function(b) {
	this.hovered = false;
	bplayer_core_Ent.call(this);
	this.btn = b;
	this.tri = new tannus_geom_Triangle();
	this.on("click",$bind(this,this.click));
};
$hxClasses["bplayer.ui.controls.VolumeWidget"] = bplayer_ui_controls_VolumeWidget;
bplayer_ui_controls_VolumeWidget.__name__ = ["bplayer","ui","controls","VolumeWidget"];
bplayer_ui_controls_VolumeWidget.__super__ = bplayer_core_Ent;
bplayer_ui_controls_VolumeWidget.prototype = $extend(bplayer_core_Ent.prototype,{
	update: function(stage) {
		bplayer_core_Ent.prototype.update.call(this,stage);
		var mp = stage.getMousePosition();
		this.hovered = mp != null && this.containsPoint(mp);
	}
	,render: function(stage,c) {
		c.ctx.save();
		var bgr = this.rect.clone();
		bgr.enlarge(10,10);
		var bgc = this.btn.controls.getBackgroundColor();
		c.ctx.beginPath();
		c.set_fillStyle(bgc.toString());
		c.ctx.rect(bgr.x,bgr.y,bgr.width,bgr.height);
		c.ctx.closePath();
		c.ctx.fill();
		c.ctx.beginPath();
		c.set_strokeStyle("black");
		c.set_fillStyle(this.btn.controls.player.theme.colors[2].toString());
		c.drawTriangle(this.tri);
		c.ctx.closePath();
		c.ctx.fill();
		c.ctx.stroke();
		c.ctx.beginPath();
		c.set_fillStyle(this.btn.controls.player.theme.colors[1].toString());
		c.drawTriangle(this.getHighlightedTriangle(this.getFactor()));
		c.ctx.closePath();
		c.ctx.fill();
		c.ctx.restore();
	}
	,calculateGeometry: function(r) {
		var whr = new tannus_math_CRatio(12,16);
		this.set_w(this.btn.get_w());
		var _g = this;
		_g.set_w(_g.get_w() + this.get_w() * 0.2);
		var tmp;
		var topValue = this.get_w();
		tmp = topValue / whr.top * whr.bottom;
		this.set_h(tmp);
		this.set_centerX(this.btn.get_centerX());
		var v = this.btn.controls.rect.y - this.get_h() - 8;
		this.rect.y = v;
		var v1 = new tannus_geom_TPoint(this.rect.x,this.rect.y,0);
		this.tri.two = v1;
		var tmp1;
		var x = this.rect.x + this.get_w() / 2;
		var y = this.rect.y + this.get_h();
		tmp1 = new tannus_geom_TPoint(x,y,0);
		var v2 = tmp1;
		this.tri.one = v2;
		var tmp2;
		var x1 = this.rect.x + this.get_w();
		tmp2 = new tannus_geom_TPoint(x1,this.rect.y,0);
		var v3 = tmp2;
		this.tri.three = v3;
		bplayer_core_Ent.prototype.calculateGeometry.call(this,r);
	}
	,getHighlightedTriangle: function(f) {
		var hb = this.tri.one.lerp(this.tri.two,f);
		var hc = this.tri.one.lerp(this.tri.three,f);
		return new tannus_geom_Triangle(this.tri.one.clone(),hb,hc);
	}
	,getPointFactor: function(p) {
		if(this.tri.containsPoint(p)) return (this.tri.one.get_y() - p.get_y()) / this.get_h(); else return 0.0;
	}
	,getCurrentFactor: function() {
		return this.btn.controls.player.mode.get_volume();
	}
	,getFactor: function() {
		return this.hovered?this.getPointFactor(this.stage.getMousePosition()):this.getCurrentFactor();
	}
	,click: function(event) {
		var f = this.getPointFactor(event.position);
		this.btn.controls.player.mode.set_volume(f);
		this.hide();
	}
	,get_a: function() {
		return this.tri.one;
	}
	,set_a: function(v) {
		return this.tri.one = v;
	}
	,get_b: function() {
		return this.tri.two;
	}
	,set_b: function(v) {
		return this.tri.two = v;
	}
	,get_c: function() {
		return this.tri.three;
	}
	,set_c: function(v) {
		return this.tri.three = v;
	}
	,get_player: function() {
		return this.btn.controls.player;
	}
	,tri: null
	,hovered: null
	,btn: null
	,__class__: bplayer_ui_controls_VolumeWidget
	,__properties__: $extend(bplayer_core_Ent.prototype.__properties__,{get_player:"get_player",set_c:"set_c",get_c:"get_c",set_b:"set_b",get_b:"get_b",set_a:"set_a",get_a:"get_a"})
});
var chrome_Windows = function() { };
$hxClasses["chrome.Windows"] = chrome_Windows;
chrome_Windows.__name__ = ["chrome","Windows"];
chrome_Windows.create = function(url,options,cb) {
	chrome_Windows.lib.create(url,options,cb);
};
chrome_Windows.current = function() {
	return chrome_Windows.lib.current();
};
chrome_Windows.onClosed = function(w,f) {
	w.contentWindow.chrome.app.window.onClosed.addListener(f);
};
var chrome_app__$AppWindow_AppWindow_$Impl_$ = {};
$hxClasses["chrome.app._AppWindow.AppWindow_Impl_"] = chrome_app__$AppWindow_AppWindow_$Impl_$;
chrome_app__$AppWindow_AppWindow_$Impl_$.__name__ = ["chrome","app","_AppWindow","AppWindow_Impl_"];
chrome_app__$AppWindow_AppWindow_$Impl_$._new = function(tw) {
	return tw;
};
var crayon_Body = function(app) {
	foundation_Widget.call(this);
	this.set_el(js.JQuery("body"));
	this.currentPage = null;
	this.application = app;
};
$hxClasses["crayon.Body"] = crayon_Body;
crayon_Body.__name__ = ["crayon","Body"];
crayon_Body.__super__ = foundation_Widget;
crayon_Body.prototype = $extend(foundation_Widget.prototype,{
	open: function(page) {
		if(this.currentPage != null) {
			this.currentPage.close();
			page.previousPage = this.currentPage;
		}
		this.currentPage = page;
		this.append(page);
		this.currentPage = page;
		(page.opened?$bind(page,page.reopen):$bind(page,page.open))(this);
	}
	,get_title: function() {
		return this.application.title;
	}
	,set_title: function(v) {
		return this.application.title = v;
	}
	,currentPage: null
	,application: null
	,__class__: crayon_Body
	,__properties__: $extend(foundation_Widget.prototype.__properties__,{set_title:"set_title",get_title:"get_title"})
});
var foundation_Button = function(txt) {
	foundation_Widget.call(this);
	var tmp;
	var tmp1;
	var tmp2;
	var this1 = window;
	tmp2 = this1.document;
	var _this = tmp2;
	tmp1 = _this.createElement("button");
	var el = tmp1;
	tmp = js.JQuery(el);
	this.set_el(tmp);
	tannus_html__$Element_Element_$Impl_$.set(this.el,"type","button");
	this.el.addClass("button");
	var this2 = this.el;
	this2.text(txt);
	this2.text();
	this.__init();
};
$hxClasses["foundation.Button"] = foundation_Button;
foundation_Button.__name__ = ["foundation","Button"];
foundation_Button.__super__ = foundation_Widget;
foundation_Button.prototype = $extend(foundation_Widget.prototype,{
	__init: function() {
		var _g = this;
		this.el.on("click mouseenter mouseleave",function(event) {
			_g.dispatch(event.type,event);
		});
	}
	,resetSize: function() {
		var all = ["tiny","small","large","expand"];
		var _g = 0;
		while(_g < all.length) {
			var s = all[_g];
			++_g;
			this.el.removeClass(s);
		}
	}
	,cs: function(n,v) {
		if(v == null) v = true;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))(n);
		return this["is"]("." + n);
	}
	,tiny: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("tiny");
		tmp = this["is"]("." + "tiny");
		return tmp;
	}
	,small: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("small");
		tmp = this["is"]("." + "small");
		return tmp;
	}
	,large: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("large");
		tmp = this["is"]("." + "large");
		return tmp;
	}
	,expand: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("expanded");
		tmp = this["is"]("." + "expanded");
		return tmp;
	}
	,secondary: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("secondary");
		tmp = this["is"]("." + "secondary");
		return tmp;
	}
	,success: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("success");
		tmp = this["is"]("." + "success");
		return tmp;
	}
	,warning: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("warning");
		tmp = this["is"]("." + "warning");
		return tmp;
	}
	,alert: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("alert");
		tmp = this["is"]("." + "alert");
		return tmp;
	}
	,disable: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("disabled");
		tmp = this["is"]("." + "disabled");
		return tmp;
	}
	,hollow: function(v) {
		var tmp;
		(v?$bind(this,this.addClass):$bind(this,this.removeClass))("hollow");
		tmp = this["is"]("." + "hollow");
		return tmp;
	}
	,__class__: foundation_Button
});
var foundation_FlexColumnSizing = function(p) {
	this.pane = p;
	this.breakpoints = new tannus_ds_dict_StringDict();
	var _g = 0;
	var _g1 = foundation_Foundation.mqBreakpoints;
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var value = new foundation_FlexColumnSize(this.pane,name);
		this.breakpoints.set(name,value);
	}
};
$hxClasses["foundation.FlexColumnSizing"] = foundation_FlexColumnSizing;
foundation_FlexColumnSizing.__name__ = ["foundation","FlexColumnSizing"];
foundation_FlexColumnSizing.prototype = {
	on: function(breakpoint) {
		var tmp;
		var _this = this.breakpoints.m;
		if(__map_reserved[breakpoint] != null) tmp = _this.getReserved(breakpoint); else tmp = _this.h[breakpoint];
		return tmp;
	}
	,sizeManager: function(name) {
		if(name == null) name = window.Foundation.MediaQuery.current;
		var tmp;
		var _this = this.breakpoints.m;
		if(__map_reserved[name] != null) tmp = _this.getReserved(name); else tmp = _this.h[name];
		return tmp;
	}
	,getSize: function(name) {
		return this.sizeManager(name).get_size();
	}
	,setSize: function(value,name) {
		return this.sizeManager(name).set_size(value);
	}
	,pane: null
	,breakpoints: null
	,__class__: foundation_FlexColumnSizing
};
var foundation_FlexColumnSize = function(pan,nam) {
	this.pane = pan;
	this.name = nam;
};
$hxClasses["foundation.FlexColumnSize"] = foundation_FlexColumnSize;
foundation_FlexColumnSize.__name__ = ["foundation","FlexColumnSize"];
foundation_FlexColumnSize.prototype = {
	'is': function(value) {
		return this.set_size(value);
	}
	,get_size: function() {
		var _g = this;
		var tmp;
		var _this = this.pane;
		var tmp1;
		var this1 = _this.el.attr("class");
		tmp1 = this1 != null;
		if(tmp1) tmp = _this.el.attr("class").split(" "); else tmp = [];
		var scn = tannus_ds_ArrayTools.firstMatch(tmp,function(item) {
			return StringTools.startsWith(item,"" + _g.name + "-");
		});
		if(scn == null) return null; else return Std.parseInt(tannus_ds_StringUtils.after(scn,"" + this.name + "-"));
	}
	,set_size: function(v) {
		var _g = this;
		if(v == null) {
			var _g1 = 0;
			var tmp;
			var _this = this.pane;
			var tmp1;
			var this1 = _this.el.attr("class");
			tmp1 = this1 != null;
			if(tmp1) tmp = _this.el.attr("class").split(" "); else tmp = [];
			var _g11 = tmp.filter(function(item) {
				return StringTools.startsWith(item,"" + _g.name + "-");
			});
			while(_g1 < _g11.length) {
				var c = _g11[_g1];
				++_g1;
				this.pane.removeClass(c);
			}
			return null;
		} else {
			var tmp2;
			var _this1 = this.pane;
			var tmp3;
			var this2 = _this1.el.attr("class");
			tmp3 = this2 != null;
			if(tmp3) tmp2 = _this1.el.attr("class").split(" "); else tmp2 = [];
			var scn = tannus_ds_ArrayTools.firstMatch(tmp2,function(item1) {
				return StringTools.startsWith(item1,"" + _g.name + "-");
			});
			this.pane.removeClass(scn);
			this.pane.addClass("" + this.name + "-" + v);
			return v;
		}
	}
	,get_shrinks: function() {
		return this.pane["is"](".shrink");
	}
	,set_shrinks: function(v) {
		if(v) this.pane.addClass("shrink"); else this.pane.removeClass("shrink");
		return this.pane["is"](".shrink");
	}
	,get_expand: function() {
		return this.get_size() == null && !this.pane["is"](".shrink");
	}
	,set_expand: function(v) {
		if(v) {
			this.set_size(null);
			return !this.set_shrinks(false);
		} else {
			var _g = 0;
			var tmp;
			var _this = this.pane;
			var tmp1;
			var this1 = _this.el.attr("class");
			tmp1 = this1 != null;
			if(tmp1) tmp = _this.el.attr("class").split(" "); else tmp = [];
			var _g1 = tmp.filter(function(item) {
				return StringTools.endsWith(item,"expand");
			});
			while(_g < _g1.length) {
				var item1 = _g1[_g];
				++_g;
				this.pane.removeClass(item1);
			}
			return false;
		}
	}
	,pane: null
	,name: null
	,__class__: foundation_FlexColumnSize
	,__properties__: {set_expand:"set_expand",get_expand:"get_expand",set_shrinks:"set_shrinks",get_shrinks:"get_shrinks",set_size:"set_size",get_size:"get_size"}
};
var foundation_Foundation = $hx_exports.hxFoundation = function() { };
$hxClasses["foundation.Foundation"] = foundation_Foundation;
foundation_Foundation.__name__ = ["foundation","Foundation"];
foundation_Foundation.__properties__ = {get_l:"get_l",get_mq:"get_mq"}
foundation_Foundation.initialize = function(element) {
	tannus_html__$Element_Element_$Impl_$.plugin(element,"foundation");
};
foundation_Foundation.reInitializePlugin = function(name) {
	window.Foundation.reInit(name);
};
foundation_Foundation.reInitializePluginList = function(plugins) {
	window.Foundation.reInit(plugins);
};
foundation_Foundation.reInitializeElement = function(e) {
	window.Foundation.reInit(e);
};
foundation_Foundation.pluginInstance = function(pluginName,args) {
	var tmp;
	var o = window.Foundation;
	var tmp1;
	if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + pluginName])) tmp = o[tmp1](); else tmp = o[pluginName];
	return Type.createInstance(tmp,args);
};
foundation_Foundation.plugin = function(name) {
	var pc = (function($this) {
		var $r;
		var o = window.Foundation;
		var tmp;
		$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + name])?o[tmp]():o[name];
		return $r;
	}(this));
	if(pc != null) return Reflect.makeVarArgs((function($this) {
		var $r;
		var cl = pc;
		$r = function(a1) {
			return Type.createInstance(cl,a1);
		};
		return $r;
	}(this))); else return null;
};
foundation_Foundation.get_mq = function() {
	return window.Foundation.MediaQuery;
};
foundation_Foundation.get_l = function() {
	return window.Foundation;
};
var foundation_Image = function(source) {
	foundation_Widget.call(this);
	this.set_el(js.JQuery("<img></img>"));
	if(source != null) this.el.get(0).src = source;
};
$hxClasses["foundation.Image"] = foundation_Image;
foundation_Image.__name__ = ["foundation","Image"];
foundation_Image.__super__ = foundation_Widget;
foundation_Image.prototype = $extend(foundation_Widget.prototype,{
	get_image: function() {
		return this.el.get(0);
	}
	,get_src: function() {
		return this.el.get(0).src;
	}
	,set_src: function(v) {
		return this.el.get(0).src = v;
	}
	,get_naturalWidth: function() {
		return this.el.get(0).naturalWidth;
	}
	,get_naturalHeight: function() {
		return this.el.get(0).naturalHeight;
	}
	,get_width: function() {
		return this.el.get(0).width;
	}
	,set_width: function(v) {
		return this.el.get(0).width = Math.round(v);
	}
	,get_height: function() {
		return this.el.get(0).height;
	}
	,set_height: function(v) {
		return this.el.get(0).height = Math.round(v);
	}
	,get_complete: function() {
		return this.el.get(0).complete && this.el.get(0).src != null && this.el.get(0).src != "";
	}
	,__class__: foundation_Image
	,__properties__: $extend(foundation_Widget.prototype.__properties__,{get_complete:"get_complete",get_naturalHeight:"get_naturalHeight",get_naturalWidth:"get_naturalWidth",set_src:"set_src",get_src:"get_src",get_image:"get_image"})
});
var foundation_TextualWidget = function() {
	foundation_Widget.call(this);
};
$hxClasses["foundation.TextualWidget"] = foundation_TextualWidget;
foundation_TextualWidget.__name__ = ["foundation","TextualWidget"];
foundation_TextualWidget.__super__ = foundation_Widget;
foundation_TextualWidget.prototype = $extend(foundation_Widget.prototype,{
	get_textColor: function() {
		var tc = this.el.css("color");
		return tannus_graphics__$Color_TColor.fromString(tc);
	}
	,set_textColor: function(tc) {
		this.el.css("color",tc.toString());
		return this.get_textColor();
	}
	,get_textAlign: function() {
		return this.el.css("text-align");
	}
	,set_textAlign: function(v) {
		this.el.css("text-align",v);
		return v;
	}
	,get_fontFamily: function() {
		return this.el.css("font-family");
	}
	,set_fontFamily: function(nf) {
		this.el.css("font-family",nf);
		return this.get_fontFamily();
	}
	,get_fontSize: function() {
		return this.el.css("font-size");
	}
	,set_fontSize: function(nf) {
		this.el.css("font-size",nf);
		return this.get_fontSize();
	}
	,get_lineHeight: function() {
		return this.el.css("line-height");
	}
	,set_lineHeight: function(nf) {
		this.el.css("line-height",nf);
		return this.get_lineHeight();
	}
	,__class__: foundation_TextualWidget
	,__properties__: $extend(foundation_Widget.prototype.__properties__,{set_lineHeight:"set_lineHeight",get_lineHeight:"get_lineHeight",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_fontFamily:"set_fontFamily",get_fontFamily:"get_fontFamily",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_textColor:"set_textColor",get_textColor:"get_textColor"})
});
var foundation_Span = function(txt) {
	foundation_TextualWidget.call(this);
	this.set_el(js.JQuery("<span></span>"));
	if(txt != null) this.set_text(txt);
};
$hxClasses["foundation.Span"] = foundation_Span;
foundation_Span.__name__ = ["foundation","Span"];
foundation_Span.__super__ = foundation_TextualWidget;
foundation_Span.prototype = $extend(foundation_TextualWidget.prototype,{
	__class__: foundation_Span
});
var foundation_Styles = function(ref) {
	this._el = ref;
};
$hxClasses["foundation.Styles"] = foundation_Styles;
foundation_Styles.__name__ = ["foundation","Styles"];
foundation_Styles.prototype = {
	css: function() {
		var e = this._el.get();
		if(e == null) throw new js__$Boot_HaxeError("WidgetError: Cannot modify an Element which does not exist!"); else return tannus_html__$Element_Element_$Impl_$.get_style(e);
	}
	,margin: function(nm) {
		if(nm != null) {
			if((nm instanceof Array) && nm.__enum__ == null) {
				var na = nm;
				this.set_marginTop(na.shift());
				this.set_marginRight(na.shift());
				this.set_marginBottom(na.shift());
				this.set_marginLeft(na.shift());
			} else if(typeof(nm) == "number") {
				this.set_marginTop(nm);
				this.set_marginBottom(nm);
				this.set_marginLeft(nm);
				this.set_marginRight(nm);
			}
		}
		return [this.get_marginTop(),this.get_marginRight(),this.get_marginBottom(),this.get_marginLeft()];
	}
	,padding: function(top,right,bottom,left) {
		var c = this.css();
		if(top != null && right != null && bottom != null && left != null) {
			c.set("padding-top",(top != null?top:top) + "px");
			c.set("padding-right",(right != null?right:right) + "px");
			c.set("padding-left",(left != null?left:left) + "px");
			c.set("padding-bottom",(bottom != null?bottom:bottom) + "px");
		} else if(top != null) c.set("padding",(top != null?top:top) + "px");
		var tmp;
		var x = c.get("padding-top");
		tmp = parseFloat(x);
		var tmp1;
		var x1 = c.get("padding-bottom");
		tmp1 = parseFloat(x1);
		var tmp2;
		var x2 = c.get("padding-left");
		tmp2 = parseFloat(x2);
		var tmp3;
		var x3 = c.get("padding-right");
		tmp3 = parseFloat(x3);
		return { 'top' : tmp, 'bottom' : tmp1, 'left' : tmp2, 'right' : tmp3};
	}
	,border: function(type,color,size) {
		var c = this.css();
		if(type != null && color != null && size != null) {
			c.set("border-style",type != null?type:type);
			var value = (color != null?color:color).toString();
			c.set("border-color",value);
			c.set("border-width",Std.string(size != null?size:size));
		}
		var tmp;
		var s = c.get("border-color");
		tmp = tannus_graphics__$Color_TColor.fromString(s);
		var tmp1;
		var x = c.get("border-width");
		tmp1 = parseFloat(x);
		return { 'style' : c.get("border-style"), 'color' : tmp, 'size' : tmp1};
	}
	,backgroundColor: function(color) {
		var c = this.css();
		if(color != null) c.set("background-color",color.toString());
		var tmp;
		var s = c.get("background-color");
		tmp = tannus_graphics__$Color_TColor.fromString(s);
		return tmp;
	}
	,'float': function(dir) {
		var c = this.css();
		if(dir == null) {
			var tmp;
			var this1 = c.get("float");
			if(this1 != null) tmp = this1; else tmp = this1;
			return tmp;
		} else return c.set("float",dir);
	}
	,position: function(pos) {
		var c = this.css();
		if(pos == null) {
			var tmp;
			var d = c.pluck(["top","left","bottom","right"]);
			tmp = tannus_ds_CObj.create(d);
			var tpos = tmp;
			console.log(tpos.o);
			var val = c.get("position");
			tpos.set("type",val);
			return tpos.o;
		} else {
			c.set("position",pos.type != null?pos.type:"initial");
			if(pos.top != null) c.set("top",pos.top + "px");
			if(pos.left != null) c.set("left",pos.left + "px");
			if(pos.bottom != null) c.set("bottom",pos.bottom + "px");
			if(pos.right != null) c.set("right",pos.right + "px");
			return this.position();
		}
	}
	,display: function(d) {
		var this1 = this.css();
		this1.set("display",d);
	}
	,get_el: function() {
		return this._el.get();
	}
	,get_marginLeft: function() {
		var tmp;
		var tmp1;
		var this1 = this.css();
		tmp1 = this1.get("margin-left");
		var x = tmp1;
		tmp = parseFloat(x);
		return tmp;
	}
	,set_marginLeft: function(ml) {
		var c = this.css();
		c.set("margin-left",ml + "px");
		return ml;
	}
	,get_marginRight: function() {
		var tmp;
		var tmp1;
		var this1 = this.css();
		tmp1 = this1.get("margin-right");
		var x = tmp1;
		tmp = parseFloat(x);
		return tmp;
	}
	,set_marginRight: function(mr) {
		var c = this.css();
		c.set("margin-right",mr + "px");
		return mr;
	}
	,get_marginTop: function() {
		var tmp;
		var tmp1;
		var this1 = this.css();
		tmp1 = this1.get("margin-top");
		var x = tmp1;
		tmp = parseFloat(x);
		return tmp;
	}
	,set_marginTop: function(mr) {
		var c = this.css();
		c.set("margin-top",mr + "px");
		return mr;
	}
	,get_marginBottom: function() {
		var tmp;
		var tmp1;
		var this1 = this.css();
		tmp1 = this1.get("margin-bottom");
		var x = tmp1;
		tmp = parseFloat(x);
		return tmp;
	}
	,set_marginBottom: function(mr) {
		var c = this.css();
		c.set("margin-bottom",mr + "px");
		return mr;
	}
	,_el: null
	,__class__: foundation_Styles
	,__properties__: {set_marginBottom:"set_marginBottom",get_marginBottom:"get_marginBottom",set_marginTop:"set_marginTop",get_marginTop:"get_marginTop",set_marginRight:"set_marginRight",get_marginRight:"get_marginRight",set_marginLeft:"set_marginLeft",get_marginLeft:"get_marginLeft",get_el:"get_el"}
};
var foundation_Tools = function() { };
$hxClasses["foundation.Tools"] = foundation_Tools;
foundation_Tools.__name__ = ["foundation","Tools"];
foundation_Tools.__properties__ = {get_c:"get_c",get_console:"get_console",get_win:"get_win"}
foundation_Tools.defer = function(action) {
	window.requestAnimationFrame(action);
};
foundation_Tools.printError = function(err) {
	window.console.error(err);
};
foundation_Tools.printObject = function(o) {
	window.console.dir(o);
};
foundation_Tools.printTabular = function(o) {
	window.console.table(o);
};
foundation_Tools.get_win = function() {
	return window;
};
foundation_Tools.get_console = function() {
	return window.console;
};
foundation_Tools.get_c = function() {
	return window.console;
};
var foundation_styles__$Pos_Pos_$Impl_$ = {};
$hxClasses["foundation.styles._Pos.Pos_Impl_"] = foundation_styles__$Pos_Pos_$Impl_$;
foundation_styles__$Pos_Pos_$Impl_$.__name__ = ["foundation","styles","_Pos","Pos_Impl_"];
foundation_styles__$Pos_Pos_$Impl_$.__properties__ = {get_o:"get_o",set_type:"set_type",get_type:"get_type"}
foundation_styles__$Pos_Pos_$Impl_$._new = function(o) {
	return o;
};
foundation_styles__$Pos_Pos_$Impl_$.get_type = function(this1) {
	return this1.type != null?this1.type:"initial";
};
foundation_styles__$Pos_Pos_$Impl_$.set_type = function(this1,v) {
	return this1.type = v;
};
foundation_styles__$Pos_Pos_$Impl_$.get_o = function(this1) {
	return this1;
};
var gryffin_Tools = $hx_exports.gryfutils = function() { };
$hxClasses["gryffin.Tools"] = gryffin_Tools;
gryffin_Tools.__name__ = ["gryffin","Tools"];
gryffin_Tools.__properties__ = {get_win:"get_win",get_now:"get_now"}
gryffin_Tools.wait = function(ms,action) {
	return window.setTimeout(action,ms);
};
gryffin_Tools.defer = function(f) {
	window.setTimeout(f,10);
};
gryffin_Tools.makeUniqueIdentifier = function(digits) {
	var id = "";
	var r = new tannus_math_Random();
	var _g = 0;
	while(_g < digits) {
		_g++;
		var range = [0,0];
		var letter = r.randbool();
		if(letter) {
			var upper = r.randbool();
			range = upper?[65,90]:[97,122];
		} else range = [48,57];
		var tmp;
		var n = r.randint(range[0],range[1]);
		var this1;
		if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
		this1 = n;
		tmp = this1;
		var c = tmp;
		id += String.fromCharCode(c);
	}
	if(Lambda.has(gryffin_Tools.used_idents,id)) return gryffin_Tools.makeUniqueIdentifier(digits); else {
		gryffin_Tools.used_idents.push(id);
		return id;
	}
};
gryffin_Tools.deleteUniqueIdentifier = function(id) {
	return HxOverrides.remove(gryffin_Tools.used_idents,id);
};
gryffin_Tools.get_now = function() {
	return new Date().getTime();
};
gryffin_Tools.get_win = function() {
	return window;
};
var gryffin_audio_AudioNode = function(c,n) {
	this.ctx = c;
	this.node = n;
};
$hxClasses["gryffin.audio.AudioNode"] = gryffin_audio_AudioNode;
gryffin_audio_AudioNode.__name__ = ["gryffin","audio","AudioNode"];
gryffin_audio_AudioNode.prototype = {
	connect: function(other,rest) {
		var n = this.conode();
		var args = [other.conode()].concat(rest != null?rest:[]);
		$bind(n,n.connect).apply(n,args);
	}
	,disconnect: function(destination) {
		var n = this.conode();
		if(destination != null) n.disconnect(destination.conode()); else n.disconnect();
	}
	,conode: function() {
		return this.node;
	}
	,get_numberOfInputs: function() {
		return this.node.numberOfInputs;
	}
	,get_numberOfOutputs: function() {
		return this.node.numberOfOutputs;
	}
	,ctx: null
	,node: null
	,__class__: gryffin_audio_AudioNode
	,__properties__: {get_numberOfOutputs:"get_numberOfOutputs",get_numberOfInputs:"get_numberOfInputs"}
};
var gryffin_audio_AudioAnalyser = function(c) {
	this.ui8 = null;
	this.f32 = null;
	gryffin_audio_AudioNode.call(this,c,c.c.createAnalyser());
};
$hxClasses["gryffin.audio.AudioAnalyser"] = gryffin_audio_AudioAnalyser;
gryffin_audio_AudioAnalyser.__name__ = ["gryffin","audio","AudioAnalyser"];
gryffin_audio_AudioAnalyser.__super__ = gryffin_audio_AudioNode;
gryffin_audio_AudioAnalyser.prototype = $extend(gryffin_audio_AudioNode.prototype,{
	getByteFrequencyData: function() {
		if(this.f32 == null || this.f32.length != this.node.frequencyBinCount) this.f32 = new Float32Array(this.node.frequencyBinCount);
		if(this.ui8 == null || this.ui8.length != this.node.frequencyBinCount) this.ui8 = new Uint8Array(this.node.frequencyBinCount);
		this.node.getByteFrequencyData(this.ui8);
		return new gryffin_audio_impl_ByteAudioData(this.ui8);
	}
	,getFloatFrequencyData: function() {
		if(this.f32 == null || this.f32.length != this.node.frequencyBinCount) this.f32 = new Float32Array(this.node.frequencyBinCount);
		if(this.ui8 == null || this.ui8.length != this.node.frequencyBinCount) this.ui8 = new Uint8Array(this.node.frequencyBinCount);
		this.node.getFloatFrequencyData(this.f32);
		return new gryffin_audio_impl_Float32AudioData(this.f32);
	}
	,getByteTimeDomainData: function() {
		if(this.f32 == null || this.f32.length != this.node.frequencyBinCount) this.f32 = new Float32Array(this.node.frequencyBinCount);
		if(this.ui8 == null || this.ui8.length != this.node.frequencyBinCount) this.ui8 = new Uint8Array(this.node.frequencyBinCount);
		this.node.getByteTimeDomainData(this.ui8);
		return new gryffin_audio_impl_ByteAudioData(this.ui8);
	}
	,getFloatTimeDomainData: function() {
		if(this.f32 == null || this.f32.length != this.node.frequencyBinCount) this.f32 = new Float32Array(this.node.frequencyBinCount);
		if(this.ui8 == null || this.ui8.length != this.node.frequencyBinCount) this.ui8 = new Uint8Array(this.node.frequencyBinCount);
		this.node.getFloatTimeDomainData(this.f32);
		return new gryffin_audio_impl_Float32AudioData(this.f32);
	}
	,ensureCache: function() {
		if(this.f32 == null || this.f32.length != this.node.frequencyBinCount) this.f32 = new Float32Array(this.node.frequencyBinCount);
		if(this.ui8 == null || this.ui8.length != this.node.frequencyBinCount) this.ui8 = new Uint8Array(this.node.frequencyBinCount);
	}
	,get_minDecibels: function() {
		return this.node.minDecibels;
	}
	,get_maxDecibels: function() {
		return this.node.maxDecibels;
	}
	,get_decibelRange: function() {
		return new tannus_ds_FloatRange(this.node.minDecibels,this.node.maxDecibels);
	}
	,get_frequencyCount: function() {
		return this.node.frequencyBinCount;
	}
	,get_fftSize: function() {
		return this.node.fftSize;
	}
	,set_fftSize: function(v) {
		return this.node.fftSize = v;
	}
	,get_smoothing: function() {
		return this.node.smoothingTimeConstant;
	}
	,set_smoothing: function(v) {
		return this.node.smoothingTimeConstant = v;
	}
	,f32: null
	,ui8: null
	,__class__: gryffin_audio_AudioAnalyser
	,__properties__: $extend(gryffin_audio_AudioNode.prototype.__properties__,{set_smoothing:"set_smoothing",get_smoothing:"get_smoothing",set_fftSize:"set_fftSize",get_fftSize:"get_fftSize",get_frequencyCount:"get_frequencyCount",get_decibelRange:"get_decibelRange",get_maxDecibels:"get_maxDecibels",get_minDecibels:"get_minDecibels"})
});
var gryffin_audio_AudioBuffer = function(c,b) {
	this.node = b;
	this.ctx = c;
};
$hxClasses["gryffin.audio.AudioBuffer"] = gryffin_audio_AudioBuffer;
gryffin_audio_AudioBuffer.__name__ = ["gryffin","audio","AudioBuffer"];
gryffin_audio_AudioBuffer.prototype = {
	getChannelData: function(channelIndex) {
		var fa = this.node.getChannelData(channelIndex);
		var ad = new gryffin_audio_impl_Float32AudioData(fa);
		return ad;
	}
	,channels: function() {
		return new gryffin_audio__$AudioBuffer_BufferChannelIter(this);
	}
	,get_sampleRate: function() {
		return this.node.sampleRate;
	}
	,get_duration: function() {
		return this.node.duration;
	}
	,get_length: function() {
		return this.node.length;
	}
	,get_numberOfChannels: function() {
		return this.node.numberOfChannels;
	}
	,ctx: null
	,node: null
	,__class__: gryffin_audio_AudioBuffer
	,__properties__: {get_numberOfChannels:"get_numberOfChannels",get_length:"get_length",get_duration:"get_duration",get_sampleRate:"get_sampleRate"}
};
var gryffin_audio__$AudioBuffer_BufferChannelIter = function(buffer) {
	this.b = buffer;
	this.i = new IntIterator(0,this.b.node.numberOfChannels);
};
$hxClasses["gryffin.audio._AudioBuffer.BufferChannelIter"] = gryffin_audio__$AudioBuffer_BufferChannelIter;
gryffin_audio__$AudioBuffer_BufferChannelIter.__name__ = ["gryffin","audio","_AudioBuffer","BufferChannelIter"];
gryffin_audio__$AudioBuffer_BufferChannelIter.prototype = {
	b: null
	,i: null
	,hasNext: function() {
		var tmp;
		var _this = this.i;
		tmp = _this.min < _this.max;
		return tmp;
	}
	,next: function() {
		return this.b.getChannelData(this.i.min++);
	}
	,__class__: gryffin_audio__$AudioBuffer_BufferChannelIter
};
var gryffin_audio_AudioChannelMerger = function(c,count) {
	gryffin_audio_AudioNode.call(this,c,c.c.createChannelMerger(count));
};
$hxClasses["gryffin.audio.AudioChannelMerger"] = gryffin_audio_AudioChannelMerger;
gryffin_audio_AudioChannelMerger.__name__ = ["gryffin","audio","AudioChannelMerger"];
gryffin_audio_AudioChannelMerger.__super__ = gryffin_audio_AudioNode;
gryffin_audio_AudioChannelMerger.prototype = $extend(gryffin_audio_AudioNode.prototype,{
	__class__: gryffin_audio_AudioChannelMerger
});
var gryffin_audio_AudioChannelSplitter = function(c,count) {
	gryffin_audio_AudioNode.call(this,c,c.c.createChannelSplitter(count));
};
$hxClasses["gryffin.audio.AudioChannelSplitter"] = gryffin_audio_AudioChannelSplitter;
gryffin_audio_AudioChannelSplitter.__name__ = ["gryffin","audio","AudioChannelSplitter"];
gryffin_audio_AudioChannelSplitter.__super__ = gryffin_audio_AudioNode;
gryffin_audio_AudioChannelSplitter.prototype = $extend(gryffin_audio_AudioNode.prototype,{
	connectChannel: function(node,channel) {
		this.connect(node,[channel]);
	}
	,get_channels: function() {
		return this.node.channelCount;
	}
	,__class__: gryffin_audio_AudioChannelSplitter
	,__properties__: $extend(gryffin_audio_AudioNode.prototype.__properties__,{get_channels:"get_channels"})
});
var gryffin_audio_AudioContext = function() {
	this.c = new AudioContext();
	this.destination = new gryffin_audio_AudioDestination(this,this.c.destination);
};
$hxClasses["gryffin.audio.AudioContext"] = gryffin_audio_AudioContext;
gryffin_audio_AudioContext.__name__ = ["gryffin","audio","AudioContext"];
gryffin_audio_AudioContext.prototype = {
	close: function(cb) {
		this.c.close().then(cb);
	}
	,createSource: function(src) {
		var element = src;
		if(js_Boot.__instanceof(src,gryffin_audio_Audio)) element = (js_Boot.__cast(src , gryffin_audio_Audio)).sound; else if(js_Boot.__instanceof(src,gryffin_display_Video)) element = (js_Boot.__cast(src , gryffin_display_Video)).vid;
		return new gryffin_audio_AudioSource(this,this.c.createMediaElementSource(element));
	}
	,createAnalyser: function() {
		return new gryffin_audio_AudioAnalyser(this);
	}
	,createChannelSplitter: function(channels) {
		return new gryffin_audio_AudioChannelSplitter(this,channels);
	}
	,createChannelMerger: function(channels) {
		return new gryffin_audio_AudioChannelMerger(this,channels);
	}
	,createBuffer: function(numberOfChannels,length,sampleRate) {
		return new gryffin_audio_AudioBuffer(this,this.c.createBuffer(numberOfChannels,length,sampleRate));
	}
	,createRawProcessor: function(bufferSize,inChannels,outChannels) {
		return new gryffin_audio_RawAudioShader(this,bufferSize,inChannels,outChannels);
	}
	,createShader: function(bufferSize,inChannels,outChannels) {
		return new gryffin_audio_AudioShader(this,this.createRawProcessor(bufferSize,inChannels,outChannels));
	}
	,c: null
	,destination: null
	,__class__: gryffin_audio_AudioContext
};
var gryffin_audio__$AudioData_AudioData_$Impl_$ = {};
$hxClasses["gryffin.audio._AudioData.AudioData_Impl_"] = gryffin_audio__$AudioData_AudioData_$Impl_$;
gryffin_audio__$AudioData_AudioData_$Impl_$.__name__ = ["gryffin","audio","_AudioData","AudioData_Impl_"];
gryffin_audio__$AudioData_AudioData_$Impl_$._new = function(fd) {
	return fd;
};
gryffin_audio__$AudioData_AudioData_$Impl_$.get = function(this1,i) {
	return this1.get(i);
};
gryffin_audio__$AudioData_AudioData_$Impl_$.set = function(this1,i,v) {
	return this1.set(i,v);
};
gryffin_audio__$AudioData_AudioData_$Impl_$.clone = function(this1) {
	return this1.clone();
};
gryffin_audio__$AudioData_AudioData_$Impl_$.slice = function(this1,start,end) {
	return this1.slice(start,end);
};
gryffin_audio__$AudioData_AudioData_$Impl_$.invert = function(this1) {
	return this1.invert();
};
gryffin_audio__$AudioData_AudioData_$Impl_$.writeTo = function(this1,other,offset,start,end) {
	this1.writeTo(other,offset,start,end);
};
gryffin_audio__$AudioData_AudioData_$Impl_$.copyFrom = function(this1,other,offset,start,end) {
	this1.copyFrom(other,offset,start,end);
};
gryffin_audio__$AudioData_AudioData_$Impl_$.toByteArray = function(this1) {
	return this1.getByteArray();
};
gryffin_audio__$AudioData_AudioData_$Impl_$["byte"] = function(l) {
	return new gryffin_audio_impl_ByteAudioData(l);
};
gryffin_audio__$AudioData_AudioData_$Impl_$["float"] = function(l) {
	return new gryffin_audio_impl_Float32AudioData(l);
};
var gryffin_audio_AudioDestination = function(c,n) {
	gryffin_audio_AudioNode.call(this,c,n);
};
$hxClasses["gryffin.audio.AudioDestination"] = gryffin_audio_AudioDestination;
gryffin_audio_AudioDestination.__name__ = ["gryffin","audio","AudioDestination"];
gryffin_audio_AudioDestination.__super__ = gryffin_audio_AudioNode;
gryffin_audio_AudioDestination.prototype = $extend(gryffin_audio_AudioNode.prototype,{
	__class__: gryffin_audio_AudioDestination
});
var gryffin_audio_AudioShader = function(c,ras) {
	this.logs = 0;
	gryffin_audio_AudioNode.call(this,c,ras.node);
	this.raw = ras;
	this.processEvent = new tannus_io_Signal();
	this.raw.node.onaudioprocess = $bind(this,this._bod);
};
$hxClasses["gryffin.audio.AudioShader"] = gryffin_audio_AudioShader;
gryffin_audio_AudioShader.__name__ = ["gryffin","audio","AudioShader"];
gryffin_audio_AudioShader.__super__ = gryffin_audio_AudioNode;
gryffin_audio_AudioShader.prototype = $extend(gryffin_audio_AudioNode.prototype,{
	_bod: function(e) {
		var scope = new gryffin_audio_AudioShaderScope(this,e);
		this.processEvent.broadcast(scope);
		if(this.logs < 100) {
			console.log(scope.output.getChannelData(0));
			this.logs++;
		}
	}
	,conode: function() {
		return this.raw.conode();
	}
	,raw: null
	,processEvent: null
	,logs: null
	,__class__: gryffin_audio_AudioShader
});
var gryffin_audio_AudioShaderScope = function(s,e) {
	this.shader = s;
	this.event = e;
	this.input = new gryffin_audio_AudioBuffer(this.shader.ctx,this.event.inputBuffer);
	this.output = new gryffin_audio_AudioBuffer(this.shader.ctx,this.event.outputBuffer);
};
$hxClasses["gryffin.audio.AudioShaderScope"] = gryffin_audio_AudioShaderScope;
gryffin_audio_AudioShaderScope.__name__ = ["gryffin","audio","AudioShaderScope"];
gryffin_audio_AudioShaderScope.prototype = {
	input: null
	,output: null
	,shader: null
	,event: null
	,__class__: gryffin_audio_AudioShaderScope
};
var gryffin_audio_AudioSource = function(c,n) {
	gryffin_audio_AudioNode.call(this,c,n);
};
$hxClasses["gryffin.audio.AudioSource"] = gryffin_audio_AudioSource;
gryffin_audio_AudioSource.__name__ = ["gryffin","audio","AudioSource"];
gryffin_audio_AudioSource.__super__ = gryffin_audio_AudioNode;
gryffin_audio_AudioSource.prototype = $extend(gryffin_audio_AudioNode.prototype,{
	__class__: gryffin_audio_AudioSource
});
var gryffin_audio_RawAudioShader = function(c,size,ichan,ochan) {
	gryffin_audio_AudioNode.call(this,c,c.c.createScriptProcessor(size,ichan,ochan));
};
$hxClasses["gryffin.audio.RawAudioShader"] = gryffin_audio_RawAudioShader;
gryffin_audio_RawAudioShader.__name__ = ["gryffin","audio","RawAudioShader"];
gryffin_audio_RawAudioShader.__super__ = gryffin_audio_AudioNode;
gryffin_audio_RawAudioShader.prototype = $extend(gryffin_audio_AudioNode.prototype,{
	get_bufferSize: function() {
		return this.node.bufferSize;
	}
	,get_body: function() {
		return this.node.onaudioprocess;
	}
	,set_body: function(v) {
		return this.node.onaudioprocess = v;
	}
	,__class__: gryffin_audio_RawAudioShader
	,__properties__: $extend(gryffin_audio_AudioNode.prototype.__properties__,{set_body:"set_body",get_body:"get_body",get_bufferSize:"get_bufferSize"})
});
var gryffin_audio_impl_ADIter = function(ad) {
	this.i = new IntIterator(0,ad.get_length());
	this.d = ad;
};
$hxClasses["gryffin.audio.impl.ADIter"] = gryffin_audio_impl_ADIter;
gryffin_audio_impl_ADIter.__name__ = ["gryffin","audio","impl","ADIter"];
gryffin_audio_impl_ADIter.prototype = {
	i: null
	,d: null
	,hasNext: function() {
		var tmp;
		var _this = this.i;
		tmp = _this.min < _this.max;
		return tmp;
	}
	,next: function() {
		return this.d.get(this.i.min++);
	}
	,__class__: gryffin_audio_impl_ADIter
};
var gryffin_audio_impl_IAudioData = function() { };
$hxClasses["gryffin.audio.impl.IAudioData"] = gryffin_audio_impl_IAudioData;
gryffin_audio_impl_IAudioData.__name__ = ["gryffin","audio","impl","IAudioData"];
gryffin_audio_impl_IAudioData.prototype = {
	get_length: null
	,buffer: null
	,get: null
	,set: null
	,iterator: null
	,clone: null
	,slice: null
	,invert: null
	,reverse: null
	,writeTo: null
	,copyFrom: null
	,getByteArray: null
	,__class__: gryffin_audio_impl_IAudioData
	,__properties__: {get_length:"get_length"}
};
var gryffin_audio_impl_ByteAudioData = function(array) {
	this.d = array;
	this.buffer = this.d.buffer;
};
$hxClasses["gryffin.audio.impl.ByteAudioData"] = gryffin_audio_impl_ByteAudioData;
gryffin_audio_impl_ByteAudioData.__name__ = ["gryffin","audio","impl","ByteAudioData"];
gryffin_audio_impl_ByteAudioData.__interfaces__ = [gryffin_audio_impl_IAudioData];
gryffin_audio_impl_ByteAudioData.prototype = {
	get: function(i) {
		return this.d[i];
	}
	,set: function(i,v) {
		return this.d[i] = v;
	}
	,iterator: function() {
		return new gryffin_audio_impl_ADIter(this);
	}
	,clone: function() {
		return new gryffin_audio_impl_ByteAudioData(new Uint8Array(this.d.buffer.slice(0)));
	}
	,slice: function(start,end) {
		return new gryffin_audio_impl_ByteAudioData(this.d.subarray(start,end));
	}
	,reverse: function() {
		var _g1 = 0;
		var _g = Math.floor(this.d.length / 2);
		while(_g1 < _g) {
			var i = _g1++;
			var temp = this.d[i];
			this.d[i] = this.d[this.d.length - i - 1];
			this.d[this.d.length - i - 1] = temp;
		}
	}
	,invert: function() {
		var id = new Uint8Array(this.d.buffer.slice(0));
		var _g1 = 0;
		var _g = id.length;
		while(_g1 < _g) {
			var i = _g1++;
			id[i] = 255 - id[i];
		}
		return new gryffin_audio_impl_ByteAudioData(id);
	}
	,getByteArray: function(start,end) {
		var tmp;
		var o = this.d.subarray(start,end);
		tmp = Array.prototype.slice.call(o,0);
		var clone_d = new Uint8Array(tmp);
		return tannus_io_impl_BrowserBinary.ofData(clone_d.buffer);
	}
	,writeTo: function(other,offset,start,end) {
		if(start == null) start = 0;
		if(end == null) end = this.d.length - 1;
		if(offset == null) offset = 0;
		var _g = start;
		while(_g < end) {
			var i = _g++;
			other.set(i + offset,this.d[i]);
		}
	}
	,copyFrom: function(other,offset,start,end) {
		other.writeTo(this,offset,start,end);
	}
	,get_length: function() {
		return this.d.length;
	}
	,buffer: null
	,d: null
	,__class__: gryffin_audio_impl_ByteAudioData
	,__properties__: {get_length:"get_length"}
};
var gryffin_audio_impl_Float32AudioData = function(array) {
	this.d = array;
	this.buffer = this.d.buffer;
};
$hxClasses["gryffin.audio.impl.Float32AudioData"] = gryffin_audio_impl_Float32AudioData;
gryffin_audio_impl_Float32AudioData.__name__ = ["gryffin","audio","impl","Float32AudioData"];
gryffin_audio_impl_Float32AudioData.__interfaces__ = [gryffin_audio_impl_IAudioData];
gryffin_audio_impl_Float32AudioData.prototype = {
	get: function(i) {
		return this.d[i];
	}
	,set: function(i,v) {
		return this.d[i] = v;
	}
	,iterator: function() {
		return new gryffin_audio_impl_ADIter(this);
	}
	,clone: function() {
		return new gryffin_audio_impl_Float32AudioData(new Float32Array(this.d.buffer.slice(0)));
	}
	,slice: function(start,end) {
		return new gryffin_audio_impl_Float32AudioData(this.d.subarray(start,end));
	}
	,reverse: function() {
		var _g1 = 0;
		var _g = Math.floor(this.d.length / 2);
		while(_g1 < _g) {
			var i = _g1++;
			var temp = this.d[i];
			this.d[i] = this.d[this.d.length - i - 1];
			this.d[this.d.length - i - 1] = temp;
		}
	}
	,invert: function() {
		var id = new Float32Array(this.d.buffer.slice(0));
		var _g1 = 0;
		var _g = id.length;
		while(_g1 < _g) {
			var i = _g1++;
			id[i] = 255 - id[i];
		}
		return new gryffin_audio_impl_Float32AudioData(id);
	}
	,getByteArray: function(start,end) {
		if(start == null) start = 0;
		if(end == null) end = this.d.length - 1;
		var len = end - start;
		var bytes = tannus_io_impl_BrowserBinary.alloc(4 * len);
		var _g = start;
		while(_g < end) {
			var i = _g++;
			bytes.setInt32(i - start,tannus_math_TMath.floatToI32(this.d[i]));
		}
		return bytes;
	}
	,writeTo: function(other,offset,start,end) {
		(js_Boot.__cast(other , Float32Array)).set(this.d.subarray(start,end),offset);
	}
	,copyFrom: function(other,offset,start,end) {
		other.writeTo(this,offset,start,end);
	}
	,get_length: function() {
		return this.d.length;
	}
	,buffer: null
	,d: null
	,__class__: gryffin_audio_impl_Float32AudioData
	,__properties__: {get_length:"get_length"}
};
var gryffin_core_GlobalStyles = function(s) {
	this.stage = s;
	this.sheet = new tannus_css_StyleSheet();
	this.link = new tannus_dom_CElement("<link rel=\"stylesheet\" type=\"text/css\"/>");
	this.fontRules = [];
	this.initialize();
};
$hxClasses["gryffin.core.GlobalStyles"] = gryffin_core_GlobalStyles;
gryffin_core_GlobalStyles.__name__ = ["gryffin","core","GlobalStyles"];
gryffin_core_GlobalStyles.prototype = {
	fill: function() {
		this.sheet.rule("*",{ 'margin' : 0, 'padding' : 0});
		this.sheet.rule("body, html",{ 'height' : "100%"});
		this.sheet.rule("canvas",{ 'position' : "absolute", 'width' : "100%", 'height' : "100%"});
	}
	,addFont: function(name,href) {
		return this.sheet.fontFace(name,href);
	}
	,hasFont: function(name) {
		return this.sheet.hasFontFace(name);
	}
	,initialize: function() {
		var head = new tannus_dom_CElement("head");
		head.append(this.link);
		this.sheet._update.on($bind(this,this.update));
	}
	,getCSS: function() {
		return this.sheet.toByteArray();
	}
	,getBlob: function() {
		var tmp;
		var dat = this.sheet.toByteArray();
		tmp = new tannus_io_CBlob("stylesheet","text/css",dat);
		return tmp;
	}
	,listen: function() {
		this.sheet._update.on($bind(this,this.update));
	}
	,update: function() {
		var tmp;
		var dat = this.sheet.toByteArray();
		tmp = new tannus_io_CBlob("stylesheet","text/css",dat);
		var blob = tmp;
		var v = blob.toDataURL();
		this.link.setAttribute("href",v);
	}
	,stage: null
	,sheet: null
	,link: null
	,fontRules: null
	,__class__: gryffin_core_GlobalStyles
};
var gryffin_core_Selection = function(sel,entities) {
	this.selector = sel;
	this.all = entities;
	this.update();
};
$hxClasses["gryffin.core.Selection"] = gryffin_core_Selection;
gryffin_core_Selection.__name__ = ["gryffin","core","Selection"];
gryffin_core_Selection.prototype = {
	update: function() {
		this.selected = this.selector.filter(this.all());
	}
	,at: function(index) {
		return this.selected[index];
	}
	,iterator: function() {
		return HxOverrides.iter(this.selected);
	}
	,filter: function(sel) {
		var _g = this;
		return new gryffin_core_Selection(sel,function() {
			return _g.selected;
		});
	}
	,containsPoint: function(p) {
		var _g = this;
		var gettr = function() {
			return _g.all().filter(function(item) {
				return item.containsPoint(p);
			});
		};
		return new gryffin_core_Selection(this.selector,gettr);
	}
	,call: function(method,args) {
		if(args == null) args = [];
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var ent = _g1[_g];
			++_g;
			var e = tannus_ds_CObj.create(ent);
			var tmp;
			var o = e.o;
			var tmp2;
			if(o == null) tmp = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + method])) tmp = o[tmp2](); else tmp = o[method];
			var f = tmp;
			var tmp1;
			var o1 = [ent];
			var a1 = [f];
			tmp1 = (function(a1,o1) {
				return function(a2) {
					return Reflect.callMethod(o1[0],a1[0],a2);
				};
			})(a1,o1);
			f = tmp1;
			try {
				f(args);
			} catch( error ) {
				if (error instanceof js__$Boot_HaxeError) error = error.val;
				throw new js__$Boot_HaxeError(error);
			}
		}
	}
	,cache: function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.cache();
		}
	}
	,uncache: function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.uncache();
		}
	}
	,hide: function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.hide();
		}
	}
	,show: function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.show();
		}
	}
	,'delete': function() {
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item["delete"]();
		}
	}
	,children: function() {
		var tmp;
		var f = $bind(this,this._selectedChildren);
		tmp = function() {
			return f();
		};
		return new gryffin_core_Selection(new tannus_nore_CSelector("!String"),tmp);
	}
	,_selectedChildren: function() {
		var results = [];
		var _g = 0;
		var _g1 = this.selected;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(e,gryffin_core_EntityContainer)) results = results.concat((js_Boot.__cast(e , gryffin_core_EntityContainer)).getChildren());
		}
		return results;
	}
	,get_length: function() {
		return this.selected.length;
	}
	,selector: null
	,selected: null
	,all: null
	,__class__: gryffin_core_Selection
	,__properties__: {get_length:"get_length"}
};
var gryffin_core_Stage = function(can) {
	this.noclear = false;
	gryffin_core_EventDispatcher.call(this);
	this.canvas = new gryffin_display_Canvas(can);
	this.children = [];
	this.registry = new haxe_ds_StringMap();
	this.styles = new gryffin_core_GlobalStyles(this);
	this.manager = new gryffin_events_FrameManager();
	this.mouseManager = new gryffin_events_MouseListener(this);
	this.keyManager = new gryffin_events_KeyListener(this);
	this.mouseWatcher = new gryffin_events_MouseWatcher(this);
	this.eventTimes = new haxe_ds_StringMap();
	this._fill = false;
	var tmp;
	var this1 = window;
	tmp = new tannus_geom_CRectangle(this1.scrollX,this1.scrollY,this1.innerWidth,this1.innerHeight);
	this.lastWindowSize = tmp;
	this.__init();
};
$hxClasses["gryffin.core.Stage"] = gryffin_core_Stage;
gryffin_core_Stage.__name__ = ["gryffin","core","Stage"];
gryffin_core_Stage.__interfaces__ = [gryffin_core_Container];
gryffin_core_Stage.__properties__ = {get_window:"get_window"}
gryffin_core_Stage.get_window = function() {
	return window;
};
gryffin_core_Stage.__super__ = gryffin_core_EventDispatcher;
gryffin_core_Stage.prototype = $extend(gryffin_core_EventDispatcher.prototype,{
	attach: function(can) {
		this.canvas = new gryffin_display_Canvas(can);
		this.mouseManager.rebind();
	}
	,resize: function(w,h) {
		var _w = this.canvas.canvas.width;
		var _h = this.canvas.canvas.height;
		var _this = this.canvas;
		_this.resize(w,_this.canvas.height);
		var _this1 = this.canvas;
		_this1.resize(_this1.canvas.width,h);
		if(!(this.canvas.canvas.width == _w && this.canvas.canvas.height == _h)) {
			var o = [_w,_h];
			var n = [this.canvas.canvas.width,this.canvas.canvas.height];
			var event = new tannus_events_ResizeEvent(o,n);
			this.dispatch("resize",event);
		}
		this.calculateGeometry();
	}
	,addChild: function(child) {
		if(!Lambda.has(this.children,child)) {
			this.children.push(child);
			var tmp;
			var _this = this.registry;
			var key = child.id;
			if(__map_reserved[key] != null) _this.setReserved(key,child); else _this.h[key] = child;
			tmp = child;
			tmp;
			child.stage = this;
			child.dispatch("activated",this);
		}
	}
	,hasChild: function(child) {
		return Lambda.has(this.children,child);
	}
	,fill: function() {
		this._fill = true;
		this.styles.fill();
	}
	,loadFontFace: function(family,source) {
		this.styles.addFont(family,source);
	}
	,isFontFaceLoaded: function(family) {
		return this.styles.hasFont(family);
	}
	,getMousePosition: function() {
		return this.mouseWatcher.getMousePosition();
	}
	,mostRecentOccurrenceTime: function(event) {
		var tmp;
		var _this = this.eventTimes;
		if(__map_reserved[event] != null) tmp = _this.getReserved(event); else tmp = _this.h[event];
		return tmp;
	}
	,getEntitiesAtPoint: function(p,list) {
		return this.walk().filter(function(item) {
			return item.containsPoint(p);
		});
	}
	,getEntitiesAt: function(x,y) {
		return this.getEntitiesAtPoint(new tannus_geom_TPoint(x,y,0));
	}
	,getEntityAtPoint: function(p) {
		var start = new Date().getTime();
		var target = null;
		this.children.reverse();
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.containsPoint(p)) {
				target = e;
				if(js_Boot.__instanceof(e,gryffin_core_EntityContainer)) {
					var c = e;
					var etarget = c.getEntityAtPoint(p);
					if(etarget != null) target = etarget;
				}
				break;
			}
		}
		this.children.reverse();
		var took = new Date().getTime() - start;
		return target;
	}
	,getEntityAt: function(x,y) {
		return this.getEntityAtPoint(new tannus_geom_TPoint(x,y,0));
	}
	,frame: function(delta) {
		if(this._fill) {
			var tmp;
			var this1 = window;
			tmp = new tannus_geom_CRectangle(this1.scrollX,this1.scrollY,this1.innerWidth,this1.innerHeight);
			var vp = tmp;
			if(vp != this.lastWindowSize) {
				var cw = vp.width | 0;
				var ch = vp.height | 0;
				this.resize(cw,ch);
				this.lastWindowSize = vp;
			}
		}
		var filtr = tannus_ds_ArrayTools.splitfilter(this.children,function(e) {
			return !e.destroyed;
		});
		var _g = 0;
		var _g1 = filtr.fail;
		while(_g < _g1.length) {
			var ent = _g1[_g];
			++_g;
			this.registry.remove(ent.id);
		}
		this.children = filtr.pass;
		haxe_ds_ArraySort.sort(this.children,function(a,b) {
			return a.priority - b.priority;
		});
		if(!this.noclear) this.canvas._ctx.get().erase();
		var _g2 = 0;
		var _g11 = this.children;
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			if(!child._cached) child.update(this);
			if(!child._hidden) child.render(this,this.canvas._ctx.get());
		}
		if(gryffin_fx_Animations.manager == this) gryffin_fx_Animations.tick();
	}
	,calculateGeometry: function() {
		var vp = new tannus_geom_CRectangle(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.calculateGeometry(vp);
		}
	}
	,walk: function(list,ignore) {
		if(list == null) list = this.children;
		var res = [];
		var _g = 0;
		while(_g < list.length) {
			var ent = list[_g];
			++_g;
			if(ignore != null && ignore(ent)) continue; else {
				res.push(ent);
				res = res.concat(this.walk(ent.getChildren(),ignore));
			}
		}
		return res;
	}
	,tree: function(list,kids) {
		if(list == null) list = [];
		if(kids == null) kids = this.children;
		kids.reverse();
		var _g = 0;
		while(_g < kids.length) {
			var child = kids[_g];
			++_g;
			if(js_Boot.__instanceof(child,gryffin_core_EntityContainer)) {
				var c = child;
				var sub = this.tree(list,c.getChildren());
				list.push([child,sub]);
			} else list.push(child);
		}
		kids.reverse();
		return list;
	}
	,get: function(sel) {
		var _g = this;
		return new gryffin_core_Selection(new tannus_nore_CSelector(sel),function() {
			return _g.walk();
		});
	}
	,mouseEvent: function(e) {
		this.dispatch(e.type,e);
		if(e._cancelled || e._propogationStopped) return;
		var finalTarget = this.getEntityAtPoint(e.position);
		var tmp;
		if(finalTarget != null) {
			var tmp1;
			if(!finalTarget.isHidden()) tmp1 = finalTarget.isCached(); else tmp1 = true;
			var tmp2;
			if(!tmp1) tmp2 = finalTarget.destroyed; else tmp2 = true;
			tmp = !tmp2;
		} else tmp = false;
		if(tmp) {
			var eventPath = [];
			var currentTarget = finalTarget;
			eventPath.unshift(finalTarget);
			while(currentTarget.parent != null) {
				currentTarget = currentTarget.parent;
				eventPath.unshift(currentTarget);
			}
			var _g = 0;
			while(_g < eventPath.length) {
				var target = eventPath[_g];
				++_g;
				target.dispatch(e.type,e);
				if(e._cancelled || e._propogationStopped) break;
			}
		}
	}
	,__init: function() {
		this.__events();
		gryffin_fx_Animations.claim(this);
	}
	,__events: function() {
		this.manager.frame.listen($bind(this,this.frame),false);
		this.manager.start();
	}
	,dispatch: function(name,data) {
		gryffin_core_EventDispatcher.prototype.dispatch.call(this,name,data);
		var value = new Date().getTime();
		var _this = this.eventTimes;
		if(__map_reserved[name] != null) _this.setReserved(name,value); else _this.h[name] = value;
	}
	,pause: function() {
		this.manager.pause();
	}
	,resume: function() {
		this.manager.resume();
	}
	,get_width: function() {
		return this.canvas.canvas.width;
	}
	,set_width: function(v) {
		this.resize(v,this.canvas.canvas.height);
		return this.canvas.canvas.width;
	}
	,get_height: function() {
		return this.canvas.canvas.height;
	}
	,set_height: function(v) {
		this.resize(this.canvas.canvas.width,v);
		return this.canvas.canvas.height;
	}
	,get_rect: function() {
		return new tannus_geom_CRectangle(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
	}
	,set_rect: function(v) {
		this.resize(Math.round(v.width),Math.round(v.height));
		return new tannus_geom_CRectangle(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
	}
	,get_cursor: function() {
		return this.canvas.canvas.style.cursor;
	}
	,set_cursor: function(v) {
		return this.canvas.canvas.style.cursor = v;
	}
	,get_ctx: function() {
		return this.canvas._ctx.get();
	}
	,get_paused: function() {
		return this.manager._paused;
	}
	,canvas: null
	,children: null
	,registry: null
	,noclear: null
	,manager: null
	,mouseManager: null
	,keyManager: null
	,mouseWatcher: null
	,styles: null
	,_fill: null
	,lastWindowSize: null
	,eventTimes: null
	,__class__: gryffin_core_Stage
	,__properties__: {get_paused:"get_paused",get_ctx:"get_ctx",set_cursor:"set_cursor",get_cursor:"get_cursor",set_rect:"set_rect",get_rect:"get_rect",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
});
var gryffin_display_CPixels = function(dat) {
	this.idata = dat;
	this.data = this.idata.data;
};
$hxClasses["gryffin.display.CPixels"] = gryffin_display_CPixels;
gryffin_display_CPixels.__name__ = ["gryffin","display","CPixels"];
gryffin_display_CPixels.__interfaces__ = [gryffin_display_Paintable];
gryffin_display_CPixels.fromByteArray = function(b) {
	var tmp;
	var tmp1;
	var _this = b.sub(2,b._length - 2);
	tmp1 = _this.b;
	var i = new ImageData(tmp1,b.get(0),b.get(1));
	tmp = new gryffin_display_CPixels(i);
	return tmp;
};
gryffin_display_CPixels.imageDataFromByteArray = function(b) {
	var tmp;
	var _this = b.sub(2,b._length - 2);
	tmp = _this.b;
	return new ImageData(tmp,b.get(0),b.get(1));
};
gryffin_display_CPixels.prototype = {
	paint: function(c,s,d) {
		c.ctx.putImageData(this.idata,s.x,s.y,d.x,d.y,d.width,d.height);
	}
	,link: function(context,area) {
		return new gryffin_display_LinkedPixels(context,area,this.idata);
	}
	,at: function(x,y) {
		return new gryffin_display_Pixel(this,new tannus_geom_TPoint(x,y,0));
	}
	,ati: function(index) {
		return new gryffin_display_Pixel(this,new tannus_geom_TPoint(index % this.idata.width,index / this.idata.width,0));
	}
	,getColor: function(xi,y) {
		if(y == null) return this.getAtIndex(xi | 0); else return this.getAtIndex((xi | 0) + (y | 0) * this.idata.width);
	}
	,getAtPos: function(x,y) {
		return this.getAtIndex((x | 0) + (y | 0) * this.idata.width);
	}
	,getAtIndex: function(i) {
		i *= 4;
		var col = new tannus_graphics__$Color_TColor(this.data[i],this.data[i + 1],this.data[i + 2],this.data[i + 3]);
		return col;
	}
	,setAtIndex: function(i,color) {
		i *= 4;
		this.data[i] = color.get_red();
		this.data[i + 1] = color.get_green();
		this.data[i + 2] = color.get_blue();
		this.data[i + 3] = color.get_alpha() != null?color.get_alpha():0;
		return color;
	}
	,setAtPos: function(x,y,color) {
		return this.setAtIndex((x | 0) + (y | 0) * this.idata.width,color);
	}
	,setColor: function(x,y,color) {
		return this.setAtIndex((x | 0) + (y | 0) * this.idata.width,color);
	}
	,get_red: function(x,y) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4];
	}
	,get_green: function(x,y) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 1];
	}
	,get_blue: function(x,y) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 2];
	}
	,get_alpha: function(x,y) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 3];
	}
	,set_red: function(x,y,val) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4] = val;
	}
	,set_green: function(x,y,val) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 1] = val;
	}
	,set_blue: function(x,y,val) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 2] = val;
	}
	,set_alpha: function(x,y,val) {
		return this.data[((x | 0) + (y | 0) * this.idata.width) * 4 + 3] = val;
	}
	,index: function(x,y) {
		return (x | 0) + (y | 0) * this.idata.width;
	}
	,coords: function(index) {
		return [index % this.idata.width + 0.0,index / this.idata.width];
	}
	,write: function(target,x,y,sx,sy,sw,sh) {
		if(sy == null) sy = 0;
		if(sx == null) sx = 0;
		target.ctx.putImageData(this.idata,x,y,sx,sy,sw != null?sw:this.idata.width,sh != null?sh:this.idata.height);
	}
	,save: function() {
	}
	,iterator: function() {
		return new gryffin_display_PixelsIterator(this);
	}
	,getData: function() {
		return this.idata;
	}
	,toByteArray: function() {
		var data = tannus_io_impl_BrowserBinary.ofData(this.idata.data.buffer);
		data.shiftRight(2);
		data.position = 0;
		data.set(data.position++,this.idata.width);
		data.set(data.position++,this.idata.height);
		console.log(data._length);
		return data;
	}
	,skim: function(jump) {
		return new gryffin_display_PixelsIterator(this,jump);
	}
	,getAverageColor: function() {
		var c = null;
		var $it0 = this.skim(25);
		while( $it0.hasNext() ) {
			var pixel = $it0.next();
			if(c == null) {
				var tmp;
				var _this = pixel.src;
				var x = pixel.pos.get_x();
				var y = pixel.pos.get_y();
				tmp = _this.getAtIndex((x | 0) + (y | 0) * _this.idata.width);
				c = tmp;
			} else {
				var tmp1;
				var tmp2;
				var _this1 = pixel.src;
				var x1 = pixel.pos.get_x();
				var y1 = pixel.pos.get_y();
				tmp2 = _this1.getAtIndex((x1 | 0) + (y1 | 0) * _this1.idata.width);
				var other = tmp2;
				tmp1 = c.mix(other,50);
				c = tmp1;
			}
		}
		return c;
	}
	,get_width: function() {
		return this.idata.width;
	}
	,get_height: function() {
		return this.idata.height;
	}
	,get_length: function() {
		return this.data.length / 4 | 0;
	}
	,get_imageData: function() {
		return this.idata;
	}
	,idata: null
	,data: null
	,__class__: gryffin_display_CPixels
	,__properties__: {get_imageData:"get_imageData",get_length:"get_length",get_height:"get_height",get_width:"get_width"}
};
var gryffin_display_PixelsIterator = function(p,j) {
	if(j == null) j = 1;
	this.src = p;
	this.i = 0;
	this.step = j;
};
$hxClasses["gryffin.display.PixelsIterator"] = gryffin_display_PixelsIterator;
gryffin_display_PixelsIterator.__name__ = ["gryffin","display","PixelsIterator"];
gryffin_display_PixelsIterator.prototype = {
	hasNext: function() {
		return this.i < (this.src.data.length / 4 | 0);
	}
	,next: function() {
		var _i = this.i;
		this.i += this.step;
		var tmp;
		var _this = this.src;
		tmp = new gryffin_display_Pixel(_this,new tannus_geom_TPoint(_i % _this.idata.width,_i / _this.idata.width,0));
		return tmp;
	}
	,src: null
	,i: null
	,step: null
	,__class__: gryffin_display_PixelsIterator
};
var gryffin_display_Canvas = function(c) {
	var _g = this;
	if(c != null) this.canvas = c; else {
		var tmp;
		var _this = window.document;
		tmp = _this.createElement("canvas");
		this.canvas = tmp;
	}
	this._ctx = new tannus_ds_CRef(function() {
		var tmp1;
		var c1 = _g.canvas.getContext("2d",null);
		tmp1 = new gryffin_display_Context(c1);
		return tmp1;
	});
};
$hxClasses["gryffin.display.Canvas"] = gryffin_display_Canvas;
gryffin_display_Canvas.__name__ = ["gryffin","display","Canvas"];
gryffin_display_Canvas.__interfaces__ = [gryffin_display_Paintable];
gryffin_display_Canvas.create = function(w,h) {
	var can = new gryffin_display_Canvas();
	can.resize(w,h);
	return can;
};
gryffin_display_Canvas.prototype = {
	clone: function() {
		var c = this.canvas.cloneNode();
		return new gryffin_display_Canvas(c);
	}
	,resize: function(w,h) {
		var _g = this;
		this.canvas.width = w;
		this.canvas.height = h;
		this._ctx = new tannus_ds_CRef(function() {
			var tmp;
			var c = _g.canvas.getContext("2d",null);
			tmp = new gryffin_display_Context(c);
			return tmp;
		});
	}
	,resized: function(w,h) {
		var copy = gryffin_display_Canvas.create(Math.floor(w),Math.floor(h));
		copy._ctx.get().drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,copy.canvas.width,copy.canvas.height);
		return copy;
	}
	,scale: function(w,h) {
		if(h == null) h = w;
		var copy = gryffin_display_Canvas.create(Math.floor(w * this.canvas.width),Math.floor(h * this.canvas.height));
		copy._ctx.get().drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,copy.canvas.width,copy.canvas.height);
		return copy;
	}
	,paint: function(c,src,dest) {
		c.drawImage(this.canvas,src.x,src.y,src.width,src.height,dest.x,dest.y,dest.width,dest.height);
	}
	,dataURI: function(type) {
		return this.canvas.toDataURL(type);
	}
	,toBlob: function(cb,type) {
		this.canvas.toBlob(function(b) {
			var readr = new FileReader();
			readr.onload = function(e) {
				var data = tannus_io_impl_BrowserBinary.ofData(e.target.result);
				var blob = new tannus_io_CBlob("blob",type == null?"image/png":type,data);
				cb(blob);
			};
			readr.readAsArrayBuffer(b);
		},type);
	}
	,getImage: function(cb) {
		return gryffin_display_Image.load(this.dataURI(),cb);
	}
	,get_width: function() {
		return this.canvas.width;
	}
	,set_width: function(v) {
		this.resize(v,this.canvas.height);
		return this.canvas.width;
	}
	,get_height: function() {
		return this.canvas.height;
	}
	,set_height: function(v) {
		this.resize(this.canvas.width,v);
		return this.canvas.height;
	}
	,get_context: function() {
		return this._ctx.get();
	}
	,get_pixels: function() {
		var tmp;
		var _this = this._ctx.get();
		var i = _this.getImageData(0,0,this.canvas.width,this.canvas.height);
		tmp = new gryffin_display_CPixels(i);
		return tmp.link(this._ctx.get(),new tannus_geom_CRectangle(0,0,this.canvas.width,this.canvas.height));
	}
	,canvas: null
	,_ctx: null
	,__class__: gryffin_display_Canvas
	,__properties__: {get_pixels:"get_pixels",get_context:"get_context",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
};
var gryffin_display_Context = function(ctx) {
	this.ctx = ctx;
};
$hxClasses["gryffin.display.Context"] = gryffin_display_Context;
gryffin_display_Context.__name__ = ["gryffin","display","Context"];
gryffin_display_Context.prototype = {
	erase: function() {
		this.ctx.clearRect(0,0,this.get_width(),this.get_height());
	}
	,paint: function(comp,src,dest) {
		comp.paint(new gryffin_display_Context(this.ctx),src,dest);
	}
	,drawComponent: function(comp,sx,sy,sw,sh,dx,dy,dw,dh) {
		var src = new tannus_geom_CRectangle(sx,sy,sw,sh);
		var dest = new tannus_geom_CRectangle(dx,dy,dw,dh);
		comp.paint(new gryffin_display_Context(this.ctx),src,dest);
	}
	,drawVertices: function(vertices) {
		gryffin_display_CtxTools.drawVertices(new gryffin_display_Context(this.ctx),vertices);
	}
	,save: function() {
		this.ctx.save();
	}
	,restore: function() {
		this.ctx.restore();
	}
	,scale: function(x,y) {
		this.ctx.scale(x,y);
	}
	,rotate: function(angle) {
		this.ctx.rotate(angle);
	}
	,translate: function(x,y) {
		this.ctx.translate(x,y);
	}
	,transform: function(a,b,c,d,e,f) {
		this.ctx.transform(a,b,c,d,e,f);
	}
	,setTransform: function(a,b,c,d,e,f) {
		this.ctx.setTransform(a,b,c,d,e,f);
	}
	,resetTransform: function() {
		this.ctx.resetTransform();
	}
	,createLinearGradient: function(x0,y0,x1,y1) {
		return this.ctx.createLinearGradient(x0,y0,x1,y1);
	}
	,createRadialGradient: function(x0,y0,r0,x1,y1,r1) {
		return this.ctx.createRadialGradient(x0,y0,r0,x1,y1,r1);
	}
	,clearRect: function(x,y,w,h) {
		this.ctx.clearRect(x,y,w,h);
	}
	,fillRect: function(x,y,w,h) {
		this.ctx.fillRect(x,y,w,h);
	}
	,strokeRect: function(x,y,w,h) {
		this.ctx.strokeRect(x,y,w,h);
	}
	,beginPath: function() {
		this.ctx.beginPath();
	}
	,fill: function() {
		this.ctx.fill();
	}
	,stroke: function() {
		this.ctx.stroke();
	}
	,drawFocusIfNeeded: function(element) {
		this.ctx.drawFocusIfNeeded(element);
	}
	,drawCustomFocusRing: function(element) {
		return this.ctx.drawCustomFocusRing(element);
	}
	,clip: function() {
		this.ctx.clip();
	}
	,isPointInPath: function(path,x,y,winding) {
		return this.ctx.isPointInPath(path,x,y,winding);
	}
	,isPointInStroke: function(path,x,y) {
		return this.ctx.isPointInStroke(path,x,y);
	}
	,fillText: function(text,x,y,maxWidth) {
		if(maxWidth != null) this.ctx.fillText(text,x,y,maxWidth); else this.ctx.fillText(text,x,y);
	}
	,strokeText: function(text,x,y,maxWidth) {
		if(maxWidth != null) this.ctx.strokeText(text,x,y,maxWidth); else this.ctx.strokeText(text,x,y);
	}
	,measureText: function(text) {
		return gryffin_display_CtxTools.patchedMeasureText(this.ctx,text);
	}
	,drawImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.ctx.drawImage(image,sx,sy,sw,sh,dx,dy,dw,dh);
	}
	,addHitRegion: function(options) {
		this.ctx.addHitRegion(options);
	}
	,removeHitRegion: function(id) {
		this.ctx.removeHitRegion(id);
	}
	,clearHitRegions: function() {
		this.ctx.clearHitRegions();
	}
	,createImageData: function(imagedata) {
		return this.ctx.createImageData(imagedata);
	}
	,getImageData: function(sx,sy,sw,sh) {
		return this.ctx.getImageData(sx,sy,sw,sh);
	}
	,getPixels: function(x,y,w,h) {
		var tmp;
		var i = this.getImageData(x,y,w,h);
		tmp = new gryffin_display_CPixels(i);
		return tmp;
	}
	,putPixels: function(pixels,x,y,dx,dy,dw,dh) {
		this.ctx.putImageData(pixels.idata,x,y,dx,dy,dw,dh);
	}
	,putImageData: function(imagedata,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight) {
		this.ctx.putImageData(imagedata,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight);
	}
	,setLineDash: function(segments) {
		this.ctx.setLineDash(segments);
	}
	,getLineDash: function() {
		return this.ctx.getLineDash();
	}
	,closePath: function() {
		this.ctx.closePath();
	}
	,moveTo: function(x,y) {
		this.ctx.moveTo(x,y);
	}
	,moveToPoint: function(p) {
		var x = p.get_x();
		var y = p.get_y();
		this.ctx.moveTo(x,y);
	}
	,lineTo: function(x,y) {
		this.ctx.lineTo(x,y);
	}
	,lineToPoint: function(p) {
		var x = p.get_x();
		var y = p.get_y();
		this.ctx.lineTo(x,y);
	}
	,quadraticCurveTo: function(cpx,cpy,x,y) {
		this.ctx.quadraticCurveTo(cpx,cpy,x,y);
	}
	,bezierCurveTo: function(cp1x,cp1y,cp2x,cp2y,x,y) {
		this.ctx.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
	}
	,arcTo: function(x1,y1,x2,y2,radius) {
		this.ctx.arcTo(x1,y1,x2,y2,radius);
	}
	,rect: function(x,y,w,h) {
		this.ctx.rect(x,y,w,h);
	}
	,drawRect: function(r) {
		this.ctx.rect(r.x,r.y,r.width,r.height);
	}
	,drawTriangle: function(t) {
		var p = t.one;
		var x = p.get_x();
		var y = p.get_y();
		this.ctx.moveTo(x,y);
		var p1 = t.two;
		var x1 = p1.get_x();
		var y1 = p1.get_y();
		this.ctx.lineTo(x1,y1);
		var p2 = t.three;
		var x2 = p2.get_x();
		var y2 = p2.get_y();
		this.ctx.lineTo(x2,y2);
		var p3 = t.one;
		var x3 = p3.get_x();
		var y3 = p3.get_y();
		this.ctx.lineTo(x3,y3);
	}
	,drawLine: function(line) {
		var p = line.one;
		var x = p.get_x();
		var y = p.get_y();
		this.ctx.moveTo(x,y);
		var p1 = line.two;
		var x1 = p1.get_x();
		var y1 = p1.get_y();
		this.ctx.lineTo(x1,y1);
	}
	,roundRect: function(x,y,w,h,r) {
		this.ctx.moveTo(x + r,y);
		this.ctx.lineTo(x + w - r,y);
		this.ctx.quadraticCurveTo(x + w,y,x + w,y + r);
		this.ctx.lineTo(x + w,y + h - r);
		this.ctx.quadraticCurveTo(x + w,y + h,x + w - r,y + h);
		this.ctx.lineTo(x + r,y + h);
		this.ctx.quadraticCurveTo(x,y + h,x,y + h - r);
		this.ctx.lineTo(x,y + r);
		this.ctx.quadraticCurveTo(x,y,x + r,y);
	}
	,drawRoundRect: function(rect,radius) {
		this.roundRect(rect.x,rect.y,rect.width,rect.height,radius);
	}
	,arc: function(x,y,radius,startAngle,endAngle,anticlockwise) {
		this.ctx.arc(x,y,radius,startAngle,endAngle,anticlockwise);
	}
	,get_canvas: function() {
		return this.ctx.canvas;
	}
	,get_globalAlpha: function() {
		return this.ctx.globalAlpha;
	}
	,set_globalAlpha: function(v) {
		return this.ctx.globalAlpha = v;
	}
	,get_globalCompositeOperation: function() {
		return this.ctx.globalCompositeOperation;
	}
	,set_globalCompositeOperation: function(v) {
		return this.ctx.globalCompositeOperation = v;
	}
	,get_strokeStyle: function() {
		return this.ctx.strokeStyle;
	}
	,set_strokeStyle: function(v) {
		return this.ctx.strokeStyle = v;
	}
	,get_fillStyle: function() {
		return this.ctx.fillStyle;
	}
	,set_fillStyle: function(v) {
		return this.ctx.fillStyle = v;
	}
	,get_shadowOffsetX: function() {
		return this.ctx.shadowOffsetX;
	}
	,set_shadowOffsetX: function(v) {
		return this.ctx.shadowOffsetX = v;
	}
	,get_shadowOffsetY: function() {
		return this.ctx.shadowOffsetY;
	}
	,set_shadowOffsetY: function(v) {
		return this.ctx.shadowOffsetY = v;
	}
	,get_shadowBlur: function() {
		return this.ctx.shadowBlur;
	}
	,set_shadowBlur: function(v) {
		return this.ctx.shadowBlur = v;
	}
	,get_shadowColor: function() {
		return this.ctx.shadowColor;
	}
	,set_shadowColor: function(v) {
		return this.ctx.shadowColor = v;
	}
	,get_filter: function() {
		return this.ctx.filter;
	}
	,set_filter: function(v) {
		return this.ctx.filter = v;
	}
	,get_imageSmoothingEnabled: function() {
		return this.ctx.imageSmoothingEnabled;
	}
	,set_imageSmoothingEnabled: function(v) {
		return this.ctx.imageSmoothingEnabled = v;
	}
	,get_lineWidth: function() {
		return this.ctx.lineWidth;
	}
	,set_lineWidth: function(v) {
		return this.ctx.lineWidth = v;
	}
	,get_lineCap: function() {
		return this.ctx.lineCap;
	}
	,set_lineCap: function(v) {
		return this.ctx.lineCap = v;
	}
	,get_lineJoin: function() {
		return this.ctx.lineJoin;
	}
	,set_lineJoin: function(v) {
		return this.ctx.lineJoin = v;
	}
	,get_miterLimit: function() {
		return this.ctx.miterLimit;
	}
	,set_miterLimit: function(v) {
		return this.ctx.miterLimit = v;
	}
	,get_lineDashOffset: function() {
		return this.ctx.lineDashOffset;
	}
	,set_lineDashOffset: function(v) {
		return this.ctx.lineDashOffset = v;
	}
	,get_font: function() {
		return this.ctx.font;
	}
	,set_font: function(v) {
		return this.ctx.font = v;
	}
	,get_textAlign: function() {
		return this.ctx.textAlign;
	}
	,set_textAlign: function(v) {
		return this.ctx.textAlign = v;
	}
	,get_textBaseline: function() {
		return this.ctx.textBaseline;
	}
	,set_textBaseline: function(v) {
		return this.ctx.textBaseline = v;
	}
	,get_width: function() {
		return this.get_canvas().width;
	}
	,get_height: function() {
		return this.get_canvas().height;
	}
	,ctx: null
	,__class__: gryffin_display_Context
	,__properties__: {get_height:"get_height",get_width:"get_width",set_textBaseline:"set_textBaseline",get_textBaseline:"get_textBaseline",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_font:"set_font",get_font:"get_font",set_lineDashOffset:"set_lineDashOffset",get_lineDashOffset:"get_lineDashOffset",set_miterLimit:"set_miterLimit",get_miterLimit:"get_miterLimit",set_lineJoin:"set_lineJoin",get_lineJoin:"get_lineJoin",set_lineCap:"set_lineCap",get_lineCap:"get_lineCap",set_lineWidth:"set_lineWidth",get_lineWidth:"get_lineWidth",set_imageSmoothingEnabled:"set_imageSmoothingEnabled",get_imageSmoothingEnabled:"get_imageSmoothingEnabled",set_filter:"set_filter",get_filter:"get_filter",set_shadowColor:"set_shadowColor",get_shadowColor:"get_shadowColor",set_shadowBlur:"set_shadowBlur",get_shadowBlur:"get_shadowBlur",set_shadowOffsetY:"set_shadowOffsetY",get_shadowOffsetY:"get_shadowOffsetY",set_shadowOffsetX:"set_shadowOffsetX",get_shadowOffsetX:"get_shadowOffsetX",set_fillStyle:"set_fillStyle",get_fillStyle:"get_fillStyle",set_strokeStyle:"set_strokeStyle",get_strokeStyle:"get_strokeStyle",set_globalCompositeOperation:"set_globalCompositeOperation",get_globalCompositeOperation:"get_globalCompositeOperation",set_globalAlpha:"set_globalAlpha",get_globalAlpha:"get_globalAlpha",get_canvas:"get_canvas"}
};
var gryffin_display__$Ctx_Ctx_$Impl_$ = {};
$hxClasses["gryffin.display._Ctx.Ctx_Impl_"] = gryffin_display__$Ctx_Ctx_$Impl_$;
gryffin_display__$Ctx_Ctx_$Impl_$.__name__ = ["gryffin","display","_Ctx","Ctx_Impl_"];
gryffin_display__$Ctx_Ctx_$Impl_$._new = function(c) {
	return new gryffin_display_Context(c);
};
gryffin_display__$Ctx_Ctx_$Impl_$.fromC2d = function(c) {
	return new gryffin_display_Context(c);
};
var gryffin_display_CtxTools = function() { };
$hxClasses["gryffin.display.CtxTools"] = gryffin_display_CtxTools;
gryffin_display_CtxTools.__name__ = ["gryffin","display","CtxTools"];
gryffin_display_CtxTools.patchedMeasureText = function(c,txt) {
	var font = c.font;
	var w = c.measureText(txt).width;
	var th = gryffin_display_CtxTools.getTextHeight(font);
	return { 'width' : w, 'height' : th.height, 'ascent' : th.ascent, 'descent' : th.descent};
};
gryffin_display_CtxTools.getTextHeight = function(font) {
	var doc = window.document;
	var span = doc.createElement("span");
	span.style.font = font;
	span.textContent = "Hg";
	var block = doc.createElement("div");
	block.style.display = "inline-block";
	block.style.width = "1px";
	block.style.height = "0px";
	var div = doc.createElement("div");
	div.appendChild(span);
	div.appendChild(block);
	var body = doc.body;
	body.appendChild(div);
	var result = { 'ascent' : 0.0, 'descent' : 0.0, 'height' : 0.0};
	try {
		var tmp;
		var e = block;
		tmp = function() {
			return gryffin_display_CtxTools.offset(e);
		};
		var bo = tmp;
		var tmp1;
		var e1 = span;
		tmp1 = function() {
			return gryffin_display_CtxTools.offset(e1);
		};
		var so = tmp1;
		var align = new tannus_io__$Pointer_Ref(function() {
			return block.style.verticalAlign;
		},function(v) {
			return block.style.verticalAlign = v;
		});
		align.set("baseline");
		result.ascent = bo().top - so().top;
		align.set("bottom");
		result.height = bo().top - so().top;
		result.descent = result.height - result.ascent;
		div.remove();
		return result;
	} catch( err ) {
		if (err instanceof js__$Boot_HaxeError) err = err.val;
		console.log(err);
		div.remove();
	}
	return result;
};
gryffin_display_CtxTools.offset = function(e) {
	try {
		var rect = e.getBoundingClientRect();
		var win = window;
		var doc = win.document.documentElement;
		return { 'top' : rect.top + win.pageYOffset - doc.clientTop, 'left' : rect.left + win.pageXOffset - doc.clientLeft};
	} catch( error ) {
		if (error instanceof js__$Boot_HaxeError) error = error.val;
		console.log(error);
		return { 'top' : 0, 'left' : 0};
	}
};
gryffin_display_CtxTools.drawVertices = function(c,vertices) {
	var tmp;
	var _g = [];
	var $it0 = vertices.iterator();
	while( $it0.hasNext() ) {
		var p = $it0.next();
		_g.push(p.clone());
	}
	tmp = _g;
	var points = tmp;
	var first = points.shift();
	var x = first.get_x();
	var y = first.get_y();
	c.ctx.moveTo(x,y);
	var _g1 = 0;
	while(_g1 < points.length) {
		var p1 = points[_g1];
		++_g1;
		var x1 = p1.get_x();
		var y1 = p1.get_y();
		c.ctx.lineTo(x1,y1);
	}
	var x2 = first.get_x();
	var y2 = first.get_y();
	c.ctx.lineTo(x2,y2);
};
gryffin_display_CtxTools.applyMatrix = function(c,m) {
	if(m.a == 1 && m.b == 0 && m.c == 0 && m.d == 1) c.translate(m.tx,m.ty); else c.setTransform(m.a,m.b,m.c,m.d,m.tx,m.ty);
};
gryffin_display_CtxTools.obtainMatrix = function(c) {
	return new tannus_geom_Matrix();
};
var gryffin_display_Image = function(i) {
	var tmp;
	if(i != null) tmp = i; else {
		var tmp1;
		var _this = window.document;
		tmp1 = _this.createElement("img");
		tmp = tmp1;
	}
	this.img = tmp;
	this.ready = new tannus_io_VoidSignal();
	this.targetWidth = this.targetHeight = 0;
	var _g = this;
	this.img.onload = function() {
		_g.ready.call();
	};
	this.img.onerror = function(err) {
		window.console.error(err);
	};
	if(this.img.complete) gryffin_Tools.defer(($_=this.ready,$bind($_,$_.fire)));
};
$hxClasses["gryffin.display.Image"] = gryffin_display_Image;
gryffin_display_Image.__name__ = ["gryffin","display","Image"];
gryffin_display_Image.__interfaces__ = [gryffin_display_Paintable];
gryffin_display_Image.load = function(src,cb) {
	var tmp;
	var _this = gryffin_display_Image.registry;
	if(__map_reserved[src] != null) tmp = _this.existsReserved(src); else tmp = _this.h.hasOwnProperty(src);
	if(!tmp) {
		var img = new gryffin_display_Image();
		if(cb != null) img.ready.once(function() {
			cb(img);
		});
		img.img.src = src;
		var tmp1;
		var _this1 = gryffin_display_Image.registry;
		if(__map_reserved[src] != null) _this1.setReserved(src,img); else _this1.h[src] = img;
		tmp1 = img;
		tmp1;
		return img;
	} else {
		var tmp2;
		var _this2 = gryffin_display_Image.registry;
		if(__map_reserved[src] != null) tmp2 = _this2.getReserved(src); else tmp2 = _this2.h[src];
		var img1 = tmp2;
		if(cb != null) {
			var tmp3;
			var f = cb;
			var a1 = img1;
			tmp3 = function() {
				f(a1);
			};
			(img1.img.complete && img1.img.src != null && img1.img.src != ""?gryffin_Tools.defer:($_=img1.ready,$bind($_,$_.once)))(tmp3);
		}
		return img1;
	}
};
gryffin_display_Image.prototype = {
	__init: function() {
		var _g = this;
		this.img.onload = function() {
			_g.ready.call();
		};
		this.img.onerror = function(err) {
			window.console.error(err);
		};
		if(this.img.complete) gryffin_Tools.defer(($_=this.ready,$bind($_,$_.fire)));
	}
	,toCanvas: function() {
		var _g = this;
		var can = gryffin_display_Canvas.create(this.targetWidth,this.targetHeight);
		var c = can._ctx.get();
		if(this.img.complete && this.img.src != null && this.img.src != "") {
			can.resize(this.img.naturalWidth,this.img.naturalHeight);
			c = can._ctx.get();
			c.drawComponent(this,0,0,this.img.naturalWidth,this.img.naturalHeight,0,0,this.img.naturalWidth,this.img.naturalHeight);
		} else {
			c.ctx.save();
			c.set_fillStyle("#000000");
			c.fillRect(0,0,this.targetWidth,this.targetHeight);
			c.ctx.restore();
			this.ready.once(function() {
				can.resize(_g.img.naturalWidth,_g.img.naturalHeight);
				c = can._ctx.get();
				c.drawComponent(_g,0,0,_g.img.naturalWidth,_g.img.naturalHeight,0,0,_g.img.naturalWidth,_g.img.naturalHeight);
			});
		}
		return can;
	}
	,paint: function(c,s,d) {
		c.drawImage(this.img,s.x,s.y,s.width,s.height,d.x,d.y,d.width,d.height);
	}
	,rotate: function(angle) {
		new tannus_geom_CRectangle(0,0,this.img.naturalWidth,this.img.naturalHeight);
		var rr = this.rotatedSize(angle);
		var can = gryffin_display_Canvas.create(Math.floor(rr.width),Math.floor(rr.height));
		var cr = new tannus_geom_CRectangle(0,0,can.canvas.width,can.canvas.height);
		var c = can._ctx.get();
		c.ctx.save();
		c.ctx.translate(cr.x + cr.width / 2,cr.y + cr.height / 2);
		c.ctx.rotate(angle.v * Math.PI / 180);
		c.ctx.translate(-(cr.x + cr.width / 2),-(cr.y + cr.height / 2));
		c.drawImage(this.img,0,0,this.img.naturalWidth,this.img.naturalHeight,0,0,cr.width,cr.height);
		c.ctx.restore();
		return can;
	}
	,rotatedSize: function(angle) {
		var r = angle.v * Math.PI / 180;
		var a = this.img.naturalWidth * Math.cos(r);
		var b = this.img.naturalHeight * Math.sin(r);
		var rotatedWidth = a + b;
		var p = this.img.naturalWidth * Math.sin(r);
		var q = this.img.naturalHeight * Math.cos(r);
		var rotatedHeight = p + q;
		return new tannus_geom_CRectangle(0,0,rotatedWidth,rotatedHeight);
	}
	,get_src: function() {
		return this.img.src;
	}
	,set_src: function(v) {
		return this.img.src = v;
	}
	,get_width: function() {
		return this.img.naturalWidth;
	}
	,get_height: function() {
		return this.img.naturalHeight;
	}
	,get_rect: function() {
		return new tannus_geom_CRectangle(0,0,this.img.naturalWidth,this.img.naturalHeight);
	}
	,get_complete: function() {
		return this.img.complete && this.img.src != null && this.img.src != "";
	}
	,img: null
	,targetWidth: null
	,targetHeight: null
	,ready: null
	,__class__: gryffin_display_Image
	,__properties__: {get_complete:"get_complete",get_rect:"get_rect",get_height:"get_height",get_width:"get_width",set_src:"set_src",get_src:"get_src"}
};
var gryffin_display_LinkedPixels = function(owner,are,dat) {
	gryffin_display_CPixels.call(this,dat);
	this.c = owner;
	this.area = are;
};
$hxClasses["gryffin.display.LinkedPixels"] = gryffin_display_LinkedPixels;
gryffin_display_LinkedPixels.__name__ = ["gryffin","display","LinkedPixels"];
gryffin_display_LinkedPixels.__super__ = gryffin_display_CPixels;
gryffin_display_LinkedPixels.prototype = $extend(gryffin_display_CPixels.prototype,{
	save: function() {
		this.c.ctx.putImageData(this.idata,0,0,this.area.x,this.area.y,this.area.width,this.area.height);
	}
	,c: null
	,area: null
	,__class__: gryffin_display_LinkedPixels
});
var gryffin_display_Pixel = function(s,p) {
	this.src = s;
	this.pos = p;
};
$hxClasses["gryffin.display.Pixel"] = gryffin_display_Pixel;
gryffin_display_Pixel.__name__ = ["gryffin","display","Pixel"];
gryffin_display_Pixel.prototype = {
	hsl: function() {
		var tmp;
		var tmp1;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp1 = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var r = tmp1;
		var tmp2;
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		tmp2 = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var g = tmp2;
		var tmp3;
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		tmp3 = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var b = tmp3;
		var tmp4;
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		tmp4 = _this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3];
		var a = tmp4;
		tmp = new tannus_graphics__$Color_TColor(r,g,b,a);
		return tmp.toHsl();
	}
	,hue: function() {
		var tmp;
		var tmp1;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp1 = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var r = tmp1;
		var tmp2;
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		tmp2 = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var g = tmp2;
		var tmp3;
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		tmp3 = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var b = tmp3;
		var tmp4;
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		tmp4 = _this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3];
		var a = tmp4;
		tmp = new tannus_graphics__$Color_TColor(r,g,b,a);
		return tmp.toHsl().hue;
	}
	,saturation: function() {
		var tmp;
		var tmp1;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp1 = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var r = tmp1;
		var tmp2;
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		tmp2 = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var g = tmp2;
		var tmp3;
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		tmp3 = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var b = tmp3;
		var tmp4;
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		tmp4 = _this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3];
		var a = tmp4;
		tmp = new tannus_graphics__$Color_TColor(r,g,b,a);
		return tmp.toHsl().saturation;
	}
	,lightness: function() {
		var tmp;
		var tmp1;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp1 = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var r = tmp1;
		var tmp2;
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		tmp2 = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var g = tmp2;
		var tmp3;
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		tmp3 = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var b = tmp3;
		var tmp4;
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		tmp4 = _this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3];
		var a = tmp4;
		tmp = new tannus_graphics__$Color_TColor(r,g,b,a);
		return tmp.toHsl().lightness;
	}
	,luminance: function() {
		var tmp;
		var tmp1;
		var tmp2;
		var _this1 = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp2 = _this1.data[((x | 0) + (y | 0) * _this1.idata.width) * 4];
		var r = tmp2;
		var tmp3;
		var _this2 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		tmp3 = _this2.data[((x1 | 0) + (y1 | 0) * _this2.idata.width) * 4 + 1];
		var g = tmp3;
		var tmp4;
		var _this3 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		tmp4 = _this3.data[((x2 | 0) + (y2 | 0) * _this3.idata.width) * 4 + 2];
		var b = tmp4;
		var tmp5;
		var _this4 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		tmp5 = _this4.data[((x3 | 0) + (y3 | 0) * _this4.idata.width) * 4 + 3];
		var a = tmp5;
		tmp1 = new tannus_graphics__$Color_TColor(r,g,b,a);
		var _this = tmp1;
		tmp = 0.2126 * _this.get_red() + 0.7152 * _this.get_green() + 0.0722 * _this.get_blue();
		return tmp;
	}
	,brightness: function() {
		var tmp;
		var tmp1;
		var tmp2;
		var _this1 = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp2 = _this1.data[((x | 0) + (y | 0) * _this1.idata.width) * 4];
		var r = tmp2;
		var tmp3;
		var _this2 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		tmp3 = _this2.data[((x1 | 0) + (y1 | 0) * _this2.idata.width) * 4 + 1];
		var g = tmp3;
		var tmp4;
		var _this3 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		tmp4 = _this3.data[((x2 | 0) + (y2 | 0) * _this3.idata.width) * 4 + 2];
		var b = tmp4;
		var tmp5;
		var _this4 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		tmp5 = _this4.data[((x3 | 0) + (y3 | 0) * _this4.idata.width) * 4 + 3];
		var a = tmp5;
		tmp1 = new tannus_graphics__$Color_TColor(r,g,b,a);
		var _this = tmp1;
		var x4 = (_this.get_red() * 299 + _this.get_green() * 587 + _this.get_blue() * 114) / 1000;
		tmp = x4 | 0;
		return tmp;
	}
	,greyscale: function() {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.getAtIndex((x | 0) + (y | 0) * _this.idata.width);
		var v = tmp.greyscale();
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		_this1.setAtIndex((x1 | 0) + (y1 | 0) * _this1.idata.width,v);
	}
	,rel: function(x,y) {
		var rx = this.pos.get_x() + x;
		var ry = this.pos.get_y() + y;
		if(rx <= this.src.idata.width && ry <= this.src.idata.height) return new gryffin_display_Pixel(this.src,new tannus_geom_TPoint(rx,ry,0)); else return null;
	}
	,get_color: function() {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.getAtIndex((x | 0) + (y | 0) * _this.idata.width);
		return tmp;
	}
	,set_color: function(v) {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.setAtIndex((x | 0) + (y | 0) * _this.idata.width,v);
		return tmp;
	}
	,get_red: function() {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		return tmp;
	}
	,set_red: function(v) {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4] = v;
		return tmp;
	}
	,get_green: function() {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 1];
		return tmp;
	}
	,set_green: function(v) {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 1] = v;
		return tmp;
	}
	,get_blue: function() {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 2];
		return tmp;
	}
	,set_blue: function(v) {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 2] = v;
		return tmp;
	}
	,get_alpha: function() {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 3];
		return tmp;
	}
	,set_alpha: function(v) {
		var tmp;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4 + 3] = v;
		return tmp;
	}
	,get_top: function() {
		return this.rel(0,-1);
	}
	,get_right: function() {
		return this.rel(1,0);
	}
	,get_bottom: function() {
		return this.rel(0,1);
	}
	,get_left: function() {
		return this.rel(-1,0);
	}
	,get_c: function() {
		var tmp;
		var tmp1;
		var _this = this.src;
		var x = this.pos.get_x();
		var y = this.pos.get_y();
		tmp1 = _this.data[((x | 0) + (y | 0) * _this.idata.width) * 4];
		var r = tmp1;
		var tmp2;
		var _this1 = this.src;
		var x1 = this.pos.get_x();
		var y1 = this.pos.get_y();
		tmp2 = _this1.data[((x1 | 0) + (y1 | 0) * _this1.idata.width) * 4 + 1];
		var g = tmp2;
		var tmp3;
		var _this2 = this.src;
		var x2 = this.pos.get_x();
		var y2 = this.pos.get_y();
		tmp3 = _this2.data[((x2 | 0) + (y2 | 0) * _this2.idata.width) * 4 + 2];
		var b = tmp3;
		var tmp4;
		var _this3 = this.src;
		var x3 = this.pos.get_x();
		var y3 = this.pos.get_y();
		tmp4 = _this3.data[((x3 | 0) + (y3 | 0) * _this3.idata.width) * 4 + 3];
		var a = tmp4;
		tmp = new tannus_graphics__$Color_TColor(r,g,b,a);
		return tmp;
	}
	,src: null
	,pos: null
	,__class__: gryffin_display_Pixel
	,__properties__: {get_c:"get_c",get_left:"get_left",get_bottom:"get_bottom",get_right:"get_right",get_top:"get_top",set_alpha:"set_alpha",get_alpha:"get_alpha",set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red",set_color:"set_color",get_color:"get_color"}
};
var gryffin_display__$Pixels_Pixels_$Impl_$ = {};
$hxClasses["gryffin.display._Pixels.Pixels_Impl_"] = gryffin_display__$Pixels_Pixels_$Impl_$;
gryffin_display__$Pixels_Pixels_$Impl_$.__name__ = ["gryffin","display","_Pixels","Pixels_Impl_"];
gryffin_display__$Pixels_Pixels_$Impl_$._new = function(i) {
	return new gryffin_display_CPixels(i);
};
var gryffin_display_PixelsTools = function() { };
$hxClasses["gryffin.display.PixelsTools"] = gryffin_display_PixelsTools;
gryffin_display_PixelsTools.__name__ = ["gryffin","display","PixelsTools"];
gryffin_display_PixelsTools.shaderReplacer = function(e) {
	{
		var _g = e.expr;
		switch(_g[1]) {
		case 0:
			switch(_g[2][1]) {
			case 3:
				switch(_g[2][2]) {
				case "color":
					return { expr : haxe_macro_ExprDef.EArrayDecl([{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("red")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1217, max : 1220}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("green")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1222, max : 1227}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("blue")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1229, max : 1233}}]), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1216, max : 1234}};
				default:
					return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
				}
				break;
			default:
				return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
			}
			break;
		case 2:
			switch(_g[2][1]) {
			case 4:
				{
					var _g1 = _g[3].expr;
					switch(_g1[1]) {
					case 0:
						switch(_g1[2][1]) {
						case 3:
							switch(_g1[2][2]) {
							case "color":
								return haxe_macro_ExprTools.map({ expr : haxe_macro_ExprDef.EBlock([{ expr : haxe_macro_ExprDef.EVars([{ name : "col", type : null, expr : _g[4]}]), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1531, max : 1548}},{ expr : haxe_macro_ExprDef.EBinop(haxe_macro_Binop.OpAssign,{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("red")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1556, max : 1559}},{ expr : haxe_macro_ExprDef.EArray({ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("col")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1562, max : 1565}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CInt("0")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1566, max : 1567}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1562, max : 1568}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1556, max : 1568}},{ expr : haxe_macro_ExprDef.EBinop(haxe_macro_Binop.OpAssign,{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("green")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1577, max : 1582}},{ expr : haxe_macro_ExprDef.EArray({ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("col")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1585, max : 1588}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CInt("1")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1589, max : 1590}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1585, max : 1591}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1577, max : 1591}},{ expr : haxe_macro_ExprDef.EBinop(haxe_macro_Binop.OpAssign,{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("blue")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1600, max : 1604}},{ expr : haxe_macro_ExprDef.EArray({ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent("col")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1607, max : 1610}},{ expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CInt("2")), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1611, max : 1612}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1607, max : 1613}}), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1600, max : 1613}}]), pos : { file : "gryffin/gryffin/display/Pixels.hx", min : 1522, max : 1650}},gryffin_display_PixelsTools.shaderReplacer);
							default:
								return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
							}
							break;
						default:
							return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
						}
						break;
					default:
						return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
					}
				}
				break;
			default:
				return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
			}
			break;
		default:
			return haxe_macro_ExprTools.map(e,gryffin_display_PixelsTools.shaderReplacer);
		}
	}
};
var gryffin_display_TextBox = function() {
	this.cache = true;
	this.onStateChanged = new tannus_io_VoidSignal();
	this.onTextChanged = new tannus_io_VoidSignal();
	this.txt = "";
	this.multiline = false;
	this.wordWrap = null;
	this.stateChanged = true;
	this.canvas = new gryffin_display_Canvas();
	this.set_padding(0);
	this.set_fontFamily("Arial");
	this.set_fontSize(12);
	this.set_fontSizeUnit("pt");
	this._color = new tannus_graphics__$Color_TColor(0,0,0,null);
	this._backgroundColor = null;
	this._align = "start";
	this._bold = false;
	this._italic = false;
};
$hxClasses["gryffin.display.TextBox"] = gryffin_display_TextBox;
gryffin_display_TextBox.__name__ = ["gryffin","display","TextBox"];
gryffin_display_TextBox.__interfaces__ = [gryffin_display_Paintable];
gryffin_display_TextBox.prototype = {
	paint: function(c,s,d) {
		if(this.cache) {
			var comp = this.toCanvas();
			comp.paint(new gryffin_display_Context(c.ctx),s,d);
		} else if(this.multiline) {
			this.measure();
			var w = Math.round(this.get_textWidth() + this.get_padding() * 2);
			var h = Math.round(this.get_textHeight() + this.get_padding() * 2);
			if(this.get_backgroundColor() != null) {
				var tmp1;
				var this1 = this.get_backgroundColor();
				tmp1 = this1.toString();
				c.set_fillStyle(tmp1);
				c.fillRect(d.x,d.y,w,h);
			}
			this.applyStyles(c);
			var tmp;
			var x = d.x + this.get_padding();
			var y = d.y + this.get_padding();
			tmp = new tannus_geom_TPoint(x,y,0);
			var p = tmp;
			var _g = 0;
			var _g1 = this.lines();
			while(_g < _g1.length) {
				var line = _g1[_g];
				++_g;
				c.fillText(line.text,p.get_x(),p.get_y());
				var ny = p.get_y() + line.height;
				p.set_y(ny);
			}
		} else {
			this.measure();
			var w1 = Math.round(this.get_textWidth() + this.get_padding() * 2);
			var h1 = Math.round(this.get_textHeight() + this.get_padding() * 2);
			if(this.get_backgroundColor() != null) {
				var tmp2;
				var this2 = this.get_backgroundColor();
				tmp2 = this2.toString();
				c.set_fillStyle(tmp2);
				c.fillRect(d.x,d.y,w1,h1);
			}
			this.applyStyles(c);
			c.fillText(this.get_text(),d.x + this.get_padding(),d.y + this.get_padding());
		}
	}
	,getMetrics: function(s) {
		this.applyStyles(this.canvas._ctx.get());
		var tmp;
		var _this = this.canvas._ctx.get();
		tmp = gryffin_display_CtxTools.patchedMeasureText(_this.ctx,s);
		return tmp;
	}
	,autoScale: function(mw,mh) {
		if(mw == null && mh == null) return; else {
			this.set_fontSize(1);
			while(true) {
				this.measure();
				if(mw != null && this.get_width() > mw) break;
				if(mh != null && this.get_height() > mh) break;
				var _g = this;
				_g.set_fontSize(_g.get_fontSize() + 1);
			}
			var _g1 = this;
			_g1.set_fontSize(_g1.get_fontSize() - 1);
		}
	}
	,fit: function(w,h) {
		if(w == null && h == null) return; else while(true) {
			this.measure();
			if(w != null && this.get_width() > w) {
				var _g = this;
				var _g1 = _g.get_fontSize();
				_g.set_fontSize(_g1 - 1);
			} else if(h != null && this.get_height() > h) {
				var _g2 = this;
				var _g11 = _g2.get_fontSize();
				_g2.set_fontSize(_g11 - 1);
			} else break;
		}
	}
	,wrappedLines: function() {
		var lineWidth = this.wordWrap;
		var s = tannus_ds_StringUtils.byteMap(this.get_text(),function($char) {
			return $char == 10 || $char == 13?32:$char;
		});
		var allwords = s.split(" ");
		var lines = [];
		var line = [];
		var _g = 0;
		while(_g < allwords.length) {
			var w = allwords[_g];
			++_g;
			var testLine = line.concat([w]).join(" ");
			var metrics = this.getMetrics(testLine);
			if(metrics.width > lineWidth) {
				lines.push(line.join(" "));
				line = [w];
			} else line.push(w);
		}
		return lines;
	}
	,toCanvas: function() {
		if(this.stateChanged) {
			this.stateChanged = false;
			if(this.multiline) {
				this.measure();
				this.canvas.resize(Math.round(this.get_textWidth() + this.get_padding() * 2),Math.round(this.get_textHeight() + this.get_padding() * 2));
				var c = this.canvas._ctx.get();
				if(this.get_backgroundColor() != null) {
					var tmp1;
					var this1 = this.get_backgroundColor();
					tmp1 = this1.toString();
					c.set_fillStyle(tmp1);
					c.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
				}
				this.applyStyles(this.canvas._ctx.get());
				var tmp;
				var x = this.get_padding();
				var y = this.get_padding();
				tmp = new tannus_geom_TPoint(x,y,0);
				var p = tmp;
				var _g = 0;
				var _g1 = this.lines();
				while(_g < _g1.length) {
					var line = _g1[_g];
					++_g;
					c.fillText(line.text,p.get_x(),p.get_y());
					var ny = p.get_y() + line.height;
					p.set_y(ny);
				}
			} else {
				this.measure();
				this.canvas.resize(Math.round(this.get_textWidth() + this.get_padding() * 2),Math.round(this.get_textHeight() + this.get_padding() * 2));
				var c1 = this.canvas._ctx.get();
				if(this.get_backgroundColor() != null) {
					var tmp2;
					var this2 = this.get_backgroundColor();
					tmp2 = this2.toString();
					c1.set_fillStyle(tmp2);
					c1.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
				}
				this.applyStyles(this.canvas._ctx.get());
				this.canvas._ctx.get().fillText(this.get_text(),this.get_padding(),this.get_padding());
			}
		}
		return this.canvas;
	}
	,applyStyles: function(c) {
		c.set_font(this.fontString());
		c.set_textAlign(this.get_align());
		var tmp;
		var this1 = this.get_color();
		tmp = this1.toString();
		c.set_fillStyle(tmp);
		c.set_textBaseline("top");
	}
	,fontString: function() {
		var bits = [];
		if(this.get_bold()) bits.push("bold");
		if(this.get_italic()) bits.push("italic");
		bits.push("" + this.get_fontSize() + this.get_fontSizeUnit());
		bits.push(this.get_fontFamily());
		return bits.join(" ");
	}
	,measure: function() {
		if(this.multiline) {
			this._textWidth = 0;
			this._textHeight = 0;
			var _g = 0;
			var _g1 = this.lines();
			while(_g < _g1.length) {
				var l = _g1[_g];
				++_g;
				this._textWidth = Math.max(this._textWidth,l.width);
				this._textHeight += l.height;
			}
		} else {
			this.applyStyles(this.canvas._ctx.get());
			var tmp;
			var _this = this.canvas._ctx.get();
			var text = this.get_text();
			tmp = gryffin_display_CtxTools.patchedMeasureText(_this.ctx,text);
			var size = tmp;
			this._textWidth = size.width;
			this._textHeight = size.height;
		}
	}
	,lines: function() {
		this.multiline = false;
		var slines = this.wordWrap != null?this.wrappedLines():this.get_text().split("\n");
		var lines = [];
		var _g = 0;
		while(_g < slines.length) {
			var s = slines[_g];
			++_g;
			var m = this.getMetrics(s);
			lines.push({ 'text' : s, 'width' : m.width, 'height' : m.height});
		}
		this.multiline = true;
		return lines;
	}
	,hasStateChanged: function() {
		return this.stateChanged;
	}
	,changed: function() {
		this.stateChanged = true;
		this.onStateChanged.call();
	}
	,get_text: function() {
		return this.txt;
	}
	,set_text: function(v) {
		if(v != this.txt) {
			this.changed();
			this.onTextChanged.call();
		}
		return this.txt = v;
	}
	,get_padding: function() {
		return this._padding;
	}
	,set_padding: function(v) {
		if(v != this._padding) this.changed();
		return this._padding = v;
	}
	,get_fontFamily: function() {
		return this._fontFamily;
	}
	,set_fontFamily: function(v) {
		if(v != this._fontFamily) this.changed();
		if(tannus_ds_StringUtils.has(v," ")) v = tannus_ds_StringUtils.wrap(v,"\"");
		return this._fontFamily = v;
	}
	,get_fontSize: function() {
		return this._fontSize;
	}
	,set_fontSize: function(v) {
		if(v != this._fontSize) this.changed();
		return this._fontSize = v;
	}
	,get_fontSizeUnit: function() {
		return this._fontSizeUnit;
	}
	,set_fontSizeUnit: function(v) {
		if(v != this._fontSizeUnit) this.changed();
		return this._fontSizeUnit = v;
	}
	,get_textWidth: function() {
		if(this.stateChanged) this.measure();
		return this._textWidth;
	}
	,get_textHeight: function() {
		if(this.stateChanged) this.measure();
		return this._textHeight;
	}
	,get_width: function() {
		return this.get_padding() * 2 + this.get_textWidth();
	}
	,get_height: function() {
		return this.get_padding() * 2 + this.get_textHeight();
	}
	,get_color: function() {
		return this._color;
	}
	,set_color: function(v) {
		if(v != this._color) this.changed();
		return this._color = v;
	}
	,get_backgroundColor: function() {
		return this._backgroundColor;
	}
	,set_backgroundColor: function(v) {
		if(v != this._backgroundColor) this.changed();
		return this._backgroundColor = v;
	}
	,get_align: function() {
		return this._align;
	}
	,set_align: function(v) {
		if(v != this._align) this.changed();
		return this._align = v;
	}
	,get_bold: function() {
		return this._bold;
	}
	,set_bold: function(v) {
		if(v != this._bold) this.changed();
		return this._bold = v;
	}
	,get_italic: function() {
		return this._italic;
	}
	,set_italic: function(v) {
		if(v != this._italic) this.changed();
		return this._italic = v;
	}
	,txt: null
	,stateChanged: null
	,canvas: null
	,_padding: null
	,_fontFamily: null
	,_fontSize: null
	,_fontSizeUnit: null
	,_color: null
	,_backgroundColor: null
	,_align: null
	,_bold: null
	,_italic: null
	,multiline: null
	,wordWrap: null
	,cache: null
	,onStateChanged: null
	,onTextChanged: null
	,_textWidth: null
	,_textHeight: null
	,__class__: gryffin_display_TextBox
	,__properties__: {set_italic:"set_italic",get_italic:"get_italic",set_bold:"set_bold",get_bold:"get_bold",set_align:"set_align",get_align:"get_align",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_color:"set_color",get_color:"get_color",get_height:"get_height",get_width:"get_width",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_fontSizeUnit:"set_fontSizeUnit",get_fontSizeUnit:"get_fontSizeUnit",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_fontFamily:"set_fontFamily",get_fontFamily:"get_fontFamily",set_padding:"set_padding",get_padding:"get_padding",set_text:"set_text",get_text:"get_text"}
};
var gryffin_events_FrameManager = function() {
	this._paused = false;
	this.frame = new tannus_io_Signal();
};
$hxClasses["gryffin.events.FrameManager"] = gryffin_events_FrameManager;
gryffin_events_FrameManager.__name__ = ["gryffin","events","FrameManager"];
gryffin_events_FrameManager.prototype = {
	_frame: function(delta) {
		if(!this._paused) this.frame.broadcast(delta);
		this.queueNext();
	}
	,queueNext: function() {
		this.id = window.requestAnimationFrame($bind(this,this._frame));
	}
	,start: function() {
		this.queueNext();
	}
	,stop: function() {
		window.cancelAnimationFrame(this.id);
	}
	,pause: function() {
		this._paused = true;
	}
	,resume: function() {
		this._paused = false;
	}
	,get_paused: function() {
		return this._paused;
	}
	,frame: null
	,id: null
	,_paused: null
	,__class__: gryffin_events_FrameManager
	,__properties__: {get_paused:"get_paused"}
};
var tannus_events_EventCreator = function() { };
$hxClasses["tannus.events.EventCreator"] = tannus_events_EventCreator;
tannus_events_EventCreator.__name__ = ["tannus","events","EventCreator"];
var gryffin_events_KeyListener = function(s) {
	this.stage = s;
	this.listen();
};
$hxClasses["gryffin.events.KeyListener"] = gryffin_events_KeyListener;
gryffin_events_KeyListener.__name__ = ["gryffin","events","KeyListener"];
gryffin_events_KeyListener.__interfaces__ = [tannus_events_EventCreator];
gryffin_events_KeyListener.prototype = {
	listen: function() {
		var win = window;
		var events = ["keydown","keyup","keypress"];
		var _g = 0;
		while(_g < events.length) {
			var name = events[_g];
			++_g;
			win.addEventListener(name,$bind(this,this.handle));
		}
	}
	,collectMods: function(e) {
		var mods = [];
		if(e.altKey) mods.push("alt");
		if(e.shiftKey) mods.push("shift");
		if(e.ctrlKey) mods.push("ctrl");
		if(e.metaKey) mods.push("super");
		return mods;
	}
	,handle: function(e) {
		var event = new tannus_events_KeyboardEvent(e.type,e.keyCode,this.collectMods(e));
		event.onDefaultPrevented.once($bind(e,e.preventDefault));
		event.onPropogationStopped.once($bind(e,e.stopPropagation));
		this.stage.dispatch(e.type,event);
	}
	,stage: null
	,__class__: gryffin_events_KeyListener
};
var gryffin_events_MouseListener = function(s) {
	this.stage = s;
	this.relevant = ["click","mouseup","mousedown","mouseenter","mouseleave","mousemove","contextmenu","wheel"];
	this.bind();
};
$hxClasses["gryffin.events.MouseListener"] = gryffin_events_MouseListener;
gryffin_events_MouseListener.__name__ = ["gryffin","events","MouseListener"];
gryffin_events_MouseListener.__interfaces__ = [tannus_events_EventCreator];
gryffin_events_MouseListener.prototype = {
	bindMouse: function() {
		var relevant = this.relevant.slice(0,4);
		console.log(relevant);
		var _g = 0;
		while(_g < relevant.length) {
			var name = relevant[_g];
			++_g;
			this.stage.canvas.canvas.addEventListener(name,$bind(this,this.handle));
		}
		this.stage.canvas.canvas.addEventListener("mousemove",$bind(this,this.handleMove));
		this.stage.canvas.canvas.addEventListener("contextmenu",$bind(this,this.handleMenu));
	}
	,dragEvent: function(event) {
		var ev = tannus_events_MouseEvent.fromJsEvent(event);
		ev.position = this.findPos(event);
		this.stage.mouseEvent(ev);
	}
	,bindWheel: function() {
		this.stage.canvas.canvas.addEventListener("wheel",$bind(this,this.handleWheel));
	}
	,handleMenu: function(e) {
		var event = new tannus_events_MouseEvent(e.type,this.findPos(e),e.button,this.findMods(e));
		var prevent = function() {
			e.preventDefault();
		};
		event.onCancelled.once(prevent);
		event.onDefaultPrevented.once(prevent);
		event.onPropogationStopped.once(prevent);
		this.stage.mouseEvent(event);
	}
	,bind: function() {
		this.bindMouse();
		this.bindWheel();
	}
	,unbind: function() {
		var _g = 0;
		var _g1 = this.relevant;
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			this.stage.canvas.canvas.removeEventListener(name,$bind(this,this.handle));
		}
		this.stage.canvas.canvas.removeEventListener("mousemove",$bind(this,this.handleMove));
		this.stage.canvas.canvas.removeEventListener("contextmenu",$bind(this,this.handleMenu));
		this.stage.canvas.canvas.removeEventListener("mousewheel",$bind(this,this.handleWheel));
	}
	,rebind: function() {
		this.unbind();
		this.bind();
	}
	,findPos: function(e) {
		var pos = new tannus_geom_TPoint(e.clientX,e.clientY,0);
		var crect = this.stage.canvas.canvas.getBoundingClientRect();
		var nx = pos.get_x() - crect.left;
		pos.set_x(nx);
		var ny = pos.get_y() - crect.top;
		pos.set_y(ny);
		return pos;
	}
	,findMods: function(e) {
		var mods = [];
		if(e.altKey) mods.push("alt");
		if(e.ctrlKey) mods.push("ctrl");
		if(e.shiftKey) mods.push("shift");
		if(e.metaKey) mods.push("super");
		return mods;
	}
	,handle: function(e) {
		var pos = this.findPos(e);
		var mods = this.findMods(e);
		var event = new tannus_events_MouseEvent(e.type,pos,e.button,mods);
		event.onDefaultPrevented.once($bind(e,e.preventDefault));
		event.onPropogationStopped.once($bind(e,e.stopPropagation));
		this.stage.mouseEvent(event);
	}
	,handleMove: function() {
		var _g = this;
		var lastTarget = null;
		var _handle = function(e) {
			var pos = _g.findPos(e);
			var mods = _g.findMods(e);
			var event = new tannus_events_MouseEvent(e.type,pos,e.button,mods);
			event.onDefaultPrevented.once($bind(e,e.preventDefault));
			event.onPropogationStopped.once($bind(e,e.stopPropagation));
			var target = _g.getRootTarget(event);
			{
				var left = lastTarget;
				var left1 = lastTarget;
				if(lastTarget == null) {
					var entered = target;
					if(entered != null) entered.dispatch("mouseenter",e); else {
						var right = target;
						if(target == null) {
							if(left != null) left.dispatch("mouseleave",e); else if(left1 != null && right != null) {
								if(left1 == right) left1.dispatch("mousemove",e); else {
									left1.dispatch("mouseleave",e);
									right.dispatch("mouseenter",e);
								}
							}
						} else switch(target) {
						default:
							if(left1 != null && right != null) {
								if(left1 == right) left1.dispatch("mousemove",e); else {
									left1.dispatch("mouseleave",e);
									right.dispatch("mouseenter",e);
								}
							}
						}
					}
				} else switch(lastTarget) {
				default:
					var right = target;
					if(target == null) {
						if(left != null) left.dispatch("mouseleave",e); else if(left1 != null && right != null) {
							if(left1 == right) left1.dispatch("mousemove",e); else {
								left1.dispatch("mouseleave",e);
								right.dispatch("mouseenter",e);
							}
						}
					} else switch(target) {
					default:
						if(left1 != null && right != null) {
							if(left1 == right) left1.dispatch("mousemove",e); else {
								left1.dispatch("mouseleave",e);
								right.dispatch("mouseenter",e);
							}
						}
					}
				}
			}
			lastTarget = target;
			_g.stage.mouseEvent(event);
		};
		this.stage.canvas.canvas.addEventListener("mousemove",_handle);
	}
	,getRootTarget: function(e) {
		var _g = 0;
		var _g1 = this.stage.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var tmp;
			if(child.containsPoint(e.position)) {
				var tmp1;
				if(!child._cached) tmp1 = child.destroyed; else tmp1 = true;
				tmp = !tmp1;
			} else tmp = false;
			if(tmp) return child;
		}
		return null;
	}
	,handleWheel: function(e) {
		var tmp;
		var x = Math.max(-1,Math.min(1,-e.deltaY));
		tmp = x | 0;
		var delta = tmp;
		var event = new tannus_events_ScrollEvent(delta);
		this.stage.dispatch("scroll",event);
	}
	,get_canvas: function() {
		return this.stage.canvas.canvas;
	}
	,stage: null
	,relevant: null
	,__class__: gryffin_events_MouseListener
	,__properties__: {get_canvas:"get_canvas"}
};
var gryffin_events_MouseWatcher = function(s) {
	this.stage = s;
	this.lastMouseEvent = null;
	this.lastMove = -1;
	this.hovered = new List();
	this._listen();
};
$hxClasses["gryffin.events.MouseWatcher"] = gryffin_events_MouseWatcher;
gryffin_events_MouseWatcher.__name__ = ["gryffin","events","MouseWatcher"];
gryffin_events_MouseWatcher.prototype = {
	getMousePosition: function() {
		return this.get_lastMousePos() == null?null:this.get_lastMousePos().clone();
	}
	,getMoveTime: function() {
		return this.lastMove != -1?this.lastMove:null;
	}
	,getLastEvent: function() {
		return this.lastMouseEvent;
	}
	,_listen: function() {
		this.stage.on("mousemove",$bind(this,this.handle));
		this.stage.on("mouseleave",$bind(this,this.handle));
	}
	,handle: function(e) {
		this.lastMouseEvent = e;
		this.lastMove = e.date;
	}
	,mouseInEnt: function(entity,event) {
		var prev = this.entityHovered(entity);
		var curr = entity.containsPoint(event.position);
		this.entityHovered(entity,curr);
		switch(prev) {
		case false:
			switch(curr) {
			case true:
				var mee = event.clone();
				mee.type = "mouseenter";
				entity.dispatch("mouseenter",mee);
				break;
			default:
			}
			break;
		case true:
			switch(curr) {
			case false:
				var mle = event.clone();
				mle.type = "mouseleave";
				entity.dispatch("mouseleave",mle);
				break;
			default:
			}
			break;
		}
	}
	,hoveredEntities: function(event) {
		var _g_head = this.hovered.h;
		var _g_val = null;
		while(_g_head != null) {
			var tmp;
			_g_val = _g_head[0];
			_g_head = _g_head[1];
			tmp = _g_val;
			var entity = tmp;
			this.mouseInEnt(entity,event);
		}
	}
	,entityHovered: function(e,value) {
		if(value != null) {
			if(value && !Lambda.has(this.hovered,e)) this.hovered.add(e); else this.hovered.remove(e);
			return value;
		} else return Lambda.has(this.hovered,e);
	}
	,get_lastMousePos: function() {
		if(this.lastMouseEvent == null) return null; else {
			var e = this.lastMouseEvent;
			var _g = e.type;
			switch(_g) {
			case "mouseleave":
				return null;
			default:
				return e.position;
			}
		}
	}
	,lastMouseEvent: null
	,lastMove: null
	,hovered: null
	,stage: null
	,__class__: gryffin_events_MouseWatcher
	,__properties__: {get_lastMousePos:"get_lastMousePos"}
};
var gryffin_fx_Actuator = function() {
};
$hxClasses["gryffin.fx.Actuator"] = gryffin_fx_Actuator;
gryffin_fx_Actuator.__name__ = ["gryffin","fx","Actuator"];
gryffin_fx_Actuator.prototype = {
	update: function(progress) {
		console.log("animation is " + ("" + progress + "%") + " complete");
	}
	,reverse: function() {
		return new gryffin_fx_Actuator();
	}
	,__class__: gryffin_fx_Actuator
};
var gryffin_fx_Animation = function() {
	this.start_time = null;
	this.complete = false;
	this.oncomplete = new tannus_io_VoidSignal();
	this.actuators = [];
};
$hxClasses["gryffin.fx.Animation"] = gryffin_fx_Animation;
gryffin_fx_Animation.__name__ = ["gryffin","fx","Animation"];
gryffin_fx_Animation.prototype = {
	start: function() {
		this.start_time = new Date().getTime();
		gryffin_fx_Animations.link(this);
	}
	,update: function() {
		if(!this.complete) {
			var progress = (this.start_time != null?new Date().getTime() - this.start_time:null) / this.duration;
			if(progress > 1) progress = 1;
			var delt = this.delta(progress);
			this.step(delt * 100);
			if(progress == 1) {
				this.complete = true;
				this.oncomplete.call();
			}
		}
	}
	,delta: function(progress) {
		return progress;
	}
	,step: function(d) {
		var _g = 0;
		var _g1 = this.actuators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			a.update(d);
		}
	}
	,actuate: function(a) {
		this.actuators.push(a);
	}
	,reverse: function() {
		var rev = new gryffin_fx_Animation();
		rev.duration = this.duration;
		rev.delta = $bind(this,this.delta);
		var _g = 0;
		var _g1 = this.actuators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			rev.actuate(a.reverse());
		}
		return rev;
	}
	,get_now: function() {
		return new Date().getTime();
	}
	,get_passed: function() {
		return this.start_time != null?new Date().getTime() - this.start_time:null;
	}
	,duration: null
	,start_time: null
	,complete: null
	,oncomplete: null
	,actuators: null
	,__class__: gryffin_fx_Animation
	,__properties__: {get_passed:"get_passed",get_now:"get_now"}
};
var gryffin_fx_Animations = function() { };
$hxClasses["gryffin.fx.Animations"] = gryffin_fx_Animations;
gryffin_fx_Animations.__name__ = ["gryffin","fx","Animations"];
gryffin_fx_Animations.link = function(anim) {
	gryffin_fx_Animations.registry.push(anim);
};
gryffin_fx_Animations.tick = function() {
	var _g = 0;
	var _g1 = gryffin_fx_Animations.registry;
	while(_g < _g1.length) {
		var anim = _g1[_g];
		++_g;
		anim.update();
	}
	gryffin_fx_Animations.registry = gryffin_fx_Animations.registry.filter(function(item) {
		return !item.complete;
	});
};
gryffin_fx_Animations.claim = function(stage) {
	if(gryffin_fx_Animations.manager == null) gryffin_fx_Animations.manager = stage;
};
var gryffin_fx_Effect = function() {
};
$hxClasses["gryffin.fx.Effect"] = gryffin_fx_Effect;
gryffin_fx_Effect.__name__ = ["gryffin","fx","Effect"];
gryffin_fx_Effect.prototype = {
	active: function(e) {
		return true;
	}
	,affect: function(e) {
	}
	,attach: function(e) {
	}
	,__class__: gryffin_fx_Effect
};
var gryffin_ui_Border = function(size,colr,rad) {
	if(size == null) size = 0;
	this.width = size;
	this.radius = rad != null?rad:0;
	this.color = colr != null?colr:new tannus_graphics__$Color_TColor(0,0,0,null);
};
$hxClasses["gryffin.ui.Border"] = gryffin_ui_Border;
gryffin_ui_Border.__name__ = ["gryffin","ui","Border"];
gryffin_ui_Border.prototype = {
	toString: function() {
		return "Border(width=" + this.width + ", color=" + this.color.toString() + ")";
	}
	,width: null
	,color: null
	,radius: null
	,__class__: gryffin_ui_Border
};
var gryffin_ui_MenuItem = function(options) {
	this.awaitingHoverIntent = false;
	gryffin_core_EventDispatcher.call(this);
	this.type = "normal";
	this.icon = null;
	this.checkIcon = null;
	this.rect = new tannus_geom_CRectangle(0,0,0,0);
	this.parent = null;
	this.items = [];
	this.set_showChildren(false);
	this.eventsBound = false;
	this.tooltip = null;
	this.enabled = true;
	this.checked = false;
	this.hovered = false;
	this.hoverStart = null;
	this.beenHovered = 0;
	this.box = new gryffin_display_TextBox();
	this.keyBox = new gryffin_display_TextBox();
	this.keyBox.set_fontSize(this.box.set_fontSize(11));
	this.keyBox.set_fontFamily(this.box.set_fontFamily("Ubuntu"));
	this.box.set_color(tannus_graphics__$Color_TColor.fromString("#FFF"));
	var tmp;
	var this1 = this.box.get_color();
	tmp = this1.darken(45);
	this.keyBox.set_color(tmp);
	this.padding = new gryffin_ui_Padding();
	this.padding.set_horizontal(8);
	this.padding.set_vertical(5);
	if(options != null) {
		this.options = options;
		this.handleOptions(options);
	}
};
$hxClasses["gryffin.ui.MenuItem"] = gryffin_ui_MenuItem;
gryffin_ui_MenuItem.__name__ = ["gryffin","ui","MenuItem"];
gryffin_ui_MenuItem.__super__ = gryffin_core_EventDispatcher;
gryffin_ui_MenuItem.prototype = $extend(gryffin_core_EventDispatcher.prototype,{
	item: function(o) {
		var i = new gryffin_ui_MenuItem(o);
		this.append(i);
		return i;
	}
	,render: function(s,c) {
		if(this.parent == null && (this.hovered || this.showChildren)) {
			c.ctx.beginPath();
			c.set_fillStyle("#f17746");
			c.set_strokeStyle("#111");
			var r = 5;
			var cb = this.root.get_y() + this.root.get_h();
			var pxl = this.get_x() - this.padding.left;
			var pxr = this.get_x() + this.get_w() + this.padding.right;
			var pyt = this.get_y() - this.padding.top;
			c.ctx.moveTo(pxl,cb);
			c.ctx.lineTo(pxl,pyt + r);
			c.ctx.quadraticCurveTo(pxl,pyt,pxl + r,pyt);
			c.ctx.lineTo(pxr - r,pyt);
			c.ctx.quadraticCurveTo(pxr,pyt,pxr,pyt + r);
			c.ctx.lineTo(pxr,cb);
			c.ctx.lineTo(pxl,cb);
			c.ctx.closePath();
			c.ctx.stroke();
		}
		if(!Lambda.empty(this.items) && this.showChildren) {
			var _g = 0;
			var _g1 = this.items;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				item.render(s,c);
			}
		}
		if(this.parent != null) {
			c.set_fillStyle(this.hovered?"#f17746":this.root.backgroundColor.toString());
			var tmp1;
			var _this = this.padding;
			tmp1 = _this.top + _this.bottom;
			c.fillRect(this.get_x(),this.get_y(),this.parent.panelWidth,this.get_h() + tmp1);
		}
		if(this.type == "checkbox" && this.checkIcon != null && this.checked) {
			var i = this.checkIcon;
			var tmp2;
			var _this1 = this.padding;
			tmp2 = _this1.top + _this1.bottom;
			var size = this.get_h() + tmp2;
			c.drawComponent(i,0,0,i.img.naturalWidth,i.img.naturalHeight,this.get_x(),this.get_y(),size,size);
		}
		var tmp;
		var _this2 = this.padding;
		tmp = _this2.top + _this2.bottom;
		var th = this.get_h() + tmp;
		var tx = this.parent != null?this.get_x() + th:this.get_x();
		var ty = this.parent != null?this.get_y() + this.padding.top:this.get_y();
		if(this.icon != null) {
			c.drawComponent(this.icon,0,0,this.icon.img.naturalWidth,this.icon.img.naturalHeight,this.get_x() + th,this.get_y(),th,th);
			tx += th + 8;
		}
		c.drawComponent(this.box,0,0,this.box.get_width(),this.box.get_height(),tx,ty,this.box.get_width(),this.box.get_height());
		if(this.keyBox.get_text() != "") {
			var xo = this.parent != null?this.parent.panelWidth:this.get_w();
			c.drawComponent(this.keyBox,0,0,this.keyBox.get_width(),this.keyBox.get_height(),this.get_x() + xo - (this.keyBox.get_width() + 5),ty,this.keyBox.get_width(),this.keyBox.get_height());
		}
	}
	,update: function(stage) {
		var _g = this;
		if(!this.eventsBound) {
			this.listen(stage);
			this.eventsBound = true;
		}
		var _hovered = this.hovered;
		var mouse = stage.getMousePosition();
		var tmp;
		var _x = this.get_x();
		var _y = this.get_y();
		var _width = this.parent != null?this.parent.panelWidth:this.get_w();
		var tmp2;
		var _this = this.padding;
		tmp2 = _this.top + _this.bottom;
		var _height = this.get_h() + tmp2;
		tmp = new tannus_geom_CRectangle(_x,_y,_width,_height);
		var crect = tmp;
		var tmp1;
		if(mouse != null) {
			var ox = mouse.get_x();
			var oy = mouse.get_y();
			var tmp3;
			if(ox > crect.x) tmp3 = ox < crect.x + crect.width; else tmp3 = false;
			if(tmp3) {
				if(oy > crect.y) tmp1 = oy < crect.y + crect.height; else tmp1 = false;
			} else tmp1 = false;
		} else tmp1 = false;
		this.hovered = tmp1;
		if(this.hovered) {
			if(!this.awaitingHoverIntent) window.setTimeout(function() {
				if(_g.hovered && !Lambda.empty(_g.items)) _g.open();
				_g.awaitingHoverIntent = false;
			},1000);
		}
		if(!Lambda.empty(this.items) && this.showChildren) this.positionItems(stage);
		if(!(this.parent == null)) {
			this.set_h(this.box.get_height());
			if(!(!Lambda.empty(this.items))) null;
		}
	}
	,init: function(m) {
	}
	,positionItems: function(s) {
		if(this.items.length == 0) return;
		var iy = 0;
		var _g = 0;
		var _g1 = this.items;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.update(s);
			var itemHeight = item.padding.top + item.box.get_height() + item.padding.bottom;
			var itemWidth = item.box.get_width() + item.keyBox.get_width() + 20 + itemHeight * 3 + 8;
			var tmp1;
			var a = this.panelWidth;
			if(a > itemWidth) tmp1 = a; else tmp1 = itemWidth;
			this.panelWidth = tmp1;
			if(!Lambda.empty(this.items) && this.parent != null) {
				item.set_y(this.get_y() + iy);
				item.set_x(this.get_x() + this.parent.panelWidth);
				iy += itemHeight;
			} else {
				item.set_y(this.root.get_y() + this.root.get_h() + iy);
				item.set_x(this.get_x());
				iy += itemHeight;
			}
		}
		this.panelHeight = iy;
		var li = this.items[this.items.length - 1];
		var tmp;
		var _this = li.padding;
		tmp = _this.top + _this.bottom;
		this.panelHeight += li.get_h() + tmp;
	}
	,click: function(e) {
		if(this.type == "normal") {
			var sc = this.showChildren;
			this.root.itemClicked(this);
			if(!Lambda.empty(this.items)) {
				if(this.options != null && !Object.prototype.hasOwnProperty.call(this.options.o,"click")) this.toggleOpen(); else if(this.options == null) this.toggleOpen();
			}
			this.dispatch("click",e);
		} else if(this.type == "checkbox") {
			this.root.itemClicked(this);
			this.checked = !this.checked;
			this.dispatch((!this.checked?"un":"") + "check",e);
		}
	}
	,open: function() {
		this.root.closeAll();
		this.set_showChildren(true);
		this.dispatch("open",this);
	}
	,close: function() {
		var _g = 0;
		var _g1 = this.items;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.close();
		}
		this.set_showChildren(false);
		this.dispatch("close",this);
	}
	,toggleOpen: function() {
		if(this.showChildren) this.close(); else this.open();
	}
	,containsPoint: function(p) {
		var tmp;
		var tmp1;
		var _x = this.get_x();
		var _y = this.get_y();
		var _width = this.parent != null?this.parent.panelWidth:this.get_w();
		var _height = this.get_h();
		tmp1 = new tannus_geom_CRectangle(_x,_y,_width,_height);
		var _this = tmp1;
		var ox = p.get_x();
		var oy = p.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) tmp = oy < _this.y + _this.height; else tmp = false;
		} else tmp = false;
		return tmp;
	}
	,listen: function(s) {
		var _g = this;
		var lastEvent = null;
		s.on("click",function(e) {
			var tmp;
			var _x = _g.get_x();
			var _y = _g.get_y();
			var _width = _g.parent != null?_g.parent.panelWidth:_g.get_w();
			var _height = _g.get_h();
			tmp = new tannus_geom_CRectangle(_x,_y,_width,_height);
			var crect = tmp;
			var tmp1;
			if(_g.parent != null && _g.parent.showChildren) {
				var point = e.position;
				var ox = point.get_x();
				var oy = point.get_y();
				var tmp2;
				if(ox > crect.x) tmp2 = ox < crect.x + crect.width; else tmp2 = false;
				if(tmp2) {
					if(oy > crect.y) tmp1 = oy < crect.y + crect.height; else tmp1 = false;
				} else tmp1 = false;
			} else tmp1 = false;
			if(tmp1) _g.click(e); else {
				var tmp3;
				if(!(_g.parent != null)) {
					var point1 = e.position;
					var ox1 = point1.get_x();
					var oy1 = point1.get_y();
					var tmp4;
					if(ox1 > crect.x) tmp4 = ox1 < crect.x + crect.width; else tmp4 = false;
					if(tmp4) {
						if(oy1 > crect.y) tmp3 = oy1 < crect.y + crect.height; else tmp3 = false;
					} else tmp3 = false;
				} else tmp3 = false;
				if(tmp3) _g.click(e);
			}
			lastEvent = e;
		});
	}
	,handleOptions: function(o) {
		if(Object.prototype.hasOwnProperty.call(o.o,"label")) this.set_label((function($this) {
			var $r;
			var o1 = o.o;
			var tmp;
			$r = o1 == null?null:o1.__properties__ && (tmp = o1.__properties__["get_" + "label"])?o1[tmp]():o1.label;
			return $r;
		}(this)));
		if(Object.prototype.hasOwnProperty.call(o.o,"key")) this.set_key((function($this) {
			var $r;
			var o2 = o.o;
			var tmp1;
			$r = o2 == null?null:o2.__properties__ && (tmp1 = o2.__properties__["get_" + "key"])?o2[tmp1]():o2.key;
			return $r;
		}(this)));
		if(Object.prototype.hasOwnProperty.call(o.o,"type")) this.type = (function($this) {
			var $r;
			var o3 = o.o;
			var tmp2;
			$r = o3 == null?null:o3.__properties__ && (tmp2 = o3.__properties__["get_" + "type"])?o3[tmp2]():o3.type;
			return $r;
		}(this));
		if(Object.prototype.hasOwnProperty.call(o.o,"icon")) this.icon = gryffin_display_Image.load((function($this) {
			var $r;
			var o4 = o.o;
			var tmp3;
			$r = o4 == null?null:o4.__properties__ && (tmp3 = o4.__properties__["get_" + "icon"])?o4[tmp3]():o4.icon;
			return $r;
		}(this)));
		if(Object.prototype.hasOwnProperty.call(o.o,"click")) {
			var oclick = (function($this) {
				var $r;
				var o5 = o.o;
				var tmp4;
				$r = o5 == null?null:o5.__properties__ && (tmp4 = o5.__properties__["get_" + "click"])?o5[tmp4]():o5.click;
				return $r;
			}(this));
			if(Reflect.isFunction(oclick)) this.on("click",oclick);
		}
		if(Object.prototype.hasOwnProperty.call(o.o,"open") && Reflect.isFunction((function($this) {
			var $r;
			var o6 = o.o;
			var tmp5;
			$r = o6 == null?null:o6.__properties__ && (tmp5 = o6.__properties__["get_" + "open"])?o6[tmp5]():o6.open;
			return $r;
		}(this)))) this.on("open",(function($this) {
			var $r;
			var o7 = o.o;
			var tmp6;
			$r = o7 == null?null:o7.__properties__ && (tmp6 = o7.__properties__["get_" + "open"])?o7[tmp6]():o7.open;
			return $r;
		}(this)));
		if(Object.prototype.hasOwnProperty.call(o.o,"close") && Reflect.isFunction((function($this) {
			var $r;
			var o8 = o.o;
			var tmp7;
			$r = o8 == null?null:o8.__properties__ && (tmp7 = o8.__properties__["get_" + "close"])?o8[tmp7]():o8.close;
			return $r;
		}(this)))) this.on("close",(function($this) {
			var $r;
			var o9 = o.o;
			var tmp8;
			$r = o9 == null?null:o9.__properties__ && (tmp8 = o9.__properties__["get_" + "close"])?o9[tmp8]():o9.close;
			return $r;
		}(this)));
	}
	,'delete': function() {
		if(this.parent != null) HxOverrides.remove(this.parent.items,this); else HxOverrides.remove(this.root.items,this);
	}
	,append: function(child) {
		if(!Lambda.has(this.items,child)) {
			this.items.push(child);
			child.set_root(this.root);
			child.parent = this;
		}
	}
	,hierarchyContainsPoint: function(p) {
		var tmp;
		var tmp1;
		var _x = this.get_x();
		var _y = this.get_y();
		var _width = this.parent != null?this.parent.panelWidth:this.get_w();
		var _height = this.get_h();
		tmp1 = new tannus_geom_CRectangle(_x,_y,_width,_height);
		var _this = tmp1;
		var ox = p.get_x();
		var oy = p.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) tmp = oy < _this.y + _this.height; else tmp = false;
		} else tmp = false;
		if(tmp) return true; else {
			var _g = 0;
			var _g1 = this.items;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i.hierarchyContainsPoint(p)) return true;
			}
		}
		return false;
	}
	,get_x: function() {
		return this.rect.x;
	}
	,set_x: function(v) {
		return this.rect.x = v;
	}
	,get_y: function() {
		return this.rect.y;
	}
	,set_y: function(v) {
		return this.rect.y = v;
	}
	,get_w: function() {
		return this.rect.width;
	}
	,set_w: function(v) {
		return this.rect.width = v;
	}
	,get_h: function() {
		return this.rect.height;
	}
	,set_h: function(v) {
		return this.rect.height = v;
	}
	,get_pos: function() {
		var _g = this;
		var tmp;
		var x = new tannus_io__$Pointer_Ref(function() {
			return _g.get_x();
		},function(v) {
			return _g.set_x(v);
		});
		var y = new tannus_io__$Pointer_Ref(function() {
			return _g.get_y();
		},function(v1) {
			return _g.set_y(v1);
		});
		tmp = new tannus_geom_LinkedPoint(x,y,null);
		return tmp;
	}
	,get_label: function() {
		return this.box.get_text();
	}
	,set_label: function(v) {
		this.box.set_text(v);
		if(this.parent == null) {
			this.set_w(this.box.get_width() + this.keyBox.get_width());
			this.set_h(this.box.get_height());
		}
		return this.box.get_text();
	}
	,get_key: function() {
		return this.keyBox.get_text();
	}
	,set_key: function(v) {
		this.keyBox.set_text(v);
		if(this.parent == null) {
			this.set_w(this.box.get_width() + this.keyBox.get_width());
			this.set_h(this.box.get_height());
		}
		return this.keyBox.get_text();
	}
	,get_index: function() {
		return HxOverrides.indexOf(this.parent != null?this.parent.items:this.root.items,this,0);
	}
	,get_rootLevel: function() {
		return this.parent == null;
	}
	,get_subMenu: function() {
		return !Lambda.empty(this.items);
	}
	,get_child: function() {
		return this.parent != null;
	}
	,showChildren: null
	,set_showChildren: function(v) {
		this.dispatch(v?"open":"close",null);
		return this.showChildren = v;
	}
	,set_root: function(v) {
		var l = this.root;
		this.root = v;
		{
			var _g = this.root;
			if(l == null) {
				this.init(this.root);
				var _g1 = 0;
				var _g2 = this.items;
				while(_g1 < _g2.length) {
					var item = _g2[_g1];
					++_g1;
					item.set_root(_g);
				}
			} else switch(l) {
			default:
				if(_g == null) {
					var _g11 = 0;
					var _g21 = this.items;
					while(_g11 < _g21.length) {
						var item1 = _g21[_g11];
						++_g11;
						item1.set_root(null);
					}
				} else switch(_g) {
				default:
					if(l != _g && l != null && _g != null) {
						this.init(this.root);
						var _g12 = 0;
						var _g22 = this.items;
						while(_g12 < _g22.length) {
							var item2 = _g22[_g12];
							++_g12;
							item2.set_root(_g);
						}
					} else {
					}
				}
			}
		}
		return this.root;
	}
	,root: null
	,parent: null
	,items: null
	,type: null
	,tooltip: null
	,icon: null
	,enabled: null
	,hovered: null
	,checked: null
	,rect: null
	,box: null
	,keyBox: null
	,panelWidth: null
	,panelHeight: null
	,eventsBound: null
	,hoverStart: null
	,beenHovered: null
	,checkIcon: null
	,options: null
	,awaitingHoverIntent: null
	,padding: null
	,__class__: gryffin_ui_MenuItem
	,__properties__: {set_root:"set_root",set_showChildren:"set_showChildren",get_child:"get_child",get_subMenu:"get_subMenu",get_rootLevel:"get_rootLevel",get_index:"get_index",set_key:"set_key",get_key:"get_key",set_label:"set_label",get_label:"get_label",get_pos:"get_pos",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
});
var tannus_geom_Position = function(top,right,bottom,left) {
	if(left == null) left = 0;
	if(bottom == null) bottom = 0;
	if(right == null) right = 0;
	if(top == null) top = 0;
	this.top = top;
	this.right = right;
	this.bottom = bottom;
	this.left = left;
};
$hxClasses["tannus.geom.Position"] = tannus_geom_Position;
tannus_geom_Position.__name__ = ["tannus","geom","Position"];
tannus_geom_Position.prototype = {
	clone: function() {
		return new tannus_geom_Position(this.top,this.right,this.bottom,this.left);
	}
	,top: null
	,bottom: null
	,left: null
	,right: null
	,__class__: tannus_geom_Position
};
var gryffin_ui_Padding = function(top,right,bottom,left) {
	tannus_geom_Position.call(this,top,right,bottom,left);
};
$hxClasses["gryffin.ui.Padding"] = gryffin_ui_Padding;
gryffin_ui_Padding.__name__ = ["gryffin","ui","Padding"];
gryffin_ui_Padding.__super__ = tannus_geom_Position;
gryffin_ui_Padding.prototype = $extend(tannus_geom_Position.prototype,{
	copyFrom: function(other) {
		this.left = other.left;
		this.right = other.right;
		this.bottom = other.bottom;
		this.top = other.top;
	}
	,get_horizontal: function() {
		return this.left + this.right;
	}
	,set_horizontal: function(v) {
		this.left = v;
		this.right = v;
		return v;
	}
	,get_vertical: function() {
		return this.top + this.bottom;
	}
	,set_vertical: function(v) {
		this.top = v;
		this.bottom = v;
		return v;
	}
	,get_all: function() {
		return this.left;
	}
	,set_all: function(v) {
		return this.left = this.right = this.bottom = this.top = v;
	}
	,__class__: gryffin_ui_Padding
	,__properties__: {set_all:"set_all",get_all:"get_all",set_vertical:"set_vertical",get_vertical:"get_vertical",set_horizontal:"set_horizontal",get_horizontal:"get_horizontal"}
});
var gryffin_ui_Page = function() {
	var _g = this;
	gryffin_core_EntityContainer.call(this);
	this._opened = false;
	this.prev_page = null;
	this.scrollY = 0;
	this.scroll_jump = 1;
	this.bar = new gryffin_ui_ScrollBar($bind(this,this.get_contentRect),$bind(this,this.get_viewport),new tannus_io__$Pointer_Ref(function() {
		return _g.scrollY;
	},function(v) {
		return _g.scrollY = v;
	}));
	this.addChild(this.bar);
};
$hxClasses["gryffin.ui.Page"] = gryffin_ui_Page;
gryffin_ui_Page.__name__ = ["gryffin","ui","Page"];
gryffin_ui_Page.__super__ = gryffin_core_EntityContainer;
gryffin_ui_Page.prototype = $extend(gryffin_core_EntityContainer.prototype,{
	open: function() {
		if(this.stage != null) {
			var pages = this.stage.get("~gryffin.ui.Page:_opened");
			if(pages.selected.length > 0) {
				this.prev_page = pages.at(0);
				this.prev_page.close();
			}
			this._opened = true;
			this.dispatch("open",null);
			this.stage.on("scroll",$bind(this,this.scroll));
		} else throw new js__$Boot_HaxeError("PageError: Cannot open Page before it is activated!");
	}
	,close: function() {
		this._opened = false;
		this.dispatch("close",null);
	}
	,isOpen: function() {
		return this._opened;
	}
	,update: function(s) {
		if(this.isOpen()) gryffin_core_EntityContainer.prototype.update.call(this,s);
	}
	,render: function(s,c) {
		if(this.isOpen()) gryffin_core_EntityContainer.prototype.render.call(this,s,c);
	}
	,scroll: function(e) {
		var cr = this.get_contentRect();
		var vp = this.get_viewport();
		var diff = cr.height - vp.height;
		this.scrollY -= this.scroll_jump * e.delta;
		var tmp;
		var value = this.scrollY;
		if(value < 0) tmp = 0; else if(value > diff) tmp = diff; else tmp = value;
		this.scrollY = tmp;
	}
	,getEntitiesAtPoint: function(p) {
		if(this.isOpen()) return gryffin_core_EntityContainer.prototype.getEntitiesAtPoint.call(this,p); else return [];
	}
	,containsPoint: function(p) {
		var tmp;
		var _this = this.get_contentRect();
		var ox = p.get_x();
		var oy = p.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) tmp = oy < _this.y + _this.height; else tmp = false;
		} else tmp = false;
		return tmp;
	}
	,get_contentRect: function() {
		if(this.stage == null) return new tannus_geom_CRectangle(0,0,0,0); else return new tannus_geom_CRectangle(0,0,this.stage.canvas.canvas.width,this.stage.canvas.canvas.height);
	}
	,get_viewport: function() {
		var tmp;
		var _this = this.stage;
		tmp = new tannus_geom_CRectangle(0,0,_this.canvas.canvas.width,_this.canvas.canvas.height);
		return tmp;
	}
	,_opened: null
	,prev_page: null
	,scrollY: null
	,scroll_jump: null
	,bar: null
	,__class__: gryffin_ui_Page
	,__properties__: $extend(gryffin_core_EntityContainer.prototype.__properties__,{get_viewport:"get_viewport",get_contentRect:"get_contentRect"})
});
var gryffin_ui_ScrollBar = function(cr,vp,sy) {
	gryffin_core_Entity.call(this);
	this.priority = 90;
	this._cr = cr;
	this._vp = vp;
	this._scroll = sy;
	this.on("click",$bind(this,this._click));
};
$hxClasses["gryffin.ui.ScrollBar"] = gryffin_ui_ScrollBar;
gryffin_ui_ScrollBar.__name__ = ["gryffin","ui","ScrollBar"];
gryffin_ui_ScrollBar.__super__ = gryffin_core_Entity;
gryffin_ui_ScrollBar.prototype = $extend(gryffin_core_Entity.prototype,{
	needed: function() {
		var tmp;
		var _this = this._cr();
		tmp = _this.height;
		var tmp1;
		var _this1 = this.get_viewport();
		tmp1 = _this1.height;
		return tmp > tmp1;
	}
	,containsPoint: function(p) {
		var tmp;
		var _this = this.get_track();
		var ox = p.get_x();
		var oy = p.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) tmp = oy < _this.y + _this.height; else tmp = false;
		} else tmp = false;
		return tmp;
	}
	,render: function(stage,c) {
		if(this.needed()) {
			c.ctx.save();
			c.set_fillStyle("#F1F1F1");
			c.ctx.beginPath();
			var r = this.get_track();
			c.ctx.rect(r.x,r.y,r.width,r.height);
			c.ctx.closePath();
			c.ctx.fill();
			c.set_fillStyle("#C2C2C2");
			c.ctx.beginPath();
			var r1 = this.get_bar();
			c.ctx.rect(r1.x,r1.y,r1.width,r1.height);
			c.ctx.closePath();
			c.ctx.fill();
			c.ctx.restore();
		}
	}
	,_click: function(event) {
		var tmp;
		var _this = this.get_track();
		var point = event.position;
		var ox = point.get_x();
		var oy = point.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) tmp = oy < _this.y + _this.height; else tmp = false;
		} else tmp = false;
		if(tmp) {
			var mp = this.pointPercent(event.position);
			var tmp1;
			var _this1 = this._cr();
			tmp1 = _this1.height;
			var tmp2;
			var _this2 = this.get_viewport();
			tmp2 = _this2.height;
			var mx = tmp1 - tmp2;
			var tmp3;
			var b = mx * (mp / 100);
			if(mx < b) tmp3 = mx; else tmp3 = b;
			this._scroll.set(tmp3);
		}
	}
	,pointPercent: function(p) {
		var t = this.get_track();
		var y = p.get_y() - t.y;
		return tannus_math__$Percent_Percent_$Impl_$.percent(y,t.height);
	}
	,get_content: function() {
		return this._cr();
	}
	,get_viewport: function() {
		var tmp;
		var _x = this._vp().x;
		var _y = this._vp().y + this._scroll.get();
		var tmp1;
		var _this = this._vp();
		tmp1 = _this.width;
		var _width = tmp1;
		var tmp2;
		var _this1 = this._vp();
		tmp2 = _this1.height;
		var _height = tmp2;
		tmp = new tannus_geom_CRectangle(_x,_y,_width,_height);
		return tmp;
	}
	,get_scroll: function() {
		return this._scroll.get();
	}
	,set_scroll: function(v) {
		return this._scroll.set(v);
	}
	,get_scrollProgress: function() {
		var tmp;
		var _this = this._cr();
		tmp = _this.height;
		var tmp1;
		var _this1 = this.get_viewport();
		tmp1 = _this1.height;
		return tannus_math__$Percent_Percent_$Impl_$.percent(this._scroll.get(),tmp - tmp1);
	}
	,get_track: function() {
		var vp = this.get_viewport();
		var tmp;
		var _y = this._vp().y;
		tmp = new tannus_geom_CRectangle(vp.x + vp.width - 20,_y,20,vp.height);
		return tmp;
	}
	,get_bar: function() {
		var vp = this.get_viewport();
		var cr = this._cr();
		var bh = vp.height / cr.height * vp.height;
		var tmp;
		var tmp1;
		var _this = this._cr();
		tmp1 = _this.height;
		var tmp2;
		var _this1 = this.get_viewport();
		tmp2 = _this1.height;
		var this1 = tannus_math__$Percent_Percent_$Impl_$.percent(this._scroll.get(),tmp1 - tmp2);
		tmp = this1;
		var by = (vp.height - bh) * (tmp / 100);
		var t = this.get_track();
		return new tannus_geom_CRectangle(t.x,by,t.width,bh);
	}
	,_cr: null
	,_vp: null
	,_scroll: null
	,__class__: gryffin_ui_ScrollBar
	,__properties__: $extend(gryffin_core_Entity.prototype.__properties__,{get_bar:"get_bar",get_track:"get_track",get_scrollProgress:"get_scrollProgress",set_scroll:"set_scroll",get_scroll:"get_scroll",get_viewport:"get_viewport",get_content:"get_content"})
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,keys: null
	,__class__: haxe_IMap
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	buf: null
	,cache: null
	,shash: null
	,scount: null
	,useCache: null
	,useEnumIndex: null
	,toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var tmp;
		var _this = this.shash;
		if(__map_reserved[s] != null) tmp = _this.getReserved(s); else tmp = _this.h[s];
		var x = tmp;
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null?"null":"" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) _this1.setReserved(s,value); else _this1.h[s] = value;
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += s.length == null?"null":"" + s.length;
		this.buf.b += ":";
		this.buf.b += s == null?"null":"" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null?"null":"" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		{
			var _g = Type["typeof"](v);
			switch(_g[1]) {
			case 0:
				this.buf.b += "n";
				break;
			case 1:
				var v1 = v;
				if(v1 == 0) {
					this.buf.b += "z";
					return;
				}
				this.buf.b += "i";
				this.buf.b += v1 == null?"null":"" + v1;
				break;
			case 2:
				var v2 = v;
				if(isNaN(v2)) this.buf.b += "k"; else if(!isFinite(v2)) this.buf.b += v2 < 0?"m":"p"; else {
					this.buf.b += "d";
					this.buf.b += v2 == null?"null":"" + v2;
				}
				break;
			case 3:
				this.buf.b += v?"t":"f";
				break;
			case 6:
				var c = _g[2];
				if(c == String) {
					this.serializeString(v);
					return;
				}
				if(this.useCache && this.serializeRef(v)) return;
				switch(c) {
				case Array:
					var ucount = 0;
					this.buf.b += "a";
					var l = v.length;
					var _g1 = 0;
					while(_g1 < l) {
						var i = _g1++;
						if(v[i] == null) ucount++; else {
							if(ucount > 0) {
								if(ucount == 1) this.buf.b += "n"; else {
									this.buf.b += "u";
									this.buf.b += ucount == null?"null":"" + ucount;
								}
								ucount = 0;
							}
							this.serialize(v[i]);
						}
					}
					if(ucount > 0) {
						if(ucount == 1) this.buf.b += "n"; else {
							this.buf.b += "u";
							this.buf.b += ucount == null?"null":"" + ucount;
						}
					}
					this.buf.b += "h";
					break;
				case List:
					this.buf.b += "l";
					var v3 = v;
					var _g1_head = v3.h;
					var _g1_val = null;
					while(_g1_head != null) {
						var tmp;
						_g1_val = _g1_head[0];
						_g1_head = _g1_head[1];
						tmp = _g1_val;
						var i1 = tmp;
						this.serialize(i1);
					}
					this.buf.b += "h";
					break;
				case Date:
					var d = v;
					this.buf.b += "v";
					var x = d.getTime();
					this.buf.b += x == null?"null":"" + x;
					break;
				case haxe_ds_StringMap:
					this.buf.b += "b";
					var v4 = v;
					var $it0 = v4.keys();
					while( $it0.hasNext() ) {
						var k = $it0.next();
						this.serializeString(k);
						this.serialize(__map_reserved[k] != null?v4.getReserved(k):v4.h[k]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_IntMap:
					this.buf.b += "q";
					var v5 = v;
					var $it1 = v5.keys();
					while( $it1.hasNext() ) {
						var k1 = $it1.next();
						this.buf.b += ":";
						this.buf.b += k1 == null?"null":"" + k1;
						this.serialize(v5.h[k1]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_ObjectMap:
					this.buf.b += "M";
					var v6 = v;
					var $it2 = v6.keys();
					while( $it2.hasNext() ) {
						var k2 = $it2.next();
						var id = Reflect.field(k2,"__id__");
						Reflect.deleteField(k2,"__id__");
						this.serialize(k2);
						k2.__id__ = id;
						this.serialize(v6.h[k2.__id__]);
					}
					this.buf.b += "h";
					break;
				case haxe_io_Bytes:
					var v7 = v;
					var i2 = 0;
					var max = v7.length - 2;
					var charsBuf_b = "";
					var b64 = haxe_Serializer.BASE64;
					while(i2 < max) {
						var tmp1;
						var pos = i2++;
						tmp1 = v7.b[pos];
						var b1 = tmp1;
						var tmp2;
						var pos1 = i2++;
						tmp2 = v7.b[pos1];
						var b2 = tmp2;
						var tmp3;
						var pos2 = i2++;
						tmp3 = v7.b[pos2];
						var b3 = tmp3;
						var x1 = b64.charAt(b1 >> 2);
						charsBuf_b += x1 == null?"null":"" + x1;
						var x2 = b64.charAt((b1 << 4 | b2 >> 4) & 63);
						charsBuf_b += x2 == null?"null":"" + x2;
						var x3 = b64.charAt((b2 << 2 | b3 >> 6) & 63);
						charsBuf_b += x3 == null?"null":"" + x3;
						var x4 = b64.charAt(b3 & 63);
						charsBuf_b += x4 == null?"null":"" + x4;
					}
					if(i2 == max) {
						var tmp4;
						var pos3 = i2++;
						tmp4 = v7.b[pos3];
						var b11 = tmp4;
						var tmp5;
						var pos4 = i2++;
						tmp5 = v7.b[pos4];
						var b21 = tmp5;
						var x5 = b64.charAt(b11 >> 2);
						charsBuf_b += x5 == null?"null":"" + x5;
						var x6 = b64.charAt((b11 << 4 | b21 >> 4) & 63);
						charsBuf_b += x6 == null?"null":"" + x6;
						var x7 = b64.charAt(b21 << 2 & 63);
						charsBuf_b += x7 == null?"null":"" + x7;
					} else if(i2 == max + 1) {
						var tmp6;
						var pos5 = i2++;
						tmp6 = v7.b[pos5];
						var b12 = tmp6;
						var x8 = b64.charAt(b12 >> 2);
						charsBuf_b += x8 == null?"null":"" + x8;
						var x9 = b64.charAt(b12 << 4 & 63);
						charsBuf_b += x9 == null?"null":"" + x9;
					}
					var chars = charsBuf_b;
					this.buf.b += "s";
					this.buf.b += chars.length == null?"null":"" + chars.length;
					this.buf.b += ":";
					this.buf.b += chars == null?"null":"" + chars;
					break;
				default:
					if(this.useCache) this.cache.pop();
					if(v.hxSerialize != null) {
						this.buf.b += "C";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						v.hxSerialize(this);
						this.buf.b += "g";
					} else {
						this.buf.b += "c";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						this.serializeFields(v);
					}
				}
				break;
			case 4:
				if(js_Boot.__instanceof(v,Class)) {
					var className = Type.getClassName(v);
					this.buf.b += "A";
					this.serializeString(className);
				} else if(js_Boot.__instanceof(v,Enum)) {
					this.buf.b += "B";
					this.serializeString(Type.getEnumName(v));
				} else {
					if(this.useCache && this.serializeRef(v)) return;
					this.buf.b += "o";
					this.serializeFields(v);
				}
				break;
			case 7:
				var e = _g[2];
				if(this.useCache) {
					if(this.serializeRef(v)) return;
					this.cache.pop();
				}
				this.buf.b += this.useEnumIndex?"j":"w";
				this.serializeString(Type.getEnumName(e));
				if(this.useEnumIndex) {
					this.buf.b += ":";
					this.buf.b += Std.string(v[1]);
				} else this.serializeString(v[0]);
				this.buf.b += ":";
				var l1 = v.length;
				this.buf.b += Std.string(l1 - 2);
				var _g11 = 2;
				while(_g11 < l1) {
					var i3 = _g11++;
					this.serialize(v[i3]);
				}
				if(this.useCache) this.cache.push(v);
				break;
			case 5:
				throw new js__$Boot_HaxeError("Cannot serialize function");
				break;
			default:
				throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
			}
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = Type;
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.setResolver(r);
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,setResolver: function(r) {
		if(r == null) this.resolver = { resolveClass : function(_) {
			return null;
		}, resolveEnum : function(_1) {
			return null;
		}}; else this.resolver = r;
	}
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) break;
			if(c == 45) {
				if(this.pos != fpos) break;
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) break;
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) k *= -1;
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
		}
		var tmp;
		var x = HxOverrides.substr(this.buf,p1,this.pos - p1);
		tmp = parseFloat(x);
		return tmp;
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) throw new js__$Boot_HaxeError("Invalid object");
			if(this.buf.charCodeAt(this.pos) == 103) break;
			var k = this.unserialize();
			if(!(typeof(k) == "string")) throw new js__$Boot_HaxeError("Invalid object key");
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		var tmp;
		var p = this.pos++;
		tmp = this.buf.charCodeAt(p);
		if(tmp != 58) throw new js__$Boot_HaxeError("Invalid enum format");
		var nargs = this.readDigits();
		if(nargs == 0) return Type.createEnum(edecl,tag);
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var tmp;
		var p = this.pos++;
		tmp = this.buf.charCodeAt(p);
		var _g = tmp;
		switch(_g) {
		case 110:
			return null;
		case 116:
			return true;
		case 102:
			return false;
		case 122:
			return 0;
		case 105:
			return this.readDigits();
		case 100:
			return this.readFloat();
		case 121:
			var len = this.readDigits();
			var tmp1;
			var p1 = this.pos++;
			tmp1 = this.buf.charCodeAt(p1);
			if(tmp1 != 58 || this.length - this.pos < len) throw new js__$Boot_HaxeError("Invalid string length");
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 107:
			return NaN;
		case 109:
			return -Infinity;
		case 112:
			return Infinity;
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else a.push(this.unserialize());
			}
			return a;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 114:
			var n1 = this.readDigits();
			if(n1 < 0 || n1 >= this.cache.length) throw new js__$Boot_HaxeError("Invalid reference");
			return this.cache[n1];
		case 82:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.scache.length) throw new js__$Boot_HaxeError("Invalid string reference");
			return this.scache[n2];
		case 120:
			throw new js__$Boot_HaxeError(this.unserialize());
			break;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw new js__$Boot_HaxeError("Class not found " + name);
			var o1 = Type.createEmptyInstance(cl);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 119:
			var name1 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name1);
			if(edecl == null) throw new js__$Boot_HaxeError("Enum not found " + name1);
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 106:
			var name2 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name2);
			if(edecl1 == null) throw new js__$Boot_HaxeError("Enum not found " + name2);
			this.pos++;
			var index = this.readDigits();
			var tag = Type.getEnumConstructs(edecl1)[index];
			if(tag == null) throw new js__$Boot_HaxeError("Unknown enum index " + name2 + "@" + index);
			var e1 = this.unserializeEnum(edecl1,tag);
			this.cache.push(e1);
			return e1;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf1 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) h.setReserved(s1,value); else h.h[s1] = value;
			}
			this.pos++;
			return h;
		case 113:
			var h1 = new haxe_ds_IntMap();
			this.cache.push(h1);
			var buf3 = this.buf;
			var tmp2;
			var p2 = this.pos++;
			tmp2 = this.buf.charCodeAt(p2);
			var c1 = tmp2;
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h1.h[i] = value1;
				var tmp3;
				var p3 = this.pos++;
				tmp3 = this.buf.charCodeAt(p3);
				c1 = tmp3;
			}
			if(c1 != 104) throw new js__$Boot_HaxeError("Invalid IntMap format");
			return h1;
		case 77:
			var h2 = new haxe_ds_ObjectMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s2 = this.unserialize();
				h2.set(s2,this.unserialize());
			}
			this.pos++;
			return h2;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				var tmp4;
				var s3 = HxOverrides.substr(this.buf,this.pos,19);
				tmp4 = HxOverrides.strDate(s3);
				d = tmp4;
				this.pos += 19;
			} else {
				var tmp5;
				var t = this.readFloat();
				var d1 = new Date();
				d1.setTime(t);
				tmp5 = d1;
				d = tmp5;
			}
			this.cache.push(d);
			return d;
		case 115:
			var len1 = this.readDigits();
			var buf5 = this.buf;
			var tmp6;
			var p4 = this.pos++;
			tmp6 = this.buf.charCodeAt(p4);
			if(tmp6 != 58 || this.length - this.pos < len1) throw new js__$Boot_HaxeError("Invalid bytes length");
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len1 & 3;
			var size = (len1 >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i1 + (len1 - rest);
			var bytes = haxe_io_Bytes.alloc(size);
			var bpos = 0;
			while(i1 < max) {
				var tmp7;
				var index1 = i1++;
				tmp7 = buf5.charCodeAt(index1);
				var c11 = codes[tmp7];
				var tmp8;
				var index2 = i1++;
				tmp8 = buf5.charCodeAt(index2);
				var c2 = codes[tmp8];
				var pos = bpos++;
				bytes.b[pos] = (c11 << 2 | c2 >> 4) & 255;
				var tmp9;
				var index3 = i1++;
				tmp9 = buf5.charCodeAt(index3);
				var c3 = codes[tmp9];
				var pos1 = bpos++;
				bytes.b[pos1] = (c2 << 4 | c3 >> 2) & 255;
				var tmp10;
				var index4 = i1++;
				tmp10 = buf5.charCodeAt(index4);
				var c4 = codes[tmp10];
				var pos2 = bpos++;
				bytes.b[pos2] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var tmp11;
				var index5 = i1++;
				tmp11 = buf5.charCodeAt(index5);
				var c12 = codes[tmp11];
				var tmp12;
				var index6 = i1++;
				tmp12 = buf5.charCodeAt(index6);
				var c21 = codes[tmp12];
				var pos3 = bpos++;
				bytes.b[pos3] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var tmp13;
					var index7 = i1++;
					tmp13 = buf5.charCodeAt(index7);
					var c31 = codes[tmp13];
					var pos4 = bpos++;
					bytes.b[pos4] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len1;
			this.cache.push(bytes);
			return bytes;
		case 67:
			var name3 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name3);
			if(cl1 == null) throw new js__$Boot_HaxeError("Class not found " + name3);
			var o2 = Type.createEmptyInstance(cl1);
			this.cache.push(o2);
			o2.hxUnserialize(this);
			var tmp14;
			var p5 = this.pos++;
			tmp14 = this.buf.charCodeAt(p5);
			if(tmp14 != 103) throw new js__$Boot_HaxeError("Invalid custom data");
			return o2;
		case 65:
			var name4 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name4);
			if(cl2 == null) throw new js__$Boot_HaxeError("Class not found " + name4);
			return cl2;
		case 66:
			var name5 = this.unserialize();
			var e2 = this.resolver.resolveEnum(name5);
			if(e2 == null) throw new js__$Boot_HaxeError("Enum not found " + name5);
			return e2;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var tmp;
		var index = i++;
		tmp = s.charCodeAt(index);
		var c = tmp;
		if(55296 <= c && c <= 56319) {
			var tmp1;
			var index1 = i++;
			tmp1 = s.charCodeAt(index1);
			c = c - 55232 << 10 | tmp1 & 1023;
		}
		if(c <= 127) a.push(c); else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) return hb;
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) break;
				s += fcc(c);
			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) complement = true;
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		var _g = bytes.length % 3;
		switch(_g) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) complement = true;
	if(complement) while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) nbits++;
	if(nbits > 8 || len != 1 << nbits) throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = haxe_io_Bytes.alloc(size + (b.length * 8 % nbits == 0?0:1));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				var tmp;
				var pos = pin++;
				tmp = b.b[pos];
				buf |= tmp;
			}
			curbits -= nbits;
			var pos1 = pout++;
			out.b[pos1] = base.b[buf >> curbits & mask] & 255;
		}
		if(curbits > 0) {
			var pos2 = pout++;
			out.b[pos2] = base.b[buf << nbits - curbits & mask] & 255;
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		if(this.tbl == null) this.initTable();
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = haxe_io_Bytes.alloc(size);
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var tmp;
				var pos = pin++;
				tmp = b.b[pos];
				var i = tbl[tmp];
				if(i == -1) throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				buf |= i;
			}
			curbits -= 8;
			var pos1 = pout++;
			out.b[pos1] = buf >> curbits & 255 & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Crc32 = function() { };
$hxClasses["haxe.crypto.Crc32"] = haxe_crypto_Crc32;
haxe_crypto_Crc32.__name__ = ["haxe","crypto","Crc32"];
haxe_crypto_Crc32.make = function(data) {
	var crc = -1;
	var b = data.b.buffer;
	var _g1 = 0;
	var _g = data.length;
	while(_g1 < _g) {
		var i = _g1++;
		var tmp = (crc ^ b.bytes[i]) & 255;
		var _g2 = 0;
		while(_g2 < 8) {
			_g2++;
			if((tmp & 1) == 1) tmp = tmp >>> 1 ^ -306674912; else tmp >>>= 1;
		}
		crc = crc >>> 8 ^ tmp;
	}
	return crc ^ -1;
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = ["haxe","ds","ArraySort"];
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) return;
		var _g = from + 1;
		while(_g < to) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) haxe_ds_ArraySort.swap(a,j - 1,j); else break;
				j--;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	var new_mid;
	if(len1 == 0 || len2 == 0) return;
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) haxe_ds_ArraySort.swap(a,pivot,from);
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	var n;
	if(from == mid || mid == to) return;
	n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) p2 += shift; else p2 = from + (shift - (to - p2));
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) len = half; else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else len = half;
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) return node.value;
			if(c < 0) node = node.left; else node = node.right;
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				return false;
			} else throw(e);
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) return true; else if(c < 0) node = node.left; else node = node.right;
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) return new haxe_ds_TreeNode(null,k,v,null);
		var c = this.compare(k,node.key);
		var tmp;
		if(c == 0) tmp = new haxe_ds_TreeNode(node.left,k,v,node.right,node == null?0:node._height); else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			tmp = this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			tmp = this.balance(node.left,node.key,node.value,nr);
		}
		return tmp;
	}
	,removeLoop: function(k,node) {
		if(node == null) throw new js__$Boot_HaxeError("Not_found");
		var c = this.compare(k,node.key);
		return c == 0?this.merge(node.left,node.right):c < 0?this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right):this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) return t2;
		if(t2 == null) return t1;
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		var tmp;
		if(t == null) throw new js__$Boot_HaxeError("Not_found"); else if(t.left == null) tmp = t; else tmp = this.minBinding(t.left);
		return tmp;
	}
	,removeMinBinding: function(t) {
		return t.left == null?t.right:this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
	}
	,balance: function(l,k,v,r) {
		var hl = l == null?0:l._height;
		var hr = r == null?0:r._height;
		var tmp;
		if(hl > hr + 2) {
			var tmp1;
			var _this = l.left;
			if(_this == null) tmp1 = 0; else tmp1 = _this._height;
			var tmp2;
			var _this1 = l.right;
			if(_this1 == null) tmp2 = 0; else tmp2 = _this1._height;
			if(tmp1 >= tmp2) tmp = new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r)); else tmp = new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
		} else if(hr > hl + 2) {
			var tmp3;
			var _this2 = r.right;
			if(_this2 == null) tmp3 = 0; else tmp3 = _this2._height;
			var tmp4;
			var _this3 = r.left;
			if(_this3 == null) tmp4 = 0; else tmp4 = _this3._height;
			if(tmp3 > tmp4) tmp = new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right); else tmp = new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
		} else tmp = new haxe_ds_TreeNode(l,k,v,r,(hl > hr?hl:hr) + 1);
		return tmp;
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) h = -1;
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		if(_this == null) tmp = 0; else tmp = _this._height;
		var tmp1;
		var _this1 = this.right;
		if(_this1 == null) tmp1 = 0; else tmp1 = _this1._height;
		var tmp2;
		if(tmp > tmp1) {
			var _this2 = this.left;
			if(_this2 == null) tmp2 = 0; else tmp2 = _this2._height;
		} else {
			var _this3 = this.right;
			if(_this3 == null) tmp2 = 0; else tmp2 = _this3._height;
		}
		this._height = tmp2 + 1;
	} else this._height = h;
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) return d;
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) return 0;
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) return ld;
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) return d;
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		return Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)?this.compare(v1,v2):(v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)?this.compareArgs(v1,v2):Reflect.compare(v1,v2);
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { };
	this.h.__keys__ = { };
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) a.push(this.h.__keys__[key]);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var tmp;
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
		return tmp;
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) this.setReserved(key,value); else this.h[key] = value;
	}
	,get: function(key) {
		if(__map_reserved[key] != null) return this.getReserved(key);
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) return this.existsReserved(key);
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) this.rh = { };
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		return this.rh == null?null:this.rh["$" + key];
	}
	,existsReserved: function(key) {
		if(this.rh == null) return false;
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) return false;
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) return false;
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		var tmp;
		var _this = this.arrayKeys();
		tmp = HxOverrides.iter(_this);
		return tmp;
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) out.push(key);
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) out.push(key.substr(1));
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe_io_BytesBuffer.prototype = {
	b: null
	,getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = ["haxe","io","Input"];
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) pos = 0;
	if(len == null) len = b.length - pos;
	if(pos < 0 || len < 0 || pos + len > b.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = ["haxe","io","Output"];
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		var k = len;
		var b = s.b.buffer;
		if(pos < 0 || len < 0 || pos + len > s.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		while(k > 0) {
			this.writeByte(b[pos]);
			pos++;
			k--;
		}
		return len;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			p += k;
			l -= k;
		}
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeUInt16: function(x) {
		if(x < 0 || x >= 65536) throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,writeString: function(s) {
		var b = haxe_io_Bytes.ofString(s);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.b.push(c);
	}
	,writeBytes: function(buf,pos,len) {
		var _this = this.b;
		if(pos < 0 || len < 0 || pos + len > buf.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		var b2 = buf.b;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			_this.b.push(b2[i]);
		}
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() { };
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) return 0.0;
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) return 0;
	var af = f < 0?-f:f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) exp = -127; else if(exp > 128) exp = 128;
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
	return (f < 0?-2147483648:0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) return 0.0;
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else {
		var av = v < 0?-v:v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var tmp;
		var v1 = (av / Math.pow(2,exp) - 1) * 4503599627370496.;
		tmp = Math.round(v1);
		var sig = tmp;
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else this.dir = null;
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.withoutExtension = function(path) {
	var s = new haxe_io_Path(path);
	s.ext = null;
	return s.toString();
};
haxe_io_Path.withoutDirectory = function(path) {
	var s = new haxe_io_Path(path);
	s.dir = null;
	return s.toString();
};
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) return "";
	return s.dir;
};
haxe_io_Path.extension = function(path) {
	var s = new haxe_io_Path(path);
	if(s.ext == null) return "";
	return s.ext;
};
haxe_io_Path.isAbsolute = function(path) {
	if(StringTools.startsWith(path,"/")) return true;
	if(path.charAt(1) == ":") return true;
	return false;
};
haxe_io_Path.prototype = {
	dir: null
	,file: null
	,ext: null
	,backslash: null
	,toString: function() {
		return (this.dir == null?"":this.dir + (this.backslash?"\\":"/")) + this.file + (this.ext == null?"":"." + this.ext);
	}
	,__class__: haxe_io_Path
};
var haxe_macro_Constant = $hxClasses["haxe.macro.Constant"] = { __ename__ : ["haxe","macro","Constant"], __constructs__ : ["CInt","CFloat","CString","CIdent","CRegexp"] };
haxe_macro_Constant.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CIdent = function(s) { var $x = ["CIdent",3,s]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
haxe_macro_Constant.CRegexp = function(r,opt) { var $x = ["CRegexp",4,r,opt]; $x.__enum__ = haxe_macro_Constant; $x.toString = $estr; return $x; };
var haxe_macro_Binop = $hxClasses["haxe.macro.Binop"] = { __ename__ : ["haxe","macro","Binop"], __constructs__ : ["OpAdd","OpMult","OpDiv","OpSub","OpAssign","OpEq","OpNotEq","OpGt","OpGte","OpLt","OpLte","OpAnd","OpOr","OpXor","OpBoolAnd","OpBoolOr","OpShl","OpShr","OpUShr","OpMod","OpAssignOp","OpInterval","OpArrow"] };
haxe_macro_Binop.OpAdd = ["OpAdd",0];
haxe_macro_Binop.OpAdd.toString = $estr;
haxe_macro_Binop.OpAdd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMult = ["OpMult",1];
haxe_macro_Binop.OpMult.toString = $estr;
haxe_macro_Binop.OpMult.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpDiv = ["OpDiv",2];
haxe_macro_Binop.OpDiv.toString = $estr;
haxe_macro_Binop.OpDiv.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpSub = ["OpSub",3];
haxe_macro_Binop.OpSub.toString = $estr;
haxe_macro_Binop.OpSub.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssign = ["OpAssign",4];
haxe_macro_Binop.OpAssign.toString = $estr;
haxe_macro_Binop.OpAssign.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpEq = ["OpEq",5];
haxe_macro_Binop.OpEq.toString = $estr;
haxe_macro_Binop.OpEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpNotEq = ["OpNotEq",6];
haxe_macro_Binop.OpNotEq.toString = $estr;
haxe_macro_Binop.OpNotEq.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGt = ["OpGt",7];
haxe_macro_Binop.OpGt.toString = $estr;
haxe_macro_Binop.OpGt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpGte = ["OpGte",8];
haxe_macro_Binop.OpGte.toString = $estr;
haxe_macro_Binop.OpGte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLt = ["OpLt",9];
haxe_macro_Binop.OpLt.toString = $estr;
haxe_macro_Binop.OpLt.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpLte = ["OpLte",10];
haxe_macro_Binop.OpLte.toString = $estr;
haxe_macro_Binop.OpLte.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAnd = ["OpAnd",11];
haxe_macro_Binop.OpAnd.toString = $estr;
haxe_macro_Binop.OpAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpOr = ["OpOr",12];
haxe_macro_Binop.OpOr.toString = $estr;
haxe_macro_Binop.OpOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpXor = ["OpXor",13];
haxe_macro_Binop.OpXor.toString = $estr;
haxe_macro_Binop.OpXor.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolAnd = ["OpBoolAnd",14];
haxe_macro_Binop.OpBoolAnd.toString = $estr;
haxe_macro_Binop.OpBoolAnd.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpBoolOr = ["OpBoolOr",15];
haxe_macro_Binop.OpBoolOr.toString = $estr;
haxe_macro_Binop.OpBoolOr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShl = ["OpShl",16];
haxe_macro_Binop.OpShl.toString = $estr;
haxe_macro_Binop.OpShl.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpShr = ["OpShr",17];
haxe_macro_Binop.OpShr.toString = $estr;
haxe_macro_Binop.OpShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpUShr = ["OpUShr",18];
haxe_macro_Binop.OpUShr.toString = $estr;
haxe_macro_Binop.OpUShr.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpMod = ["OpMod",19];
haxe_macro_Binop.OpMod.toString = $estr;
haxe_macro_Binop.OpMod.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpAssignOp = function(op) { var $x = ["OpAssignOp",20,op]; $x.__enum__ = haxe_macro_Binop; $x.toString = $estr; return $x; };
haxe_macro_Binop.OpInterval = ["OpInterval",21];
haxe_macro_Binop.OpInterval.toString = $estr;
haxe_macro_Binop.OpInterval.__enum__ = haxe_macro_Binop;
haxe_macro_Binop.OpArrow = ["OpArrow",22];
haxe_macro_Binop.OpArrow.toString = $estr;
haxe_macro_Binop.OpArrow.__enum__ = haxe_macro_Binop;
var haxe_macro_Unop = $hxClasses["haxe.macro.Unop"] = { __ename__ : ["haxe","macro","Unop"], __constructs__ : ["OpIncrement","OpDecrement","OpNot","OpNeg","OpNegBits"] };
haxe_macro_Unop.OpIncrement = ["OpIncrement",0];
haxe_macro_Unop.OpIncrement.toString = $estr;
haxe_macro_Unop.OpIncrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpDecrement = ["OpDecrement",1];
haxe_macro_Unop.OpDecrement.toString = $estr;
haxe_macro_Unop.OpDecrement.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNot = ["OpNot",2];
haxe_macro_Unop.OpNot.toString = $estr;
haxe_macro_Unop.OpNot.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNeg = ["OpNeg",3];
haxe_macro_Unop.OpNeg.toString = $estr;
haxe_macro_Unop.OpNeg.__enum__ = haxe_macro_Unop;
haxe_macro_Unop.OpNegBits = ["OpNegBits",4];
haxe_macro_Unop.OpNegBits.toString = $estr;
haxe_macro_Unop.OpNegBits.__enum__ = haxe_macro_Unop;
var haxe_macro_ExprDef = $hxClasses["haxe.macro.ExprDef"] = { __ename__ : ["haxe","macro","ExprDef"], __constructs__ : ["EConst","EArray","EBinop","EField","EParenthesis","EObjectDecl","EArrayDecl","ECall","ENew","EUnop","EVars","EFunction","EBlock","EFor","EIn","EIf","EWhile","ESwitch","ETry","EReturn","EBreak","EContinue","EUntyped","EThrow","ECast","EDisplay","EDisplayNew","ETernary","ECheckType","EMeta"] };
haxe_macro_ExprDef.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EArray = function(e1,e2) { var $x = ["EArray",1,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBinop = function(op,e1,e2) { var $x = ["EBinop",2,op,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EField = function(e,field) { var $x = ["EField",3,e,field]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EParenthesis = function(e) { var $x = ["EParenthesis",4,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EObjectDecl = function(fields) { var $x = ["EObjectDecl",5,fields]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EArrayDecl = function(values) { var $x = ["EArrayDecl",6,values]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECall = function(e,params) { var $x = ["ECall",7,e,params]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ENew = function(t,params) { var $x = ["ENew",8,t,params]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EUnop = function(op,postFix,e) { var $x = ["EUnop",9,op,postFix,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EVars = function(vars) { var $x = ["EVars",10,vars]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EFunction = function(name,f) { var $x = ["EFunction",11,name,f]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBlock = function(exprs) { var $x = ["EBlock",12,exprs]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EFor = function(it,expr) { var $x = ["EFor",13,it,expr]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EIn = function(e1,e2) { var $x = ["EIn",14,e1,e2]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EIf = function(econd,eif,eelse) { var $x = ["EIf",15,econd,eif,eelse]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EWhile = function(econd,e,normalWhile) { var $x = ["EWhile",16,econd,e,normalWhile]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ESwitch = function(e,cases,edef) { var $x = ["ESwitch",17,e,cases,edef]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ETry = function(e,catches) { var $x = ["ETry",18,e,catches]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EReturn = function(e) { var $x = ["EReturn",19,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EBreak = ["EBreak",20];
haxe_macro_ExprDef.EBreak.toString = $estr;
haxe_macro_ExprDef.EBreak.__enum__ = haxe_macro_ExprDef;
haxe_macro_ExprDef.EContinue = ["EContinue",21];
haxe_macro_ExprDef.EContinue.toString = $estr;
haxe_macro_ExprDef.EContinue.__enum__ = haxe_macro_ExprDef;
haxe_macro_ExprDef.EUntyped = function(e) { var $x = ["EUntyped",22,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EThrow = function(e) { var $x = ["EThrow",23,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECast = function(e,t) { var $x = ["ECast",24,e,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EDisplay = function(e,isCall) { var $x = ["EDisplay",25,e,isCall]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EDisplayNew = function(t) { var $x = ["EDisplayNew",26,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ETernary = function(econd,eif,eelse) { var $x = ["ETernary",27,econd,eif,eelse]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.ECheckType = function(e,t) { var $x = ["ECheckType",28,e,t]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
haxe_macro_ExprDef.EMeta = function(s,e) { var $x = ["EMeta",29,s,e]; $x.__enum__ = haxe_macro_ExprDef; $x.toString = $estr; return $x; };
var haxe_macro_ComplexType = $hxClasses["haxe.macro.ComplexType"] = { __ename__ : ["haxe","macro","ComplexType"], __constructs__ : ["TPath","TFunction","TAnonymous","TParent","TExtend","TOptional"] };
haxe_macro_ComplexType.TPath = function(p) { var $x = ["TPath",0,p]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TFunction = function(args,ret) { var $x = ["TFunction",1,args,ret]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TAnonymous = function(fields) { var $x = ["TAnonymous",2,fields]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TParent = function(t) { var $x = ["TParent",3,t]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TExtend = function(p,fields) { var $x = ["TExtend",4,p,fields]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
haxe_macro_ComplexType.TOptional = function(t) { var $x = ["TOptional",5,t]; $x.__enum__ = haxe_macro_ComplexType; $x.toString = $estr; return $x; };
var haxe_macro_TypeParam = $hxClasses["haxe.macro.TypeParam"] = { __ename__ : ["haxe","macro","TypeParam"], __constructs__ : ["TPType","TPExpr"] };
haxe_macro_TypeParam.TPType = function(t) { var $x = ["TPType",0,t]; $x.__enum__ = haxe_macro_TypeParam; $x.toString = $estr; return $x; };
haxe_macro_TypeParam.TPExpr = function(e) { var $x = ["TPExpr",1,e]; $x.__enum__ = haxe_macro_TypeParam; $x.toString = $estr; return $x; };
var haxe_macro_ExprTools = function() { };
$hxClasses["haxe.macro.ExprTools"] = haxe_macro_ExprTools;
haxe_macro_ExprTools.__name__ = ["haxe","macro","ExprTools"];
haxe_macro_ExprTools.map = function(e,f) {
	var tmp;
	var _g = e.expr;
	switch(_g[1]) {
	case 0:
		tmp = e.expr;
		break;
	case 1:
		tmp = haxe_macro_ExprDef.EArray(f(_g[2]),f(_g[3]));
		break;
	case 2:
		tmp = haxe_macro_ExprDef.EBinop(_g[2],f(_g[3]),f(_g[4]));
		break;
	case 3:
		tmp = haxe_macro_ExprDef.EField(f(_g[2]),_g[3]);
		break;
	case 4:
		tmp = haxe_macro_ExprDef.EParenthesis(f(_g[2]));
		break;
	case 5:
		var fields = _g[2];
		var ret = [];
		var _g1 = 0;
		while(_g1 < fields.length) {
			var field = fields[_g1];
			++_g1;
			ret.push({ field : field.field, expr : f(field.expr)});
		}
		tmp = haxe_macro_ExprDef.EObjectDecl(ret);
		break;
	case 6:
		tmp = haxe_macro_ExprDef.EArrayDecl(haxe_macro_ExprArrayTools.map(_g[2],f));
		break;
	case 7:
		tmp = haxe_macro_ExprDef.ECall(f(_g[2]),haxe_macro_ExprArrayTools.map(_g[3],f));
		break;
	case 8:
		tmp = haxe_macro_ExprDef.ENew(_g[2],haxe_macro_ExprArrayTools.map(_g[3],f));
		break;
	case 9:
		tmp = haxe_macro_ExprDef.EUnop(_g[2],_g[3],f(_g[4]));
		break;
	case 10:
		var vars = _g[2];
		var ret1 = [];
		var _g11 = 0;
		while(_g11 < vars.length) {
			var v = vars[_g11];
			++_g11;
			var tmp1;
			var e1 = v.expr;
			if(e1 == null) tmp1 = null; else tmp1 = f(e1);
			ret1.push({ name : v.name, type : v.type, expr : tmp1});
		}
		tmp = haxe_macro_ExprDef.EVars(ret1);
		break;
	case 12:
		tmp = haxe_macro_ExprDef.EBlock(haxe_macro_ExprArrayTools.map(_g[2],f));
		break;
	case 13:
		tmp = haxe_macro_ExprDef.EFor(f(_g[2]),f(_g[3]));
		break;
	case 14:
		tmp = haxe_macro_ExprDef.EIn(f(_g[2]),f(_g[3]));
		break;
	case 15:
		var eelse = _g[4];
		tmp = haxe_macro_ExprDef.EIf(f(_g[2]),f(_g[3]),eelse == null?null:f(eelse));
		break;
	case 16:
		tmp = haxe_macro_ExprDef.EWhile(f(_g[2]),f(_g[3]),_g[4]);
		break;
	case 19:
		var e2 = _g[2];
		tmp = haxe_macro_ExprDef.EReturn(e2 == null?null:f(e2));
		break;
	case 22:
		tmp = haxe_macro_ExprDef.EUntyped(f(_g[2]));
		break;
	case 23:
		tmp = haxe_macro_ExprDef.EThrow(f(_g[2]));
		break;
	case 24:
		tmp = haxe_macro_ExprDef.ECast(f(_g[2]),_g[3]);
		break;
	case 25:
		tmp = haxe_macro_ExprDef.EDisplay(f(_g[2]),_g[3]);
		break;
	case 27:
		tmp = haxe_macro_ExprDef.ETernary(f(_g[2]),f(_g[3]),f(_g[4]));
		break;
	case 28:
		tmp = haxe_macro_ExprDef.ECheckType(f(_g[2]),_g[3]);
		break;
	case 26:case 21:case 20:
		tmp = e.expr;
		break;
	case 18:
		var catches = _g[3];
		var ret2 = [];
		var _g12 = 0;
		while(_g12 < catches.length) {
			var c = catches[_g12];
			++_g12;
			ret2.push({ name : c.name, type : c.type, expr : f(c.expr)});
		}
		tmp = haxe_macro_ExprDef.ETry(f(_g[2]),ret2);
		break;
	case 17:
		var edef = _g[4];
		var cases = _g[3];
		var ret3 = [];
		var _g13 = 0;
		while(_g13 < cases.length) {
			var c1 = cases[_g13];
			++_g13;
			var tmp2;
			var e3 = c1.expr;
			if(e3 == null) tmp2 = null; else tmp2 = f(e3);
			var tmp3;
			var e4 = c1.guard;
			if(e4 == null) tmp3 = null; else tmp3 = f(e4);
			ret3.push({ expr : tmp2, guard : tmp3, values : haxe_macro_ExprArrayTools.map(c1.values,f)});
		}
		tmp = haxe_macro_ExprDef.ESwitch(f(_g[2]),ret3,edef == null || edef.expr == null?edef:f(edef));
		break;
	case 11:
		var func = _g[3];
		var ret4 = [];
		var _g14 = 0;
		var _g2 = func.args;
		while(_g14 < _g2.length) {
			var arg = _g2[_g14];
			++_g14;
			var tmp4;
			var e5 = arg.value;
			if(e5 == null) tmp4 = null; else tmp4 = f(e5);
			ret4.push({ name : arg.name, opt : arg.opt, type : arg.type, value : tmp4});
		}
		tmp = haxe_macro_ExprDef.EFunction(_g[2],{ args : ret4, ret : func.ret, params : func.params, expr : f(func.expr)});
		break;
	case 29:
		tmp = haxe_macro_ExprDef.EMeta(_g[2],f(_g[3]));
		break;
	}
	return { pos : e.pos, expr : tmp};
};
var haxe_macro_ExprArrayTools = function() { };
$hxClasses["haxe.macro.ExprArrayTools"] = haxe_macro_ExprArrayTools;
haxe_macro_ExprArrayTools.__name__ = ["haxe","macro","ExprArrayTools"];
haxe_macro_ExprArrayTools.map = function(el,f) {
	var ret = [];
	var _g = 0;
	while(_g < el.length) {
		var e = el[_g];
		++_g;
		ret.push(f(e));
	}
	return ret;
};
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = ["haxe","rtti","Meta"];
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	return meta == null || meta.fields == null?{ }:meta.fields;
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) strict = false;
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) p = 0;
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(!(c != c)) {
		switch(state) {
		case 0:
			switch(c) {
			case 10:case 13:case 9:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			switch(c) {
			case 60:
				state = 0;
				next = 2;
				break;
			default:
				start = p;
				state = 13;
				continue;
			}
			break;
		case 13:
			if(c == 60) {
				var len = p - start;
				buf.b += len == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				nsubs++;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len1 = p - start;
				buf.b += len1 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len1);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				nsubs++;
				p += 2;
				state = 1;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") throw new js__$Boot_HaxeError("Expected <![CDATA[");
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") throw new js__$Boot_HaxeError("Expected <!DOCTYPE");
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) throw new js__$Boot_HaxeError("Expected <!--"); else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 63:
				state = 14;
				start = p;
				break;
			case 47:
				if(parent == null) throw new js__$Boot_HaxeError("Expected node name");
				start = p + 1;
				state = 0;
				next = 10;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) throw new js__$Boot_HaxeError("Expected node name");
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				nsubs++;
				break;
			case 62:
				state = 9;
				nsubs++;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp1;
				if(start == p) throw new js__$Boot_HaxeError("Expected attribute name");
				tmp1 = HxOverrides.substr(str,start,p - start);
				aname = tmp1;
				if(xml.exists(aname)) throw new js__$Boot_HaxeError("Duplicate attribute");
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			switch(c) {
			case 61:
				state = 0;
				next = 7;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected =");
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected \"");
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len2 = p - start;
				buf.b += len2 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len2);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 62:
				if(strict) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(c) + " in attribute value"); else if(c == attrValQuote) {
					var len3 = p - start;
					buf.b += len3 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len3);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			case 60:
				if(strict) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(c) + " in attribute value"); else if(c == attrValQuote) {
					var len4 = p - start;
					buf.b += len4 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len4);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len5 = p - start;
					buf.b += len5 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len5);
					var val2 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val2);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 11:
			switch(c) {
			case 62:
				state = 1;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected >");
			}
			break;
		case 12:
			switch(c) {
			case 62:
				if(nsubs == 0) parent.addChild(Xml.createPCData(""));
				return p;
			default:
				throw new js__$Boot_HaxeError("Expected >");
			}
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) throw new js__$Boot_HaxeError("Expected node name");
				var v = HxOverrides.substr(str,start,p - start);
				var tmp2;
				if(parent.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
				tmp2 = parent.nodeName;
				if(v != tmp2) {
					var tmp3;
					if(parent.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					tmp3 = parent.nodeName;
					throw new js__$Boot_HaxeError("Expected </" + tmp3 + ">");
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) nbrackets++; else if(c == 93) nbrackets--; else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				state = 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				p++;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120?Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)):Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else {
					var tmp4;
					var _this = haxe_xml_Parser.escapes;
					if(__map_reserved[s] != null) tmp4 = _this.existsReserved(s); else tmp4 = _this.h.hasOwnProperty(s);
					if(!tmp4) {
						if(strict) throw new js__$Boot_HaxeError("Undefined entity: " + s);
						buf.b += Std.string("&" + s + ";");
					} else {
						var tmp5;
						var _this1 = haxe_xml_Parser.escapes;
						if(__map_reserved[s] != null) tmp5 = _this1.getReserved(s); else tmp5 = _this1.h[s];
						var x = tmp5;
						buf.b += x == null?"null":"" + x;
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) throw new js__$Boot_HaxeError("Invalid character in entity: " + String.fromCharCode(c));
				buf.b += "&";
				var len6 = p - start;
				buf.b += len6 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len6);
				p--;
				start = p;
				state = escapeNext;
			}
			break;
		}
		var tmp;
		var index = ++p;
		tmp = str.charCodeAt(index);
		c = tmp;
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			var len7 = p - start;
			buf.b += len7 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len7);
			parent.addChild(Xml.createPCData(buf.b));
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		var len8 = p - start;
		buf.b += len8 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len8);
		parent.addChild(Xml.createPCData(buf.b));
		return p;
	}
	throw new js__$Boot_HaxeError("Unexpected end");
};
var haxe_zip_ExtraField = $hxClasses["haxe.zip.ExtraField"] = { __ename__ : ["haxe","zip","ExtraField"], __constructs__ : ["FUnknown","FInfoZipUnicodePath","FUtf8"] };
haxe_zip_ExtraField.FUnknown = function(tag,bytes) { var $x = ["FUnknown",0,tag,bytes]; $x.__enum__ = haxe_zip_ExtraField; $x.toString = $estr; return $x; };
haxe_zip_ExtraField.FInfoZipUnicodePath = function(name,crc) { var $x = ["FInfoZipUnicodePath",1,name,crc]; $x.__enum__ = haxe_zip_ExtraField; $x.toString = $estr; return $x; };
haxe_zip_ExtraField.FUtf8 = ["FUtf8",2];
haxe_zip_ExtraField.FUtf8.toString = $estr;
haxe_zip_ExtraField.FUtf8.__enum__ = haxe_zip_ExtraField;
var haxe_zip_Writer = function(o) {
	this.o = o;
	this.files = new List();
};
$hxClasses["haxe.zip.Writer"] = haxe_zip_Writer;
haxe_zip_Writer.__name__ = ["haxe","zip","Writer"];
haxe_zip_Writer.prototype = {
	o: null
	,files: null
	,writeZipDate: function(date) {
		var hour = date.getHours();
		var min = date.getMinutes();
		var sec = date.getSeconds() >> 1;
		this.o.writeUInt16(hour << 11 | min << 5 | sec);
		var year = date.getFullYear() - 1980;
		var month = date.getMonth() + 1;
		var day = date.getDate();
		this.o.writeUInt16(year << 9 | month << 5 | day);
	}
	,writeEntryHeader: function(f) {
		var o = this.o;
		var flags = 0;
		if(f.extraFields != null) {
			var _g_head = f.extraFields.h;
			var _g_val = null;
			while(_g_head != null) {
				var tmp;
				_g_val = _g_head[0];
				_g_head = _g_head[1];
				tmp = _g_val;
				var e1 = tmp;
				switch(e1[1]) {
				case 2:
					flags |= 2048;
					break;
				default:
				}
			}
		}
		o.writeInt32(67324752);
		o.writeUInt16(20);
		o.writeUInt16(flags);
		if(f.data == null) {
			f.fileSize = 0;
			f.dataSize = 0;
			f.crc32 = 0;
			f.compressed = false;
			f.data = haxe_io_Bytes.alloc(0);
		} else {
			if(f.crc32 == null) {
				if(f.compressed) throw new js__$Boot_HaxeError("CRC32 must be processed before compression");
				f.crc32 = haxe_crypto_Crc32.make(f.data);
			}
			if(!f.compressed) f.fileSize = f.data.length;
			f.dataSize = f.data.length;
		}
		o.writeUInt16(f.compressed?8:0);
		this.writeZipDate(f.fileTime);
		o.writeInt32(f.crc32);
		o.writeInt32(f.dataSize);
		o.writeInt32(f.fileSize);
		o.writeUInt16(f.fileName.length);
		var e = new haxe_io_BytesOutput();
		if(f.extraFields != null) {
			var _g_head1 = f.extraFields.h;
			var _g_val1 = null;
			while(_g_head1 != null) {
				var tmp1;
				_g_val1 = _g_head1[0];
				_g_head1 = _g_head1[1];
				tmp1 = _g_val1;
				var f1 = tmp1;
				switch(f1[1]) {
				case 1:
					var namebytes = haxe_io_Bytes.ofString(f1[2]);
					e.writeUInt16(28789);
					e.writeUInt16(namebytes.length + 5);
					e.writeByte(1);
					e.writeInt32(f1[3]);
					e.write(namebytes);
					break;
				case 0:
					var bytes = f1[3];
					e.writeUInt16(f1[2]);
					e.writeUInt16(bytes.length);
					e.write(bytes);
					break;
				case 2:
					break;
				}
			}
		}
		var ebytes = e.getBytes();
		o.writeUInt16(ebytes.length);
		o.writeString(f.fileName);
		o.write(ebytes);
		this.files.add({ name : f.fileName, compressed : f.compressed, clen : f.data.length, size : f.fileSize, crc : f.crc32, date : f.fileTime, fields : ebytes});
	}
	,write: function(files) {
		var _g_head = files.h;
		var _g_val = null;
		while(_g_head != null) {
			var tmp;
			_g_val = _g_head[0];
			_g_head = _g_head[1];
			tmp = _g_val;
			var f = tmp;
			this.writeEntryHeader(f);
			this.o.writeFullBytes(f.data,0,f.data.length);
		}
		this.writeCDR();
	}
	,writeCDR: function() {
		var cdr_size = 0;
		var cdr_offset = 0;
		var _g_head = this.files.h;
		var _g_val = null;
		while(_g_head != null) {
			var tmp;
			_g_val = _g_head[0];
			_g_head = _g_head[1];
			tmp = _g_val;
			var f = tmp;
			var namelen = f.name.length;
			var extraFieldsLength = f.fields.length;
			this.o.writeInt32(33639248);
			this.o.writeUInt16(20);
			this.o.writeUInt16(20);
			this.o.writeUInt16(0);
			this.o.writeUInt16(f.compressed?8:0);
			this.writeZipDate(f.date);
			this.o.writeInt32(f.crc);
			this.o.writeInt32(f.clen);
			this.o.writeInt32(f.size);
			this.o.writeUInt16(namelen);
			this.o.writeUInt16(extraFieldsLength);
			this.o.writeUInt16(0);
			this.o.writeUInt16(0);
			this.o.writeUInt16(0);
			this.o.writeInt32(0);
			this.o.writeInt32(cdr_offset);
			this.o.writeString(f.name);
			this.o.write(f.fields);
			cdr_size += 46 + namelen + extraFieldsLength;
			cdr_offset += 30 + namelen + extraFieldsLength + f.clen;
		}
		this.o.writeInt32(101010256);
		this.o.writeUInt16(0);
		this.o.writeUInt16(0);
		this.o.writeUInt16(this.files.length);
		this.o.writeUInt16(this.files.length);
		this.o.writeInt32(cdr_size);
		this.o.writeInt32(cdr_offset);
		this.o.writeUInt16(0);
	}
	,__class__: haxe_zip_Writer
};
var ida_Utils = function() { };
$hxClasses["ida.Utils"] = ida_Utils;
ida_Utils.__name__ = ["ida","Utils"];
ida_Utils.fulfill = function(request) {
	var r = request;
	return new tannus_ds_Promise(function(accept,reject) {
		var success = function(e) {
			accept(r.result);
		};
		var error = function(e1) {
			reject(r.error);
		};
		r.onsuccess = success;
		r.onerror = error;
	},null);
};
ida_Utils.report = function(req,callback) {
	if(callback != null && Reflect.isFunction(callback)) {
		req.onerror = function(e) {
			callback(req.error);
		};
		req.onsuccess = function(e1) {
			callback(null);
		};
	}
};
ida_Utils.keyToNative = function(key) {
	if(js_Boot.__instanceof(key,ida_backend_idb_IDBKeyRange)) return (js_Boot.__cast(key , ida_backend_idb_IDBKeyRange)).range; else return key;
};
var ida_CursorSource = $hxClasses["ida.CursorSource"] = { __ename__ : ["ida","CursorSource"], __constructs__ : ["CSObjectStore","CSIndex"] };
ida_CursorSource.CSObjectStore = function(store) { var $x = ["CSObjectStore",0,store]; $x.__enum__ = ida_CursorSource; $x.toString = $estr; return $x; };
ida_CursorSource.CSIndex = function(index) { var $x = ["CSIndex",1,index]; $x.__enum__ = ida_CursorSource; $x.toString = $estr; return $x; };
var ida_backend_idb_IDBCursor = function(c) {
	this._src = null;
	this.cursor = c;
};
$hxClasses["ida.backend.idb.IDBCursor"] = ida_backend_idb_IDBCursor;
ida_backend_idb_IDBCursor.__name__ = ["ida","backend","idb","IDBCursor"];
ida_backend_idb_IDBCursor.prototype = {
	advance: function(n) {
		this.cursor.advance(n);
	}
	,next: function(key) {
		this.cursor["continue"](key);
	}
	,'delete': function(callback) {
		ida_Utils.report(this.cursor["delete"](),callback);
	}
	,update: function(entry,callback) {
		ida_Utils.report(this.cursor.update(entry),callback);
	}
	,get_entry: function() {
		return this.cursor.value;
	}
	,get_direction: function() {
		return this.cursor.direction;
	}
	,get_key: function() {
		return this.cursor.key;
	}
	,get_primaryKey: function() {
		return this.cursor.primaryKey;
	}
	,get_source: function() {
		if(this._src == null) {
			if(js_Boot.__instanceof(this.cursor.source,IDBObjectStore)) this._src = ida_CursorSource.CSObjectStore(new ida_backend_idb_IDBObjectStore(this.cursor.source)); else if(js_Boot.__instanceof(this.cursor.source,IDBIndex)) this._src = ida_CursorSource.CSIndex(new ida_backend_idb_IDBIndex(this.cursor.source));
		}
		return this._src;
	}
	,get_objectStore: function() {
		{
			var _g = this.get_source();
			switch(_g[1]) {
			case 0:
				return _g[2];
			case 1:
				return _g[2].i.objectStore.__wrapper;
			}
		}
	}
	,get_index: function() {
		{
			var _g = this.get_source();
			switch(_g[1]) {
			case 1:
				return _g[2];
			default:
				return null;
			}
		}
	}
	,cursor: null
	,_src: null
	,__class__: ida_backend_idb_IDBCursor
	,__properties__: {get_index:"get_index",get_objectStore:"get_objectStore",get_source:"get_source",get_primaryKey:"get_primaryKey",get_key:"get_key",get_direction:"get_direction",get_entry:"get_entry"}
};
var ida_backend_idb_IDBCursorWalker = function(r) {
	this.r = r;
	this.complete = new tannus_io_VoidSignal();
	this.error = new tannus_io_Signal();
	r.addEventListener("success",$bind(this,this.__onsuccess));
};
$hxClasses["ida.backend.idb.IDBCursorWalker"] = ida_backend_idb_IDBCursorWalker;
ida_backend_idb_IDBCursorWalker.__name__ = ["ida","backend","idb","IDBCursorWalker"];
ida_backend_idb_IDBCursorWalker.prototype = {
	__onsuccess: function(event) {
		var _cursor = event.target.result;
		console.log(_cursor);
		if(_cursor == null) this.complete.call(); else {
			var cursor = new ida_backend_idb_IDBCursor(_cursor);
			this.step(cursor);
		}
	}
	,step: function(cursor) {
	}
	,complete: null
	,error: null
	,r: null
	,__class__: ida_backend_idb_IDBCursorWalker
};
var ida_backend_idb_IDBDatabase = function(d) {
	this.db = d;
};
$hxClasses["ida.backend.idb.IDBDatabase"] = ida_backend_idb_IDBDatabase;
ida_backend_idb_IDBDatabase.__name__ = ["ida","backend","idb","IDBDatabase"];
ida_backend_idb_IDBDatabase.open = function(name,version,_build) {
	var w = window;
	return new tannus_ds_Promise(function(accept,reject) {
		var request = w.indexedDB.open(name,version);
		request.onupgradeneeded = function(event) {
			if(_build != null) {
				var db = new ida_backend_idb_IDBDatabase(event.target.result);
				_build(db);
				ida_backend_idb_IDBDatabase.open(name,version).then(accept).unless(reject);
			}
		};
		request.onsuccess = function(event1) {
			var _db = event1.target.result;
			accept(new ida_backend_idb_IDBDatabase(_db));
		};
		request.onerror = function(event2) {
			reject(event2.target.errorCode);
		};
	},null);
};
ida_backend_idb_IDBDatabase.prototype = {
	createObjectStore: function(name,options) {
		var _store = this.db.createObjectStore(name,options);
		return new ida_backend_idb_IDBObjectStore(_store);
	}
	,transaction: function(stores,mode) {
		if(mode == null) mode = "readonly";
		return new ida_backend_idb_IDBTransaction(this.db.transaction(stores,mode));
	}
	,db: null
	,__class__: ida_backend_idb_IDBDatabase
};
var ida_backend_idb_IDBFunctionalCursorWalker = function(r,f) {
	ida_backend_idb_IDBCursorWalker.call(this,r);
	this.body = f;
};
$hxClasses["ida.backend.idb.IDBFunctionalCursorWalker"] = ida_backend_idb_IDBFunctionalCursorWalker;
ida_backend_idb_IDBFunctionalCursorWalker.__name__ = ["ida","backend","idb","IDBFunctionalCursorWalker"];
ida_backend_idb_IDBFunctionalCursorWalker.__super__ = ida_backend_idb_IDBCursorWalker;
ida_backend_idb_IDBFunctionalCursorWalker.prototype = $extend(ida_backend_idb_IDBCursorWalker.prototype,{
	step: function(cursor) {
		var next = (function($this) {
			var $r;
			var f = $bind(cursor,cursor.next);
			$r = function() {
				f();
			};
			return $r;
		}(this));
		var calledNext = false;
		cursor.next = function(key) {
			next();
			calledNext = true;
		};
		this.body(cursor);
		if(!calledNext) cursor.next();
	}
	,body: null
	,__class__: ida_backend_idb_IDBFunctionalCursorWalker
});
var ida_backend_idb_IDBIndex = function(i) {
	this.i = i;
};
$hxClasses["ida.backend.idb.IDBIndex"] = ida_backend_idb_IDBIndex;
ida_backend_idb_IDBIndex.__name__ = ["ida","backend","idb","IDBIndex"];
ida_backend_idb_IDBIndex.prototype = {
	get: function(value) {
		return ida_Utils.fulfill(this.i.get(value));
	}
	,getKey: function(value) {
		return ida_Utils.fulfill(this.i.getKey(value));
	}
	,openCursor: function(body,keyRange,direction) {
		var request = this.i.openCursor(keyRange,direction);
		if(body == null) return new ida_backend_idb_IDBCursorWalker(request); else return new ida_backend_idb_IDBFunctionalCursorWalker(request,body);
	}
	,get_name: function() {
		return this.i.name;
	}
	,get_keyPath: function() {
		return this.i.keyPath;
	}
	,get_objectStore: function() {
		return this.i.objectStore.__wrapper;
	}
	,get_multiEntry: function() {
		return this.i.multiEntry;
	}
	,get_unique: function() {
		return this.i.unique;
	}
	,i: null
	,__class__: ida_backend_idb_IDBIndex
	,__properties__: {get_unique:"get_unique",get_multiEntry:"get_multiEntry",get_objectStore:"get_objectStore",get_keyPath:"get_keyPath",get_name:"get_name"}
};
var ida_backend_idb_IDBKeyRange = function(kr) {
	this.range = kr;
};
$hxClasses["ida.backend.idb.IDBKeyRange"] = ida_backend_idb_IDBKeyRange;
ida_backend_idb_IDBKeyRange.__name__ = ["ida","backend","idb","IDBKeyRange"];
ida_backend_idb_IDBKeyRange.only = function(v) {
	var tmp;
	var r = IDBKeyRange.only(v);
	tmp = new ida_backend_idb_IDBKeyRange(r);
	return tmp;
};
ida_backend_idb_IDBKeyRange.upperBound = function(v,inclusive) {
	if(inclusive == null) inclusive = true;
	var tmp;
	var r = IDBKeyRange.upperBound(v,!inclusive);
	tmp = new ida_backend_idb_IDBKeyRange(r);
	return tmp;
};
ida_backend_idb_IDBKeyRange.lowerBound = function(v,inclusive) {
	if(inclusive == null) inclusive = true;
	var tmp;
	var r = IDBKeyRange.lowerBound(v,!inclusive);
	tmp = new ida_backend_idb_IDBKeyRange(r);
	return tmp;
};
ida_backend_idb_IDBKeyRange.bound = function(x,y,xinclusive,yinclusive) {
	if(yinclusive == null) yinclusive = true;
	if(xinclusive == null) xinclusive = true;
	var tmp;
	var r = IDBKeyRange.bound(x,y,!xinclusive,!yinclusive);
	tmp = new ida_backend_idb_IDBKeyRange(r);
	return tmp;
};
ida_backend_idb_IDBKeyRange.kr = function(r) {
	return new ida_backend_idb_IDBKeyRange(r);
};
ida_backend_idb_IDBKeyRange.prototype = {
	get_lower: function() {
		return this.range.lower;
	}
	,get_lowerOpen: function() {
		return this.range.lowerOpen;
	}
	,get_upper: function() {
		return this.range.upper;
	}
	,get_upperOpen: function() {
		return this.range.upperOpen;
	}
	,range: null
	,__class__: ida_backend_idb_IDBKeyRange
	,__properties__: {get_upperOpen:"get_upperOpen",get_upper:"get_upper",get_lowerOpen:"get_lowerOpen",get_lower:"get_lower"}
};
var ida_backend_idb_IDBObjectStore = function(o) {
	this.store = o;
	this.store.__wrapper = this;
};
$hxClasses["ida.backend.idb.IDBObjectStore"] = ida_backend_idb_IDBObjectStore;
ida_backend_idb_IDBObjectStore.__name__ = ["ida","backend","idb","IDBObjectStore"];
ida_backend_idb_IDBObjectStore.prototype = {
	createIndex: function(name,keyPath,options) {
		var index = this.store.createIndex(name,keyPath,options);
		return new ida_backend_idb_IDBIndex(index);
	}
	,deleteIndex: function(indexName) {
		this.store.deleteIndex(indexName);
	}
	,index: function(name) {
		return new ida_backend_idb_IDBIndex(this.store.index(name));
	}
	,add: function(entry,key) {
		return ida_Utils.fulfill(this.store.add(entry,key));
	}
	,put: function(entry,key) {
		return ida_Utils.fulfill(this.store.put(entry,key));
	}
	,'delete': function(key,callback) {
		ida_Utils.report(this.store["delete"](ida_Utils.keyToNative(key)),callback);
	}
	,get: function(key) {
		return ida_Utils.fulfill(this.store.get(ida_Utils.keyToNative(key)));
	}
	,getAll: function(query,count) {
		if(query != null) query = ida_Utils.keyToNative(query);
		return ida_Utils.fulfill(js_Boot.__cast(this.store.getAll(query,count) , IDBRequest)).array();
	}
	,openCursor: function(body,keyRange,direction) {
		var request = this.store.openCursor(keyRange,direction);
		if(body != null) return new ida_backend_idb_IDBFunctionalCursorWalker(request,body); else return new ida_backend_idb_IDBCursorWalker(request);
	}
	,get_autoIncrement: function() {
		return this.store.autoIncrement;
	}
	,get_indexNames: function() {
		return Array.prototype.slice.call(this.store.indexNames,0);
	}
	,get_keyPath: function() {
		return this.store.keyPath;
	}
	,get_transaction: function() {
		return new ida_backend_idb_IDBTransaction(this.store.transaction);
	}
	,get_name: function() {
		return this.store.name;
	}
	,store: null
	,__class__: ida_backend_idb_IDBObjectStore
	,__properties__: {get_name:"get_name",get_transaction:"get_transaction",get_keyPath:"get_keyPath",get_indexNames:"get_indexNames",get_autoIncrement:"get_autoIncrement"}
};
var ida_backend_idb_IDBTransaction = function(t_) {
	var _g = this;
	this.t = t_;
	this.complete = new tannus_io_VoidSignal();
	this.fail = new tannus_io_Signal();
	var tmp;
	var f = ($_=this.complete,$bind($_,$_.fire));
	tmp = function() {
		f();
	};
	this.t.addEventListener("complete",tmp);
	this.t.addEventListener("error",function(event) {
		console.log(event);
		_g.fail.broadcast(_g.t.error);
	});
};
$hxClasses["ida.backend.idb.IDBTransaction"] = ida_backend_idb_IDBTransaction;
ida_backend_idb_IDBTransaction.__name__ = ["ida","backend","idb","IDBTransaction"];
ida_backend_idb_IDBTransaction.prototype = {
	objectStore: function(name) {
		return new ida_backend_idb_IDBObjectStore(this.t.objectStore(name));
	}
	,abort: function() {
		this.t.abort();
	}
	,get_db: function() {
		return new ida_backend_idb_IDBDatabase(this.t.db);
	}
	,get_error: function() {
		return this.t.error;
	}
	,get_mode: function() {
		return this.t.mode;
	}
	,get_objectStoreNames: function() {
		return Array.prototype.slice.call(this.t.objectStoreNames,0);
	}
	,get_onabort: function() {
		return this.t.onabort;
	}
	,set_onabort: function(v) {
		return this.t.onabort = v;
	}
	,get_oncomplete: function() {
		return this.t.oncomplete;
	}
	,set_oncomplete: function(v) {
		return this.t.oncomplete = v;
	}
	,get_onerror: function() {
		return this.t.onerror;
	}
	,set_onerror: function(v) {
		return this.t.onerror = v;
	}
	,t: null
	,complete: null
	,fail: null
	,__class__: ida_backend_idb_IDBTransaction
	,__properties__: {set_onerror:"set_onerror",get_onerror:"get_onerror",set_oncomplete:"set_oncomplete",get_oncomplete:"get_oncomplete",set_onabort:"set_onabort",get_onabort:"get_onabort",get_objectStoreNames:"get_objectStoreNames",get_mode:"get_mode",get_error:"get_error",get_db:"get_db"}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) Error.captureStackTrace(this,js__$Boot_HaxeError);
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) return Array; else {
		var cl = o.__class__;
		if(cl != null) return cl;
		var name = js_Boot.__nativeClassName(o);
		if(name != null) return js_Boot.__resolveNativeClass(name);
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) return "null";
	if(s.length >= 5) return "<...>";
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) return o[0];
				var str2 = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i1 = _g1++;
					if(i1 != 2) str2 += "," + js_Boot.__string_rec(o[i1],s); else str2 += js_Boot.__string_rec(o[i1],s);
				}
				return str2 + ")";
			}
			var l = o.length;
			var i;
			var str1 = "[";
			s += "\t";
			var _g2 = 0;
			while(_g2 < l) {
				var i2 = _g2++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") return s2;
		}
		var k = null;
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) str += ", \n";
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) return false;
	if(cc == cl) return true;
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) return true;
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) return false;
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Array:
		return (o instanceof Array) && o.__enum__ == null;
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) return true;
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) return true;
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) return true;
			}
		} else return false;
		if(cl == Class && o.__name__ != null) return true;
		if(cl == Enum && o.__ename__ != null) return true;
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) return o; else throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") return null;
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	if(typeof window != "undefined") return window[name]; else return global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return null;
	}
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	byteLength: null
	,a: null
	,slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null?0:byteOffset;
	this.length = byteLength == null?buffer.byteLength - this.offset:byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	buf: null
	,offset: null
	,length: null
	,getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		return v >= 128?v - 256:v;
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		return v >= 32768?v - 65536:v;
	}
	,getUint16: function(byteOffset,littleEndian) {
		return littleEndian?this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8:this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		return littleEndian?a | b << 8 | c << 16 | d << 24:d | c << 8 | b << 16 | a << 24;
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		return v < 0?v + 4294967296.:v;
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0?value + 128 & 255:value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0?value + 65536:value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g = 0;
		while(_g < arg1) {
			var i = _g++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) offset = 0;
		if(length == null) length = buffer.byteLength - offset;
		if(offset == 0) arr = buffer.a; else arr = buffer.a.slice(offset,offset + length);
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	var t = this;
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			t[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			t[i1 + offset] = a1[i1];
		}
	} else throw new js__$Boot_HaxeError("TODO");
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var t = this;
	var a = js_html_compat_Uint8Array._new(t.slice(start,end));
	a.byteOffset = start;
	return a;
};
var tannus_chrome_FileSystem = function() { };
$hxClasses["tannus.chrome.FileSystem"] = tannus_chrome_FileSystem;
tannus_chrome_FileSystem.__name__ = ["tannus","chrome","FileSystem"];
tannus_chrome_FileSystem.__properties__ = {get_lib:"get_lib"}
tannus_chrome_FileSystem.requestFileSystem = function(volume,cb) {
	chrome.fileSystem.requestFileSystem({ 'volumeId' : volume, 'writable' : true},cb);
};
tannus_chrome_FileSystem.getVolumeList = function(cb) {
	chrome.fileSystem.getVolumeList(cb);
};
tannus_chrome_FileSystem.chooseEntry = function(options,cb) {
	chrome.fileSystem.chooseEntry(options,function(entry) {
		var all = [];
		var tn = tannus_internal_TypeTools.typename(entry);
		if(entry != null) {
			if(tn == "Array") all = all.concat(entry); else all.push(entry);
		}
		console.log(all);
		cb(all);
	});
};
tannus_chrome_FileSystem.retainEntry = function(entry) {
	return chrome.fileSystem.retainEntry(entry);
};
tannus_chrome_FileSystem.restoreEntry = function(id,cb) {
	chrome.fileSystem.restoreEntry(id,cb);
};
tannus_chrome_FileSystem.isRestorable = function(id,cb) {
	chrome.fileSystem.isRestorable(id,cb);
};
tannus_chrome_FileSystem.canRestore = function(id) {
	return new tannus_ds_Promise(function(accept,reject) {
		chrome.fileSystem.isRestorable(id,function(status) {
			accept(status);
		});
	},null).bool();
};
tannus_chrome_FileSystem.chooseDirectory = function() {
	return new tannus_ds_Promise(function(accept,reject) {
		tannus_chrome_FileSystem.chooseEntry({ type : "openDirectory"},function(entries) {
			var e = entries.shift();
			if(e == null || !e.isDirectory) reject("Not a Directory!"); else accept(e);
		});
	},null);
};
tannus_chrome_FileSystem.chooseFile = function(writable,mustExist) {
	if(mustExist == null) mustExist = true;
	if(writable == null) writable = false;
	return new tannus_html_fs_FilePromise(function(provide) {
		var options = { };
		switch(writable) {
		case true:
			switch(mustExist) {
			case true:
				options.type = "openWritableFile";
				break;
			case false:
				options.type = "saveFile";
				break;
			}
			break;
		default:
			switch(mustExist) {
			case false:
				options.type = "saveFile";
				break;
			default:
				options.type = "openFile";
			}
		}
		tannus_chrome_FileSystem.chooseEntry(options,function(entries) {
			provide(entries[0]);
		});
	});
};
tannus_chrome_FileSystem.saveAs = function(name) {
	return new tannus_ds_Promise(function(accept,reject) {
		var options = { 'type' : "saveFile", 'suggestedName' : name};
		tannus_chrome_FileSystem.chooseEntry(options,function(entries) {
			if(chrome.runtime.lastError != null) {
				var error = chrome.runtime.lastError;
				console.log(error);
				reject(error);
				return;
			}
			if(entries.length > 0) accept(entries[0]); else reject("No File Selected");
		});
	},null);
};
tannus_chrome_FileSystem.getDisplayPath = function(entry,cb) {
	chrome.fileSystem.getDisplayPath(entry,cb);
};
tannus_chrome_FileSystem.get_lib = function() {
	return chrome.fileSystem;
};
var tannus_chrome_FileSystemTools = function() { };
$hxClasses["tannus.chrome.FileSystemTools"] = tannus_chrome_FileSystemTools;
tannus_chrome_FileSystemTools.__name__ = ["tannus","chrome","FileSystemTools"];
tannus_chrome_FileSystemTools.restoreAll = function(array) {
	return tannus_ds_promises_PromiseTools.batch(array.map(tannus_chrome_FileSystemTools.restorePromise));
};
tannus_chrome_FileSystemTools.restorePromise = function(name) {
	return new tannus_ds_Promise(function(accept,reject) {
		chrome.fileSystem.restoreEntry(name,function(entry) {
			accept(entry);
		});
	},null);
};
var tannus_chrome_Runtime = function() { };
$hxClasses["tannus.chrome.Runtime"] = tannus_chrome_Runtime;
tannus_chrome_Runtime.__name__ = ["tannus","chrome","Runtime"];
tannus_chrome_Runtime.__properties__ = {get_lib:"get_lib",get_lastError:"get_lastError",get_id:"get_id"}
tannus_chrome_Runtime.reload = function() {
	chrome.runtime.reload();
};
tannus_chrome_Runtime.sendMessage = function(tid,data,onresponse) {
	chrome.runtime.sendMessage(tid,data,{ },function(response) {
		if(onresponse != null) {
			var f = onresponse;
			f(response);
		}
	});
};
tannus_chrome_Runtime.onMessageRaw = function(callb) {
	chrome.runtime.onMessage.addListener(callb);
};
tannus_chrome_Runtime.onMessage = function(callb) {
	chrome.runtime.onMessage.addListener(function(d,sendr,sendResponse) {
		callb({ 'data' : d, 'sender' : sendr, 'respond' : sendResponse});
	});
};
tannus_chrome_Runtime.getBackgroundPage = function(cb) {
	if(tannus_chrome_Runtime._bg == null) chrome.runtime.getBackgroundPage(function(w) {
		cb(tannus_chrome_Runtime._bg = w);
	}); else cb(tannus_chrome_Runtime._bg);
};
tannus_chrome_Runtime.isBackgroundPage = function(w,cb) {
	tannus_chrome_Runtime.getBackgroundPage(function(bg) {
		cb(w == bg);
	});
};
tannus_chrome_Runtime.inBackgroundPage = function(cb) {
	tannus_chrome_Runtime.isBackgroundPage(window,cb);
};
tannus_chrome_Runtime.get_id = function() {
	return Std.string(chrome.runtime.id) + "";
};
tannus_chrome_Runtime.get_lastError = function() {
	return chrome.runtime.lastError;
};
tannus_chrome_Runtime.get_lib = function() {
	return chrome.runtime;
};
var tannus_chrome_Storage = function() { };
$hxClasses["tannus.chrome.Storage"] = tannus_chrome_Storage;
tannus_chrome_Storage.__name__ = ["tannus","chrome","Storage"];
tannus_chrome_Storage.__properties__ = {get_sync:"get_sync",get_local:"get_local",get_lib:"get_lib"}
tannus_chrome_Storage.get_lib = function() {
	return chrome.storage;
};
tannus_chrome_Storage.get_local = function() {
	return chrome.storage.local;
};
tannus_chrome_Storage.get_sync = function() {
	return chrome.storage.sync;
};
tannus_chrome_Storage.onChange = function(listener) {
	chrome.storage.onChanged.addListener(function(changes,area) {
		var change = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = Reflect.fields(changes);
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var tmp;
			var tmp1;
			if(changes == null) tmp = null; else if(changes.__properties__ && (tmp1 = changes.__properties__["get_" + key])) tmp = changes[tmp1](); else tmp = changes[key];
			var c = tmp;
			var tmp2;
			var cur = c.newValue;
			var prev = c.oldValue;
			tmp2 = [cur,prev];
			var value = tmp2;
			if(__map_reserved[key] != null) change.setReserved(key,value); else change.h[key] = value;
		}
		listener(area,change);
	});
};
var tannus_chrome__$StorageArea_StorageArea_$Impl_$ = {};
$hxClasses["tannus.chrome._StorageArea.StorageArea_Impl_"] = tannus_chrome__$StorageArea_StorageArea_$Impl_$;
tannus_chrome__$StorageArea_StorageArea_$Impl_$.__name__ = ["tannus","chrome","_StorageArea","StorageArea_Impl_"];
tannus_chrome__$StorageArea_StorageArea_$Impl_$._new = function(a) {
	return a;
};
tannus_chrome__$StorageArea_StorageArea_$Impl_$.onChange = function(this1,cb) {
	tannus_chrome_Storage.onChange(function(area,changes) {
		switch(area) {
		case "local":
			if(this1 == chrome.storage.local) cb(changes); else null;
			break;
		case "sync":
			if(this1 == chrome.storage.sync) cb(changes); else null;
			break;
		default:
			null;
		}
	});
};
tannus_chrome__$StorageArea_StorageArea_$Impl_$.onChangeField = function(this1,key,cb) {
	var this2 = this1;
	var cb1 = function(changes) {
		if(__map_reserved[key] != null?changes.existsReserved(key):changes.h.hasOwnProperty(key)) {
			var d = __map_reserved[key] != null?changes.getReserved(key):changes.h[key];
			cb(d);
		}
	};
	tannus_chrome_Storage.onChange(function(area,changes1) {
		switch(area) {
		case "local":
			if(this2 == chrome.storage.local) cb1(changes1); else null;
			break;
		case "sync":
			if(this2 == chrome.storage.sync) cb1(changes1); else null;
			break;
		default:
			null;
		}
	});
};
tannus_chrome__$StorageArea_StorageArea_$Impl_$.watch = function(this1,key,cb) {
	var key1 = key;
	var cb1 = function(change) {
		console.log(tannus_ds__$Delta_Delta_$Impl_$.toString(change));
	};
	var this2 = this1;
	var cb2 = function(changes) {
		if(__map_reserved[key1] != null?changes.existsReserved(key1):changes.h.hasOwnProperty(key1)) {
			var d = __map_reserved[key1] != null?changes.getReserved(key1):changes.h[key1];
			cb1(d);
		}
	};
	tannus_chrome_Storage.onChange(function(area,changes1) {
		switch(area) {
		case "local":
			if(this2 == chrome.storage.local) cb2(changes1); else null;
			break;
		case "sync":
			if(this2 == chrome.storage.sync) cb2(changes1); else null;
			break;
		default:
			null;
		}
	});
};
tannus_chrome__$StorageArea_StorageArea_$Impl_$.watchAll = function(this1,cb) {
	var this2 = this1;
	var cb1 = cb;
	tannus_chrome_Storage.onChange(function(area,changes) {
		switch(area) {
		case "local":
			if(this2 == chrome.storage.local) cb1(changes); else null;
			break;
		case "sync":
			if(this2 == chrome.storage.sync) cb1(changes); else null;
			break;
		default:
			null;
		}
	});
};
var tannus_chrome__$Tab_Tab_$Impl_$ = {};
$hxClasses["tannus.chrome._Tab.Tab_Impl_"] = tannus_chrome__$Tab_Tab_$Impl_$;
tannus_chrome__$Tab_Tab_$Impl_$.__name__ = ["tannus","chrome","_Tab","Tab_Impl_"];
tannus_chrome__$Tab_Tab_$Impl_$.__properties__ = {get_value:"get_value"}
tannus_chrome__$Tab_Tab_$Impl_$._new = function(ct) {
	return ct;
};
tannus_chrome__$Tab_Tab_$Impl_$.update = function(this1,props,cb) {
	tannus_chrome_Tabs.update(this1.id,props,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.duplicate = function(this1,cb) {
	tannus_chrome_Tabs.duplicate(this1.id,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.move = function(this1,offset,window,cb) {
	tannus_chrome_Tabs.move(this1.id,offset,window,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.remove = function(this1,cb) {
	tannus_chrome_Tabs.remove(this1.id,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.reload = function(this1,bypassCache,cb) {
	var opts = { };
	if(bypassCache != null) {
		var tmp;
		var tmp2;
		if(opts.__properties__ && (tmp2 = opts.__properties__["set_" + "bypassCache"])) opts[tmp2](bypassCache); else opts.bypassCache = bypassCache;
		var tmp1;
		var tmp3;
		if(opts == null) tmp1 = null; else if(opts.__properties__ && (tmp3 = opts.__properties__["get_" + "bypassCache"])) tmp1 = opts[tmp3](); else tmp1 = opts.bypassCache;
		tmp = tmp1;
		tmp;
	}
	tannus_chrome_Tabs.reload(this1.id,opts,function(t) {
		if(cb != null) cb();
	});
};
tannus_chrome__$Tab_Tab_$Impl_$.sendMessage = function(this1,data,onres) {
	chrome.tabs.sendMessage(this1.id,data,{ },onres);
};
tannus_chrome__$Tab_Tab_$Impl_$.executeScript = function(this1,path,code,cb) {
	tannus_chrome_Tabs.executeScript(this1.id,path,code,cb);
};
tannus_chrome__$Tab_Tab_$Impl_$.get_value = function(this1) {
	return this1;
};
var tannus_chrome_Tabs = function() { };
$hxClasses["tannus.chrome.Tabs"] = tannus_chrome_Tabs;
tannus_chrome_Tabs.__name__ = ["tannus","chrome","Tabs"];
tannus_chrome_Tabs.__properties__ = {get_lib:"get_lib"}
tannus_chrome_Tabs.getAll = function(callb) {
	tannus_chrome_Windows.getAll(function(wins) {
		var tablist = [];
		var _g = 0;
		while(_g < wins.length) {
			var win = wins[_g];
			++_g;
			var tabs = win.tabs;
			tablist = tablist.concat(tabs);
		}
		callb(tablist);
	});
};
tannus_chrome_Tabs.query = function(queryStr,cb) {
	tannus_chrome_Tabs.getAll(function(tabs) {
		var otabs = tabs;
		var results = otabs.filter(function(t) {
			var tmp;
			var sel = new tannus_nore_CSelector(queryStr);
			tmp = sel.test(t);
			return tmp;
		});
		cb(results);
	});
};
tannus_chrome_Tabs.getCurrent = function(cb) {
	chrome.tabs.getCurrent(cb);
};
tannus_chrome_Tabs.get = function(id,cb) {
	chrome.tabs.get(id,cb);
};
tannus_chrome_Tabs.create = function(options,cb) {
	chrome.tabs.create(options,cb);
};
tannus_chrome_Tabs.update = function(id,props,cb) {
	chrome.tabs.update(id,props,function(tab) {
		if(cb != null) cb(tab);
	});
};
tannus_chrome_Tabs.reload = function(id,opts,cb) {
	chrome.tabs.reload(id,opts,function(tab) {
		if(cb != null) cb(tab);
	});
};
tannus_chrome_Tabs.duplicate = function(id,cb) {
	chrome.tabs.duplicate(id,function(clone) {
		if(cb != null) cb(clone);
	});
};
tannus_chrome_Tabs.move = function(id,index,windowId,cb) {
	chrome.tabs.move(id,{ 'windowId' : windowId, 'index' : index},function(tab) {
		cb();
	});
};
tannus_chrome_Tabs.remove = function(id,cb) {
	chrome.tabs.remove(id,function() {
		if(cb != null) cb();
	});
};
tannus_chrome_Tabs.executeScript = function(id,path,code,cb) {
	var opts = { };
	if(path != null) {
		var tmp;
		var tmp2;
		if(opts.__properties__ && (tmp2 = opts.__properties__["set_" + "file"])) opts[tmp2](path); else opts.file = path;
		var tmp1;
		var tmp3;
		if(opts == null) tmp1 = null; else if(opts.__properties__ && (tmp3 = opts.__properties__["get_" + "file"])) tmp1 = opts[tmp3](); else tmp1 = opts.file;
		tmp = tmp1;
		tmp;
	}
	if(code != null) {
		var tmp4;
		var tmp6;
		if(opts.__properties__ && (tmp6 = opts.__properties__["set_" + "code"])) opts[tmp6](code); else opts.code = code;
		var tmp5;
		var tmp7;
		if(opts == null) tmp5 = null; else if(opts.__properties__ && (tmp7 = opts.__properties__["get_" + "code"])) tmp5 = opts[tmp7](); else tmp5 = opts.code;
		tmp4 = tmp5;
		tmp4;
	}
	chrome.tabs.executeScript(id,opts,function(res) {
		if(cb != null) cb();
	});
};
tannus_chrome_Tabs.focusOrCreateTab = function(url,cb) {
	var t = null;
	tannus_chrome_Tabs.getAll(function(tabs) {
		var _g = 0;
		while(_g < tabs.length) {
			var tab = tabs[_g];
			++_g;
			if(tab.url.s == url) t = tab;
		}
		if(t != null) tannus_chrome_Tabs.update(t.id,{ 'active' : true},function(tab1) {
			if(cb != null) cb(tab1);
		}); else {
			var opts = { 'url' : url, 'active' : true};
			tannus_chrome_Tabs.create(opts,function(tab2) {
				if(cb != null) cb(tab2);
			});
		}
	});
};
tannus_chrome_Tabs.get_lib = function() {
	return chrome.tabs;
};
var tannus_chrome__$Window_Window_$Impl_$ = {};
$hxClasses["tannus.chrome._Window.Window_Impl_"] = tannus_chrome__$Window_Window_$Impl_$;
tannus_chrome__$Window_Window_$Impl_$.__name__ = ["tannus","chrome","_Window","Window_Impl_"];
tannus_chrome__$Window_Window_$Impl_$._new = function(tw) {
	return tw;
};
tannus_chrome__$Window_Window_$Impl_$.update = function(this1,changes,done) {
	tannus_chrome_Windows.update(this1.id,changes).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.state = function(this1,nstate,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ 'state' : nstate}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.focus = function(this1,nfoc,cb) {
	if(nfoc == null) nfoc = true;
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ 'focused' : nfoc}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.minimize = function(this1,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ 'state' : "minimized"}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.maximize = function(this1,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ 'state' : "maximized"}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.normalize = function(this1,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ 'state' : "normal"}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.fullscreen = function(this1,cb) {
	var done = cb;
	tannus_chrome_Windows.update(this1.id,{ 'state' : "fullscreen"}).then(function(win) {
		this1 = win;
		done();
	});
};
tannus_chrome__$Window_Window_$Impl_$.close = function(this1,cb) {
	chrome.windows.remove(this1.id,cb);
};
var tannus_chrome__$WindowData_WindowData_$Impl_$ = {};
$hxClasses["tannus.chrome._WindowData.WindowData_Impl_"] = tannus_chrome__$WindowData_WindowData_$Impl_$;
tannus_chrome__$WindowData_WindowData_$Impl_$.__name__ = ["tannus","chrome","_WindowData","WindowData_Impl_"];
tannus_chrome__$WindowData_WindowData_$Impl_$._new = function(o) {
	return new tannus_chrome_CWindowData(o);
};
tannus_chrome__$WindowData_WindowData_$Impl_$.fromDynamic = function(d) {
	var tmp;
	var o = d;
	tmp = new tannus_chrome_CWindowData(o);
	return tmp;
};
tannus_chrome__$WindowData_WindowData_$Impl_$.fromObject = function(o) {
	return new tannus_chrome_CWindowData(o);
};
var tannus_chrome_CWindowData = function(o) {
	this.url = [];
	var tmp;
	var tmp8;
	if(o == null) tmp = null; else if(o.__properties__ && (tmp8 = o.__properties__["get_" + "url"])) tmp = o[tmp8](); else tmp = o.url;
	var _url = tmp;
	if(_url != null?_url:_url) {
		if((_url instanceof Array) && _url.__enum__ == null) this.url = this.url.concat((js_Boot.__cast(_url , Array)).map(function(s) {
			return Std.string(s);
		})); else if(typeof(_url) == "string") this.url.push(Std.string(_url) + "");
	}
	var tmp1;
	var tmp9;
	var tmp11;
	if(o == null) tmp9 = null; else if(o.__properties__ && (tmp11 = o.__properties__["get_" + "focused"])) tmp9 = o[tmp11](); else tmp9 = o.focused;
	var this1 = tmp9;
	var tmp10;
	var tmp12;
	if(o == null) tmp10 = null; else if(o.__properties__ && (tmp12 = o.__properties__["get_" + "active"])) tmp10 = o[tmp12](); else tmp10 = o.active;
	var alt = tmp10;
	if(this1 != null) tmp1 = this1; else tmp1 = alt;
	this.focused = tmp1 || true;
	var tmp2;
	var tmp13;
	var tmp14;
	if(o == null) tmp13 = null; else if(o.__properties__ && (tmp14 = o.__properties__["get_" + "incognito"])) tmp13 = o[tmp14](); else tmp13 = o.incognito;
	var this2 = tmp13;
	if(this2 != null) tmp2 = this2; else tmp2 = false;
	this.incognito = tmp2;
	var tmp3;
	var tmp15;
	var tmp16;
	if(o == null) tmp15 = null; else if(o.__properties__ && (tmp16 = o.__properties__["get_" + "type"])) tmp15 = o[tmp16](); else tmp15 = o.type;
	var this3 = tmp15;
	if(this3 != null) tmp3 = this3; else tmp3 = "normal";
	this.type = tmp3;
	var tmp4;
	var tmp17;
	var tmp18;
	if(o == null) tmp17 = null; else if(o.__properties__ && (tmp18 = o.__properties__["get_" + "left"])) tmp17 = o[tmp18](); else tmp17 = o.left;
	var this4 = tmp17;
	if(this4 != null) tmp4 = this4; else tmp4 = 0;
	this.left = tmp4;
	var tmp5;
	var tmp19;
	var tmp20;
	if(o == null) tmp19 = null; else if(o.__properties__ && (tmp20 = o.__properties__["get_" + "top"])) tmp19 = o[tmp20](); else tmp19 = o.top;
	var this5 = tmp19;
	if(this5 != null) tmp5 = this5; else tmp5 = 0;
	this.top = tmp5;
	var tmp6;
	var tmp21;
	var tmp22;
	if(o == null) tmp21 = null; else if(o.__properties__ && (tmp22 = o.__properties__["get_" + "width"])) tmp21 = o[tmp22](); else tmp21 = o.width;
	var this6 = tmp21;
	tmp6 = this6 != null;
	if(tmp6) {
		var tmp23;
		var tmp24;
		var tmp25;
		if(o == null) tmp24 = null; else if(o.__properties__ && (tmp25 = o.__properties__["get_" + "width"])) tmp24 = o[tmp25](); else tmp24 = o.width;
		var this7 = tmp24;
		if(this7 != null) tmp23 = this7; else tmp23 = this7;
		this.width = tmp23;
	}
	var tmp7;
	var tmp26;
	var tmp27;
	if(o == null) tmp26 = null; else if(o.__properties__ && (tmp27 = o.__properties__["get_" + "height"])) tmp26 = o[tmp27](); else tmp26 = o.height;
	var this8 = tmp26;
	tmp7 = this8 != null;
	if(tmp7) {
		var tmp28;
		var tmp29;
		var tmp30;
		if(o == null) tmp29 = null; else if(o.__properties__ && (tmp30 = o.__properties__["get_" + "height"])) tmp29 = o[tmp30](); else tmp29 = o.height;
		var this9 = tmp29;
		if(this9 != null) tmp28 = this9; else tmp28 = this9;
		this.height = tmp28;
	}
};
$hxClasses["tannus.chrome.CWindowData"] = tannus_chrome_CWindowData;
tannus_chrome_CWindowData.__name__ = ["tannus","chrome","CWindowData"];
tannus_chrome_CWindowData.prototype = {
	url: null
	,focused: null
	,incognito: null
	,type: null
	,left: null
	,top: null
	,width: null
	,height: null
	,__class__: tannus_chrome_CWindowData
};
var tannus_chrome_Windows = function() { };
$hxClasses["tannus.chrome.Windows"] = tannus_chrome_Windows;
tannus_chrome_Windows.__name__ = ["tannus","chrome","Windows"];
tannus_chrome_Windows.__properties__ = {get_lib:"get_lib"}
tannus_chrome_Windows.getAll = function(callb) {
	chrome.windows.getAll({ 'populate' : true},function(wins) {
		callb(wins);
	});
};
tannus_chrome_Windows.all = function() {
	return new tannus_ds_Promise(function(accept,reject) {
		try {
			tannus_chrome_Windows.getAll(function(wins) {
				accept(wins);
			});
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			reject(err);
		}
	},null).array();
};
tannus_chrome_Windows.get = function(id) {
	return new tannus_ds_Promise(function(accept,reject) {
		chrome.windows.get(id,{ 'populate' : true},function(win) {
			if(win != null) accept(win); else reject("Window not found");
		});
	},null);
};
tannus_chrome_Windows.create = function(data) {
	return new tannus_ds_Promise(function(accept,reject) {
		var tmp;
		var o = data;
		tmp = new tannus_chrome_CWindowData(o);
		var wd = tmp;
		chrome.windows.create(wd,function(win) {
			accept(win);
		});
	},null);
};
tannus_chrome_Windows.update = function(id,changes) {
	return new tannus_ds_Promise(function(accept,reject) {
		chrome.windows.update(id,changes,function(win) {
			accept(win);
		});
	},null);
};
tannus_chrome_Windows.remove = function(id,cb) {
	chrome.windows.remove(id,cb);
};
tannus_chrome_Windows.get_lib = function() {
	return chrome.windows;
};
var tannus_css__$FontFace_FontFace_$Impl_$ = {};
$hxClasses["tannus.css._FontFace.FontFace_Impl_"] = tannus_css__$FontFace_FontFace_$Impl_$;
tannus_css__$FontFace_FontFace_$Impl_$.__name__ = ["tannus","css","_FontFace","FontFace_Impl_"];
tannus_css__$FontFace_FontFace_$Impl_$.__properties__ = {set_source:"set_source",get_source:"get_source",set_family:"set_family",get_family:"get_family"}
tannus_css__$FontFace_FontFace_$Impl_$._new = function(sheet,family,source) {
	var this1;
	this1 = new tannus_css_Rule(sheet,"@font-face");
	this1.set("font-family",family);
	this1.set("src","url(\"" + source + "\")");
	return this1;
};
tannus_css__$FontFace_FontFace_$Impl_$.get_family = function(this1) {
	return this1.get("font-family");
};
tannus_css__$FontFace_FontFace_$Impl_$.set_family = function(this1,v) {
	this1.set("font-family",v);
	return this1.get("font-family");
};
tannus_css__$FontFace_FontFace_$Impl_$.get_source = function(this1) {
	{
		var _g = this1.property("src").get_values()[0];
		switch(_g[1]) {
		case 5:
			switch(_g[2]) {
			case "url":
				switch(_g[3].length) {
				case 1:
					switch(_g[3][0][1]) {
					case 1:
						return _g[3][0][2];
					default:
						throw new js__$Boot_HaxeError("Unabled to get the \"src\" of the FontFace");
					}
					break;
				default:
					throw new js__$Boot_HaxeError("Unabled to get the \"src\" of the FontFace");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Unabled to get the \"src\" of the FontFace");
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Unabled to get the \"src\" of the FontFace");
		}
	}
};
tannus_css__$FontFace_FontFace_$Impl_$.set_source = function(this1,v) {
	this1.set("src","url(\"" + v + "\")");
	return v;
};
var tannus_css_Lexer = function() {
};
$hxClasses["tannus.css.Lexer"] = tannus_css_Lexer;
tannus_css_Lexer.__name__ = ["tannus","css","Lexer"];
tannus_css_Lexer.__interfaces__ = [tannus_ds_Stateful];
tannus_css_Lexer.quickLex = function(d) {
	return new tannus_css_Lexer().tokenize(d);
};
tannus_css_Lexer.prototype = {
	tokenize: function(data) {
		this.buffer = new tannus_io_ByteStack(data);
		this.tokens = [];
		while(!this.buffer.get_empty()) {
			var tk = this.token();
			if(tk != null) this.tokens.push(tk);
		}
		return this.tokens;
	}
	,token: function() {
		if(this.buffer.get_empty()) return null; else {
			var c = this.buffer.peek(0);
			if(Lambda.has([9,10,11,12,13,32],c)) {
				this.advance();
				return this.token();
			} else if(c == 64) {
				this.advance();
				var tmp;
				var tmp2;
				var n = HxOverrides.cca(":",0);
				var this2;
				if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
				this2 = n;
				tmp2 = this2;
				var this1 = this.buffer.readUntil(tmp2);
				tmp = this1.toString();
				var name = StringTools.trim(tmp);
				this.advance();
				var tmp1;
				var tmp3;
				var n1 = HxOverrides.cca(";",0);
				var this4;
				if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n1)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n1 + ")!");
				this4 = n1;
				tmp3 = this4;
				var this3 = this.buffer.readUntil(tmp3);
				tmp1 = this3.toString();
				var valtext = StringTools.trim(tmp1);
				this.advance();
				return tannus_css_Token.TVar(name,new tannus_css_vals_Lexer().parse(tannus_io_impl_BrowserBinary.ofString(valtext)));
			} else if(new EReg("[^{}():;,]","").match(String.fromCharCode(c))) {
				var tmp4;
				var this5 = this.advance();
				tmp4 = String.fromCharCode(this5);
				var str = tmp4;
				var tok = null;
				while(!this.buffer.get_empty()) {
					c = this.buffer.peek(0);
					if(c == 123) {
						var sel = StringTools.trim(str);
						var props = this.block();
						tok = tannus_css_Token.TRule(sel,props);
					} else if(c == 59) {
						if(StringTools.startsWith(str,".")) {
							var name1 = tannus_ds_StringUtils.after(str,".");
							tok = tannus_css_Token.TMixin(name1);
						} else {
							var name2 = StringTools.trim(tannus_ds_StringUtils.before(str,":"));
							var valtext1 = StringTools.trim(tannus_ds_StringUtils.after(str,":"));
							tok = tannus_css_Token.TProp(name2,new tannus_css_vals_Lexer().parse(tannus_io_impl_BrowserBinary.ofString(valtext1)));
						}
					} else str += String.fromCharCode(c);
					this.advance();
					if(tok != null) break;
				}
				if(tok == null) throw new js__$Boot_HaxeError("Error: unexpected end of input");
				return tok;
			} else {
				var err = "Error: unexpected " + String.fromCharCode(c);
				console.log(err);
				throw new js__$Boot_HaxeError(err);
			}
		}
	}
	,block: function() {
		var c = this.buffer.peek(0);
		if(c == 123) {
			this.advance();
			var buf = "";
			var lvl = 1;
			while(!this.buffer.get_empty() && lvl > 0) {
				c = this.buffer.peek(0);
				if(c == 123) lvl++; else if(c == 125) lvl--;
				if(lvl > 0) buf += String.fromCharCode(c);
				this.advance();
			}
			return tannus_css_Lexer.quickLex(tannus_io_impl_BrowserBinary.ofString(buf));
		} else throw new js__$Boot_HaxeError("Error: No block at current position");
	}
	,next: function(i) {
		if(i == null) i = 0;
		return this.buffer.peek(i);
	}
	,advance: function(i) {
		if(i == null) i = 0;
		var r = this.buffer.pop();
		while(i > 0) {
			this.buffer.pop();
			i--;
		}
		return r;
	}
	,getState: function() {
		return { buffer : this.buffer.copy(), tokens : this.tokens.slice()};
	}
	,setState: function(s) {
		this.buffer = s.buffer;
		this.tokens = s.tokens;
	}
	,isSel: function(c) {
		return new EReg("[^{}():;,]","").match(String.fromCharCode(c));
	}
	,get_done: function() {
		return this.buffer.get_empty();
	}
	,buffer: null
	,tokens: null
	,__class__: tannus_css_Lexer
	,__properties__: {get_done:"get_done"}
};
var tannus_css_Parser = function() {
	this.rule = null;
	this.macros = new haxe_ds_StringMap();
};
$hxClasses["tannus.css.Parser"] = tannus_css_Parser;
tannus_css_Parser.__name__ = ["tannus","css","Parser"];
tannus_css_Parser.quickParse = function(tokens) {
	return new tannus_css_Parser().parse(tokens);
};
tannus_css_Parser.prototype = {
	parse: function(tree) {
		this.tokens = tree;
		this.sheet = new tannus_css_StyleSheet();
		this.heap = new tannus_ds_Stack();
		this.heap.add(new haxe_ds_StringMap());
		this.rule = null;
		while(!Lambda.empty(this.tokens)) this.next();
		return this.sheet;
	}
	,next: function() {
		var tk = this.tokens.shift();
		switch(tk[1]) {
		case 3:
			var this1 = this.heap.peek();
			this1.set(tk[2],tk[3]);
			break;
		case 1:
			var val = tk[3];
			val = this.rewrite(val);
			this.rule.property(tk[2]).setValues(val);
			break;
		case 0:
			var selector = tk[2];
			var superRule = this.rule;
			if(this.rule != null) this.rule = this.rule.child(selector); else this.rule = this.sheet.rule(selector);
			this.subScope();
			this.subTree(tk[3]);
			this.superScope();
			this.rule = superRule;
			break;
		case 2:
			var name = tk[2];
			var mixinRule = this.sheet.getRule("." + name);
			if(mixinRule != null) {
				var _g = 0;
				var _g1 = mixinRule.properties;
				while(_g < _g1.length) {
					var p = _g1[_g];
					++_g;
					console.log(Std.string(p.get_values()) + "");
					this.rule.set(p.name,p.value);
				}
			} else throw new js__$Boot_HaxeError("MixinError: mixin " + name + " is not defined");
			break;
		}
	}
	,rewrite: function(value) {
		var hunks = [];
		var _g = 0;
		while(_g < value.length) {
			var v = value[_g];
			++_g;
			switch(v[1]) {
			case 4:
				var name = v[2];
				var tmp;
				var this1 = this.heap.peek();
				tmp = this1.exists(name);
				if(tmp) {
					var tmp1;
					var this2 = this.heap.peek();
					tmp1 = this2.get(name);
					hunks.push(this.rewrite(tmp1));
				} else {
					var err = "Error: " + name + " is not defined";
					console.log(err);
					throw new js__$Boot_HaxeError(err);
				}
				break;
			case 5:
				var args = v[3];
				var name1 = v[2];
				args = this.rewrite(args);
				var tmp2;
				var _this = this.macros;
				if(__map_reserved[name1] != null) tmp2 = _this.existsReserved(name1); else tmp2 = _this.h.hasOwnProperty(name1);
				if(tmp2) hunks.push(this.callMacro(name1,args)); else hunks.push([tannus_css_Value.VCall(name1,args)]);
				break;
			default:
				hunks.push([v]);
			}
		}
		return tannus_ds_ArrayTools.flatten(hunks);
	}
	,subTree: function(stree) {
		var _tree = this.tokens;
		this.tokens = stree;
		while(!Lambda.empty(this.tokens)) this.next();
		this.tokens = _tree;
	}
	,subScope: function() {
		var sub = new haxe_ds_StringMap();
		var tmp;
		var this1 = this.heap.peek();
		tmp = this1.keys();
		while( tmp.hasNext() ) {
			var n = tmp.next();
			var tmp1;
			var this2 = this.heap.peek();
			tmp1 = this2.get(n);
			var v = tmp1;
			if(__map_reserved[n] != null) sub.setReserved(n,v); else sub.h[n] = v;
			v;
		}
		this.heap.add(sub);
	}
	,superScope: function() {
		this.heap.pop();
	}
	,token: function() {
		return this.tokens.shift();
	}
	,isMacro: function(name) {
		var tmp;
		var _this = this.macros;
		if(__map_reserved[name] != null) tmp = _this.existsReserved(name); else tmp = _this.h.hasOwnProperty(name);
		return tmp;
	}
	,callMacro: function(name,args) {
		var tmp;
		var _this = this.macros;
		if(__map_reserved[name] != null) tmp = _this.getReserved(name); else tmp = _this.h[name];
		var result = tmp(args);
		result = this.rewrite(result);
		return result;
	}
	,defMacro: function(name,mfunc) {
		var tmp;
		var _this = this.macros;
		if(__map_reserved[name] != null) _this.setReserved(name,mfunc); else _this.h[name] = mfunc;
		tmp = mfunc;
		tmp;
	}
	,get_scope: function() {
		return this.heap.peek();
	}
	,tokens: null
	,sheet: null
	,rule: null
	,heap: null
	,macros: null
	,__class__: tannus_css_Parser
	,__properties__: {get_scope:"get_scope"}
};
var tannus_css_Property = function(key,val) {
	this.name = key;
	this.value = val;
};
$hxClasses["tannus.css.Property"] = tannus_css_Property;
tannus_css_Property.__name__ = ["tannus","css","Property"];
tannus_css_Property.prototype = {
	setValues: function(val) {
		var hunks = val.map(function(item) {
			return tannus_css_vals_ValueTools.toString(item);
		});
		return this.value = hunks.join(" ");
	}
	,clone: function() {
		return new tannus_css_Property(this.name,this.value);
	}
	,get_values: function() {
		return new tannus_css_vals_Lexer().parse(tannus_io_impl_BrowserBinary.ofString(this.value));
	}
	,name: null
	,value: null
	,__class__: tannus_css_Property
	,__properties__: {get_values:"get_values"}
};
var tannus_css_Rule = function(par,sel,props) {
	this.parentRule = null;
	this.sheet = par;
	this.selector = sel;
	this.properties = props != null?props:[];
};
$hxClasses["tannus.css.Rule"] = tannus_css_Rule;
tannus_css_Rule.__name__ = ["tannus","css","Rule"];
tannus_css_Rule.prototype = {
	child: function(childSel,props) {
		var sel = [this.selector," ",childSel].join("");
		var kid = this.sheet.rule(sel,props);
		kid.parentRule = this;
		return kid;
	}
	,set: function(name,value) {
		if(this.exists(name)) {
			var p = this.getProp(name);
			p.value = Std.string(value);
		} else {
			var p1 = new tannus_css_Property(name,Std.string(value));
			this.properties.push(p1);
		}
		this.sheet._update.call();
	}
	,exists: function(name) {
		return this.getProp(name) != null;
	}
	,get: function(name) {
		if(this.exists(name)) return this.getProp(name).value; else return null;
	}
	,property: function(name) {
		var p = this.getProp(name);
		if(p == null) {
			p = new tannus_css_Property(name,"");
			this.properties.push(p);
		}
		return p;
	}
	,getProp: function(name) {
		var _g = 0;
		var _g1 = this.properties;
		while(_g < _g1.length) {
			var prop = _g1[_g];
			++_g;
			if(prop.name == name) return prop;
		}
		return null;
	}
	,clone: function(nsheet) {
		return new tannus_css_Rule(nsheet != null?nsheet:this.sheet,this.selector,this.properties.map(function(item) {
			return new tannus_css_Property(item.name,item.value);
		}));
	}
	,changed: function() {
		this.sheet._update.call();
	}
	,selector: null
	,sheet: null
	,properties: null
	,parentRule: null
	,__class__: tannus_css_Rule
};
var tannus_css_StyleSheet = $hx_exports.tannus.css.StyleSheet = function() {
	this.rules = [];
	this._update = new tannus_io_VoidSignal();
};
$hxClasses["tannus.css.StyleSheet"] = tannus_css_StyleSheet;
tannus_css_StyleSheet.__name__ = ["tannus","css","StyleSheet"];
tannus_css_StyleSheet.fromCSS = function(code) {
	var tmp;
	var tokens = tannus_css_Lexer.quickLex(tannus_io_impl_BrowserBinary.ofString(code));
	tmp = new tannus_css_Parser().parse(tokens);
	return tmp;
};
tannus_css_StyleSheet.prototype = {
	rule: function(selector,props) {
		var r;
		if(this.hasRule(selector)) r = this.getRule(selector); else {
			r = new tannus_css_Rule(this,selector);
			this.rules.push(r);
			this._update.call();
		}
		if(props != null) {
			var _g = 0;
			var tmp;
			var this1 = props;
			tmp = Reflect.fields(this1).map(function(k) {
				var tmp1;
				var tmp2;
				if(this1 == null) tmp1 = null; else if(this1.__properties__ && (tmp2 = this1.__properties__["get_" + k])) tmp1 = this1[tmp2](); else tmp1 = this1[k];
				return { 'name' : k, 'value' : tmp1};
			});
			var _g1 = tmp;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				r.set(p.name,p.value);
			}
			this._update.call();
		}
		return r;
	}
	,hasRule: function(sel) {
		return this.getRule(sel) != null;
	}
	,getRule: function(sel) {
		var _g = 0;
		var _g1 = this.rules;
		while(_g < _g1.length) {
			var rule = _g1[_g];
			++_g;
			if(rule.selector == sel) return rule;
		}
		return null;
	}
	,fontFace: function(family,source) {
		var r = new tannus_css_Rule(this,"@font-face");
		r.set("font-family",family);
		r.set("src","url(\"" + source + "\")");
		this.rules.push(r);
		this._update.call();
		return r;
	}
	,getFontFace: function(family) {
		var _g = 0;
		var _g1 = this.getAllFontFaces();
		while(_g < _g1.length) {
			var font = _g1[_g];
			++_g;
			if(font.get("font-family") == family) return font;
		}
		return null;
	}
	,hasFontFace: function(name) {
		return this.getFontFace(name) != null;
	}
	,getAllFontFaces: function() {
		return this.rules.filter(function(item) {
			return item.selector == "@font-face";
		});
	}
	,clone: function() {
		var c = new tannus_css_StyleSheet();
		c.rules = this.rules.map(function(item) {
			return new tannus_css_Rule(c != null?c:item.sheet,item.selector,item.properties.map(function(item1) {
				return new tannus_css_Property(item1.name,item1.value);
			}));
		});
		return c;
	}
	,concat: function(other) {
		var sum = new tannus_css_StyleSheet();
		var _g = 0;
		var _g1 = this.rules.concat(other.rules);
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			sum.rules.push(new tannus_css_Rule(sum != null?sum:r.sheet,r.selector,r.properties.map(function(item) {
				return new tannus_css_Property(item.name,item.value);
			})));
		}
		return sum;
	}
	,toString: function() {
		var w = new tannus_css_Writer();
		var tmp;
		var this1 = w.generate(this);
		tmp = this1.toString();
		return tmp;
	}
	,toByteArray: function() {
		var w = new tannus_css_Writer();
		return w.generate(this);
	}
	,changed: function() {
		this._update.call();
	}
	,onchange: function(cb) {
		this._update.on(cb);
	}
	,rules: null
	,_update: null
	,__class__: tannus_css_StyleSheet
};
var tannus_css_Token = $hxClasses["tannus.css.Token"] = { __ename__ : ["tannus","css","Token"], __constructs__ : ["TRule","TProp","TMixin","TVar"] };
tannus_css_Token.TRule = function(selector,props) { var $x = ["TRule",0,selector,props]; $x.__enum__ = tannus_css_Token; $x.toString = $estr; return $x; };
tannus_css_Token.TProp = function(name,value) { var $x = ["TProp",1,name,value]; $x.__enum__ = tannus_css_Token; $x.toString = $estr; return $x; };
tannus_css_Token.TMixin = function(name) { var $x = ["TMixin",2,name]; $x.__enum__ = tannus_css_Token; $x.toString = $estr; return $x; };
tannus_css_Token.TVar = function(name,value) { var $x = ["TVar",3,name,value]; $x.__enum__ = tannus_css_Token; $x.toString = $estr; return $x; };
var tannus_css_Value = $hxClasses["tannus.css.Value"] = { __ename__ : ["tannus","css","Value"], __constructs__ : ["VIdent","VString","VNumber","VColor","VRef","VCall","VTuple","VComma"] };
tannus_css_Value.VIdent = function(id) { var $x = ["VIdent",0,id]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VString = function(str) { var $x = ["VString",1,str]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VNumber = function(num,unit) { var $x = ["VNumber",2,num,unit]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VColor = function(col) { var $x = ["VColor",3,col]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VRef = function(name) { var $x = ["VRef",4,name]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VCall = function(func,args) { var $x = ["VCall",5,func,args]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VTuple = function(vals) { var $x = ["VTuple",6,vals]; $x.__enum__ = tannus_css_Value; $x.toString = $estr; return $x; };
tannus_css_Value.VComma = ["VComma",7];
tannus_css_Value.VComma.toString = $estr;
tannus_css_Value.VComma.__enum__ = tannus_css_Value;
var tannus_css_Writer = function() {
};
$hxClasses["tannus.css.Writer"] = tannus_css_Writer;
tannus_css_Writer.__name__ = ["tannus","css","Writer"];
tannus_css_Writer.prototype = {
	generate: function(sheet) {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		this.buffer = tmp;
		var _g = 0;
		var _g1 = sheet.rules;
		while(_g < _g1.length) {
			var rule = _g1[_g];
			++_g;
			this.writeRule(rule);
		}
		return this.buffer;
	}
	,writeRule: function(rule) {
		this.writeln(tannus_io_impl_BrowserBinary.ofString(rule.selector + " {"));
		var _g = 0;
		var _g1 = rule.properties;
		while(_g < _g1.length) {
			var prop = _g1[_g];
			++_g;
			this.writeln(tannus_io_impl_BrowserBinary.ofString("" + "    " + prop.name + ": " + prop.value + ";"));
		}
		this.writeln(tannus_io_impl_BrowserBinary.ofString("}"));
	}
	,reset: function() {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		this.buffer = tmp;
	}
	,write: function(what) {
		this.buffer.append(what);
	}
	,writeln: function(data) {
		var tmp;
		var n = HxOverrides.cca("\n",0);
		var this1;
		if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
		this1 = n;
		tmp = this1;
		data.push(tmp);
		this.buffer.append(data);
	}
	,buffer: null
	,__class__: tannus_css_Writer
};
var tannus_css_vals_Lexer = $hx_exports.tannus.css.vals.Lexer = function() {
};
$hxClasses["tannus.css.vals.Lexer"] = tannus_css_vals_Lexer;
tannus_css_vals_Lexer.__name__ = ["tannus","css","vals","Lexer"];
tannus_css_vals_Lexer.eof = function() {
	throw new js__$Boot_HaxeError(tannus_css_vals__$Lexer_Err.Eof);
};
tannus_css_vals_Lexer.unex = function(c) {
	throw new js__$Boot_HaxeError(tannus_css_vals__$Lexer_Err.Unexpected(c));
};
tannus_css_vals_Lexer.isUnit = function(c) {
	return c >= 65 && c <= 90 || c >= 97 && c <= 122 || Lambda.has([37],c);
};
tannus_css_vals_Lexer.parseString = function(s) {
	return new tannus_css_vals_Lexer().parse(tannus_io_impl_BrowserBinary.ofString(s));
};
tannus_css_vals_Lexer.prototype = {
	parse: function(snip) {
		this.buffer = new tannus_io_ByteStack(snip);
		this.tree = [];
		while(!this.buffer.get_empty()) {
			var val = this.parseNext();
			if(val != null) this.tree.push(val);
		}
		return this.tree;
	}
	,parseNext: function() {
		if(this.buffer.get_empty()) return null;
		var c = this.buffer.peek(0);
		if(Lambda.has([9,10,11,12,13,32],c)) {
			this.advance();
			return this.parseNext();
		} else {
			var tmp;
			if(!(c >= 65 && c <= 90 || c >= 97 && c <= 122 || c == 95)) {
				var this1 = this.buffer.peek();
				tmp = this1 == 64;
			} else tmp = true;
			if(tmp) {
				var tmp1;
				var this2 = this.advance();
				tmp1 = String.fromCharCode(this2);
				var ident = tmp1;
				while(true) {
					var tmp2;
					if(!this.buffer.get_empty()) {
						var tmp4;
						var this3 = this.buffer.peek(0);
						var tmp6;
						if(this3 >= 65) tmp6 = this3 <= 90; else tmp6 = false;
						if(!tmp6) {
							if(this3 >= 97) tmp4 = this3 <= 122; else tmp4 = false;
						} else tmp4 = true;
						var tmp5;
						if(!tmp4) {
							var this4 = this.buffer.peek(0);
							if(this4 >= 48) tmp5 = this4 <= 57; else tmp5 = false;
						} else tmp5 = true;
						if(!tmp5) {
							var this5 = this.buffer.peek(0);
							tmp2 = this5 == 95;
						} else tmp2 = true;
					} else tmp2 = false;
					if(!tmp2) break;
					var tmp3;
					var this6 = this.advance();
					tmp3 = String.fromCharCode(this6);
					ident += tmp3;
				}
				if(StringTools.startsWith(ident,"@")) {
					ident = tannus_ds_StringUtils.after(ident,"@");
					return tannus_css_Value.VRef(ident);
				} else {
					if(this.buffer.get_empty()) return tannus_css_Value.VIdent(ident);
					c = this.buffer.peek(0);
					if(c == 40) return tannus_css_Value.VCall(ident,this.tuple()); else return tannus_css_Value.VIdent(ident);
				}
			} else if(c >= 48 && c <= 57) {
				var tmp7;
				var this7 = this.advance();
				tmp7 = String.fromCharCode(this7);
				var snum = tmp7;
				while(true) {
					var tmp8;
					if(!this.buffer.get_empty()) {
						var tmp10;
						var this8 = this.buffer.peek(0);
						if(this8 >= 48) tmp10 = this8 <= 57; else tmp10 = false;
						if(!tmp10) {
							var this9 = this.buffer.peek(0);
							tmp8 = this9 == 46;
						} else tmp8 = true;
					} else tmp8 = false;
					if(!tmp8) break;
					var tmp9;
					var this10 = this.advance();
					tmp9 = String.fromCharCode(this10);
					snum += tmp9;
				}
				var num = parseFloat(snum);
				var unit = null;
				if(!this.buffer.get_empty() && tannus_css_vals_Lexer.isUnit(this.buffer.peek(0))) {
					var tmp11;
					var this11 = this.advance();
					tmp11 = String.fromCharCode(this11);
					var su = tmp11;
					while(!this.buffer.get_empty() && tannus_css_vals_Lexer.isUnit(this.buffer.peek(0))) {
						var tmp12;
						var this12 = this.advance();
						tmp12 = String.fromCharCode(this12);
						su += tmp12;
					}
					if(Lambda.has(["em","ex","ch","rem","vw","vh","%","cm","mm","in","px","pt","pc"],su)) unit = su; else {
						var e = "CSSUnitError: " + su + " is not a valid unit!";
						throw new js__$Boot_HaxeError(e);
					}
				}
				return tannus_css_Value.VNumber(num,unit);
			} else if(c == 35) {
				var tmp13;
				var this13 = this.advance();
				tmp13 = String.fromCharCode(this13);
				var scol = tmp13;
				while(true) {
					var tmp14;
					if(!this.buffer.get_empty()) {
						var tmp16;
						var this14 = this.buffer.peek(0);
						tmp16 = String.fromCharCode(this14);
						tmp14 = new EReg("[0-9A-F]","i").match(tmp16);
					} else tmp14 = false;
					if(!tmp14) break;
					var tmp15;
					var this15 = this.advance();
					tmp15 = String.fromCharCode(this15);
					scol += tmp15;
				}
				var color = tannus_graphics__$Color_TColor.fromString(scol);
				return tannus_css_Value.VColor(color);
			} else if(c == 34 || c == 39) {
				var del = c;
				var str = "";
				this.advance();
				c = this.buffer.peek(0);
				while(!this.buffer.get_empty()) {
					if(c == del) {
						this.advance();
						break;
					} else {
						var tmp17;
						var this16 = this.buffer.peek();
						tmp17 = String.fromCharCode(this16);
						str += tmp17;
						this.advance();
					}
					c = this.buffer.peek(0);
				}
				return tannus_css_Value.VString(str);
			} else if(c == 44) {
				this.advance();
				return tannus_css_Value.VComma;
			} else {
				var c1 = this.buffer.peek();
				throw new js__$Boot_HaxeError(tannus_css_vals__$Lexer_Err.Unexpected(c1));
				return tannus_css_Value.VNumber(0);
			}
		}
	}
	,tuple: function() {
		var c = this.buffer.peek(0);
		var str = "";
		var lvl = 1;
		this.advance();
		while(lvl > 0) {
			c = this.buffer.peek(0);
			if(c == 40) lvl++; else if(c == 41) lvl--;
			if(lvl > 0) str += String.fromCharCode(c);
			this.advance();
		}
		var sublexer = new tannus_css_vals_Lexer();
		var subvals = sublexer.parse(tannus_io_impl_BrowserBinary.ofString(str));
		var tupvals = [];
		var tmp = null;
		var _g = 0;
		while(_g < subvals.length) {
			var sv = subvals[_g];
			++_g;
			switch(sv[1]) {
			case 7:
				if(tmp != null) {
					tupvals.push(tmp);
					tmp = null;
				} else throw new js__$Boot_HaxeError("Error: unexpected ,");
				break;
			default:
				if(tmp == null) tmp = sv; else throw new js__$Boot_HaxeError("Error: missing ,");
			}
		}
		if(tmp != null) tupvals.push(tmp);
		return tupvals;
	}
	,saveState: function() {
		return { 'buffer' : this.buffer.copy(), 'tree' : this.tree.slice()};
	}
	,loadState: function(state) {
		this.buffer = state.buffer;
		this.tree = state.tree;
	}
	,advance: function(d) {
		if(d == null) d = 0;
		var r = this.buffer.pop();
		while(d > 0) {
			d--;
			this.buffer.pop();
		}
		return r;
	}
	,next: function(d) {
		if(d == null) d = 0;
		return this.buffer.peek(d);
	}
	,push: function(v) {
		this.tree.push(v);
	}
	,get_end: function() {
		return this.buffer.get_empty();
	}
	,get_cur: function() {
		return this.buffer.peek();
	}
	,buffer: null
	,tree: null
	,__class__: tannus_css_vals_Lexer
	,__properties__: {get_cur:"get_cur",get_end:"get_end"}
};
var tannus_css_vals__$Lexer_Err = $hxClasses["tannus.css.vals._Lexer.Err"] = { __ename__ : ["tannus","css","vals","_Lexer","Err"], __constructs__ : ["Unexpected","Eof"] };
tannus_css_vals__$Lexer_Err.Unexpected = function(c) { var $x = ["Unexpected",0,c]; $x.__enum__ = tannus_css_vals__$Lexer_Err; $x.toString = $estr; return $x; };
tannus_css_vals__$Lexer_Err.Eof = ["Eof",1];
tannus_css_vals__$Lexer_Err.Eof.toString = $estr;
tannus_css_vals__$Lexer_Err.Eof.__enum__ = tannus_css_vals__$Lexer_Err;
var tannus_css_vals__$Unit_Unit_$Impl_$ = {};
$hxClasses["tannus.css.vals._Unit.Unit_Impl_"] = tannus_css_vals__$Unit_Unit_$Impl_$;
tannus_css_vals__$Unit_Unit_$Impl_$.__name__ = ["tannus","css","vals","_Unit","Unit_Impl_"];
tannus_css_vals__$Unit_Unit_$Impl_$.__properties__ = {get_all:"get_all"}
tannus_css_vals__$Unit_Unit_$Impl_$.get_all = function() {
	return ["em","ex","ch","rem","vw","vh","%","cm","mm","in","px","pt","pc"];
};
tannus_css_vals__$Unit_Unit_$Impl_$.isValidUnit = function(s) {
	return Lambda.has(["em","ex","ch","rem","vw","vh","%","cm","mm","in","px","pt","pc"],s);
};
var tannus_css_vals_ValueTools = function() { };
$hxClasses["tannus.css.vals.ValueTools"] = tannus_css_vals_ValueTools;
tannus_css_vals_ValueTools.__name__ = ["tannus","css","vals","ValueTools"];
tannus_css_vals_ValueTools.toString = function(v) {
	if(v == null) throw new js__$Boot_HaxeError("CSSError: Cannot convert a null-Value to String!"); else if(v != null) switch(v[1]) {
	case 0:
		return v[2];
	case 1:
		return JSON.stringify(v[2]);
	case 2:
		var unit = v[3];
		var su = unit != null?unit:"";
		return "" + v[2] + su;
	case 3:
		return v[2].toString();
	case 4:
		return "@" + v[2];
	case 5:
		var sargs = v[3].map(function(item) {
			return tannus_css_vals_ValueTools.toString(item);
		}).join(", ");
		return "" + v[2] + "(" + sargs + ")";
	default:
		throw new js__$Boot_HaxeError("CSSError: Cannot convert " + Std.string(v) + " to String!");
	} else throw new js__$Boot_HaxeError("CSSError: Cannot convert " + Std.string(v) + " to String!");
};
tannus_css_vals_ValueTools.iter = function(value,predicate) {
	predicate(value);
	switch(value[1]) {
	case 5:
		var args = value[3];
		var _g = 0;
		while(_g < args.length) {
			var v = args[_g];
			++_g;
			tannus_css_vals_ValueTools.iter(v,predicate);
		}
		break;
	default:
	}
};
tannus_css_vals_ValueTools.map = function(value,mapper) {
	var val = value;
	switch(value[1]) {
	case 5:
		val = tannus_css_Value.VCall(value[2],value[3].map(function(item) {
			return tannus_css_vals_ValueTools.map(item,mapper);
		}));
		break;
	default:
	}
	val = mapper(val);
	return val;
};
var tannus_dom__$Attributes_Attributes_$Impl_$ = {};
$hxClasses["tannus.dom._Attributes.Attributes_Impl_"] = tannus_dom__$Attributes_Attributes_$Impl_$;
tannus_dom__$Attributes_Attributes_$Impl_$.__name__ = ["tannus","dom","_Attributes","Attributes_Impl_"];
tannus_dom__$Attributes_Attributes_$Impl_$._new = function(e) {
	return new tannus_dom_CAttributes(e);
};
tannus_dom__$Attributes_Attributes_$Impl_$.get = function(this1,k) {
	return this1.get(k);
};
tannus_dom__$Attributes_Attributes_$Impl_$.set = function(this1,k,v) {
	return this1.set(k,v);
};
var tannus_dom_CAttributes = function(e) {
	this.element = e;
};
$hxClasses["tannus.dom.CAttributes"] = tannus_dom_CAttributes;
tannus_dom_CAttributes.__name__ = ["tannus","dom","CAttributes"];
tannus_dom_CAttributes.prototype = {
	exists: function(name) {
		return this.element.els[0].hasAttribute(name);
	}
	,get: function(name) {
		return this.element.els[0].getAttribute(name);
	}
	,set: function(name,value) {
		var _g = 0;
		var _g1 = this.element.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.setAttribute(name,Std.string(value));
		}
		return Std.string(value);
	}
	,remove: function(name) {
		var _g = 0;
		var _g1 = this.element.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.removeAttribute(name);
		}
	}
	,element: null
	,__class__: tannus_dom_CAttributes
};
var tannus_dom__$Data_Data_$Impl_$ = {};
$hxClasses["tannus.dom._Data.Data_Impl_"] = tannus_dom__$Data_Data_$Impl_$;
tannus_dom__$Data_Data_$Impl_$.__name__ = ["tannus","dom","_Data","Data_Impl_"];
tannus_dom__$Data_Data_$Impl_$._new = function(e) {
	return new tannus_dom_CData(e);
};
tannus_dom__$Data_Data_$Impl_$.get = function(this1,k) {
	return this1.get(k);
};
tannus_dom__$Data_Data_$Impl_$.set = function(this1,k,v) {
	this1.set(k,v);
};
var tannus_dom_CData = function(e) {
	this.el = e;
};
$hxClasses["tannus.dom.CData"] = tannus_dom_CData;
tannus_dom_CData.__name__ = ["tannus","dom","CData"];
tannus_dom_CData.prototype = {
	get: function(name) {
		if(!(this.el.els.length <= 0)) {
			var tmp;
			var tmp1;
			var e = this.el.els[0];
			var tmp3;
			var tmp4;
			if(e == null) tmp3 = null; else if(e.__properties__ && (tmp4 = e.__properties__["get_" + "__tandata"])) tmp3 = e[tmp4](); else tmp3 = e.__tandata;
			tmp1 = tmp3;
			var this1 = tmp1.pub;
			var tmp2;
			var o = this1.o;
			var tmp5;
			if(o == null) tmp2 = null; else if(o.__properties__ && (tmp5 = o.__properties__["get_" + name])) tmp2 = o[tmp5](); else tmp2 = o[name];
			tmp = tmp2;
			return tmp;
		} else return null;
	}
	,set: function(name,value) {
		var _g = 0;
		var _g1 = this.el.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var tmp;
			var tmp1;
			if(e == null) tmp = null; else if(e.__properties__ && (tmp1 = e.__properties__["get_" + "__tandata"])) tmp = e[tmp1](); else tmp = e.__tandata;
			var this1 = tmp.pub;
			this1.set(name,value);
		}
	}
	,exists: function(name) {
		if(!(this.el.els.length <= 0)) {
			var tmp;
			var tmp1;
			var e = this.el.els[0];
			var tmp2;
			var tmp3;
			if(e == null) tmp2 = null; else if(e.__properties__ && (tmp3 = e.__properties__["get_" + "__tandata"])) tmp2 = e[tmp3](); else tmp2 = e.__tandata;
			tmp1 = tmp2;
			var _this = tmp1.pub;
			tmp = Object.prototype.hasOwnProperty.call(_this.o,name);
			return tmp;
		} else return false;
	}
	,keys: function() {
		if(!(this.el.els.length <= 0)) {
			var tmp;
			var e = this.el.els[0];
			var tmp1;
			var tmp2;
			if(e == null) tmp1 = null; else if(e.__properties__ && (tmp2 = e.__properties__["get_" + "__tandata"])) tmp1 = e[tmp2](); else tmp1 = e.__tandata;
			tmp = tmp1;
			return tmp.pub.keys();
		} else return [];
	}
	,ref: function(name) {
		var tmp;
		var e = this.el.els[0];
		var tmp1;
		var tmp2;
		if(e == null) tmp1 = null; else if(e.__properties__ && (tmp2 = e.__properties__["get_" + "__tandata"])) tmp1 = e[tmp2](); else tmp1 = e.__tandata;
		tmp = tmp1;
		return tmp.pub.field(name);
	}
	,nd: function(e) {
		return (function($this) {
			var $r;
			var tmp;
			$r = e == null?null:e.__properties__ && (tmp = e.__properties__["get_" + "__tandata"])?e[tmp]():e.__tandata;
			return $r;
		}(this));
	}
	,el: null
	,__class__: tannus_dom_CData
};
var tannus_dom_ElIter = function(e) {
	this.owner = e;
	this.index = 0;
};
$hxClasses["tannus.dom.ElIter"] = tannus_dom_ElIter;
tannus_dom_ElIter.__name__ = ["tannus","dom","ElIter"];
tannus_dom_ElIter.prototype = {
	hasNext: function() {
		return this.index < this.owner.els.length;
	}
	,next: function() {
		var tmp;
		var n = this.index++;
		tmp = new tannus_dom_CElement(this.owner.els[n]);
		return tmp;
	}
	,owner: null
	,index: null
	,__class__: tannus_dom_ElIter
};
var tannus_dom__$Element_Element_$Impl_$ = {};
$hxClasses["tannus.dom._Element.Element_Impl_"] = tannus_dom__$Element_Element_$Impl_$;
tannus_dom__$Element_Element_$Impl_$.__name__ = ["tannus","dom","_Element","Element_Impl_"];
tannus_dom__$Element_Element_$Impl_$._new = function(ctx) {
	return new tannus_dom_CElement(ctx);
};
tannus_dom__$Element_Element_$Impl_$.getAttribute = function(this1,k) {
	return this1.getAttribute(k);
};
tannus_dom__$Element_Element_$Impl_$.setAttribute = function(this1,k,v) {
	return this1.setAttribute(k,v);
};
tannus_dom__$Element_Element_$Impl_$.fromAny = function(o) {
	return new tannus_dom_CElement(o);
};
var tannus_dom_CElement = function(ctx) {
	this.els = [];
	this._style = new tannus_dom_CStyles(this);
	this._attr = new tannus_dom_CAttributes(this);
	this._data = new tannus_dom_CData(this);
	this.determineContext(ctx);
	this.initializeData();
};
$hxClasses["tannus.dom.CElement"] = tannus_dom_CElement;
tannus_dom_CElement.__name__ = ["tannus","dom","CElement"];
tannus_dom_CElement.parseDocument = function(code) {
	var parser = new DOMParser();
	var doc = parser.parseFromString(code,"text/html");
	var nl = doc.querySelectorAll("body *, head *");
	var results = [];
	var _g1 = 0;
	var _g = nl.length;
	while(_g1 < _g) {
		var i = _g1++;
		var item = nl.item(i);
		if(js_Boot.__instanceof(item,HTMLElement)) results.push(item);
	}
	return tannus_ds_ArrayTools.unique(results);
};
tannus_dom_CElement.prototype = {
	remove: function() {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.remove();
		}
	}
	,clone: function(deep) {
		if(deep == null) deep = false;
		var copy = new tannus_dom_CElement(null);
		copy.els = this.els.map(function(item) {
			return item.cloneNode(deep);
		});
		return copy;
	}
	,find: function(sel) {
		var res = new tannus_dom_CElement(null);
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var nl = e.querySelectorAll(sel);
			var _g3 = 0;
			var _g2 = nl.length;
			while(_g3 < _g2) {
				var i = _g3++;
				var item = nl.item(i);
				if(js_Boot.__instanceof(item,HTMLElement)) res.els.push(item);
			}
		}
		return res;
	}
	,at: function(n) {
		return new tannus_dom_CElement(this.els[n]);
	}
	,contains: function(sel) {
		var sub = this.find(sel);
		return !(sub.els.length <= 0);
	}
	,'is': function(sel) {
		return this.els[0].matches(sel);
	}
	,children: function() {
		var rels = tannus_ds_ArrayTools.flatten(this.els.map(function(item) {
			var tmp;
			var _g = [];
			var _g2 = 0;
			var _g1 = item.children.length;
			while(_g2 < _g1) {
				var i = _g2++;
				_g.push(item.children.item(i));
			}
			tmp = _g;
			return tmp;
		}));
		var res = new tannus_dom_CElement(null);
		res.els = rels;
		return res;
	}
	,isParentOf: function(mchild) {
		if(!(this.els.length <= 0) && !(mchild.els.length <= 0)) {
			var node = mchild.els[0].parentNode;
			while(node != null) {
				if(node == this.els[0]) return true;
				node = node.parentNode;
			}
			return false;
		} else return false;
	}
	,isDescendantOf: function(mparent) {
		return mparent.isParentOf(this);
	}
	,append: function(child) {
		if(!(this.els.length <= 0)) {
			var _g = 0;
			var _g1 = child.els;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				this.els[0].appendChild(e);
			}
		}
	}
	,appendTo: function(par) {
		par.append(this);
	}
	,prepend: function(child) {
		if(!(this.els.length <= 0)) {
			var _g = 0;
			var _g1 = child.els;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				this.els[0].insertBefore(e,this.els[0].firstElementChild);
			}
		}
	}
	,prependTo: function(par) {
		par.prepend(this);
	}
	,add: function(item) {
		this.els = this.els.concat(item.els);
	}
	,insertAfter: function(child,after) {
		this.els[0].insertBefore(child.els[0],after.els[0].nextSibling);
	}
	,after: function(content) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var cont = content.clone(true);
			var _g2 = 0;
			var _g3 = cont.els;
			while(_g2 < _g3.length) {
				var c = _g3[_g2];
				++_g2;
				e.parentElement.insertBefore(c,e.nextSibling);
			}
		}
	}
	,before: function(content) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var cont = content.clone(true);
			var _g2 = 0;
			var _g3 = cont.els;
			while(_g2 < _g3.length) {
				var c = _g3[_g2];
				++_g2;
				e.parentElement.insertBefore(c,e);
			}
		}
	}
	,replaceChild: function(child,repl) {
		if(!(this.els.length <= 0)) this.els[0].replaceChild(repl.els[0],child.els[0]);
	}
	,replaceWith: function(other) {
		this.get_parent().replaceChild(this,other);
	}
	,getAttribute: function(name) {
		return this._attr.get(name);
	}
	,setAttribute: function(name,value) {
		return this._attr.set(name,value);
	}
	,hasAttribute: function(name) {
		return this._attr.exists(name);
	}
	,removeAttribute: function(name) {
		this._attr.remove(name);
	}
	,hasClass: function(name) {
		if(!(this.els.length <= 0)) return this.els[0].classList.contains(name); else return false;
	}
	,addClass: function(name) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.classList.contains(name)) e.classList.add(name);
		}
	}
	,removeClass: function(name) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.classList.remove(name);
		}
	}
	,toggleClass: function(name) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.classList.toggle(name);
		}
	}
	,field: function(name,value) {
		if(this.els.length <= 0) return null;
		if(value == null) return (function($this) {
			var $r;
			var o = $this.els[0];
			var tmp;
			$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + name])?o[tmp]():o[name];
			return $r;
		}(this)); else {
			var o1 = this.els[0];
			var tmp1;
			if(o1.__properties__ && (tmp1 = o1.__properties__["set_" + name])) o1[tmp1](value); else o1[name] = value;
			return (function($this) {
				var $r;
				var o2 = $this.els[0];
				var tmp2;
				$r = o2 == null?null:o2.__properties__ && (tmp2 = o2.__properties__["get_" + name])?o2[tmp2]():o2[name];
				return $r;
			}(this));
		}
	}
	,on: function(name,handler) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			var nd = this.nodeData(e);
			e.addEventListener(name,handler);
			if(!Object.prototype.hasOwnProperty.call(nd.pri.o,"events")) {
				var val = tannus_ds_CObj.create({ });
				nd.pri.set("events",val);
			}
			var tmp;
			var o = nd.pri.o;
			var tmp2;
			if(o == null) tmp = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + "events"])) tmp = o[tmp2](); else tmp = o.events;
			var events = tmp;
			if(!Object.prototype.hasOwnProperty.call(events.o,name)) {
				var val1 = [];
				events.set(name,val1);
			}
			var tmp1;
			var o1 = events.o;
			var tmp3;
			if(o1 == null) tmp1 = null; else if(o1.__properties__ && (tmp3 = o1.__properties__["get_" + name])) tmp1 = o1[tmp3](); else tmp1 = o1[name];
			tmp1.push(handler);
		}
	}
	,off: function(name,handler) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(handler != null) e.removeEventListener(name,handler); else {
				var nd = this.nodeData(e);
				if(!Object.prototype.hasOwnProperty.call(nd.pri.o,"events")) {
					var val = tannus_ds_CObj.create({ });
					nd.pri.set("events",val);
				}
				var tmp;
				var o = nd.pri.o;
				var tmp1;
				if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "events"])) tmp = o[tmp1](); else tmp = o.events;
				var events = tmp;
				if(Object.prototype.hasOwnProperty.call(events.o,name)) {
					var tmp2;
					var o1 = events.o;
					var tmp3;
					if(o1 == null) tmp2 = null; else if(o1.__properties__ && (tmp3 = o1.__properties__["get_" + name])) tmp2 = o1[tmp3](); else tmp2 = o1[name];
					var handlers = tmp2;
					var _g2 = 0;
					while(_g2 < handlers.length) {
						var f = handlers[_g2];
						++_g2;
						e.removeEventListener(name,f);
					}
				}
			}
		}
	}
	,value: function() {
		var _g = this.get_tagname();
		switch(_g) {
		case "input":
			return this.field("value");
		default:
			return null;
		}
	}
	,iterator: function() {
		return new tannus_dom_ElIter(this);
	}
	,rect: function() {
		if(!(this.els.length <= 0)) {
			var cr = this.els[0].getBoundingClientRect();
			return new tannus_geom_CRectangle(cr.x,cr.y,cr.width,cr.height);
		} else return new tannus_geom_CRectangle(0,0,0,0);
	}
	,determineContext: function(ctx) {
		if(ctx == null) return; else if(typeof(ctx) == "string") this.determineStringContext(Std.string(ctx)); else if(js_Boot.__instanceof(ctx,HTMLElement)) this.els.push(ctx); else if(js_Boot.__instanceof(ctx,tannus_dom_CElement)) {
			var el = ctx;
			this.els = el.els;
		} else throw new js__$Boot_HaxeError("DOMError: Invalid Element context");
	}
	,determineStringContext: function(s) {
		s = StringTools.trim(s);
		if(StringTools.startsWith(s,"<")) this.els = tannus_dom_CElement.parseDocument(s); else {
			var nl = window.document.querySelectorAll(s);
			var _g1 = 0;
			var _g = nl.length;
			while(_g1 < _g) {
				var i = _g1++;
				var item = nl.item(i);
				if(js_Boot.__instanceof(item,HTMLElement)) this.els.push(item);
			}
		}
	}
	,initializeData: function() {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var el = _g1[_g];
			++_g;
			var e = el;
			if(!Object.prototype.hasOwnProperty.call(e,"__tandata")) {
				var value = { 'pri' : tannus_ds_CObj.create({ }), 'pub' : tannus_ds_CObj.create({ })};
				var tmp1;
				if(e.__properties__ && (tmp1 = e.__properties__["set_" + "__tandata"])) e[tmp1](value); else e.__tandata = value;
				var tmp;
				var tmp2;
				if(e == null) tmp = null; else if(e.__properties__ && (tmp2 = e.__properties__["get_" + "__tandata"])) tmp = e[tmp2](); else tmp = e.__tandata;
				tmp;
			}
		}
	}
	,nodeData: function(e) {
		return (function($this) {
			var $r;
			var tmp;
			$r = e == null?null:e.__properties__ && (tmp = e.__properties__["get_" + "__tandata"])?e[tmp]():e.__tandata;
			return $r;
		}(this));
	}
	,get_length: function() {
		return this.els.length;
	}
	,get_empty: function() {
		return this.els.length <= 0;
	}
	,get_exists: function() {
		return !(this.els.length <= 0);
	}
	,get_first: function() {
		return this.els[0];
	}
	,get_css: function() {
		return this._style;
	}
	,get_attributes: function() {
		return this._attr;
	}
	,get_data: function() {
		return this._data;
	}
	,get_elements: function() {
		return this.els.map(function(item) {
			return new tannus_dom_CElement(item);
		});
	}
	,get_html: function() {
		if(!(this.els.length <= 0)) return this.els[0].innerHTML; else return "";
	}
	,set_html: function(v) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.innerHTML = v;
		}
		return v;
	}
	,get_text: function() {
		if(!(this.els.length <= 0)) {
			var result = "";
			var _g = 0;
			var _g1 = this.els;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				result += e.textContent;
			}
			return result;
		} else return "";
	}
	,set_text: function(v) {
		var _g = 0;
		var _g1 = this.els;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.textContent = v;
		}
		return v;
	}
	,get_tagname: function() {
		return this.els.length <= 0?"":this.els[0].tagName.toLowerCase();
	}
	,get_parent: function() {
		if(!(this.els.length <= 0) && this.els[0].parentElement != null) return new tannus_dom_CElement(this.els[0].parentElement); else return null;
	}
	,els: null
	,_style: null
	,_attr: null
	,_data: null
	,__class__: tannus_dom_CElement
	,__properties__: {get_parent:"get_parent",get_tagname:"get_tagname",set_text:"set_text",get_text:"get_text",set_html:"set_html",get_html:"get_html",get_elements:"get_elements",get_data:"get_data",get_attributes:"get_attributes",get_css:"get_css",get_first:"get_first",get_exists:"get_exists",get_empty:"get_empty",get_length:"get_length"}
};
var tannus_dom__$Styles_Styles_$Impl_$ = {};
$hxClasses["tannus.dom._Styles.Styles_Impl_"] = tannus_dom__$Styles_Styles_$Impl_$;
tannus_dom__$Styles_Styles_$Impl_$.__name__ = ["tannus","dom","_Styles","Styles_Impl_"];
tannus_dom__$Styles_Styles_$Impl_$._new = function(e) {
	return new tannus_dom_CStyles(e);
};
tannus_dom__$Styles_Styles_$Impl_$.get = function(this1,name) {
	return this1.get(name);
};
tannus_dom__$Styles_Styles_$Impl_$.set = function(this1,name,value) {
	return this1.set(name,value);
};
tannus_dom__$Styles_Styles_$Impl_$.ref = function(this1,name) {
	var tmp;
	var f = $bind(this1,this1.get);
	var a1 = name;
	tmp = function() {
		return f(a1);
	};
	var tmp1;
	var f1 = $bind(this1,this1.set);
	var a11 = name;
	tmp1 = function(a2) {
		return f1(a11,a2);
	};
	return new tannus_io__$Pointer_Ref(tmp,tmp1);
};
tannus_dom__$Styles_Styles_$Impl_$.toObject = function(this1) {
	return this1.toObject();
};
tannus_dom__$Styles_Styles_$Impl_$.write = function(this1,o) {
	this1.write(o);
};
tannus_dom__$Styles_Styles_$Impl_$.pluck = function(this1,keys) {
	var props = { };
	var _g = 0;
	while(_g < keys.length) {
		var key = keys[_g];
		++_g;
		var value = this1.get(key);
		var tmp1;
		if(props.__properties__ && (tmp1 = props.__properties__["set_" + key])) props[tmp1](value); else props[key] = value;
		var tmp;
		var tmp2;
		if(props == null) tmp = null; else if(props.__properties__ && (tmp2 = props.__properties__["get_" + key])) tmp = props[tmp2](); else tmp = props[key];
		tmp;
	}
	return props;
};
var tannus_dom_CStyles = function(e) {
	this.element = e;
};
$hxClasses["tannus.dom.CStyles"] = tannus_dom_CStyles;
tannus_dom_CStyles.__name__ = ["tannus","dom","CStyles"];
tannus_dom_CStyles.prototype = {
	get: function(name) {
		if(this.element.els.length <= 0) return ""; else return this.first().getPropertyValue(name);
	}
	,set: function(name,value) {
		var _g = 0;
		var _g1 = this.all();
		while(_g < _g1.length) {
			var css = _g1[_g];
			++_g;
			css.setProperty(name,Std.string(value));
		}
		return Std.string(value);
	}
	,remove: function(name) {
		var _g = 0;
		var _g1 = this.all();
		while(_g < _g1.length) {
			var css = _g1[_g];
			++_g;
			css.removeProperty(name);
		}
	}
	,toObject: function() {
		var o = { };
		var css = this.first();
		if(css != null) {
			var _g1 = 0;
			var _g = css.length;
			while(_g1 < _g) {
				var i = _g1++;
				var name = css.item(i);
				var value = css.getPropertyValue(name);
				var tmp;
				var tmp2;
				if(o.__properties__ && (tmp2 = o.__properties__["set_" + name])) o[tmp2](value); else o[name] = value;
				var tmp1;
				var tmp3;
				if(o == null) tmp1 = null; else if(o.__properties__ && (tmp3 = o.__properties__["get_" + name])) tmp1 = o[tmp3](); else tmp1 = o[name];
				tmp = tmp1;
				tmp;
			}
		}
		return o;
	}
	,write: function(o) {
		var _g = 0;
		var _g1 = this.all();
		while(_g < _g1.length) {
			var css = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = Reflect.fields(o);
			while(_g2 < _g3.length) {
				var name = _g3[_g2];
				++_g2;
				var tmp;
				var tmp1;
				if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + name])) tmp = o[tmp1](); else tmp = o[name];
				css.setProperty(name,Std.string(tmp));
			}
		}
	}
	,first: function() {
		if(!(this.element.els.length <= 0)) return window.getComputedStyle(this.element.els[0]); else return null;
	}
	,all: function() {
		var tmp;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.element.els;
		while(_g1 < _g2.length) {
			var e = _g2[_g1];
			++_g1;
			_g.push(e.style);
		}
		tmp = _g;
		return tmp;
	}
	,element: null
	,__class__: tannus_dom_CStyles
};
var tannus_ds__$ActionStack_ActionStack_$Impl_$ = {};
$hxClasses["tannus.ds._ActionStack.ActionStack_Impl_"] = tannus_ds__$ActionStack_ActionStack_$Impl_$;
tannus_ds__$ActionStack_ActionStack_$Impl_$.__name__ = ["tannus","ds","_ActionStack","ActionStack_Impl_"];
tannus_ds__$ActionStack_ActionStack_$Impl_$._new = function() {
	return [];
};
tannus_ds__$ActionStack_ActionStack_$Impl_$.call = function(this1) {
	var _g = 0;
	while(_g < this1.length) {
		var action = this1[_g];
		++_g;
		action();
	}
};
tannus_ds__$ActionStack_ActionStack_$Impl_$.clone = function(this1) {
	return this1.slice();
};
var tannus_ds__$ActionStack_ParametricStack_$Impl_$ = {};
$hxClasses["tannus.ds._ActionStack.ParametricStack_Impl_"] = tannus_ds__$ActionStack_ParametricStack_$Impl_$;
tannus_ds__$ActionStack_ParametricStack_$Impl_$.__name__ = ["tannus","ds","_ActionStack","ParametricStack_Impl_"];
tannus_ds__$ActionStack_ParametricStack_$Impl_$._new = function() {
	return [];
};
tannus_ds__$ActionStack_ParametricStack_$Impl_$.call = function(this1,context) {
	var _g = 0;
	while(_g < this1.length) {
		var a = this1[_g];
		++_g;
		a(context);
	}
};
var tannus_ds_ArrayTools = function() { };
$hxClasses["tannus.ds.ArrayTools"] = tannus_ds_ArrayTools;
tannus_ds_ArrayTools.__name__ = ["tannus","ds","ArrayTools"];
tannus_ds_ArrayTools.equal = function(a) {
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g3 = i;
		var _g2 = a.length;
		while(_g3 < _g2) {
			var j = _g3++;
			if(a[i] != a[j]) return false;
		}
	}
	return true;
};
tannus_ds_ArrayTools.compare = function(left,right,predicate) {
	if(left.length != right.length) return false; else {
		if(predicate == null) predicate = function(x,y) {
			return x == y;
		};
		var _g1 = 0;
		var _g = left.length;
		while(_g1 < _g) {
			var i = _g1++;
			var l = left[i];
			var r = right[i];
			if(!predicate(l,r)) return false;
		}
		return true;
	}
};
tannus_ds_ArrayTools.pointerArray = function(a) {
	var res = [];
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = [_g1++];
		res.push(new tannus_io__$Pointer_Ref((function(i) {
			return function() {
				return a[i[0]];
			};
		})(i),(function(i) {
			return function(v) {
				return a[i[0]] = v;
			};
		})(i)));
	}
	return res;
};
tannus_ds_ArrayTools.without = function(list,blacklist,compare) {
	if(compare == null) compare = function(x,y) {
		return x == y;
	};
	var result = [];
	var $it0 = $iterator(list)();
	while( $it0.hasNext() ) {
		var x1 = $it0.next();
		var $it1 = $iterator(blacklist)();
		while( $it1.hasNext() ) {
			var y1 = $it1.next();
			if(compare(x1,y1)) continue;
		}
		result.push(x1);
	}
	return result;
};
tannus_ds_ArrayTools.firstMatch = function(list,test) {
	var $it0 = $iterator(list)();
	while( $it0.hasNext() ) {
		var item = $it0.next();
		if(test(item)) return item;
	}
	return null;
};
tannus_ds_ArrayTools.firstMatchIndex = function(list,test) {
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var index = _g1++;
		if(test(list[index])) return index;
	}
	return -1;
};
tannus_ds_ArrayTools.hasf = function(set,item,tester) {
	var $it0 = $iterator(set)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(tester(x,item)) return true;
	}
	return false;
};
tannus_ds_ArrayTools.unique = function(set,tester) {
	if(tester == null) tester = function(x,y) {
		return x == y;
	};
	var results = [];
	var _g = 0;
	while(_g < set.length) {
		var item = set[_g];
		++_g;
		if(!tannus_ds_ArrayTools.hasf(results,item,tester)) results.push(item);
	}
	return results;
};
tannus_ds_ArrayTools.union = function(one,other) {
	return one.filter(function(item) {
		return Lambda.has(other,item);
	});
};
tannus_ds_ArrayTools.intersection = function(one,two) {
	return one.length < two.length?one.filter(function(item) {
		return !Lambda.has(two,item);
	}):two.filter(function(item1) {
		return !Lambda.has(one,item1);
	});
};
tannus_ds_ArrayTools.flatten = function(set) {
	var res = [];
	var _g = 0;
	while(_g < set.length) {
		var sub = set[_g];
		++_g;
		res = res.concat(sub);
	}
	return res;
};
tannus_ds_ArrayTools.last = function(list,v) {
	if(v == null) return list[list.length - 1]; else return list[list.length - 1] = v;
};
tannus_ds_ArrayTools.before = function(list,val) {
	return list.slice(0,HxOverrides.indexOf(list,val,0) != -1?HxOverrides.indexOf(list,val,0):list.length);
};
tannus_ds_ArrayTools.after = function(list,val) {
	return list.slice(HxOverrides.indexOf(list,val,0) != -1?HxOverrides.indexOf(list,val,0) + 1:0);
};
tannus_ds_ArrayTools.times = function(list,n) {
	var res = list.slice();
	var _g1 = 0;
	var _g = n - 1;
	while(_g1 < _g) {
		_g1++;
		res = res.concat(list.slice());
	}
	return res;
};
tannus_ds_ArrayTools.min = function(list,predicate) {
	var m = null;
	var $it0 = $iterator(list)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		var score = predicate(x);
		if(m == null || score < m[1]) m = [x,score];
	}
	if(m == null) return null;
	return m[0];
};
tannus_ds_ArrayTools.max = function(list,predicate) {
	var m = null;
	var $it0 = $iterator(list)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		var score = predicate(x);
		if(m == null || score > m[1]) m = [x,score];
	}
	if(m == null) return null;
	return m[0];
};
tannus_ds_ArrayTools.minmax = function(list,predicate) {
	var l = null;
	var h = null;
	var $it0 = $iterator(list)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		var score = predicate(x);
		if(l == null || score < l[1]) l = [x,score]; else if(h == null || score > h[1]) h = [x,score];
	}
	if(l == null || h == null) throw new js__$Boot_HaxeError("Error: Iterable must not be empty!");
	return { 'min' : l[0], 'max' : h[0]};
};
tannus_ds_ArrayTools.splitfilter = function(list,pred) {
	var res = { 'pass' : [], 'fail' : []};
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		(pred(item)?res.pass:res.fail).push(item);
	}
	return res;
};
tannus_ds_ArrayTools.partition = function(list,pred) {
	var results = [[],[]];
	var _g = 0;
	while(_g < list.length) {
		var x = list[_g];
		++_g;
		results[pred(x)?0:1].push(x);
	}
	return results;
};
tannus_ds_ArrayTools.mapfilter = function(list,test,map) {
	var results = [];
	var _g = 0;
	while(_g < list.length) {
		var x = list[_g];
		++_g;
		if(test(x)) results.push(map(x));
	}
	return results;
};
tannus_ds_ArrayTools.zip = function(left,right) {
	var pairs = [];
	var _g1 = 0;
	var _g = left.length;
	while(_g1 < _g) {
		var i = _g1++;
		pairs.push(new tannus_ds_CPair(left[i],right[i]));
	}
	return pairs;
};
tannus_ds_ArrayTools.zipmap = function(left,right,predicate) {
	var pairs = tannus_ds_ArrayTools.zip(left,right);
	var tmp;
	var _g = [];
	var _g1 = 0;
	while(_g1 < pairs.length) {
		var p = pairs[_g1];
		++_g1;
		_g.push(predicate(p.left,p.right));
	}
	tmp = _g;
	return tmp;
};
tannus_ds_ArrayTools.gridify = function(arr) {
	return tannus_ds_Grid.fromArray2(arr);
};
tannus_ds_ArrayTools.lpad = function(list,len,value) {
	if(list.length >= len) return list; else {
		var res = list.slice();
		while(res.length < len) res.unshift(value);
		return res;
	}
};
tannus_ds_ArrayTools.rpad = function(list,len,value) {
	if(list.length >= len) return list; else {
		var res = list.slice();
		while(res.length < len) res.push(value);
		return res;
	}
};
tannus_ds_ArrayTools.every = function(list,test) {
	var $it0 = $iterator(list)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(!test(x)) return false;
	}
	return true;
};
tannus_ds_ArrayTools.chunk = function(array,size) {
	var chunks = [];
	var chunk = [];
	var _g = 0;
	while(_g < array.length) {
		var item = array[_g];
		++_g;
		if(chunk.length == size) {
			chunks.push(chunk);
			chunk = [];
		} else chunk.push(item);
	}
	if(chunk.length > 0) chunks.push(chunk);
	return chunks;
};
var tannus_ds__$Async_Async_$Impl_$ = {};
$hxClasses["tannus.ds._Async.Async_Impl_"] = tannus_ds__$Async_Async_$Impl_$;
tannus_ds__$Async_Async_$Impl_$.__name__ = ["tannus","ds","_Async","Async_Impl_"];
tannus_ds__$Async_Async_$Impl_$._new = function(f) {
	return f;
};
tannus_ds__$Async_Async_$Impl_$.fromTask = function(t) {
	var tmp;
	var f = t.toAsync();
	tmp = f;
	return tmp;
};
tannus_ds__$Async_Async_$Impl_$.toTask = function(this1) {
	return new tannus_ds__$Async_AsyncTask(this1);
};
var tannus_ds__$Async_Async1_$Impl_$ = {};
$hxClasses["tannus.ds._Async.Async1_Impl_"] = tannus_ds__$Async_Async1_$Impl_$;
tannus_ds__$Async_Async1_$Impl_$.__name__ = ["tannus","ds","_Async","Async1_Impl_"];
tannus_ds__$Async_Async1_$Impl_$._new = function(f) {
	return f;
};
var tannus_ds__$Async_AsyncTask = function(a) {
	tannus_ds_Task.call(this);
	this.f = a;
};
$hxClasses["tannus.ds._Async.AsyncTask"] = tannus_ds__$Async_AsyncTask;
tannus_ds__$Async_AsyncTask.__name__ = ["tannus","ds","_Async","AsyncTask"];
tannus_ds__$Async_AsyncTask.__super__ = tannus_ds_Task;
tannus_ds__$Async_AsyncTask.prototype = $extend(tannus_ds_Task.prototype,{
	action: function(done) {
		this.f(done);
	}
	,f: null
	,__class__: tannus_ds__$Async_AsyncTask
});
var tannus_ds_AsyncPool = function() {
	this.tasks = [];
	this.results = [];
	this._done = new tannus_io_Signal();
};
$hxClasses["tannus.ds.AsyncPool"] = tannus_ds_AsyncPool;
tannus_ds_AsyncPool.__name__ = ["tannus","ds","AsyncPool"];
tannus_ds_AsyncPool.prototype = {
	push: function(task) {
		var t = { index : 0, task : task};
		t.index = this.tasks.push(t);
	}
	,taskDone: function(task,error,result) {
		this.results.push({ task : task, error : error, value : result});
		if(this.results.length == this.tasks.length) this.complete();
	}
	,complete: function() {
		var reslist = [];
		haxe_ds_ArraySort.sort(this.results,function(left,right) {
			return left.task.index - right.task.index;
		});
		reslist = this.results.map(function(item) {
			return { error : item.error, value : item.value};
		});
		this._done.broadcast(reslist);
	}
	,run: function(callback) {
		this._done.listen(callback,true);
		var _g = 0;
		var _g1 = this.tasks;
		while(_g < _g1.length) {
			var task = _g1[_g];
			++_g;
			var tmp;
			var f = [$bind(this,this.taskDone)];
			var a1 = [task];
			tmp = (function(a1,f) {
				return function(a2,a3) {
					f[0](a1[0],a2,a3);
				};
			})(a1,f);
			task.task(task.index,tmp);
		}
	}
	,tasks: null
	,results: null
	,_done: null
	,__class__: tannus_ds_AsyncPool
};
var tannus_ds_Stack = function(dat) {
	this.data = dat != null?dat:[];
};
$hxClasses["tannus.ds.Stack"] = tannus_ds_Stack;
tannus_ds_Stack.__name__ = ["tannus","ds","Stack"];
tannus_ds_Stack.prototype = {
	peek: function(d) {
		if(d == null) d = 0;
		return this.data[d];
	}
	,pop: function() {
		return this.data.shift();
	}
	,add: function(item) {
		this.data.unshift(item);
	}
	,under: function(item) {
		this.data.push(item);
	}
	,bottom: function() {
		return this.data.pop();
	}
	,remove: function(v) {
		return HxOverrides.remove(this.data,v);
	}
	,next: function(item) {
		if(item != null) this.add(item); else item = this.pop();
		return item;
	}
	,last: function(item) {
		if(item != null) this.under(item); else item = this.bottom();
		return item;
	}
	,copy: function() {
		return new tannus_ds_Stack(this.data.slice());
	}
	,iterator: function() {
		return new tannus_ds__$Stack_StackIterator(this);
	}
	,getData: function() {
		return this.data;
	}
	,get_empty: function() {
		return this.data.length == 0;
	}
	,data: null
	,__class__: tannus_ds_Stack
	,__properties__: {get_empty:"get_empty"}
};
var tannus_ds_AsyncStack = function() {
	tannus_ds_Stack.call(this);
	this.completion = new tannus_io_VoidSignal();
};
$hxClasses["tannus.ds.AsyncStack"] = tannus_ds_AsyncStack;
tannus_ds_AsyncStack.__name__ = ["tannus","ds","AsyncStack"];
tannus_ds_AsyncStack.__super__ = tannus_ds_Stack;
tannus_ds_AsyncStack.prototype = $extend(tannus_ds_Stack.prototype,{
	callNext: function() {
		if(!this.get_empty()) {
			var action = this.pop();
			action($bind(this,this.callNext));
		} else this.completion.call();
	}
	,run: function(done) {
		if(this.get_empty()) done(); else {
			this.completion.once(done);
			this.callNext();
		}
	}
	,push: function(f) {
		this.under(f);
	}
	,completion: null
	,__class__: tannus_ds_AsyncStack
});
var tannus_ds_Comparable = function() { };
$hxClasses["tannus.ds.Comparable"] = tannus_ds_Comparable;
tannus_ds_Comparable.__name__ = ["tannus","ds","Comparable"];
tannus_ds_Comparable.prototype = {
	equals: null
	,__class__: tannus_ds_Comparable
};
var tannus_ds__$DataView_DataView_$Impl_$ = {};
$hxClasses["tannus.ds._DataView.DataView_Impl_"] = tannus_ds__$DataView_DataView_$Impl_$;
tannus_ds__$DataView_DataView_$Impl_$.__name__ = ["tannus","ds","_DataView","DataView_Impl_"];
tannus_ds__$DataView_DataView_$Impl_$._new = function(size,value) {
	return new tannus_ds_data_Data(size,value);
};
tannus_ds__$DataView_DataView_$Impl_$.get = function(this1,index) {
	return this1.get(index);
};
tannus_ds__$DataView_DataView_$Impl_$.set = function(this1,i,v) {
	return this1.set(i,v);
};
tannus_ds__$DataView_DataView_$Impl_$.fromVector = function(vector) {
	return new tannus_ds_data_Data(0).reset(vector);
};
tannus_ds__$DataView_DataView_$Impl_$.fromArray = function(array) {
	var tmp;
	var tmp1;
	var tmp2;
	var this1;
	this1 = new Array(array.length);
	tmp2 = this1;
	var vec = tmp2;
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = array[i];
	}
	tmp1 = vec;
	var impl = tmp1;
	tmp = new tannus_ds_data_Data(0).reset(impl);
	return tmp;
};
var tannus_ds__$Delta_Delta_$Impl_$ = {};
$hxClasses["tannus.ds._Delta.Delta_Impl_"] = tannus_ds__$Delta_Delta_$Impl_$;
tannus_ds__$Delta_Delta_$Impl_$.__name__ = ["tannus","ds","_Delta","Delta_Impl_"];
tannus_ds__$Delta_Delta_$Impl_$.__properties__ = {get_previous:"get_previous",get_current:"get_current"}
tannus_ds__$Delta_Delta_$Impl_$._new = function(cur,prev) {
	return [cur,prev];
};
tannus_ds__$Delta_Delta_$Impl_$.toString = function(this1) {
	var res = "Delta(";
	if(this1[1] != null) res += "from " + Std.string(this1[1]) + " ";
	res += "to " + Std.string(this1[0]) + ")";
	return res;
};
tannus_ds__$Delta_Delta_$Impl_$.toPair = function(this1) {
	return [this1[1],this1[0]];
};
tannus_ds__$Delta_Delta_$Impl_$.get_current = function(this1) {
	return this1[0];
};
tannus_ds__$Delta_Delta_$Impl_$.get_previous = function(this1) {
	return this1[1];
};
var tannus_ds__$Dict_Dict_$Impl_$ = {};
$hxClasses["tannus.ds._Dict.Dict_Impl_"] = tannus_ds__$Dict_Dict_$Impl_$;
tannus_ds__$Dict_Dict_$Impl_$.__name__ = ["tannus","ds","_Dict","Dict_Impl_"];
tannus_ds__$Dict_Dict_$Impl_$.get = function(this1,key) {
	return this1.get(key);
};
tannus_ds__$Dict_Dict_$Impl_$.set = function(this1,key,value) {
	return this1.set(key,value);
};
tannus_ds__$Dict_Dict_$Impl_$.toStringDict = function(v) {
	return new tannus_ds_dict_StringDict();
};
tannus_ds__$Dict_Dict_$Impl_$.toIntDict = function(v) {
	return new tannus_ds_dict_IntDict();
};
tannus_ds__$Dict_Dict_$Impl_$.toEnumValueDict = function(v) {
	return new tannus_ds_dict_EnumValueDict();
};
tannus_ds__$Dict_Dict_$Impl_$.toComparableDict = function(v) {
	return new tannus_ds_dict_ComparableDict();
};
var tannus_ds__$EitherType_EitherType_$Impl_$ = {};
$hxClasses["tannus.ds._EitherType.EitherType_Impl_"] = tannus_ds__$EitherType_EitherType_$Impl_$;
tannus_ds__$EitherType_EitherType_$Impl_$.__name__ = ["tannus","ds","_EitherType","EitherType_Impl_"];
tannus_ds__$EitherType_EitherType_$Impl_$.__properties__ = {get_type:"get_type"}
tannus_ds__$EitherType_EitherType_$Impl_$._new = function(e) {
	return e;
};
tannus_ds__$EitherType_EitherType_$Impl_$.get_type = function(this1) {
	return this1;
};
tannus_ds__$EitherType_EitherType_$Impl_$.toLeft = function(this1) {
	{
		var _g = this1;
		switch(_g[1]) {
		case 0:
			return _g[2];
		case 1:
			throw new js__$Boot_HaxeError("EitherTypeError: " + Std.string(_g[2]) + " was not the expected value!");
			break;
		}
	}
};
tannus_ds__$EitherType_EitherType_$Impl_$.toRight = function(this1) {
	{
		var _g = this1;
		switch(_g[1]) {
		case 1:
			return _g[2];
		case 0:
			throw new js__$Boot_HaxeError("EitherTypeError: " + Std.string(_g[2]) + " was not the expected value!");
			break;
		}
	}
};
tannus_ds__$EitherType_EitherType_$Impl_$.fromL = function(v) {
	var tmp;
	var e = tannus_ds_Either.Left(v);
	tmp = e;
	return tmp;
};
tannus_ds__$EitherType_EitherType_$Impl_$.fromR = function(v) {
	var tmp;
	var e = tannus_ds_Either.Right(v);
	tmp = e;
	return tmp;
};
var tannus_ds_Either = $hxClasses["tannus.ds.Either"] = { __ename__ : ["tannus","ds","Either"], __constructs__ : ["Left","Right"] };
tannus_ds_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = tannus_ds_Either; $x.toString = $estr; return $x; };
tannus_ds_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = tannus_ds_Either; $x.toString = $estr; return $x; };
var tannus_ds_Range = function(mi,ma) {
	this.min = mi;
	this.max = ma;
};
$hxClasses["tannus.ds.Range"] = tannus_ds_Range;
tannus_ds_Range.__name__ = ["tannus","ds","Range"];
tannus_ds_Range.prototype = {
	contains: function(v) {
		return v > this.min && v < this.max;
	}
	,clamp: function(v) {
		return v < this.min?this.min:v > this.max?this.max:v;
	}
	,toString: function() {
		return "Range(" + Std.string(this.min) + " => " + Std.string(this.max) + ")";
	}
	,get_size: function() {
		return this.max - this.min;
	}
	,min: null
	,max: null
	,__class__: tannus_ds_Range
	,__properties__: {get_size:"get_size"}
};
var tannus_ds_FloatRange = function(mi,ma) {
	tannus_ds_Range.call(this,mi,ma);
};
$hxClasses["tannus.ds.FloatRange"] = tannus_ds_FloatRange;
tannus_ds_FloatRange.__name__ = ["tannus","ds","FloatRange"];
tannus_ds_FloatRange.__super__ = tannus_ds_Range;
tannus_ds_FloatRange.prototype = $extend(tannus_ds_Range.prototype,{
	__class__: tannus_ds_FloatRange
});
var tannus_ds_FunctionTools = function() { };
$hxClasses["tannus.ds.FunctionTools"] = tannus_ds_FunctionTools;
tannus_ds_FunctionTools.__name__ = ["tannus","ds","FunctionTools"];
tannus_ds_FunctionTools.memoize = function(f,str) {
	if(str == null) str = Std.string;
	var cache = new haxe_ds_StringMap();
	return Reflect.makeVarArgs(function(args) {
		var key = str(args);
		if(__map_reserved[key] != null?cache.existsReserved(key):cache.h.hasOwnProperty(key)) return __map_reserved[key] != null?cache.getReserved(key):cache.h[key]; else {
			var result = f.apply(null,args);
			var value = result;
			var value1 = value;
			if(__map_reserved[key] != null) cache.setReserved(key,value1); else cache.h[key] = value1;
			return result;
		}
	});
};
var tannus_ds_Grid = function(w,h) {
	this.w = w;
	this.h = h;
	var tmp;
	var this1;
	this1 = new Array(w * h);
	tmp = this1;
	this.data = tmp;
};
$hxClasses["tannus.ds.Grid"] = tannus_ds_Grid;
tannus_ds_Grid.__name__ = ["tannus","ds","Grid"];
tannus_ds_Grid.fromArray = function(dat,w,h) {
	var grid = new tannus_ds_Grid(w,h);
	var tmp;
	var tmp1;
	var this1;
	this1 = new Array(dat.length);
	tmp1 = this1;
	var vec = tmp1;
	var _g1 = 0;
	var _g = dat.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = dat[i];
	}
	tmp = vec;
	grid.data = tmp;
	return grid;
};
tannus_ds_Grid.fromArray2 = function(dat) {
	var h = dat.length;
	if(h > 0) {
		var w = dat[0].length;
		if(w <= 0) throw new js__$Boot_HaxeError("GridError: Grid width must be >= 0");
		return tannus_ds_Grid.fromArray(tannus_ds_ArrayTools.flatten(dat),w,h);
	} else throw new js__$Boot_HaxeError("GridError: Grid height must be >= 0");
};
tannus_ds_Grid.prototype = {
	set: function(x,y,value) {
		if(!(x >= this.w || x < 0 || (y >= this.h || y < 0))) return this.data[x + y * this.w] = value; else return value;
	}
	,get: function(x,y) {
		if(x >= this.w || x < 0 || (y >= this.h || y < 0)) return null;
		return this.data[x + y * this.w];
	}
	,at: function(pos) {
		var _g = this;
		var tmp;
		var f = $bind(this,this.get);
		var x = pos._x;
		var y = pos._y;
		tmp = function() {
			return f(x,y);
		};
		var tmp1;
		var f1 = $bind(this,this.set);
		var x1 = pos._x;
		var y1 = pos._y;
		tmp1 = function(a1) {
			return f1(x1,y1,a1);
		};
		var ref = new tannus_io__$Pointer_Ref(tmp,tmp1);
		ref.deleter = function() {
			_g.remove(pos._x,pos._y);
		};
		return ref;
	}
	,pos: function(x,y) {
		return new tannus_ds_GridPos(x,y);
	}
	,posOf: function(value) {
		var _g1 = 0;
		var _g = this.data.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.data[i] == value) return this.pos(i % this.w,i / this.w | 0);
		}
		return null;
	}
	,valueAt: function(pos) {
		return this.get(pos._x,pos._y);
	}
	,remove: function(x,y) {
		var v = this.get(x,y);
		this.data[x + y * this.w] = null;
		return v != null;
	}
	,iterator: function() {
		return new tannus_ds__$Grid_GridValueIterator(this);
	}
	,positions: function() {
		return new tannus_ds__$Grid_GridPosIterator(this);
	}
	,index: function(x,y) {
		return x + y * this.w;
	}
	,position: function(index) {
		return new tannus_ds_GridPos(index % this.w,index / this.w | 0);
	}
	,get_length: function() {
		return this.data.length;
	}
	,w: null
	,h: null
	,data: null
	,__class__: tannus_ds_Grid
	,__properties__: {get_length:"get_length"}
};
var tannus_ds__$Grid_GridValueIterator = function(g) {
	this.grid = g;
	this.it = this.grid.positions();
};
$hxClasses["tannus.ds._Grid.GridValueIterator"] = tannus_ds__$Grid_GridValueIterator;
tannus_ds__$Grid_GridValueIterator.__name__ = ["tannus","ds","_Grid","GridValueIterator"];
tannus_ds__$Grid_GridValueIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var p = this.it.next();
		return this.grid.get(p._x,p._y);
	}
	,grid: null
	,it: null
	,__class__: tannus_ds__$Grid_GridValueIterator
};
var tannus_ds__$Grid_GridPosIterator = function(g) {
	this.grid = g;
	this.it = new IntIterator(0,g.data.length);
};
$hxClasses["tannus.ds._Grid.GridPosIterator"] = tannus_ds__$Grid_GridPosIterator;
tannus_ds__$Grid_GridPosIterator.__name__ = ["tannus","ds","_Grid","GridPosIterator"];
tannus_ds__$Grid_GridPosIterator.prototype = {
	hasNext: function() {
		var tmp;
		var _this = this.it;
		tmp = _this.min < _this.max;
		return tmp;
	}
	,next: function() {
		var tmp;
		var _this = this.grid;
		var index = this.it.min++;
		tmp = new tannus_ds_GridPos(index % _this.w,index / _this.w | 0);
		return tmp;
	}
	,grid: null
	,it: null
	,__class__: tannus_ds__$Grid_GridPosIterator
};
var tannus_ds_GridPos = function(x,y) {
	this._x = x;
	this._y = y;
};
$hxClasses["tannus.ds.GridPos"] = tannus_ds_GridPos;
tannus_ds_GridPos.__name__ = ["tannus","ds","GridPos"];
tannus_ds_GridPos.prototype = {
	left: function() {
		return new tannus_ds_GridPos(this._x - 1,this._y);
	}
	,right: function() {
		return new tannus_ds_GridPos(this._x + 1,this._y);
	}
	,top: function() {
		return new tannus_ds_GridPos(this._x,this._y - 1);
	}
	,bottom: function() {
		return new tannus_ds_GridPos(this._x,this._y + 1);
	}
	,toString: function() {
		return "(" + this._x + ", " + this._y + ")";
	}
	,_x: null
	,get_x: function() {
		return this._x;
	}
	,_y: null
	,get_y: function() {
		return this._y;
	}
	,__class__: tannus_ds_GridPos
	,__properties__: {get_y:"get_y",get_x:"get_x"}
};
var tannus_ds_IntRange = function(mi,ma) {
	tannus_ds_Range.call(this,mi,ma);
};
$hxClasses["tannus.ds.IntRange"] = tannus_ds_IntRange;
tannus_ds_IntRange.__name__ = ["tannus","ds","IntRange"];
tannus_ds_IntRange.__super__ = tannus_ds_Range;
tannus_ds_IntRange.prototype = $extend(tannus_ds_Range.prototype,{
	iterator: function() {
		return new IntIterator(this.min,this.max);
	}
	,__class__: tannus_ds_IntRange
});
var tannus_ds_MapTools = function() { };
$hxClasses["tannus.ds.MapTools"] = tannus_ds_MapTools;
tannus_ds_MapTools.__name__ = ["tannus","ds","MapTools"];
tannus_ds_MapTools.keyArray = function(self) {
	var tmp;
	var _g = [];
	var $it0 = self.keys();
	while( $it0.hasNext() ) {
		var k = $it0.next();
		_g.push(k);
	}
	tmp = _g;
	return tmp;
};
tannus_ds_MapTools.pull = function(o,source) {
	var $it0 = source.keys();
	while( $it0.hasNext() ) {
		var key = $it0.next();
		var v = source.get(key);
		o.set(key,v);
	}
};
tannus_ds_MapTools.toObject = function(self) {
	var o = { };
	var $it0 = self.keys();
	while( $it0.hasNext() ) {
		var key = $it0.next();
		var value = __map_reserved[key] != null?self.getReserved(key):self.h[key];
		var tmp1;
		if(o.__properties__ && (tmp1 = o.__properties__["set_" + key])) o[tmp1](value); else o[key] = value;
		var tmp;
		var tmp2;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + key])) tmp = o[tmp2](); else tmp = o[key];
		tmp;
	}
	return o;
};
var tannus_ds__$Maybe_Maybe_$Impl_$ = {};
$hxClasses["tannus.ds._Maybe.Maybe_Impl_"] = tannus_ds__$Maybe_Maybe_$Impl_$;
tannus_ds__$Maybe_Maybe_$Impl_$.__name__ = ["tannus","ds","_Maybe","Maybe_Impl_"];
tannus_ds__$Maybe_Maybe_$Impl_$.__properties__ = {get_value:"get_value",get_exists:"get_exists"}
tannus_ds__$Maybe_Maybe_$Impl_$._new = function(x) {
	return x;
};
tannus_ds__$Maybe_Maybe_$Impl_$.or = function(this1,alt) {
	return this1 != null?this1:alt;
};
tannus_ds__$Maybe_Maybe_$Impl_$.orGetter = function(this1,gettr) {
	return this1 != null?this1:gettr();
};
tannus_ds__$Maybe_Maybe_$Impl_$.runIf = function(this1,f) {
	return this1 != null?f(this1 != null?this1:this1):null;
};
tannus_ds__$Maybe_Maybe_$Impl_$.get_exists = function(this1) {
	return this1 != null;
};
tannus_ds__$Maybe_Maybe_$Impl_$.get_value = function(this1) {
	return this1 != null?this1:this1;
};
tannus_ds__$Maybe_Maybe_$Impl_$.orDie = function(this1,error) {
	if(!(this1 != null)) throw new js__$Boot_HaxeError(error);
	return this1 != null?this1:this1;
};
tannus_ds__$Maybe_Maybe_$Impl_$.toNonNullable = function(this1) {
	if(this1 != null) return this1; else return this1;
};
tannus_ds__$Maybe_Maybe_$Impl_$.toBoolean = function(this1) {
	return this1 != null;
};
var tannus_ds_Memory = function() { };
$hxClasses["tannus.ds.Memory"] = tannus_ds_Memory;
tannus_ds_Memory.__name__ = ["tannus","ds","Memory"];
tannus_ds_Memory.uniqueIdInt = function() {
	var id = tannus_ds_Memory.state;
	tannus_ds_Memory.state++;
	return id;
};
tannus_ds_Memory.uniqueIdString = function(prefix) {
	if(prefix == null) prefix = "";
	return prefix + tannus_ds_Memory.uniqueIdInt();
};
tannus_ds_Memory.allocRandomId = function(digits) {
	var id = "";
	var r = new tannus_math_Random();
	var _g = 0;
	while(_g < digits) {
		_g++;
		var range = [0,0];
		var letter = r.randbool();
		if(letter) {
			var upper = r.randbool();
			range = upper?[65,90]:[97,122];
		} else range = [48,57];
		var tmp;
		var n = r.randint(range[0],range[1]);
		var this1;
		if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
		this1 = n;
		tmp = this1;
		var c = tmp;
		id += String.fromCharCode(c);
	}
	if(Lambda.has(tannus_ds_Memory.used,id)) return tannus_ds_Memory.allocRandomId(digits); else {
		tannus_ds_Memory.used.push(id);
		return id;
	}
};
tannus_ds_Memory.freeRandomId = function(id) {
	return HxOverrides.remove(tannus_ds_Memory.used,id);
};
var tannus_ds__$Method_Method_$Impl_$ = {};
$hxClasses["tannus.ds._Method.Method_Impl_"] = tannus_ds__$Method_Method_$Impl_$;
tannus_ds__$Method_Method_$Impl_$.__name__ = ["tannus","ds","_Method","Method_Impl_"];
tannus_ds__$Method_Method_$Impl_$.__properties__ = {get_call:"get_call"}
tannus_ds__$Method_Method_$Impl_$._new = function(func,ctx) {
	var this1;
	var tmp;
	var o = ctx;
	var a1 = func;
	tmp = function(a2) {
		return Reflect.callMethod(o,a1,a2);
	};
	this1 = tmp;
	return this1;
};
tannus_ds__$Method_Method_$Impl_$.get_call = function(this1) {
	return Reflect.makeVarArgs(this1);
};
tannus_ds__$Method_Method_$Impl_$.fromFunction = function(f) {
	var tmp;
	var this1;
	var tmp1;
	var a1 = f;
	tmp1 = function(a2) {
		return Reflect.callMethod(null,a1,a2);
	};
	this1 = tmp1;
	tmp = this1;
	return tmp;
};
var tannus_ds__$Obj_Obj_$Impl_$ = {};
$hxClasses["tannus.ds._Obj.Obj_Impl_"] = tannus_ds__$Obj_Obj_$Impl_$;
tannus_ds__$Obj_Obj_$Impl_$.__name__ = ["tannus","ds","_Obj","Obj_Impl_"];
tannus_ds__$Obj_Obj_$Impl_$._new = function(o) {
	var this1;
	this1 = tannus_ds_CObj.create(o);
	return this1;
};
tannus_ds__$Obj_Obj_$Impl_$.toDyn = function(this1) {
	return this1.o;
};
tannus_ds__$Obj_Obj_$Impl_$.get = function(this1,key) {
	var tmp;
	var o = this1.o;
	var tmp1;
	if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + key])) tmp = o[tmp1](); else tmp = o[key];
	return tmp;
};
tannus_ds__$Obj_Obj_$Impl_$.mget = function(this1,key) {
	var tmp;
	var o = this1.o;
	var tmp1;
	if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + key])) tmp = o[tmp1](); else tmp = o[key];
	return tmp;
};
tannus_ds__$Obj_Obj_$Impl_$.set = function(this1,key,val) {
	return this1.set(key,val);
};
tannus_ds__$Obj_Obj_$Impl_$.fromDynamic = function(d) {
	return tannus_ds_CObj.create(d);
};
var tannus_ds_CObj = $hx_exports.tannus.ds.Obj = function(obj) {
	this.o = obj;
	this.refCache = new haxe_ds_StringMap();
};
$hxClasses["tannus.ds.CObj"] = tannus_ds_CObj;
tannus_ds_CObj.__name__ = ["tannus","ds","CObj"];
tannus_ds_CObj.create = function(o) {
	if(js_Boot.__instanceof(o,tannus_ds_CObj)) return o; else return new tannus_ds_CObj(o);
};
tannus_ds_CObj.prototype = {
	keys: function() {
		return Reflect.fields(this.o);
	}
	,exists: function(key) {
		return Object.prototype.hasOwnProperty.call(this.o,key);
	}
	,get: function(key) {
		return (function($this) {
			var $r;
			var o = $this.o;
			var tmp;
			$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + key])?o[tmp]():o[key];
			return $r;
		}(this));
	}
	,set: function(key,val) {
		var o = this.o;
		var tmp1;
		if(o.__properties__ && (tmp1 = o.__properties__["set_" + key])) o[tmp1](val); else o[key] = val;
		var tmp;
		var o1 = this.o;
		var tmp2;
		if(o1 == null) tmp = null; else if(o1.__properties__ && (tmp2 = o1.__properties__["get_" + key])) tmp = o1[tmp2](); else tmp = o1[key];
		return tmp;
	}
	,method: function(name) {
		return Reflect.makeVarArgs((function($this) {
			var $r;
			var f = (function($this) {
				var $r;
				var _e = $this.o;
				$r = function(func,args) {
					return func.apply(_e,args);
				};
				return $r;
			}($this));
			var a1 = (function($this) {
				var $r;
				var o = $this.o;
				var tmp;
				$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + name])?o[tmp]():o[name];
				return $r;
			}($this));
			$r = function(a2) {
				return f(a1,a2);
			};
			return $r;
		}(this)));
	}
	,call: function(name,args) {
		var tmp;
		var tmp1;
		var o = this.o;
		var tmp2;
		if(o == null) tmp1 = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + name])) tmp1 = o[tmp2](); else tmp1 = o[name];
		var func = tmp1;
		tmp = func.apply(this.o,args);
		return tmp;
	}
	,field: function(key) {
		var _g = this;
		if((function($this) {
			var $r;
			var _this = $this.refCache;
			$r = __map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key);
			return $r;
		}(this))) return (function($this) {
			var $r;
			var _this1 = $this.refCache;
			$r = __map_reserved[key] != null?_this1.getReserved(key):_this1.h[key];
			return $r;
		}(this)); else {
			var ref = new tannus_io__$Pointer_Ref((function($this) {
				var $r;
				var f = $bind($this,$this.get);
				var a1 = key;
				$r = function() {
					return f(a1);
				};
				return $r;
			}(this)),(function($this) {
				var $r;
				var f1 = $bind($this,$this.set);
				var a11 = key;
				$r = function(a2) {
					return f1(a11,a2);
				};
				return $r;
			}(this)));
			var _this2 = this.refCache;
			if(__map_reserved[key] != null) _this2.setReserved(key,ref); else _this2.h[key] = ref;
			return ref;
		}
	}
	,remove: function(key) {
		return Reflect.deleteField(this.o,key);
	}
	,pluck: function(keys) {
		var o = { };
		var copy = tannus_ds_CObj.create(o);
		var _g = 0;
		var _g1 = this.keys();
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			if(Lambda.has(keys,k)) {
				var tmp;
				var o1 = this.o;
				var tmp1;
				if(o1 == null) tmp = null; else if(o1.__properties__ && (tmp1 = o1.__properties__["get_" + k])) tmp = o1[tmp1](); else tmp = o1[k];
				var val = tmp;
				copy.set(k,val);
			}
		}
		return copy;
	}
	,rawclone: function() {
		var o = { };
		var copy = tannus_ds_CObj.create(o);
		var _g = 0;
		var _g1 = this.keys();
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			var tmp;
			var o1 = this.o;
			var tmp1;
			if(o1 == null) tmp = null; else if(o1.__properties__ && (tmp1 = o1.__properties__["get_" + k])) tmp = o1[tmp1](); else tmp = o1[k];
			var val = tmp;
			copy.set(k,val);
		}
		return copy;
	}
	,clone: function() {
		var tmp;
		var o = this.o;
		if(o == null) tmp = null; else tmp = js_Boot.getClass(o);
		var klass = tmp;
		if(klass != null) {
			var copi = Type.createEmptyInstance(klass);
			var ocopy = tannus_ds_CObj.create(copi);
			var _g = 0;
			var _g1 = this.keys();
			while(_g < _g1.length) {
				var k = _g1[_g];
				++_g;
				var tmp1;
				var o1 = this.o;
				var tmp2;
				if(o1 == null) tmp1 = null; else if(o1.__properties__ && (tmp2 = o1.__properties__["get_" + k])) tmp1 = o1[tmp2](); else tmp1 = o1[k];
				var val = tmp1;
				ocopy.set(k,val);
			}
			return ocopy;
		} else return Reflect.copy(this.o);
	}
	,defineGetter: function(key,getter) {
		{
			var func = (function($this) {
				var $r;
				var o = $this.o;
				var tmp;
				$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + "__defineGetter__"])?o[tmp]():o.__defineGetter__;
				return $r;
			}(this));
			func.apply(this.o,[key,getter]);
		}
	}
	,defineSetter: function(key,setter) {
		{
			var func = (function($this) {
				var $r;
				var o = $this.o;
				var tmp;
				$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + "__defineSetter__"])?o[tmp]():o.__defineSetter__;
				return $r;
			}(this));
			func.apply(this.o,[key,setter]);
		}
	}
	,defineProperty: function(name,pointer) {
		var tmp;
		var tmp2;
		var o = this.o;
		var tmp3;
		if(o == null) tmp2 = null; else if(o.__properties__ && (tmp3 = o.__properties__["get_" + "__defineGetter__"])) tmp2 = o[tmp3](); else tmp2 = o.__defineGetter__;
		var func = tmp2;
		tmp = func.apply(this.o,[name,pointer.getter]);
		tmp;
		var tmp1;
		var tmp4;
		var o1 = this.o;
		var tmp5;
		if(o1 == null) tmp4 = null; else if(o1.__properties__ && (tmp5 = o1.__properties__["get_" + "__defineSetter__"])) tmp4 = o1[tmp5](); else tmp4 = o1.__defineSetter__;
		var func1 = tmp4;
		tmp1 = func1.apply(this.o,[name,pointer.setter]);
		tmp1;
	}
	,o: null
	,refCache: null
	,__class__: tannus_ds_CObj
};
var tannus_ds__$Object_Object_$Impl_$ = {};
$hxClasses["tannus.ds._Object.Object_Impl_"] = tannus_ds__$Object_Object_$Impl_$;
tannus_ds__$Object_Object_$Impl_$.__name__ = ["tannus","ds","_Object","Object_Impl_"];
tannus_ds__$Object_Object_$Impl_$.__properties__ = {get_keys:"get_keys"}
tannus_ds__$Object_Object_$Impl_$._new = function(o) {
	return o;
};
tannus_ds__$Object_Object_$Impl_$.get_keys = function(this1) {
	return Reflect.fields(this1);
};
tannus_ds__$Object_Object_$Impl_$.get = function(this1,key) {
	var tmp;
	var tmp1;
	if(this1 == null) tmp = null; else if(this1.__properties__ && (tmp1 = this1.__properties__["get_" + key])) tmp = this1[tmp1](); else tmp = this1[key];
	return tmp;
};
tannus_ds__$Object_Object_$Impl_$.rawget = function(this1,key) {
	return (function($this) {
		var $r;
		var tmp;
		$r = this1 == null?null:this1.__properties__ && (tmp = this1.__properties__["get_" + key])?this1[tmp]():this1[key];
		return $r;
	}(this));
};
tannus_ds__$Object_Object_$Impl_$.set = function(this1,key,value) {
	var tmp1;
	if(this1.__properties__ && (tmp1 = this1.__properties__["set_" + key])) this1[tmp1](value); else this1[key] = value;
	var tmp;
	var tmp2;
	if(this1 == null) tmp = null; else if(this1.__properties__ && (tmp2 = this1.__properties__["get_" + key])) tmp = this1[tmp2](); else tmp = this1[key];
	return tmp;
};
tannus_ds__$Object_Object_$Impl_$.exists = function(this1,key) {
	return Object.prototype.hasOwnProperty.call(this1,key);
};
tannus_ds__$Object_Object_$Impl_$.remove = function(this1,key) {
	Reflect.deleteField(this1,key);
};
tannus_ds__$Object_Object_$Impl_$.clone = function(this1) {
	var c = { };
	var _g = 0;
	var _g1 = Reflect.fields(this1);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		var tmp;
		var tmp2;
		if(this1 == null) tmp = null; else if(this1.__properties__ && (tmp2 = this1.__properties__["get_" + k])) tmp = this1[tmp2](); else tmp = this1[k];
		var value = tmp;
		var tmp3;
		if(c.__properties__ && (tmp3 = c.__properties__["set_" + k])) c[tmp3](value); else c[k] = value;
		var tmp1;
		var tmp4;
		if(c == null) tmp1 = null; else if(c.__properties__ && (tmp4 = c.__properties__["get_" + k])) tmp1 = c[tmp4](); else tmp1 = c[k];
		tmp1;
	}
	return c;
};
tannus_ds__$Object_Object_$Impl_$.pairs = function(this1) {
	return Reflect.fields(this1).map(function(k) {
		var tmp;
		var tmp1;
		if(this1 == null) tmp = null; else if(this1.__properties__ && (tmp1 = this1.__properties__["get_" + k])) tmp = this1[tmp1](); else tmp = this1[k];
		return { 'name' : k, 'value' : tmp};
	});
};
tannus_ds__$Object_Object_$Impl_$.iterator = function(this1) {
	var tmp;
	var tmp1;
	var this2 = this1;
	tmp1 = Reflect.fields(this2).map(function(k) {
		var tmp2;
		var tmp3;
		if(this2 == null) tmp2 = null; else if(this2.__properties__ && (tmp3 = this2.__properties__["get_" + k])) tmp2 = this2[tmp3](); else tmp2 = this2[k];
		return { 'name' : k, 'value' : tmp2};
	});
	var _this = tmp1;
	tmp = HxOverrides.iter(_this);
	return tmp;
};
tannus_ds__$Object_Object_$Impl_$.increment = function(this1,other) {
	var _g = 0;
	var _g1 = Reflect.fields(other);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		if(!Object.prototype.hasOwnProperty.call(this1,key)) {
			var tmp;
			var tmp2;
			if(other == null) tmp = null; else if(other.__properties__ && (tmp2 = other.__properties__["get_" + key])) tmp = other[tmp2](); else tmp = other[key];
			var value = tmp;
			var tmp3;
			if(this1.__properties__ && (tmp3 = this1.__properties__["set_" + key])) this1[tmp3](value); else this1[key] = value;
			var tmp1;
			var tmp4;
			if(this1 == null) tmp1 = null; else if(this1.__properties__ && (tmp4 = this1.__properties__["get_" + key])) tmp1 = this1[tmp4](); else tmp1 = this1[key];
			tmp1;
		}
	}
	return this1;
};
tannus_ds__$Object_Object_$Impl_$.plus = function(this1,other) {
	var res = tannus_ds__$Object_Object_$Impl_$.clone(this1);
	var _g = 0;
	var _g1 = Reflect.fields(other);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		if(!Object.prototype.hasOwnProperty.call(res,k)) {
			var tmp;
			var tmp2;
			if(other == null) tmp = null; else if(other.__properties__ && (tmp2 = other.__properties__["get_" + k])) tmp = other[tmp2](); else tmp = other[k];
			var value = tmp;
			var tmp3;
			if(res.__properties__ && (tmp3 = res.__properties__["set_" + k])) res[tmp3](value); else res[k] = value;
			var tmp1;
			var tmp4;
			if(res == null) tmp1 = null; else if(res.__properties__ && (tmp4 = res.__properties__["get_" + k])) tmp1 = res[tmp4](); else tmp1 = res[k];
			tmp1;
		}
	}
	return res;
};
tannus_ds__$Object_Object_$Impl_$.write = function(this1,o) {
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		var tmp;
		var tmp2;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + k])) tmp = o[tmp2](); else tmp = o[k];
		var value = tmp;
		var tmp3;
		if(this1.__properties__ && (tmp3 = this1.__properties__["set_" + k])) this1[tmp3](value); else this1[k] = value;
		var tmp1;
		var tmp4;
		if(this1 == null) tmp1 = null; else if(this1.__properties__ && (tmp4 = this1.__properties__["get_" + k])) tmp1 = this1[tmp4](); else tmp1 = this1[k];
		tmp1;
	}
};
tannus_ds__$Object_Object_$Impl_$.method = function(this1,mname) {
	var tmp;
	var tmp1;
	var tmp3;
	var tmp4;
	if(this1 == null) tmp3 = null; else if(this1.__properties__ && (tmp4 = this1.__properties__["get_" + mname])) tmp3 = this1[tmp4](); else tmp3 = this1[mname];
	var this3 = tmp3;
	if(this3 != null) tmp1 = this3; else tmp1 = this3;
	var func = tmp1;
	var this2;
	var tmp2;
	var o = this1;
	var a1 = func;
	tmp2 = function(a2) {
		return Reflect.callMethod(o,a1,a2);
	};
	this2 = tmp2;
	tmp = this2;
	return tmp;
};
tannus_ds__$Object_Object_$Impl_$.plucka = function(this1,keys) {
	return tannus_ds__$Object_Object_$Impl_$._plk(this1,keys);
};
tannus_ds__$Object_Object_$Impl_$._plk = function(this1,keys,mtarget) {
	var target = mtarget != null?mtarget:{ };
	var _g = 0;
	while(_g < keys.length) {
		var k = keys[_g];
		++_g;
		var tmp;
		var tmp2;
		if(this1 == null) tmp = null; else if(this1.__properties__ && (tmp2 = this1.__properties__["get_" + k])) tmp = this1[tmp2](); else tmp = this1[k];
		var value = tmp;
		var tmp3;
		if(target.__properties__ && (tmp3 = target.__properties__["set_" + k])) target[tmp3](value); else target[k] = value;
		var tmp1;
		var tmp4;
		if(target == null) tmp1 = null; else if(target.__properties__ && (tmp4 = target.__properties__["get_" + k])) tmp1 = target[tmp4](); else tmp1 = target[k];
		tmp1;
	}
	return target;
};
tannus_ds__$Object_Object_$Impl_$["is"] = function(this1,oreg) {
	var sel = new tannus_nore_CSelector(oreg);
	return sel.test(this1);
};
tannus_ds__$Object_Object_$Impl_$.toMap = function(this1) {
	var m = new haxe_ds_StringMap();
	var tmp;
	var tmp1;
	var this2 = this1;
	tmp1 = Reflect.fields(this2).map(function(k) {
		var tmp2;
		var tmp3;
		if(this2 == null) tmp2 = null; else if(this2.__properties__ && (tmp3 = this2.__properties__["get_" + k])) tmp2 = this2[tmp3](); else tmp2 = this2[k];
		return { 'name' : k, 'value' : tmp2};
	});
	var _this = tmp1;
	tmp = HxOverrides.iter(_this);
	while( tmp.hasNext() ) {
		var p = tmp.next();
		var value = p.value;
		var key = p.name;
		var value1 = value;
		if(__map_reserved[key] != null) m.setReserved(key,value1); else m.h[key] = value1;
	}
	return m;
};
tannus_ds__$Object_Object_$Impl_$.fromMap = function(map) {
	var o = { };
	var $it0 = map.keys();
	while( $it0.hasNext() ) {
		var key = $it0.next();
		var value = __map_reserved[key] != null?map.getReserved(key):map.h[key];
		var tmp1;
		if(o.__properties__ && (tmp1 = o.__properties__["set_" + key])) o[tmp1](value); else o[key] = value;
		var tmp;
		var tmp2;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + key])) tmp = o[tmp2](); else tmp = o[key];
		tmp;
	}
	return o;
};
var tannus_ds__$Pair_Pair_$Impl_$ = {};
$hxClasses["tannus.ds._Pair.Pair_Impl_"] = tannus_ds__$Pair_Pair_$Impl_$;
tannus_ds__$Pair_Pair_$Impl_$.__name__ = ["tannus","ds","_Pair","Pair_Impl_"];
tannus_ds__$Pair_Pair_$Impl_$._new = function(l,r) {
	return new tannus_ds_CPair(l,r);
};
tannus_ds__$Pair_Pair_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_ds__$Pair_Pair_$Impl_$.swap = function(this1) {
	return new tannus_ds_CPair(this1.right,this1.left);
};
tannus_ds__$Pair_Pair_$Impl_$.eq = function(this1,other) {
	return this1.left == other.left && this1.right == other.right;
};
var tannus_ds_CPair = function(l,r) {
	this.left = l;
	this.right = r;
};
$hxClasses["tannus.ds.CPair"] = tannus_ds_CPair;
tannus_ds_CPair.__name__ = ["tannus","ds","CPair"];
tannus_ds_CPair.prototype = {
	equals: function(other) {
		return this.left == other.left && this.right == other.right;
	}
	,toString: function() {
		return "Pair(" + Std.string(this.left) + ", " + Std.string(this.right) + ")";
	}
	,swap: function() {
		return new tannus_ds_CPair(this.right,this.left);
	}
	,left: null
	,right: null
	,__class__: tannus_ds_CPair
};
var tannus_ds_QueryString = function() { };
$hxClasses["tannus.ds.QueryString"] = tannus_ds_QueryString;
tannus_ds_QueryString.__name__ = ["tannus","ds","QueryString"];
tannus_ds_QueryString.stringify = function(data) {
	var pairs = [];
	var _g = 0;
	var _g1 = Reflect.fields(data);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		var tmp;
		var tmp1;
		var tmp2;
		if(data == null) tmp1 = null; else if(data.__properties__ && (tmp2 = data.__properties__["get_" + key])) tmp1 = data[tmp2](); else tmp1 = data[key];
		var this1 = tmp1;
		tmp = this1 != null?this1:this1;
		var val = tmp;
		var t = tannus_internal_TypeTools.typename(val);
		switch(t) {
		case "Number":case "String":case "Boolean":
			pairs.push(key + "=" + tannus_ds_QueryString.enc(val));
			break;
		case "Array":
			var arr = val;
			var _g2 = 0;
			while(_g2 < arr.length) {
				var item = arr[_g2];
				++_g2;
				if(Lambda.has(["Number","String","Boolean"],tannus_internal_TypeTools.typename(item))) null; else throw new js__$Boot_HaxeError("TypeError: Cannot urlify non-primitive values!");
			}
			var _g21 = 0;
			while(_g21 < arr.length) {
				var x = arr[_g21];
				++_g21;
				pairs.push("" + key + "[]=" + tannus_ds_QueryString.enc(x));
			}
			break;
		default:
			var o = val;
			var _g22 = 0;
			var _g3 = Reflect.fields(o);
			while(_g22 < _g3.length) {
				var ok = _g3[_g22];
				++_g22;
				var tmp3;
				var tmp4;
				if(o == null) tmp3 = null; else if(o.__properties__ && (tmp4 = o.__properties__["get_" + ok])) tmp3 = o[tmp4](); else tmp3 = o[ok];
				pairs.push("" + key + "[" + ok + "]=" + tannus_ds_QueryString.enc(tmp3));
			}
		}
	}
	var qs = pairs.join("&");
	return qs;
};
tannus_ds_QueryString.enc = function(value) {
	var s = encodeURIComponent(Std.string(value));
	s = StringTools.replace(s,"%2B","+");
	s = StringTools.replace(s,"%0D","");
	return s;
};
tannus_ds_QueryString.parse = function(qs) {
	var ekey = new EReg("([A-Z]+[A-Z0-9_\\-]*)\\[([A-Z]+[A-Z0-9]*)\\]","i");
	var earr = new EReg("([A-Z]+[A-Z0-9_\\-]*)\\[([0-9]*)\\]","i");
	var res = { };
	var pairs = qs.split("&").map(function(s) {
		return s.split("=");
	});
	var _g = 0;
	while(_g < pairs.length) {
		var p = pairs[_g];
		++_g;
		switch(p.length) {
		case 2:
			var __ex1 = p[1];
			var __ex0 = p[0];
			{
				var _g1 = decodeURIComponent(__ex1.split("+").join(" "));
				var _g2 = decodeURIComponent(__ex0.split("+").join(" "));
				var key = _g2;
				var val = _g1;
				if(ekey.match(key)) {
					var md = tannus_io__$RegEx_RegEx_$Impl_$.matches(ekey,key)[0].slice(1);
					key = md[0];
					var okey = md[1];
					if(!Object.prototype.hasOwnProperty.call(res,key)) {
						var value = { };
						var tmp1;
						if(res.__properties__ && (tmp1 = res.__properties__["set_" + key])) res[tmp1](value); else res[key] = value;
						var tmp;
						var tmp2;
						if(res == null) tmp = null; else if(res.__properties__ && (tmp2 = res.__properties__["get_" + key])) tmp = res[tmp2](); else tmp = res[key];
						tmp;
					}
					var tmp3;
					var tmp5;
					var tmp6;
					if(res == null) tmp5 = null; else if(res.__properties__ && (tmp6 = res.__properties__["get_" + key])) tmp5 = res[tmp6](); else tmp5 = res[key];
					var o = tmp5;
					tmp3 = o;
					var this1 = tmp3;
					var tmp7;
					if(this1.__properties__ && (tmp7 = this1.__properties__["set_" + okey])) this1[tmp7](val); else this1[okey] = val;
					var tmp4;
					var tmp8;
					if(this1 == null) tmp4 = null; else if(this1.__properties__ && (tmp8 = this1.__properties__["get_" + okey])) tmp4 = this1[tmp8](); else tmp4 = this1[okey];
					tmp4;
				} else switch(p.length) {
				case 2:
					var __ex11 = p[1];
					var __ex01 = p[0];
					{
						var _g3 = decodeURIComponent(__ex11.split("+").join(" "));
						var _g4 = decodeURIComponent(__ex01.split("+").join(" "));
						var key1 = _g4;
						var val1 = _g3;
						if(earr.match(key1)) {
							var md1 = tannus_io__$RegEx_RegEx_$Impl_$.matches(earr,key1)[0].slice(1);
							key1 = md1[0];
							var index = Std.parseInt(md1[1]);
							if(!Object.prototype.hasOwnProperty.call(res,key1)) {
								var value1 = [];
								var tmp11;
								if(res.__properties__ && (tmp11 = res.__properties__["set_" + key1])) res[tmp11](value1); else res[key1] = value1;
								var tmp10;
								var tmp12;
								if(res == null) tmp10 = null; else if(res.__properties__ && (tmp12 = res.__properties__["get_" + key1])) tmp10 = res[tmp12](); else tmp10 = res[key1];
								tmp10;
							}
							var tmp9;
							var tmp13;
							var tmp14;
							if(res == null) tmp13 = null; else if(res.__properties__ && (tmp14 = res.__properties__["get_" + key1])) tmp13 = res[tmp14](); else tmp13 = res[key1];
							var this2 = tmp13;
							tmp9 = this2 != null?this2:this2;
							var list = js_Boot.__cast(tmp9 , Array);
							if(index != null) list[index] = val1; else list.push(val1);
						} else switch(p.length) {
						case 2:
							var __ex12 = p[1];
							var __ex02 = p[0];
							{
								var _g5 = decodeURIComponent(__ex12.split("+").join(" "));
								var _g6 = decodeURIComponent(__ex02.split("+").join(" "));
								var key2 = _g6;
								var val2 = _g5;
								var tmp15;
								var tmp17;
								if(res.__properties__ && (tmp17 = res.__properties__["set_" + key2])) res[tmp17](val2); else res[key2] = val2;
								var tmp16;
								var tmp18;
								if(res == null) tmp16 = null; else if(res.__properties__ && (tmp18 = res.__properties__["get_" + key2])) tmp16 = res[tmp18](); else tmp16 = res[key2];
								tmp15 = tmp16;
								tmp15;
							}
							break;
						}
					}
					break;
				}
			}
			break;
		}
	}
	return res;
};
var tannus_ds__$Ref_Ref_$Impl_$ = {};
$hxClasses["tannus.ds._Ref.Ref_Impl_"] = tannus_ds__$Ref_Ref_$Impl_$;
tannus_ds__$Ref_Ref_$Impl_$.__name__ = ["tannus","ds","_Ref","Ref_Impl_"];
tannus_ds__$Ref_Ref_$Impl_$._new = function(r) {
	return new tannus_ds_CRef(r);
};
tannus_ds__$Ref_Ref_$Impl_$.get = function(this1) {
	return this1.get();
};
tannus_ds__$Ref_Ref_$Impl_$.toString = function(this1) {
	return Std.string(this1.get());
};
var tannus_ds_CRef = function(g) {
	this.getter = g;
	this._value = null;
};
$hxClasses["tannus.ds.CRef"] = tannus_ds_CRef;
tannus_ds_CRef.__name__ = ["tannus","ds","CRef"];
tannus_ds_CRef.prototype = {
	get: function() {
		if(this._value == null) return this._value = this.getter(); else return this._value;
	}
	,reset: function() {
		this._value = null;
	}
	,getter: null
	,_value: null
	,__class__: tannus_ds_CRef
};
var tannus_ds__$Stack_StackIterator = function(s) {
	this.stack = s;
};
$hxClasses["tannus.ds._Stack.StackIterator"] = tannus_ds__$Stack_StackIterator;
tannus_ds__$Stack_StackIterator.__name__ = ["tannus","ds","_Stack","StackIterator"];
tannus_ds__$Stack_StackIterator.prototype = {
	hasNext: function() {
		return !this.stack.get_empty();
	}
	,next: function() {
		return this.stack.pop();
	}
	,stack: null
	,__class__: tannus_ds__$Stack_StackIterator
};
var tannus_ds_StringUtils = $hx_exports.StringTools = function() { };
$hxClasses["tannus.ds.StringUtils"] = tannus_ds_StringUtils;
tannus_ds_StringUtils.__name__ = ["tannus","ds","StringUtils"];
tannus_ds_StringUtils.byteAt = function(s,i) {
	if(i <= s.length - 1) {
		var tmp;
		var n = HxOverrides.cca(s,i);
		var this1;
		if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
		this1 = n;
		tmp = this1;
		return tmp;
	} else throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
};
tannus_ds_StringUtils.compare = function(x,y) {
	var tmp;
	var x1 = Math.max(x.length,y.length);
	tmp = x1 | 0;
	var len = tmp;
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		var tmp1;
		if(i < x.length - 1) {
			if(i <= x.length - 1) {
				var n = HxOverrides.cca(x,i);
				var this1;
				if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
				this1 = n;
				tmp1 = this1;
			} else throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (x.length - 1) + ")");
		} else tmp1 = null;
		var xi = tmp1;
		var tmp2;
		if(i < y.length - 1) {
			if(i <= y.length - 1) {
				var n1 = HxOverrides.cca(y,i);
				var this2;
				if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n1)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n1 + ")!");
				this2 = n1;
				tmp2 = this2;
			} else throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (y.length - 1) + ")");
		} else tmp2 = null;
		var yi = tmp2;
		if(xi == null || yi == null) continue; else if(xi > yi) return 1; else if(xi < yi) return -1;
	}
	return 0;
};
tannus_ds_StringUtils.byteMap = function(s,f) {
	var res = "";
	var _g1 = 0;
	var _g = s.length;
	while(_g1 < _g) {
		var i = _g1++;
		var tmp;
		var tmp1;
		if(i <= s.length - 1) {
			var n = HxOverrides.cca(s,i);
			var this2;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			this2 = n;
			tmp1 = this2;
		} else throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
		var this1 = f(tmp1);
		tmp = String.fromCharCode(this1);
		res += tmp;
	}
	return res;
};
tannus_ds_StringUtils.toCamelCase = function(s,sep) {
	if(sep == null) sep = "-";
	var parts = s.split(sep);
	if(parts.length <= 1) return parts.join("");
	var result = "";
	result += parts.shift().toLowerCase();
	var _g = 0;
	while(_g < parts.length) {
		var x = parts[_g];
		++_g;
		result += tannus_ds_StringUtils.capitalize(x);
	}
	return result;
};
tannus_ds_StringUtils.toDashed = function(s) {
	return tannus_ds_StringUtils.camelWords(s).join("-");
};
tannus_ds_StringUtils.camelWords = function(s) {
	var words = [];
	var word = "";
	var _g1 = 0;
	var _g = s.length;
	while(_g1 < _g) {
		var i = _g1++;
		var tmp;
		if(i <= s.length - 1) {
			var n = HxOverrides.cca(s,i);
			var this1;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			this1 = n;
			tmp = this1;
		} else throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
		var c = tmp;
		if(c >= 65 && c <= 90) {
			words.push(word);
			word = String.fromCharCode(c).toLowerCase();
		} else word += String.fromCharCode(c);
	}
	if(!(word.length == 0)) words.push(word);
	return words;
};
tannus_ds_StringUtils.count = function(str,pattern) {
	{
		var _g = pattern;
		switch(_g[1]) {
		case 0:
			var sub = _g[2];
			var pos = 0;
			var n = 0;
			var step = sub.length;
			while(true) {
				pos = str.indexOf(sub,pos);
				if(pos >= 0) {
					++n;
					pos += step;
				} else break;
			}
			return n;
		case 1:
			var e = _g[2];
			return tannus_io__$RegEx_RegEx_$Impl_$.matches(e,str).length;
		}
	}
};
tannus_ds_StringUtils.strip = function(str,pat) {
	{
		var _g = pat;
		switch(_g[1]) {
		case 0:
			return StringTools.replace(str,_g[2],"");
		case 1:
			var res = str;
			var reg = _g[2];
			var bits = tannus_io__$RegEx_RegEx_$Impl_$.matches(reg,str);
			var _g1 = 0;
			while(_g1 < bits.length) {
				var bit = bits[_g1];
				++_g1;
				res = StringTools.replace(res,bit[0],"");
			}
			return res;
		}
	}
};
tannus_ds_StringUtils.remove = function(str,sub) {
	var i = str.indexOf(sub);
	if(i == -1) return str; else if(i == 0) return str.substring(i + sub.length); else return str.substring(0,i) + str.substring(i + 1);
};
tannus_ds_StringUtils.wrap = function(str,wrapper,end) {
	if(end == null) end = wrapper;
	return wrapper + str + end;
};
tannus_ds_StringUtils.capitalize = function(s,fancy) {
	if(fancy == null) fancy = false;
	if(!fancy) return s.substring(0,1).toUpperCase() + s.substring(1).toLowerCase(); else {
		var res = "";
		var lwan = false;
		var _g1 = 0;
		var _g = s.length;
		while(_g1 < _g) {
			var i = _g1++;
			var tmp;
			if(i <= s.length - 1) {
				var n = HxOverrides.cca(s,i);
				var this1;
				if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
				this1 = n;
				tmp = this1;
			} else throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
			var c = tmp;
			var tmp1;
			if(!(c >= 48 && c <= 57)) {
				var tmp2;
				if(c >= 65) tmp2 = c <= 90; else tmp2 = false;
				if(!tmp2) {
					if(c >= 97) tmp1 = c <= 122; else tmp1 = false;
				} else tmp1 = true;
			} else tmp1 = true;
			if(tmp1) {
				if(c >= 65 && c <= 90 || c >= 97 && c <= 122) {
					var l = String.fromCharCode(c);
					res += lwan?l.toLowerCase():l.toUpperCase();
				} else res += String.fromCharCode(c);
				lwan = true;
			} else {
				res += String.fromCharCode(c);
				lwan = false;
			}
		}
		return res;
	}
};
tannus_ds_StringUtils.has = function(str,sub) {
	var i;
	try {
		i = str.indexOf(sub);
	} catch( err ) {
		if (err instanceof js__$Boot_HaxeError) err = err.val;
		i = -1;
	}
	return i != -1;
};
tannus_ds_StringUtils.slice = function(str,pos,len) {
	return len != null?HxOverrides.substr(str,pos,len):str.substring(pos);
};
tannus_ds_StringUtils.before = function(s,del) {
	if(del != "" && tannus_ds_StringUtils.has(s,del)) return s.substring(0,s.indexOf(del)); else return s;
};
tannus_ds_StringUtils.beforeLast = function(s,del) {
	if(del != "" && tannus_ds_StringUtils.has(s,del)) return s.substring(0,s.lastIndexOf(del)); else return s;
};
tannus_ds_StringUtils.after = function(s,del) {
	if(del != "" && tannus_ds_StringUtils.has(s,del)) return s.substring(s.indexOf(del) + del.length); else return s;
};
tannus_ds_StringUtils.afterLast = function(s,del) {
	if(del != "" && tannus_ds_StringUtils.has(s,del)) return s.substring(s.lastIndexOf(del) + del.length); else return "";
};
tannus_ds_StringUtils.separate = function(s,sep,last) {
	if(last == null) last = false;
	var tmp;
	var a = (last?tannus_ds_StringUtils.beforeLast:tannus_ds_StringUtils.before)(s,sep);
	var b = (last?tannus_ds_StringUtils.afterLast:tannus_ds_StringUtils.after)(s,sep);
	tmp = [a,b];
	return tmp;
};
tannus_ds_StringUtils.lastByte = function(s) {
	var tmp;
	var n = HxOverrides.cca(s,s.length - 1);
	var this1;
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	this1 = n;
	tmp = this1;
	return tmp;
};
tannus_ds_StringUtils.empty = function(s) {
	return s.length == 0;
};
tannus_ds_StringUtils.times = function(s,count) {
	if(count == 0) return ""; else {
		var res = s;
		var _g1 = 0;
		var _g = --count;
		while(_g1 < _g) {
			_g1++;
			res += s;
		}
		return res;
	}
};
tannus_ds_StringUtils.isNumeric = function(s) {
	var _g1 = 0;
	var _g = s.length;
	while(_g1 < _g) {
		var i = _g1++;
		var tmp;
		var tmp1;
		if(i <= s.length - 1) {
			var n = HxOverrides.cca(s,i);
			var this2;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			this2 = n;
			tmp1 = this2;
		} else throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + i + " is not within range(0, " + (s.length - 1) + ")");
		var this1 = tmp1;
		if(this1 >= 48) tmp = this1 <= 57; else tmp = false;
		if(!tmp) return false;
	}
	return true;
};
var tannus_ds__$StringUtils_Sep_$Impl_$ = {};
$hxClasses["tannus.ds._StringUtils.Sep_Impl_"] = tannus_ds__$StringUtils_Sep_$Impl_$;
tannus_ds__$StringUtils_Sep_$Impl_$.__name__ = ["tannus","ds","_StringUtils","Sep_Impl_"];
tannus_ds__$StringUtils_Sep_$Impl_$.__properties__ = {get_after:"get_after",get_before:"get_before"}
tannus_ds__$StringUtils_Sep_$Impl_$._new = function(a,b) {
	return [a,b];
};
tannus_ds__$StringUtils_Sep_$Impl_$.get_before = function(this1) {
	return this1[0];
};
tannus_ds__$StringUtils_Sep_$Impl_$.get_after = function(this1) {
	return this1[1];
};
var tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$ = {};
$hxClasses["tannus.ds._ThreeTuple.ThreeTuple_Impl_"] = tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$;
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.__name__ = ["tannus","ds","_ThreeTuple","ThreeTuple_Impl_"];
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.__properties__ = {set_three:"set_three",get_three:"get_three",set_two:"set_two",get_two:"get_two",set_one:"set_one",get_one:"get_one"}
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$._new = function(a,b,c) {
	return [a,b,c];
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.get_one = function(this1) {
	return this1[0];
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.set_one = function(this1,v) {
	return this1[0] = v;
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.get_two = function(this1) {
	return this1[1];
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.set_two = function(this1,v) {
	return this1[1] = v;
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.get_three = function(this1) {
	return this1[2];
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.set_three = function(this1,v) {
	return this1[2] = v;
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.toString = function(this1) {
	return "(" + Std.string(this1[0]) + ", " + Std.string(this1[1]) + ", " + Std.string(this1[2]) + ")";
};
tannus_ds__$ThreeTuple_ThreeTuple_$Impl_$.toArray = function(this1) {
	return this1;
};
var tannus_ds__$TwoTuple_TwoTuple_$Impl_$ = {};
$hxClasses["tannus.ds._TwoTuple.TwoTuple_Impl_"] = tannus_ds__$TwoTuple_TwoTuple_$Impl_$;
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.__name__ = ["tannus","ds","_TwoTuple","TwoTuple_Impl_"];
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.__properties__ = {set_two:"set_two",get_two:"get_two",set_one:"set_one",get_one:"get_one"}
tannus_ds__$TwoTuple_TwoTuple_$Impl_$._new = function(a,b) {
	return [a,b];
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.get_one = function(this1) {
	return this1[0];
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.set_one = function(this1,v) {
	return this1[0] = v;
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.get_two = function(this1) {
	return this1[1];
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.set_two = function(this1,v) {
	return this1[1] = v;
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.toString = function(this1) {
	return "(" + Std.string(this1[0]) + ", " + Std.string(this1[1]) + ")";
};
tannus_ds__$TwoTuple_TwoTuple_$Impl_$.toArray = function(this1) {
	return this1;
};
var tannus_ds_data_IData = function() { };
$hxClasses["tannus.ds.data.IData"] = tannus_ds_data_IData;
tannus_ds_data_IData.__name__ = ["tannus","ds","data","IData"];
tannus_ds_data_IData.prototype = {
	get_capacity: null
	,get_length: null
	,get_full: null
	,get: null
	,set: null
	,has: null
	,add: null
	,fill: null
	,sets: null
	,__class__: tannus_ds_data_IData
	,__properties__: {get_full:"get_full",get_length:"get_length",get_capacity:"get_capacity"}
};
var tannus_ds_data_BoundData = function(refs) {
	var tmp;
	var tmp1;
	var this1;
	this1 = new Array(refs.length);
	tmp1 = this1;
	var vec = tmp1;
	var _g1 = 0;
	var _g = refs.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = refs[i];
	}
	tmp = vec;
	this.d = tmp;
	this.size = [this.d.length,this.d.length];
};
$hxClasses["tannus.ds.data.BoundData"] = tannus_ds_data_BoundData;
tannus_ds_data_BoundData.__name__ = ["tannus","ds","data","BoundData"];
tannus_ds_data_BoundData.__interfaces__ = [tannus_ds_data_IData];
tannus_ds_data_BoundData.prototype = {
	get: function(index) {
		return this.d[index].get();
	}
	,set: function(index,value) {
		return this.d[index].set(value);
	}
	,has: function(index) {
		return this.d[index].get() != null;
	}
	,add: function(value) {
		var _g1 = 0;
		var _g = this.size[0];
		while(_g1 < _g) {
			var i = _g1++;
			if(!(this.d[i].get() != null)) {
				this.d[i].set(value);
				return i;
			}
		}
		return -1;
	}
	,fill: function(value) {
		var _g1 = 0;
		var _g = this.size[0];
		while(_g1 < _g) {
			var i = _g1++;
			this.d[i].set(value);
		}
	}
	,sets: function(values) {
		var _g1 = 0;
		var _g = values.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.d[i].set(values[i]);
		}
	}
	,get_capacity: function() {
		return this.size[0];
	}
	,get_length: function() {
		return this.size[1];
	}
	,get_full: function() {
		return this.size[1] == this.size[0];
	}
	,size: null
	,d: null
	,__class__: tannus_ds_data_BoundData
	,__properties__: {get_full:"get_full",get_length:"get_length",get_capacity:"get_capacity"}
};
var tannus_ds_data_Data = function(len,value) {
	this.size = [len,0];
	var tmp;
	var this1;
	this1 = new Array(this.size[0]);
	tmp = this1;
	this.d = tmp;
	var _g1 = 0;
	var _g = this.size[0];
	while(_g1 < _g) {
		var i = _g1++;
		this.set(i,value);
	}
};
$hxClasses["tannus.ds.data.Data"] = tannus_ds_data_Data;
tannus_ds_data_Data.__name__ = ["tannus","ds","data","Data"];
tannus_ds_data_Data.__interfaces__ = [tannus_ds_data_IData];
tannus_ds_data_Data.fromDataImpl = function(impl) {
	return new tannus_ds_data_Data(0).reset(impl);
};
tannus_ds_data_Data.fromArray = function(array) {
	var tmp;
	var tmp1;
	var tmp2;
	var this1;
	this1 = new Array(array.length);
	tmp2 = this1;
	var vec = tmp2;
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = array[i];
	}
	tmp1 = vec;
	var impl = tmp1;
	tmp = new tannus_ds_data_Data(0).reset(impl);
	return tmp;
};
tannus_ds_data_Data.prototype = {
	get: function(index) {
		return this.d[index];
	}
	,set: function(index,value) {
		var delta = 0;
		if(value != null && !(this.d[index] != null)) delta = 1; else if(value == null && this.d[index] != null) delta = -1;
		this.d[index] = value;
		this.size[1] += delta;
		return this.d[index];
	}
	,has: function(index) {
		return this.d[index] != null;
	}
	,add: function(value) {
		var index = 0;
		while(index < this.size[0]) {
			if(!(this.d[index] != null)) {
				this.set(index,value);
				return index;
			}
			index++;
		}
		return -1;
	}
	,fill: function(value) {
		var _g1 = 0;
		var _g = this.size[0];
		while(_g1 < _g) {
			var i = _g1++;
			this.set(i,value);
		}
	}
	,sets: function(values) {
		var _g1 = 0;
		var _g = values.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.set(i,values[i]);
		}
	}
	,reset: function(impl) {
		this.d = impl;
		this.size = [this.d.length,0];
		var _g1 = 0;
		var _g = this.d.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.d[i] != null) this.size[1]++;
		}
		return this;
	}
	,get_capacity: function() {
		return this.size[0];
	}
	,get_length: function() {
		return this.size[1];
	}
	,get_full: function() {
		return this.size[1] == this.size[0];
	}
	,size: null
	,d: null
	,__class__: tannus_ds_data_Data
	,__properties__: {get_full:"get_full",get_length:"get_length",get_capacity:"get_capacity"}
};
var tannus_ds_dict_IDict = function() { };
$hxClasses["tannus.ds.dict.IDict"] = tannus_ds_dict_IDict;
tannus_ds_dict_IDict.__name__ = ["tannus","ds","dict","IDict"];
tannus_ds_dict_IDict.prototype = {
	get: null
	,set: null
	,reference: null
	,exists: null
	,remove: null
	,iterator: null
	,keys: null
	,pairs: null
	,hxSerialize: null
	,hxUnserialize: null
	,__class__: tannus_ds_dict_IDict
};
var tannus_ds_dict_ComparableDict = function() {
	this._pairs = new List();
};
$hxClasses["tannus.ds.dict.ComparableDict"] = tannus_ds_dict_ComparableDict;
tannus_ds_dict_ComparableDict.__name__ = ["tannus","ds","dict","ComparableDict"];
tannus_ds_dict_ComparableDict.__interfaces__ = [tannus_ds_dict_IDict];
tannus_ds_dict_ComparableDict.prototype = {
	pair: function(key,value) {
		var _g_head = this._pairs.h;
		var _g_val = null;
		while(_g_head != null) {
			var tmp;
			_g_val = _g_head[0];
			_g_head = _g_head[1];
			tmp = _g_val;
			var p = tmp;
			if(p[0].equals(key)) return p;
		}
		if(value != null) {
			var pair = [key,value];
			this._pairs.add(pair);
			return pair;
		} else return null;
	}
	,get: function(key) {
		var p = this.pair(key);
		if(p != null) return p[1]; else return null;
	}
	,set: function(key,value) {
		var p = this.pair(key,value);
		return p[1] = value;
	}
	,reference: function(key) {
		var tmp;
		var f = $bind(this,this.get);
		var a1 = key;
		tmp = function() {
			return f(a1);
		};
		var tmp1;
		var f1 = $bind(this,this.set);
		var a11 = key;
		tmp1 = function(a2) {
			return f1(a11,a2);
		};
		return new tannus_io__$Pointer_Ref(tmp,tmp1);
	}
	,exists: function(key) {
		return this.pair(key) != null;
	}
	,remove: function(key) {
		var p = this.pair(key);
		if(p != null) return this._pairs.remove(p); else return false;
	}
	,iterator: function() {
		return new tannus_ds_dict_ComparableDictIterator(this);
	}
	,keys: function() {
		return new tannus_ds_dict_ComparableDictKeyIterator(this);
	}
	,pairs: function() {
		return new _$List_ListIterator(this._pairs.h);
	}
	,hxSerialize: function(s) {
		var tmp;
		var f = $bind(s,s.serialize);
		tmp = function(v) {
			f(v);
		};
		var w = tmp;
		var tmp1;
		var _g = [];
		var $it0 = this.pairs();
		while( $it0.hasNext() ) {
			var pair = $it0.next();
			_g.push(pair);
		}
		tmp1 = _g;
		var pl = tmp1;
		w(pl.length);
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			w(p[0]);
			w(p[1]);
		}
	}
	,hxUnserialize: function(u) {
		this._pairs = new List();
		var count = u.unserialize();
		var _g = 0;
		while(_g < count) {
			_g++;
			this.set(u.unserialize(),u.unserialize());
		}
	}
	,_pairs: null
	,__class__: tannus_ds_dict_ComparableDict
};
var tannus_ds_dict_ComparableDictIterator = function(cd) {
	this.it = new _$List_ListIterator(cd._pairs.h);
};
$hxClasses["tannus.ds.dict.ComparableDictIterator"] = tannus_ds_dict_ComparableDictIterator;
tannus_ds_dict_ComparableDictIterator.__name__ = ["tannus","ds","dict","ComparableDictIterator"];
tannus_ds_dict_ComparableDictIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var tmp;
		var this1 = this.it.next();
		tmp = this1[1];
		return tmp;
	}
	,it: null
	,__class__: tannus_ds_dict_ComparableDictIterator
};
var tannus_ds_dict_ComparableDictKeyIterator = function(cd) {
	this.it = new _$List_ListIterator(cd._pairs.h);
};
$hxClasses["tannus.ds.dict.ComparableDictKeyIterator"] = tannus_ds_dict_ComparableDictKeyIterator;
tannus_ds_dict_ComparableDictKeyIterator.__name__ = ["tannus","ds","dict","ComparableDictKeyIterator"];
tannus_ds_dict_ComparableDictKeyIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var tmp;
		var this1 = this.it.next();
		tmp = this1[0];
		return tmp;
	}
	,it: null
	,__class__: tannus_ds_dict_ComparableDictKeyIterator
};
var tannus_ds_dict_EnumValueDict = function() {
	this.m = new haxe_ds_EnumValueMap();
};
$hxClasses["tannus.ds.dict.EnumValueDict"] = tannus_ds_dict_EnumValueDict;
tannus_ds_dict_EnumValueDict.__name__ = ["tannus","ds","dict","EnumValueDict"];
tannus_ds_dict_EnumValueDict.__interfaces__ = [tannus_ds_dict_IDict];
tannus_ds_dict_EnumValueDict.prototype = {
	get: function(key) {
		return this.m.get(key);
	}
	,set: function(k,v) {
		this.m.set(k,v);
		return this.m.get(k);
	}
	,reference: function(key) {
		var tmp;
		var f = ($_=this.m,$bind($_,$_.get));
		var a1 = key;
		tmp = function() {
			return f(a1);
		};
		var tmp1;
		var f1 = $bind(this,this.set);
		var k = key;
		tmp1 = function(v) {
			return f1(k,v);
		};
		return new tannus_io__$Pointer_Ref(tmp,tmp1);
	}
	,exists: function(k) {
		return this.m.exists(k);
	}
	,remove: function(k) {
		return this.m.remove(k);
	}
	,iterator: function() {
		return this.m.iterator();
	}
	,keys: function() {
		return this.m.keys();
	}
	,pairs: function() {
		return new tannus_ds_dict_EVDPairIterator(this);
	}
	,hxSerialize: function(s) {
		var tmp;
		var f = $bind(s,s.serialize);
		tmp = function(v) {
			f(v);
		};
		var w = tmp;
		var tmp1;
		var _g = [];
		var $it0 = new tannus_ds_dict_EVDPairIterator(this);
		while( $it0.hasNext() ) {
			var pair = $it0.next();
			_g.push(pair);
		}
		tmp1 = _g;
		var pl = tmp1;
		w(pl.length);
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			w(p[0]);
			w(p[1]);
		}
	}
	,hxUnserialize: function(u) {
		var count = u.unserialize();
		this.m = new haxe_ds_EnumValueMap();
		var _g = 0;
		while(_g < count) {
			_g++;
			this.set(u.unserialize(),u.unserialize());
		}
	}
	,m: null
	,__class__: tannus_ds_dict_EnumValueDict
};
var tannus_ds_dict_EVDPairIterator = function(d) {
	this.dict = d;
	this.it = this.dict.m.keys();
};
$hxClasses["tannus.ds.dict.EVDPairIterator"] = tannus_ds_dict_EVDPairIterator;
tannus_ds_dict_EVDPairIterator.__name__ = ["tannus","ds","dict","EVDPairIterator"];
tannus_ds_dict_EVDPairIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var k = this.it.next();
		var tmp;
		var value = this.dict.m.get(k);
		tmp = [k,value];
		return tmp;
	}
	,dict: null
	,it: null
	,__class__: tannus_ds_dict_EVDPairIterator
};
var tannus_ds_dict_IntDict = function() {
	this.m = new haxe_ds_IntMap();
};
$hxClasses["tannus.ds.dict.IntDict"] = tannus_ds_dict_IntDict;
tannus_ds_dict_IntDict.__name__ = ["tannus","ds","dict","IntDict"];
tannus_ds_dict_IntDict.__interfaces__ = [tannus_ds_dict_IDict];
tannus_ds_dict_IntDict.prototype = {
	get: function(key) {
		return this.m.h[key];
	}
	,set: function(k,v) {
		this.m.h[k] = v;
		return this.m.h[k];
	}
	,reference: function(key) {
		var tmp;
		var f = ($_=this.m,$bind($_,$_.get));
		var a1 = key;
		tmp = function() {
			return f(a1);
		};
		var tmp1;
		var f1 = $bind(this,this.set);
		var k = key;
		tmp1 = function(v) {
			return f1(k,v);
		};
		return new tannus_io__$Pointer_Ref(tmp,tmp1);
	}
	,exists: function(k) {
		return this.m.h.hasOwnProperty(k);
	}
	,remove: function(k) {
		return this.m.remove(k);
	}
	,iterator: function() {
		return this.m.iterator();
	}
	,keys: function() {
		return this.m.keys();
	}
	,pairs: function() {
		return new tannus_ds_dict_IntDictPairIterator(this);
	}
	,hxSerialize: function(s) {
		var tmp;
		var f = $bind(s,s.serialize);
		tmp = function(v) {
			f(v);
		};
		var w = tmp;
		var tmp1;
		var _g = [];
		var $it0 = new tannus_ds_dict_IntDictPairIterator(this);
		while( $it0.hasNext() ) {
			var pair = $it0.next();
			_g.push(pair);
		}
		tmp1 = _g;
		var pl = tmp1;
		w(pl.length);
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			w(p[0]);
			w(p[1]);
		}
	}
	,hxUnserialize: function(u) {
		var count = u.unserialize();
		this.m = new haxe_ds_IntMap();
		var _g = 0;
		while(_g < count) {
			_g++;
			this.set(u.unserialize(),u.unserialize());
		}
	}
	,m: null
	,__class__: tannus_ds_dict_IntDict
};
var tannus_ds_dict_IntDictPairIterator = function(d) {
	this.dict = d;
	this.it = this.dict.m.keys();
};
$hxClasses["tannus.ds.dict.IntDictPairIterator"] = tannus_ds_dict_IntDictPairIterator;
tannus_ds_dict_IntDictPairIterator.__name__ = ["tannus","ds","dict","IntDictPairIterator"];
tannus_ds_dict_IntDictPairIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var k = this.it.next();
		return [k,this.dict.m.h[k]];
	}
	,dict: null
	,it: null
	,__class__: tannus_ds_dict_IntDictPairIterator
};
var tannus_ds_dict__$Pair_Pair_$Impl_$ = {};
$hxClasses["tannus.ds.dict._Pair.Pair_Impl_"] = tannus_ds_dict__$Pair_Pair_$Impl_$;
tannus_ds_dict__$Pair_Pair_$Impl_$.__name__ = ["tannus","ds","dict","_Pair","Pair_Impl_"];
tannus_ds_dict__$Pair_Pair_$Impl_$.__properties__ = {set_value:"set_value",get_value:"get_value",get_key:"get_key"}
tannus_ds_dict__$Pair_Pair_$Impl_$._new = function(key,value) {
	return [key,value];
};
tannus_ds_dict__$Pair_Pair_$Impl_$.get_key = function(this1) {
	return this1[0];
};
tannus_ds_dict__$Pair_Pair_$Impl_$.get_value = function(this1) {
	return this1[1];
};
tannus_ds_dict__$Pair_Pair_$Impl_$.set_value = function(this1,v) {
	return this1[1] = v;
};
var tannus_ds_dict_StringDict = function() {
	this.m = new haxe_ds_StringMap();
};
$hxClasses["tannus.ds.dict.StringDict"] = tannus_ds_dict_StringDict;
tannus_ds_dict_StringDict.__name__ = ["tannus","ds","dict","StringDict"];
tannus_ds_dict_StringDict.__interfaces__ = [tannus_ds_dict_IDict];
tannus_ds_dict_StringDict.prototype = {
	get: function(key) {
		var tmp;
		var _this = this.m;
		if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
		return tmp;
	}
	,set: function(k,v) {
		var _this = this.m;
		if(__map_reserved[k] != null) _this.setReserved(k,v); else _this.h[k] = v;
		var tmp;
		var _this1 = this.m;
		if(__map_reserved[k] != null) tmp = _this1.getReserved(k); else tmp = _this1.h[k];
		return tmp;
	}
	,reference: function(key) {
		var tmp;
		var f = ($_=this.m,$bind($_,$_.get));
		var a1 = key;
		tmp = function() {
			return f(a1);
		};
		var tmp1;
		var f1 = $bind(this,this.set);
		var k = key;
		tmp1 = function(v) {
			return f1(k,v);
		};
		return new tannus_io__$Pointer_Ref(tmp,tmp1);
	}
	,exists: function(k) {
		var tmp;
		var _this = this.m;
		if(__map_reserved[k] != null) tmp = _this.existsReserved(k); else tmp = _this.h.hasOwnProperty(k);
		return tmp;
	}
	,remove: function(k) {
		return this.m.remove(k);
	}
	,iterator: function() {
		var tmp;
		var _this = this.m;
		tmp = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		return tmp;
	}
	,keys: function() {
		return this.m.keys();
	}
	,pairs: function() {
		return new tannus_ds_dict_StringDictPairIterator(this);
	}
	,hxSerialize: function(s) {
		var tmp;
		var f = $bind(s,s.serialize);
		tmp = function(v) {
			f(v);
		};
		var w = tmp;
		var tmp1;
		var _g = [];
		var $it0 = new tannus_ds_dict_StringDictPairIterator(this);
		while( $it0.hasNext() ) {
			var pair = $it0.next();
			_g.push(pair);
		}
		tmp1 = _g;
		var pl = tmp1;
		w(pl.length);
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			w(p[0]);
			w(p[1]);
		}
	}
	,hxUnserialize: function(u) {
		var count = u.unserialize();
		this.m = new haxe_ds_StringMap();
		var _g = 0;
		while(_g < count) {
			_g++;
			this.set(u.unserialize(),u.unserialize());
		}
	}
	,m: null
	,__class__: tannus_ds_dict_StringDict
};
var tannus_ds_dict_StringDictPairIterator = function(d) {
	this.dict = d;
	this.it = this.dict.m.keys();
};
$hxClasses["tannus.ds.dict.StringDictPairIterator"] = tannus_ds_dict_StringDictPairIterator;
tannus_ds_dict_StringDictPairIterator.__name__ = ["tannus","ds","dict","StringDictPairIterator"];
tannus_ds_dict_StringDictPairIterator.prototype = {
	hasNext: function() {
		return this.it.hasNext();
	}
	,next: function() {
		var k = this.it.next();
		var tmp;
		var tmp1;
		var _this = this.dict.m;
		if(__map_reserved[k] != null) tmp1 = _this.getReserved(k); else tmp1 = _this.h[k];
		var value = tmp1;
		tmp = [k,value];
		return tmp;
	}
	,dict: null
	,it: null
	,__class__: tannus_ds_dict_StringDictPairIterator
};
var tannus_ds_promises_ArrayPromise = function(f) {
	tannus_ds_Promise.call(this,f);
};
$hxClasses["tannus.ds.promises.ArrayPromise"] = tannus_ds_promises_ArrayPromise;
tannus_ds_promises_ArrayPromise.__name__ = ["tannus","ds","promises","ArrayPromise"];
tannus_ds_promises_ArrayPromise.fromPrim = function(pa) {
	return new tannus_ds_promises_ArrayPromise(function(res,err) {
		pa.then(res);
		pa.unless(err);
	});
};
tannus_ds_promises_ArrayPromise.__super__ = tannus_ds_Promise;
tannus_ds_promises_ArrayPromise.prototype = $extend(tannus_ds_Promise.prototype,{
	get: function(index) {
		var _g = this;
		var res = new tannus_ds_Promise(function(accept,reject) {
			_g.then(function(items) {
				accept(items[index]);
			});
			_g.unless(function(error) {
				reject(error);
			});
		},null);
		this.attach(res);
		return res;
	}
	,slice: function(pos,end) {
		var _g = this;
		return new tannus_ds_promises_ArrayPromise(function(res,err) {
			_g.then(function(list) {
				res(list.slice(pos,end));
			});
			_g.unless(function(error) {
				err(error);
			});
		});
	}
	,concat: function(other) {
		var _g = this;
		var res1 = new tannus_ds_promises_ArrayPromise(function(res,err) {
			_g.then(function(list) {
				res(list.concat(other));
			});
			_g.unless(function(error) {
				err(error);
			});
		});
		this.attach(res1);
		return res1;
	}
	,map: function(f) {
		var tmp;
		var pa = this.transform(function(x) {
			return x.map(f);
		});
		tmp = new tannus_ds_promises_ArrayPromise(function(res1,err) {
			pa.then(res1);
			pa.unless(err);
		});
		var res = tmp;
		this.attach(res);
		return res;
	}
	,filter: function(test) {
		var tmp;
		var pa = this.transform(function(list) {
			return list.filter(test);
		});
		tmp = new tannus_ds_promises_ArrayPromise(function(res1,err) {
			pa.then(res1);
			pa.unless(err);
		});
		var res = tmp;
		this.attach(res);
		return res;
	}
	,has: function(item) {
		var _g = this;
		var result = new tannus_ds_promises_BoolPromise(function(res,err) {
			_g.then(function(list) {
				res(Lambda.has(list,item));
			});
			_g.unless(err);
		});
		this.attach(result);
		return result;
	}
	,join: function(sep) {
		var _g = this;
		var result = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_g.then(function(list) {
				accept(list.join(sep));
			});
			_g.unless(reject);
		});
		this.attach(result);
		return result;
	}
	,each: function(f) {
		this.then(function(list) {
			var _g = 0;
			while(_g < list.length) {
				var item = list[_g];
				++_g;
				f(item);
			}
		});
		return this;
	}
	,__class__: tannus_ds_promises_ArrayPromise
});
var tannus_ds_promises_BoolPromise = function(exec,nocall) {
	tannus_ds_Promise.call(this,exec,nocall);
};
$hxClasses["tannus.ds.promises.BoolPromise"] = tannus_ds_promises_BoolPromise;
tannus_ds_promises_BoolPromise.__name__ = ["tannus","ds","promises","BoolPromise"];
tannus_ds_promises_BoolPromise.__super__ = tannus_ds_Promise;
tannus_ds_promises_BoolPromise.prototype = $extend(tannus_ds_Promise.prototype,{
	yep: function(onyes) {
		this.then(function(v) {
			if(v) onyes();
		});
		return this;
	}
	,nope: function(onno) {
		this.then(function(v) {
			if(!v) onno();
		});
		return this;
	}
	,__class__: tannus_ds_promises_BoolPromise
});
var tannus_ds_promises_ObjectPromise = function(exec,nocall) {
	tannus_ds_Promise.call(this,exec,nocall);
};
$hxClasses["tannus.ds.promises.ObjectPromise"] = tannus_ds_promises_ObjectPromise;
tannus_ds_promises_ObjectPromise.__name__ = ["tannus","ds","promises","ObjectPromise"];
tannus_ds_promises_ObjectPromise.__super__ = tannus_ds_Promise;
tannus_ds_promises_ObjectPromise.prototype = $extend(tannus_ds_Promise.prototype,{
	exists: function(key) {
		var _g = this;
		var r = new tannus_ds_promises_BoolPromise(function(res,err) {
			_g.then(function(o) {
				res(Object.prototype.hasOwnProperty.call(o,key));
			});
			_g.unless(err);
		});
		this.attach(r);
		return r;
	}
	,keys: function() {
		var _g = this;
		var r = new tannus_ds_promises_ArrayPromise(function(a,e) {
			_g.then(function(o) {
				a(Reflect.fields(o));
			});
			_g.unless(e);
		});
		this.attach(r);
		return r;
	}
	,get: function(key) {
		var _g = this;
		var r = new tannus_ds_promises_ObjectPromise(function(accept,reject) {
			_g.then(function(o) {
				console.log(o);
				var tmp;
				var tmp1;
				var tmp2;
				if(o == null) tmp1 = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + key])) tmp1 = o[tmp2](); else tmp1 = o[key];
				var this1 = tmp1;
				tmp = this1 != null?this1:this1;
				accept(tmp);
			});
			_g.unless(reject);
		});
		this.attach(r);
		return r;
	}
	,__class__: tannus_ds_promises_ObjectPromise
});
var tannus_ds_promises_PromiseTools = function() { };
$hxClasses["tannus.ds.promises.PromiseTools"] = tannus_ds_promises_PromiseTools;
tannus_ds_promises_PromiseTools.__name__ = ["tannus","ds","promises","PromiseTools"];
tannus_ds_promises_PromiseTools.batch = function(promises) {
	return new tannus_ds_Promise(function(accept,reject) {
		var pool = new tannus_ds_AsyncPool();
		var _g = 0;
		while(_g < promises.length) {
			var p = [promises[_g]];
			++_g;
			pool.push((function(p) {
				return function(index,done) {
					p[0].then((function() {
						return function(result) {
							done(null,result);
						};
					})());
					p[0].unless((function() {
						return function(error) {
							done(error,null);
						};
					})());
				};
			})(p));
		}
		pool.run(function(results) {
			accept(results.map(function(item) {
				return item.value;
			}));
		});
	},null).array();
};
var tannus_ds_promises_StringPromise = function(exec,nocall) {
	tannus_ds_Promise.call(this,exec,nocall);
};
$hxClasses["tannus.ds.promises.StringPromise"] = tannus_ds_promises_StringPromise;
tannus_ds_promises_StringPromise.__name__ = ["tannus","ds","promises","StringPromise"];
tannus_ds_promises_StringPromise.__super__ = tannus_ds_Promise;
tannus_ds_promises_StringPromise.prototype = $extend(tannus_ds_Promise.prototype,{
	charAt: function(i) {
		var _g = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_g.then(function(s) {
				accept(s.charAt(i));
			});
			_g.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,charCodeAt: function(i) {
		var res = this.charAt(i).transform(function(c) {
			return HxOverrides.cca(c,0);
		});
		this.attach(res);
		return res;
	}
	,split: function(delimiter) {
		var _g = this;
		var res = new tannus_ds_Promise(function(accept,reject) {
			_g.then(function(s) {
				accept(s.split(delimiter));
			});
			_g.unless(function(err) {
				reject(err);
			});
		},null).array();
		this.attach(res);
		return res;
	}
	,substr: function(pos,len) {
		var _g = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_g.then(function(data) {
				var sub = HxOverrides.substr(data,pos,len);
				accept(sub);
			});
			_g.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,substring: function(start,end) {
		var _g = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_g.then(function(data) {
				var sub = data.substring(start,end);
				accept(sub);
			});
			_g.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,toUpperCase: function() {
		var _g = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_g.then(function(s) {
				accept(s.toUpperCase());
			});
			_g.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,toLowerCase: function() {
		var _g = this;
		var res = new tannus_ds_promises_StringPromise(function(accept,reject) {
			_g.then(function(s) {
				accept(s.toLowerCase());
			});
			_g.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,capitalize: function() {
		var _g = this;
		var res = new tannus_ds_Promise(function(accept,reject) {
			_g.then(function(s) {
				var chars = s.split("");
				var first = chars.shift().toUpperCase();
				var rest = chars.join("").toLowerCase();
				accept(first + rest);
			});
			_g.unless(function(err) {
				reject(err);
			});
		},null).string();
		this.attach(res);
		return res;
	}
	,startsWith: function(start) {
		var _g = this;
		var res = new tannus_ds_promises_BoolPromise(function(reply,reject) {
			_g.then(function(data) {
				{
					var _g1 = start;
					switch(_g1[1]) {
					case 0:
						var str = _g1[2];
						reply(StringTools.startsWith(data,str));
						break;
					case 1:
						var _pstr = _g1[2];
						var pstr = _pstr.string();
						pstr.then(function(str1) {
							reply(StringTools.startsWith(data,str1));
						});
						break;
					}
				}
			});
			_g.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,endsWith: function(end) {
		var _g = this;
		var res = new tannus_ds_promises_BoolPromise(function(reply,reject) {
			_g.then(function(data) {
				{
					var _g1 = end;
					switch(_g1[1]) {
					case 0:
						var str = _g1[2];
						reply(StringTools.endsWith(data,str));
						break;
					case 1:
						var _pstr = _g1[2];
						var pstr = _pstr.string();
						pstr.then(function(str1) {
							reply(StringTools.endsWith(data,str1));
						});
						break;
					}
				}
			});
			_g.unless(reject);
		});
		this.attach(res);
		return res;
	}
	,ltrim: function() {
		var lt = this.transform(function(s) {
			return StringTools.ltrim(s);
		}).string();
		this.attach(lt);
		return lt;
	}
	,rtrim: function() {
		var rt = this.transform(function(s) {
			return StringTools.rtrim(s);
		}).string();
		this.attach(rt);
		return rt;
	}
	,trim: function() {
		var trimmed = this.transform(function(s) {
			return StringTools.trim(s);
		}).string();
		this.attach(trimmed);
		return trimmed;
	}
	,match: function(pattern) {
		var res = this.transform(function(s) {
			return pattern.match(s);
		}).bool();
		this.attach(res);
		return res;
	}
	,__class__: tannus_ds_promises_StringPromise
});
var tannus_ds_tuples__$Tup2_Tup2_$Impl_$ = {};
$hxClasses["tannus.ds.tuples._Tup2.Tup2_Impl_"] = tannus_ds_tuples__$Tup2_Tup2_$Impl_$;
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.__name__ = ["tannus","ds","tuples","_Tup2","Tup2_Impl_"];
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.__properties__ = {set__1:"set__1",get__1:"get__1",set__0:"set__0",get__0:"get__0"}
tannus_ds_tuples__$Tup2_Tup2_$Impl_$._new = function(a,b) {
	return [a,b];
};
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.get__0 = function(this1) {
	return this1[0];
};
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.set__0 = function(this1,v) {
	return this1[0] = v;
};
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.get__1 = function(this1) {
	return this1[1];
};
tannus_ds_tuples__$Tup2_Tup2_$Impl_$.set__1 = function(this1,v) {
	return this1[1] = v;
};
var tannus_ds_tuples__$Tup4_Tup4_$Impl_$ = {};
$hxClasses["tannus.ds.tuples._Tup4.Tup4_Impl_"] = tannus_ds_tuples__$Tup4_Tup4_$Impl_$;
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.__name__ = ["tannus","ds","tuples","_Tup4","Tup4_Impl_"];
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.__properties__ = {set__3:"set__3",get__3:"get__3",set__2:"set__2",get__2:"get__2",set__1:"set__1",get__1:"get__1",set__0:"set__0",get__0:"get__0"}
tannus_ds_tuples__$Tup4_Tup4_$Impl_$._new = function(a,b,c,d) {
	return [a,b,c,d];
};
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.get__0 = function(this1) {
	return this1[0];
};
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.set__0 = function(this1,v) {
	return this1[0] = v;
};
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.get__1 = function(this1) {
	return this1[1];
};
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.set__1 = function(this1,v) {
	return this1[1] = v;
};
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.get__2 = function(this1) {
	return this1[2];
};
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.set__2 = function(this1,v) {
	return this1[2] = v;
};
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.get__3 = function(this1) {
	return this1[3];
};
tannus_ds_tuples__$Tup4_Tup4_$Impl_$.set__3 = function(this1,v) {
	return this1[3] = v;
};
var tannus_events_Event = function(variety,bubbls) {
	if(bubbls == null) bubbls = false;
	this.type = variety;
	this.date = new Date().getTime();
	this._bubbles = bubbls;
	this._defaultPrevented = false;
	this._cancelled = false;
	this._propogationStopped = false;
	this.onCancelled = new tannus_io_VoidSignal();
	this.onDefaultPrevented = new tannus_io_VoidSignal();
	this.onPropogationStopped = new tannus_io_VoidSignal();
	this._onCopy = new tannus_io_Signal();
};
$hxClasses["tannus.events.Event"] = tannus_events_Event;
tannus_events_Event.__name__ = ["tannus","events","Event"];
tannus_events_Event.prototype = {
	clone: function(deep) {
		if(deep == null) deep = false;
		var c = Reflect.copy(this);
		c.onCancelled = deep?this.onCancelled.clone():new tannus_io_VoidSignal();
		c.onDefaultPrevented = deep?this.onDefaultPrevented.clone():new tannus_io_VoidSignal();
		c.onPropogationStopped = deep?this.onPropogationStopped.clone():new tannus_io_VoidSignal();
		this._onCopy.broadcast(c);
		return c;
	}
	,cancel: function() {
		this._cancelled = true;
		this.onCancelled.call();
	}
	,preventDefault: function() {
		this._defaultPrevented = true;
		this.onDefaultPrevented.call();
	}
	,stopPropogation: function() {
		this._propogationStopped = true;
		this.onPropogationStopped.call();
	}
	,getModifiers: function() {
		return [];
	}
	,get_bubbles: function() {
		return this._bubbles;
	}
	,get_cancelled: function() {
		return this._cancelled;
	}
	,get_defaultPrevented: function() {
		return this._defaultPrevented;
	}
	,get_propogationStopped: function() {
		return this._propogationStopped;
	}
	,type: null
	,date: null
	,_bubbles: null
	,_defaultPrevented: null
	,_cancelled: null
	,_propogationStopped: null
	,onDefaultPrevented: null
	,onPropogationStopped: null
	,onCancelled: null
	,_onCopy: null
	,__class__: tannus_events_Event
	,__properties__: {get_propogationStopped:"get_propogationStopped",get_defaultPrevented:"get_defaultPrevented",get_cancelled:"get_cancelled",get_bubbles:"get_bubbles"}
};
var tannus_events__$Key_Key_$Impl_$ = {};
$hxClasses["tannus.events._Key.Key_Impl_"] = tannus_events__$Key_Key_$Impl_$;
tannus_events__$Key_Key_$Impl_$.__name__ = ["tannus","events","_Key","Key_Impl_"];
tannus_events__$Key_Key_$Impl_$.__properties__ = {get_name:"get_name"}
tannus_events__$Key_Key_$Impl_$.get_name = function(this1) {
	return tannus_events_KeyTools.getName(this1);
};
var tannus_events_KeyTools = function() { };
$hxClasses["tannus.events.KeyTools"] = tannus_events_KeyTools;
tannus_events_KeyTools.__name__ = ["tannus","events","KeyTools"];
tannus_events_KeyTools.getName = function(key) {
	var tmp;
	var this1 = tannus_events_KeyTools.keyNames();
	tmp = this1.get(key);
	return tmp;
};
tannus_events_KeyTools.getKey = function(name) {
	var tmp;
	var this1 = tannus_events_KeyTools.nameKeys();
	var key = name.toLowerCase();
	tmp = this1.get(key);
	return tmp;
};
tannus_events_KeyTools.keyNames = function() {
	if(tannus_events_KeyTools._keyNames == null) {
		var tmp;
		var _g = new haxe_ds_IntMap();
		_g.h[20] = "<CapsLock>";
		_g.h[110] = "<Numpad .>";
		_g.h[111] = "<Numpad />";
		_g.h[91] = "Super";
		_g.h[191] = "/";
		_g.h[13] = "Enter";
		_g.h[16] = "Shift";
		_g.h[32] = "Space";
		_g.h[33] = "<Page Up>";
		_g.h[8] = "Backspace";
		_g.h[9] = "Tab";
		_g.h[107] = "<Numpad +>";
		_g.h[190] = ".";
		_g.h[219] = "[";
		_g.h[36] = "Home";
		_g.h[37] = "Left";
		_g.h[187] = "=";
		_g.h[222] = "'";
		_g.h[39] = "Right";
		_g.h[221] = "]";
		_g.h[144] = "<Num Lock>";
		_g.h[220] = "\\";
		_g.h[34] = "<Page Down>";
		_g.h[35] = "End";
		_g.h[189] = "-";
		_g.h[186] = ";";
		_g.h[40] = "Down";
		_g.h[27] = "Esc";
		_g.h[188] = ",";
		_g.h[46] = "Delete";
		_g.h[106] = "<Numpad *>";
		_g.h[192] = "`";
		_g.h[17] = "Ctrl";
		_g.h[45] = "Insert";
		_g.h[145] = "<Scroll Lock>";
		_g.h[109] = "<Numpad ->";
		_g.h[38] = "Up";
		_g.h[18] = "Alt";
		_g.h[65] = "A";
		_g.h[66] = "B";
		_g.h[67] = "C";
		_g.h[68] = "D";
		_g.h[69] = "E";
		_g.h[70] = "F";
		_g.h[71] = "G";
		_g.h[72] = "H";
		_g.h[73] = "I";
		_g.h[74] = "J";
		_g.h[75] = "K";
		_g.h[76] = "L";
		_g.h[77] = "M";
		_g.h[78] = "N";
		_g.h[79] = "O";
		_g.h[80] = "P";
		_g.h[81] = "Q";
		_g.h[82] = "R";
		_g.h[83] = "S";
		_g.h[84] = "T";
		_g.h[85] = "U";
		_g.h[86] = "V";
		_g.h[87] = "W";
		_g.h[88] = "X";
		_g.h[89] = "Y";
		_g.h[90] = "Z";
		_g.h[48] = "0";
		_g.h[49] = "1";
		_g.h[50] = "2";
		_g.h[51] = "3";
		_g.h[52] = "4";
		_g.h[53] = "5";
		_g.h[54] = "6";
		_g.h[55] = "7";
		_g.h[56] = "8";
		_g.h[57] = "9";
		_g.h[112] = "<F1>";
		_g.h[113] = "<F2>";
		_g.h[114] = "<F3>";
		_g.h[115] = "<F4>";
		_g.h[116] = "<F5>";
		_g.h[117] = "<F6>";
		_g.h[118] = "<F7>";
		_g.h[119] = "<F8>";
		_g.h[120] = "<F9>";
		_g.h[121] = "<F10>";
		_g.h[122] = "<F11>";
		_g.h[123] = "<F12>";
		tmp = _g;
		tannus_events_KeyTools._keyNames = tmp;
	}
	return tannus_events_KeyTools._keyNames;
};
tannus_events_KeyTools.nameKeys = function() {
	if(tannus_events_KeyTools._nameKeys == null) {
		tannus_events_KeyTools._nameKeys = new haxe_ds_StringMap();
		var kn = tannus_events_KeyTools.keyNames();
		var $it0 = kn.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			var k = kn.h[key].toLowerCase();
			var _this = tannus_events_KeyTools._nameKeys;
			if(__map_reserved[k] != null) _this.setReserved(k,key); else _this.h[k] = key;
			key;
		}
	}
	return tannus_events_KeyTools._nameKeys;
};
var tannus_events_KeyboardEvent = function(type,code,emods) {
	tannus_events_Event.call(this,type);
	this.keyCode = code;
	this.key = this.keyCode;
	this.mods = emods != null?emods:[];
	this.altKey = Lambda.has(this.mods,"alt");
	this.ctrlKey = Lambda.has(this.mods,"ctrl");
	this.shiftKey = Lambda.has(this.mods,"shift");
	this.metaKey = Lambda.has(this.mods,"super");
};
$hxClasses["tannus.events.KeyboardEvent"] = tannus_events_KeyboardEvent;
tannus_events_KeyboardEvent.__name__ = ["tannus","events","KeyboardEvent"];
tannus_events_KeyboardEvent.fromJqEvent = function(e) {
	var mods = [];
	if(e.altKey) mods.push("alt");
	if(e.ctrlKey) mods.push("ctrl");
	if(e.shiftKey) mods.push("shift");
	if(e.metaKey) mods.push("super");
	var res = new tannus_events_KeyboardEvent(e.type,e.keyCode,mods);
	res.onDefaultPrevented.once($bind(e,e.preventDefault));
	res.onPropogationStopped.once($bind(e,e.stopPropagation));
	return res;
};
tannus_events_KeyboardEvent.__super__ = tannus_events_Event;
tannus_events_KeyboardEvent.prototype = $extend(tannus_events_Event.prototype,{
	getModifiers: function() {
		return this.mods.slice();
	}
	,keyCode: null
	,key: null
	,mods: null
	,altKey: null
	,ctrlKey: null
	,shiftKey: null
	,metaKey: null
	,__class__: tannus_events_KeyboardEvent
});
var tannus_events_MouseEvent = function(type,pos,btn,mods) {
	if(btn == null) btn = -1;
	tannus_events_Event.call(this,type);
	this.position = pos;
	this.button = btn;
	this.emods = mods != null?mods:[];
};
$hxClasses["tannus.events.MouseEvent"] = tannus_events_MouseEvent;
tannus_events_MouseEvent.__name__ = ["tannus","events","MouseEvent"];
tannus_events_MouseEvent.fromJqEvent = function(event) {
	var mods = [];
	if(event.shiftKey) mods.push("shift");
	if(event.altKey) mods.push("alt");
	if(event.ctrlKey) mods.push("ctrl");
	if(event.metaKey) mods.push("super");
	var pos = new tannus_geom_TPoint(event.pageX,event.pageY,0);
	var e = new tannus_events_MouseEvent(event.type,pos,event.which,mods);
	e.onCancelled.once($bind(event,event.preventDefault));
	e.onDefaultPrevented.once($bind(event,event.preventDefault));
	e.onPropogationStopped.once($bind(event,event.stopPropagation));
	var tmp;
	var copyEvent1 = null;
	copyEvent1 = function(copy) {
		copy.onCancelled.once($bind(event,event.preventDefault));
		copy.onDefaultPrevented.once($bind(event,event.preventDefault));
		copy.onPropogationStopped.once($bind(event,event.stopPropagation));
		copy._onCopy.listen(copyEvent1,false);
	};
	tmp = copyEvent1;
	var copyEvent = tmp;
	e._onCopy.listen(copyEvent,false);
	return e;
};
tannus_events_MouseEvent.fromJsEvent = function(event) {
	var mods = [];
	if(event.shiftKey) mods.push("shift");
	if(event.altKey) mods.push("alt");
	if(event.ctrlKey) mods.push("ctrl");
	if(event.metaKey) mods.push("super");
	var pos = new tannus_geom_TPoint(event.pageX,event.pageY,0);
	var e = new tannus_events_MouseEvent(event.type,pos,event.which,mods);
	e.onCancelled.once($bind(event,event.preventDefault));
	e.onDefaultPrevented.once($bind(event,event.preventDefault));
	e.onPropogationStopped.once($bind(event,event.stopPropagation));
	var tmp;
	var copyEvent1 = null;
	copyEvent1 = function(copy) {
		copy.onCancelled.once($bind(event,event.preventDefault));
		copy.onDefaultPrevented.once($bind(event,event.preventDefault));
		copy.onPropogationStopped.once($bind(event,event.stopPropagation));
		copy._onCopy.listen(copyEvent1,false);
	};
	tmp = copyEvent1;
	var copyEvent = tmp;
	e._onCopy.listen(copyEvent,false);
	return e;
};
tannus_events_MouseEvent.__super__ = tannus_events_Event;
tannus_events_MouseEvent.prototype = $extend(tannus_events_Event.prototype,{
	clone: function(deep) {
		if(deep == null) deep = false;
		return new tannus_events_MouseEvent(this.type,this.position.clone(),this.button,this.emods);
	}
	,get_shiftKey: function() {
		return Lambda.has(this.emods,"shift");
	}
	,get_altKey: function() {
		return Lambda.has(this.emods,"alt");
	}
	,get_ctrlKey: function() {
		return Lambda.has(this.emods,"ctrl");
	}
	,get_metaKey: function() {
		return Lambda.has(this.emods,"super");
	}
	,position: null
	,button: null
	,emods: null
	,__class__: tannus_events_MouseEvent
	,__properties__: $extend(tannus_events_Event.prototype.__properties__,{get_metaKey:"get_metaKey",get_ctrlKey:"get_ctrlKey",get_altKey:"get_altKey",get_shiftKey:"get_shiftKey"})
});
var tannus_events_ResizeEvent = function(old_area,new_area) {
	tannus_events_Event.call(this,"resize");
	this.delta = [new_area,old_area];
};
$hxClasses["tannus.events.ResizeEvent"] = tannus_events_ResizeEvent;
tannus_events_ResizeEvent.__name__ = ["tannus","events","ResizeEvent"];
tannus_events_ResizeEvent.__super__ = tannus_events_Event;
tannus_events_ResizeEvent.prototype = $extend(tannus_events_Event.prototype,{
	delta: null
	,__class__: tannus_events_ResizeEvent
});
var tannus_events_ScrollEvent = function(delt) {
	tannus_events_Event.call(this,"scroll");
	this.delta = delt;
};
$hxClasses["tannus.events.ScrollEvent"] = tannus_events_ScrollEvent;
tannus_events_ScrollEvent.__name__ = ["tannus","events","ScrollEvent"];
tannus_events_ScrollEvent.__super__ = tannus_events_Event;
tannus_events_ScrollEvent.prototype = $extend(tannus_events_Event.prototype,{
	delta: null
	,__class__: tannus_events_ScrollEvent
});
var tannus_geom__$Angle_Angle_$Impl_$ = {};
$hxClasses["tannus.geom._Angle.Angle_Impl_"] = tannus_geom__$Angle_Angle_$Impl_$;
tannus_geom__$Angle_Angle_$Impl_$.__name__ = ["tannus","geom","_Angle","Angle_Impl_"];
tannus_geom__$Angle_Angle_$Impl_$._new = function(v) {
	return new tannus_geom_CAngle(v);
};
tannus_geom__$Angle_Angle_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_geom__$Angle_Angle_$Impl_$.toFloat = function(this1) {
	return this1.toFloat();
};
tannus_geom__$Angle_Angle_$Impl_$.plusAngle = function(this1,o) {
	return new tannus_geom_CAngle(this1.v + o.v);
};
tannus_geom__$Angle_Angle_$Impl_$.plusFloat = function(this1,o) {
	return new tannus_geom_CAngle(this1.v + o);
};
tannus_geom__$Angle_Angle_$Impl_$.fromFloat = function(v) {
	return new tannus_geom_CAngle(v);
};
var tannus_geom_CAngle = function(_v) {
	this.v = _v;
};
$hxClasses["tannus.geom.CAngle"] = tannus_geom_CAngle;
tannus_geom_CAngle.__name__ = ["tannus","geom","CAngle"];
tannus_geom_CAngle.prototype = {
	compliment: function() {
		return new tannus_geom_CAngle(360 - this.v);
	}
	,invert: function() {
		return new tannus_geom_CAngle(-this.v);
	}
	,toString: function() {
		return this.v + "°";
	}
	,toFloat: function() {
		return this.v;
	}
	,get_degrees: function() {
		return this.v;
	}
	,set_degrees: function(_v) {
		return this.v = _v;
	}
	,get_radians: function() {
		return this.v * Math.PI / 180;
	}
	,set_radians: function(_v) {
		this.v = _v * (Math.PI / 180);
		return this.v * Math.PI / 180;
	}
	,get_x: function() {
		return Math.cos(this.v * Math.PI / 180);
	}
	,get_y: function() {
		return Math.sin(this.v * Math.PI / 180);
	}
	,v: null
	,__class__: tannus_geom_CAngle
	,__properties__: {get_y:"get_y",get_x:"get_x",set_radians:"set_radians",get_radians:"get_radians",set_degrees:"set_degrees",get_degrees:"get_degrees"}
};
var tannus_geom_Arc = function(center,rad,start,end,cc) {
	if(cc == null) cc = false;
	var tmp;
	var x = this.pos.get_x();
	var y = this.pos.get_y();
	tmp = new tannus_geom_TPoint(x,y,0);
	this.pos = tmp;
	this.radius = rad;
	this.start_angle = start;
	this.end_angle = end;
	this.clockwise = !cc;
};
$hxClasses["tannus.geom.Arc"] = tannus_geom_Arc;
tannus_geom_Arc.__name__ = ["tannus","geom","Arc"];
tannus_geom_Arc.prototype = {
	clone: function() {
		return new tannus_geom_Arc(this.pos,this.radius,this.start_angle,this.end_angle,!this.clockwise);
	}
	,vectorize: function(r) {
		var c = new tannus_geom_Arc(this.pos,this.radius,this.start_angle,this.end_angle,!this.clockwise);
		var tmp;
		var this1 = this.pos;
		var tmp1;
		var what = this1.get_x();
		tmp1 = tannus_math__$Percent_Percent_$Impl_$.percent(what,r.width);
		var x = tmp1;
		var tmp2;
		var what1 = this1.get_y();
		tmp2 = tannus_math__$Percent_Percent_$Impl_$.percent(what1,r.height);
		var y = tmp2;
		tmp = new tannus_geom_TPoint(x,y,0);
		c.pos = tmp;
		var p = tannus_math__$Percent_Percent_$Impl_$.percent(this.radius,r.width * r.height);
		c.radius = p;
		return c;
	}
	,devectorize: function(r) {
		var c = new tannus_geom_Arc(this.pos,this.radius,this.start_angle,this.end_angle,!this.clockwise);
		var p = this.radius;
		c.pos = tannus_geom__$Point_Point_$Impl_$.devectorize(this.pos,r);
		c.radius = r.width * r.height * (p / 100);
		return c;
	}
	,calculateVertices: function(precision) {
		var va = new tannus_geom_VertexArray(null);
		var rang = this.end_angle.v - this.start_angle.v;
		if(precision == null) precision = Math.floor(rang);
		var i = 0;
		var tmp;
		var angle = new tannus_geom_CAngle(0);
		tmp = new tannus_geom_CVelocity(this.radius,angle);
		var v = tmp;
		while(i < precision) {
			var deg = this.start_angle.v + i * (rang / precision);
			v.angle = new tannus_geom_CAngle(deg);
			var tmp1;
			var other = v.get_vector();
			tmp1 = this.pos.plusPoint(other);
			va.push(tmp1);
			i++;
		}
		return va;
	}
	,getLines: function(precision) {
		var verts = this.calculateVertices(precision);
		return verts.calculateLines();
	}
	,get_x: function() {
		return this.pos.get_x();
	}
	,set_x: function(nx) {
		return this.pos.set_x(nx);
	}
	,get_y: function() {
		return this.pos.get_y();
	}
	,set_y: function(ny) {
		return this.pos.set_y(ny);
	}
	,pos: null
	,radius: null
	,start_angle: null
	,end_angle: null
	,clockwise: null
	,__class__: tannus_geom_Arc
	,__properties__: {set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_geom__$Area_Area_$Impl_$ = {};
$hxClasses["tannus.geom._Area.Area_Impl_"] = tannus_geom__$Area_Area_$Impl_$;
tannus_geom__$Area_Area_$Impl_$.__name__ = ["tannus","geom","_Area","Area_Impl_"];
tannus_geom__$Area_Area_$Impl_$.__properties__ = {set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
tannus_geom__$Area_Area_$Impl_$._new = function(w,h) {
	if(h == null) h = 0;
	if(w == null) w = 0;
	return [w,h];
};
tannus_geom__$Area_Area_$Impl_$.get_width = function(this1) {
	return this1[0];
};
tannus_geom__$Area_Area_$Impl_$.set_width = function(this1,nw) {
	return this1[0] = nw;
};
tannus_geom__$Area_Area_$Impl_$.get_height = function(this1) {
	return this1[1];
};
tannus_geom__$Area_Area_$Impl_$.set_height = function(this1,nh) {
	return this1[1] = nh;
};
tannus_geom__$Area_Area_$Impl_$.clone = function(this1) {
	return [this1[0],this1[1]];
};
tannus_geom__$Area_Area_$Impl_$.resize = function(this1,nw,nh,mr) {
	if(mr == null) mr = false;
	if(mr) {
		var w = this1[0];
		var h = this1[1];
		if(nw != null) {
			var rat = h / w;
			w = nw;
			h = w * rat;
			return [w,h];
		} else if(nh != null) {
			var rat1 = w / h;
			h = nh;
			w = h * rat1;
			return [w,h];
		} else throw new js__$Boot_HaxeError("GeometryError: Cannot maintain ration if both [width] and [height] are assigned!");
	} else {
		var w1 = nw != null?nw:this1[0];
		var h1 = nh != null?nh:this1[1];
		return [w1,h1];
	}
};
tannus_geom__$Area_Area_$Impl_$.toFloatTuple = function(this1) {
	return this1;
};
tannus_geom__$Area_Area_$Impl_$.toIntTuple = function(this1) {
	var tmp;
	var a = Math.round(this1[0]);
	var b = Math.round(this1[1]);
	tmp = [a,b];
	return tmp;
};
tannus_geom__$Area_Area_$Impl_$.fromTwoTuple = function(t) {
	return [t[0],t[1]];
};
tannus_geom__$Area_Area_$Impl_$.toRectangle = function(this1) {
	return new tannus_geom_CRectangle(0,0,this1[0],this1[1]);
};
tannus_geom__$Area_Area_$Impl_$.fromRectangle = function(r) {
	return [r.width,r.height];
};
tannus_geom__$Area_Area_$Impl_$.toString = function(this1) {
	return "Area<" + this1[0] + "x" + this1[1] + ">";
};
tannus_geom__$Area_Area_$Impl_$.fromString = function(s) {
	s = StringTools.replace(StringTools.replace(StringTools.replace(s,"Area",""),"<",""),">","");
	var tmp;
	var a = s.split("x").map(function(x) {
		return Std.parseFloat(x);
	});
	tmp = [a[0],a[1]];
	return tmp;
};
tannus_geom__$Area_Area_$Impl_$.toFloatArray = function(this1) {
	return [this1[0],this1[1]];
};
tannus_geom__$Area_Area_$Impl_$.toIntArray = function(this1) {
	return [this1[0],this1[1]].map(Math.round);
};
tannus_geom__$Area_Area_$Impl_$.fromFloatArray = function(a) {
	return [a[0],a[1]];
};
tannus_geom__$Area_Area_$Impl_$.fromIntArray = function(a) {
	return [a[0],a[1]];
};
tannus_geom__$Area_Area_$Impl_$.i = function(f) {
	return Math.round(f);
};
var tannus_geom_OldArea = function(w,h) {
	if(h == null) h = 0;
	if(w == null) w = 0;
	this.width = w;
	this.height = h;
};
$hxClasses["tannus.geom.OldArea"] = tannus_geom_OldArea;
tannus_geom_OldArea.__name__ = ["tannus","geom","OldArea"];
tannus_geom_OldArea.prototype = {
	width: null
	,height: null
	,__class__: tannus_geom_OldArea
};
var tannus_geom_Bezier = function(start,ctrl1,ctrl2,end) {
	this.start = start;
	this.ctrl1 = ctrl1;
	this.ctrl2 = ctrl2;
	this.end = end;
};
$hxClasses["tannus.geom.Bezier"] = tannus_geom_Bezier;
tannus_geom_Bezier.__name__ = ["tannus","geom","Bezier"];
tannus_geom_Bezier.prototype = {
	clone: function() {
		return new tannus_geom_Bezier(this.start,this.ctrl1,this.ctrl2,this.end);
	}
	,equals: function(other) {
		return this.start.equals(other.start) && this.ctrl1.equals(other.ctrl1) && this.ctrl2.equals(other.ctrl2) && this.end.equals(other.end);
	}
	,flip: function() {
		var temp = this.start.get_x();
		var nx = this.end.get_x();
		this.start.set_x(nx);
		this.end.set_x(temp);
		temp = this.ctrl1.get_x();
		var nx1 = this.ctrl2.get_x();
		this.ctrl1.set_x(nx1);
		this.ctrl2.set_x(temp);
		temp = this.start.get_y();
		var ny = this.end.get_y();
		this.start.set_y(ny);
		this.end.set_y(temp);
		temp = this.ctrl1.get_y();
		var ny1 = this.ctrl2.get_y();
		this.ctrl1.set_y(ny1);
		this.ctrl2.set_y(temp);
	}
	,getPointX: function(t) {
		if(t == 0) return this.start.get_x(); else if(t == 1) return this.end.get_x();
		var lerp = function(a,b,x) {
			return tannus_math_TMath.lerp(a,b,x);
		};
		var ix0 = lerp(this.start.get_x(),this.ctrl1.get_x(),t);
		var ix1 = lerp(this.ctrl1.get_x(),this.ctrl2.get_x(),t);
		var ix2 = lerp(this.ctrl2.get_x(),this.end.get_x(),t);
		ix0 = lerp(ix0,ix1,t);
		ix1 = lerp(ix1,ix2,t);
		return lerp(ix0,ix1,t);
	}
	,getPointY: function(t) {
		if(t == 0) return this.start.get_y(); else if(t == 1) return this.end.get_y();
		var lerp = function(a,b,x) {
			return tannus_math_TMath.lerp(a,b,x);
		};
		var iy0 = lerp(this.start.get_y(),this.ctrl1.get_y(),t);
		var iy1 = lerp(this.ctrl1.get_y(),this.ctrl2.get_y(),t);
		var iy2 = lerp(this.ctrl2.get_y(),this.end.get_y(),t);
		iy0 = lerp(iy0,iy1,t);
		iy1 = lerp(iy1,iy2,t);
		return lerp(iy0,iy1,t);
	}
	,getPoint: function(t) {
		var tmp;
		var x = this.getPointX(t);
		var y = this.getPointY(t);
		tmp = new tannus_geom_TPoint(x,y,0);
		return tmp;
	}
	,getPoints: function(prec) {
		var results = [];
		var precision = prec != null?prec:tannus_geom_Bezier.PRECISION;
		var i = 0;
		while(i < precision) {
			var tmp;
			var t = i / precision;
			var x = this.getPointX(t);
			var y = this.getPointY(t);
			tmp = new tannus_geom_TPoint(x,y,0);
			var pt = tmp;
			results.push(pt);
			i++;
		}
		return results;
	}
	,start: null
	,ctrl1: null
	,ctrl2: null
	,end: null
	,__class__: tannus_geom_Bezier
};
var tannus_geom_HitMask = function(rec,ranga) {
	this.rect = rec;
	this.ranges = ranga;
};
$hxClasses["tannus.geom.HitMask"] = tannus_geom_HitMask;
tannus_geom_HitMask.__name__ = ["tannus","geom","HitMask"];
tannus_geom_HitMask.prototype = {
	testPoint: function(pos) {
		var tmp;
		var _this = this.rect;
		var ox = pos.get_x();
		var oy = pos.get_y();
		if(ox > _this.x && ox < _this.x + _this.width) {
			if(oy > _this.y) tmp = oy < _this.y + _this.height; else tmp = false;
		} else tmp = false;
		if(tmp) {
			var tmp1;
			var tmp2;
			var f = pos.get_y();
			tmp2 = f | 0;
			var key = tmp2;
			tmp1 = this.ranges.h[key];
			var xr = tmp1;
			if(xr != null) {
				var tmp3;
				var tmp4;
				var f1 = pos.get_x();
				tmp4 = f1 | 0;
				var v = tmp4;
				if(v > xr.min) tmp3 = v < xr.max; else tmp3 = false;
				return tmp3;
			} else return false;
		} else return false;
	}
	,rect: null
	,ranges: null
	,__class__: tannus_geom_HitMask
};
var tannus_geom_Line = function(o,t) {
	this.one = o;
	this.two = t;
};
$hxClasses["tannus.geom.Line"] = tannus_geom_Line;
tannus_geom_Line.__name__ = ["tannus","geom","Line"];
tannus_geom_Line.prototype = {
	intersects: function(other) {
		var sl = new tannus_geom_Line(this.two.minusPoint(this.one),other.two.minusPoint(other.one));
		var s = (-sl.one.get_y() * (this.one.get_x() - other.one.get_x()) + sl.one.get_x() * (this.one.get_y() - other.one.get_y())) / (-sl.two.get_x() * sl.one.get_y() + sl.one.get_x() * sl.two.get_y());
		var t = (sl.two.get_x() * (this.one.get_y() - other.one.get_y()) - sl.two.get_y() * (this.one.get_x() - other.one.get_x())) / (-sl.two.get_x() * sl.one.get_y() + sl.one.get_x() * sl.two.get_y());
		return s >= 0 && s <= 1 && (t >= 0 && t <= 1);
	}
	,toString: function() {
		return "Line<(" + this.one.get_x() + ", " + this.one.get_y() + ") => (" + this.two.get_x() + ", " + this.two.get_y() + ")>";
	}
	,getPoint: function(d) {
		var tmp;
		var angle = this.one.angleTo(this.two);
		tmp = new tannus_geom_CVelocity(d,angle);
		var vel = tmp;
		var res = vel.get_vector();
		res.moveByPoint(this.one);
		res.clamp();
		return res;
	}
	,along: function(d) {
		return this.one.lerp(this.two,d);
	}
	,getVertices: function() {
		var pts = [];
		this.one.clamp();
		this.two.clamp();
		var _g1 = 0;
		var _g = Math.round(this.one.distanceFrom(this.two));
		while(_g1 < _g) {
			var i = _g1++;
			pts.push(this.getPoint(i));
		}
		return new tannus_geom_VertexArray(pts);
	}
	,get_slope: function() {
		return (this.one.get_y() - this.two.get_y()) / (this.one.get_x() - this.two.get_x());
	}
	,get_slopeRatio: function() {
		var tmp;
		var top = this.one.get_y() - this.two.get_y();
		var bottom = this.one.get_x() - this.two.get_x();
		tmp = new tannus_math_CRatio(top,bottom);
		return tmp;
	}
	,get_length: function() {
		return this.one.distanceFrom(this.two);
	}
	,get_start: function() {
		return this.one;
	}
	,set_start: function(ns) {
		return this.one = ns;
	}
	,get_end: function() {
		return this.two;
	}
	,set_end: function(ne) {
		return this.two = ne;
	}
	,get_mid: function() {
		return this.one.lerp(this.two,0.5);
	}
	,get_angle: function() {
		return this.one.angleTo(this.two);
	}
	,get_rectangle: function() {
		var min = this.one.distanceFrom(new tannus_geom_TPoint(0,0,0)) > this.two.distanceFrom(new tannus_geom_TPoint(0,0,0))?this.two:this.one;
		var max = this.one.distanceFrom(new tannus_geom_TPoint(0,0,0)) > this.two.distanceFrom(new tannus_geom_TPoint(0,0,0))?this.one:this.two;
		var tmp;
		var _x = min.get_x();
		var _y = min.get_y();
		var _width = max.get_x() - min.get_x();
		var _height = max.get_y() - min.get_y();
		tmp = new tannus_geom_CRectangle(_x,_y,_width,_height);
		return tmp;
	}
	,get_sx: function() {
		return this.one.get_x();
	}
	,set_sx: function(v) {
		return this.one.set_x(v);
	}
	,get_sy: function() {
		return this.one.get_y();
	}
	,set_sy: function(v) {
		return this.one.set_y(v);
	}
	,get_ex: function() {
		return this.two.get_x();
	}
	,set_ex: function(v) {
		return this.two.set_x(v);
	}
	,get_ey: function() {
		return this.two.get_y();
	}
	,set_ey: function(v) {
		return this.two.set_y(v);
	}
	,one: null
	,two: null
	,__class__: tannus_geom_Line
	,__properties__: {set_ey:"set_ey",get_ey:"get_ey",set_ex:"set_ex",get_ex:"get_ex",set_sy:"set_sy",get_sy:"get_sy",set_sx:"set_sx",get_sx:"get_sx",get_rectangle:"get_rectangle",get_angle:"get_angle",get_mid:"get_mid",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",get_length:"get_length",get_slopeRatio:"get_slopeRatio",get_slope:"get_slope"}
};
var tannus_geom_Matrix = function(a,b,c,d,tx,ty) {
	if(ty == null) ty = 0;
	if(tx == null) tx = 0;
	if(d == null) d = 1;
	if(c == null) c = 0;
	if(b == null) b = 0;
	if(a == null) a = 1;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.tx = tx;
	this.ty = ty;
};
$hxClasses["tannus.geom.Matrix"] = tannus_geom_Matrix;
tannus_geom_Matrix.__name__ = ["tannus","geom","Matrix"];
tannus_geom_Matrix.prototype = {
	clone: function() {
		return new tannus_geom_Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
	}
	,concat: function(m) {
		var a1 = this.a * m.a + this.b * m.c;
		this.b = this.a * m.b + this.b * m.d;
		this.a = a1;
		var c1 = this.c * m.a + this.d * m.c;
		this.d = this.c * m.b + this.d * m.d;
		this.c = c1;
		var tx1 = this.tx * m.a + this.ty * m.c + m.tx;
		this.ty = this.tx * m.b + this.ty * m.d + m.ty;
		this.tx = tx1;
	}
	,copyFrom: function(sourceMatrix) {
		this.a = sourceMatrix.a;
		this.b = sourceMatrix.b;
		this.c = sourceMatrix.c;
		this.d = sourceMatrix.d;
		this.tx = sourceMatrix.tx;
		this.ty = sourceMatrix.ty;
	}
	,createBox: function(scaleX,scaleY,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		this.a = scaleX;
		this.d = scaleY;
		this.b = rotation;
		this.tx = tx;
		this.ty = ty;
	}
	,createGradientBox: function(width,height,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		this.a = width / 1638.4;
		this.d = height / 1638.4;
		if(rotation != 0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.b = sin * this.d;
			this.c = -sin * this.a;
			this.a *= cos;
			this.d *= cos;
		} else {
			this.b = 0;
			this.c = 0;
		}
		this.tx = tx + width / 2;
		this.ty = ty + height / 2;
	}
	,equals: function(matrix) {
		return matrix != null && this.tx == matrix.tx && this.ty == matrix.ty && this.a == matrix.a && this.b == matrix.b && this.c == matrix.c && this.d == matrix.d;
	}
	,identity: function() {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.tx = 0;
		this.ty = 0;
	}
	,invert: function() {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.tx = -this.tx;
			this.ty = -this.ty;
		} else {
			norm = 1.0 / norm;
			var a1 = this.d * norm;
			this.d = this.a * norm;
			this.a = a1;
			this.b *= -norm;
			this.c *= -norm;
			var tx1 = -this.a * this.tx - this.c * this.ty;
			this.ty = -this.b * this.tx - this.d * this.ty;
			this.tx = tx1;
		}
		return this;
	}
	,mult: function(m) {
		var result = new tannus_geom_Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
		result.concat(m);
		return result;
	}
	,rotate: function(theta) {
		var cos = Math.cos(theta);
		var sin = Math.sin(theta);
		var a1 = this.a * cos - this.b * sin;
		this.b = this.a * sin + this.b * cos;
		this.a = a1;
		var c1 = this.c * cos - this.d * sin;
		this.d = this.c * sin + this.d * cos;
		this.c = c1;
		var tx1 = this.tx * cos - this.ty * sin;
		this.ty = this.tx * sin + this.ty * cos;
		this.tx = tx1;
	}
	,scale: function(sx,sy) {
		this.a *= sx;
		this.b *= sy;
		this.c *= sx;
		this.d *= sy;
		this.tx *= sx;
		this.ty *= sy;
	}
	,setRotation: function(theta,scale) {
		if(scale == null) scale = 1;
		this.a = Math.cos(theta) * scale;
		this.c = Math.sin(theta) * scale;
		this.b = -this.c;
		this.d = this.a;
	}
	,setTo: function(a,b,c,d,tx,ty) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
		this.tx = tx;
		this.ty = ty;
	}
	,toString: function() {
		return "Matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")";
	}
	,transformPoint: function(pos,newpos) {
		if(newpos == null) newpos = new tannus_geom_TPoint(0,0,0);
		var x = pos.get_x();
		var y = pos.get_y();
		newpos.set_x(this.a * x + this.c * y + this.tx);
		newpos.set_y(this.b * x + this.d * y + this.ty);
		return newpos;
	}
	,translate: function(dx,dy) {
		var m = new tannus_geom_Matrix();
		m.tx = dx;
		m.ty = dy;
		this.concat(m);
	}
	,__cleanValues: function() {
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,a: null
	,b: null
	,c: null
	,d: null
	,tx: null
	,ty: null
	,__class__: tannus_geom_Matrix
};
var tannus_geom_Path = function() {
	this._verts = null;
	this.commands = [];
};
$hxClasses["tannus.geom.Path"] = tannus_geom_Path;
tannus_geom_Path.__name__ = ["tannus","geom","Path"];
tannus_geom_Path.prototype = {
	vertex: function(x,y) {
		var p = new tannus_geom_TPoint(x,y,0);
		var c = tannus_geom_PathCommand.PCPoint(p);
		this.commands.push(c);
	}
	,addPoint: function(p) {
		var c = tannus_geom_PathCommand.PCPoint(p);
		this.commands.push(c);
	}
	,line: function(start,end) {
		var line = new tannus_geom_Line(start,end);
		var c = tannus_geom_PathCommand.PCLine(line);
		this.commands.push(c);
	}
	,addLine: function(line) {
		var c = tannus_geom_PathCommand.PCLine(line);
		this.commands.push(c);
	}
	,arc: function(center,radius,start_angle,end_angle,counterClockwise) {
		if(counterClockwise == null) counterClockwise = false;
		var arc = new tannus_geom_Arc(center,radius,start_angle,end_angle,counterClockwise);
		var c = tannus_geom_PathCommand.PCArc(arc);
		this.commands.push(c);
	}
	,addArc: function(arc) {
		var c = tannus_geom_PathCommand.PCArc(arc);
		this.commands.push(c);
	}
	,bezier: function(ctrl1,ctrl2,goal) {
		var b = new tannus_geom_Bezier(new tannus_geom_TPoint(0,0,0),ctrl1,ctrl2,goal);
		var c = tannus_geom_PathCommand.PCBezier(b);
		this.commands.push(c);
	}
	,addBezier: function(b) {
		var c = tannus_geom_PathCommand.PCBezier(b);
		this.commands.push(c);
	}
	,addPath: function(sub) {
		if(sub != this) {
			var c = tannus_geom_PathCommand.PCSub(sub);
			this.commands.push(c);
		}
	}
	,add: function(component) {
		component.addToPath(this);
	}
	,cmd: function(c) {
		this.commands.push(c);
	}
	,commandVertices: function(c,cursor,precision) {
		switch(c[1]) {
		case 0:
			this._verts.push(c[2]);
			break;
		case 1:
			var line = c[2];
			return new tannus_geom_VertexArray([line.one,line.two]);
		case 2:
			var arc = c[2];
			if(cursor != null) arc.pos.copyFrom(cursor);
			return arc.calculateVertices(precision);
		case 3:
			var bezier = c[2];
			if(cursor != null) bezier.start.copyFrom(cursor);
			var tmp;
			var tmp1;
			var results = [];
			var precision1 = precision != null?precision:tannus_geom_Bezier.PRECISION;
			var i = 0;
			while(i < precision1) {
				var tmp2;
				var t = i / precision1;
				var x = bezier.getPointX(t);
				var y = bezier.getPointY(t);
				tmp2 = new tannus_geom_TPoint(x,y,0);
				var pt = tmp2;
				results.push(pt);
				i++;
			}
			tmp1 = results;
			var list = tmp1;
			tmp = new tannus_geom_VertexArray(list);
			return tmp;
		case 4:
			return c[2].calculateVertices(precision);
		}
		return this._verts;
	}
	,calculateVertices: function(precision) {
		this._verts = new tannus_geom_VertexArray(null);
		var _g = 0;
		var _g1 = this.commands;
		while(_g < _g1.length) {
			var cmd = _g1[_g];
			++_g;
			var curs = this._verts.get(this._verts.data.length - 1);
			var cmd_verts = this.commandVertices(cmd,curs,precision);
			if(cmd_verts != this._verts) this._verts.append(cmd_verts);
		}
		return this._verts;
	}
	,_verts: null
	,commands: null
	,__class__: tannus_geom_Path
};
var tannus_geom_PathCommand = $hxClasses["tannus.geom.PathCommand"] = { __ename__ : ["tannus","geom","PathCommand"], __constructs__ : ["PCPoint","PCLine","PCArc","PCBezier","PCSub"] };
tannus_geom_PathCommand.PCPoint = function(pt) { var $x = ["PCPoint",0,pt]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
tannus_geom_PathCommand.PCLine = function(line) { var $x = ["PCLine",1,line]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
tannus_geom_PathCommand.PCArc = function(arc) { var $x = ["PCArc",2,arc]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
tannus_geom_PathCommand.PCBezier = function(bez) { var $x = ["PCBezier",3,bez]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
tannus_geom_PathCommand.PCSub = function(path) { var $x = ["PCSub",4,path]; $x.__enum__ = tannus_geom_PathCommand; $x.toString = $estr; return $x; };
var tannus_geom_PathComponent = function() { };
$hxClasses["tannus.geom.PathComponent"] = tannus_geom_PathComponent;
tannus_geom_PathComponent.__name__ = ["tannus","geom","PathComponent"];
tannus_geom_PathComponent.prototype = {
	addToPath: null
	,__class__: tannus_geom_PathComponent
};
var tannus_geom__$Point_Point_$Impl_$ = {};
$hxClasses["tannus.geom._Point.Point_Impl_"] = tannus_geom__$Point_Point_$Impl_$;
tannus_geom__$Point_Point_$Impl_$.__name__ = ["tannus","geom","_Point","Point_Impl_"];
tannus_geom__$Point_Point_$Impl_$.__properties__ = {get_d:"get_d",set_iz:"set_iz",get_iz:"get_iz",set_iy:"set_iy",get_iy:"get_iy",set_ix:"set_ix",get_ix:"get_ix",set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
tannus_geom__$Point_Point_$Impl_$._new = function(x,y,z) {
	if(z == null) z = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	return new tannus_geom_TPoint(x,y,z);
};
tannus_geom__$Point_Point_$Impl_$.get_x = function(this1) {
	return this1.get_x();
};
tannus_geom__$Point_Point_$Impl_$.set_x = function(this1,nx) {
	return this1.set_x(nx);
};
tannus_geom__$Point_Point_$Impl_$.get_y = function(this1) {
	return this1.get_y();
};
tannus_geom__$Point_Point_$Impl_$.set_y = function(this1,ny) {
	return this1.set_y(ny);
};
tannus_geom__$Point_Point_$Impl_$.get_z = function(this1) {
	return this1.get_z();
};
tannus_geom__$Point_Point_$Impl_$.set_z = function(this1,nz) {
	return this1.set_z(nz);
};
tannus_geom__$Point_Point_$Impl_$.get_ix = function(this1) {
	var tmp;
	var f = this1.get_x();
	tmp = f | 0;
	return tmp;
};
tannus_geom__$Point_Point_$Impl_$.set_ix = function(this1,nix) {
	var tmp;
	var f = this1.set_x(nix);
	tmp = f | 0;
	return tmp;
};
tannus_geom__$Point_Point_$Impl_$.get_iy = function(this1) {
	var tmp;
	var f = this1.get_y();
	tmp = f | 0;
	return tmp;
};
tannus_geom__$Point_Point_$Impl_$.set_iy = function(this1,niy) {
	var tmp;
	var f = this1.set_y(niy);
	tmp = f | 0;
	return tmp;
};
tannus_geom__$Point_Point_$Impl_$.get_iz = function(this1) {
	var tmp;
	var f = this1.get_z();
	tmp = f | 0;
	return tmp;
};
tannus_geom__$Point_Point_$Impl_$.set_iz = function(this1,niz) {
	var tmp;
	var f = this1.set_z(niz);
	tmp = f | 0;
	return tmp;
};
tannus_geom__$Point_Point_$Impl_$.get_d = function(this1) {
	return this1.distanceFrom(new tannus_geom_TPoint(0,0,0));
};
tannus_geom__$Point_Point_$Impl_$.transform = function(this1,m) {
	return m.transformPoint(this1.clone());
};
tannus_geom__$Point_Point_$Impl_$.moveByPoint = function(this1,p) {
	return this1.moveByPoint(p);
};
tannus_geom__$Point_Point_$Impl_$.moveByFloat = function(this1,n) {
	return this1.moveByFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.moveByInt = function(this1,n) {
	return this1.moveByFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.plusPoint = function(this1,other) {
	return this1.plusPoint(other);
};
tannus_geom__$Point_Point_$Impl_$.plusFloat = function(this1,n) {
	return this1.plusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.plusInt = function(this1,n) {
	return this1.plusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.iminusPoint = function(this1,p) {
	return this1.iminusPoint(p);
};
tannus_geom__$Point_Point_$Impl_$.iminusFloat = function(this1,n) {
	return this1.iminusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.minusPoint = function(this1,p) {
	return this1.minusPoint(p);
};
tannus_geom__$Point_Point_$Impl_$.minusFloat = function(this1,n) {
	return this1.minusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.minusInt = function(this1,n) {
	return this1.minusFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.dividePoint = function(this1,p) {
	return this1.dividePoint(p);
};
tannus_geom__$Point_Point_$Impl_$.divideFloat = function(this1,d) {
	return this1.divideFloat(d);
};
tannus_geom__$Point_Point_$Impl_$.multPoint = function(this1,p) {
	return this1.multPoint(p);
};
tannus_geom__$Point_Point_$Impl_$.multFloat = function(this1,n) {
	return this1.multFloat(n);
};
tannus_geom__$Point_Point_$Impl_$.negate = function(this1) {
	return this1.negate();
};
tannus_geom__$Point_Point_$Impl_$.greaterThan = function(this1,other) {
	return this1.distanceFrom(new tannus_geom_TPoint(0,0,0)) > other.distanceFrom(new tannus_geom_TPoint(0,0,0));
};
tannus_geom__$Point_Point_$Impl_$.lessThan = function(this1,other) {
	return !(this1.distanceFrom(new tannus_geom_TPoint(0,0,0)) > other.distanceFrom(new tannus_geom_TPoint(0,0,0)));
};
tannus_geom__$Point_Point_$Impl_$.equals = function(this1,p) {
	return this1.equals(p);
};
tannus_geom__$Point_Point_$Impl_$.nequals = function(this1,p) {
	return this1.nequals(p);
};
tannus_geom__$Point_Point_$Impl_$.vectorize = function(this1,r) {
	var tmp;
	var tmp1;
	var what = this1.get_x();
	tmp1 = tannus_math__$Percent_Percent_$Impl_$.percent(what,r.width);
	var x = tmp1;
	var tmp2;
	var what1 = this1.get_y();
	tmp2 = tannus_math__$Percent_Percent_$Impl_$.percent(what1,r.height);
	var y = tmp2;
	tmp = new tannus_geom_TPoint(x,y,0);
	return tmp;
};
tannus_geom__$Point_Point_$Impl_$.devectorize = function(this1,r) {
	var tmp;
	var f = this1.get_x();
	tmp = f;
	var px = tmp;
	var tmp1;
	var f1 = this1.get_y();
	tmp1 = f1;
	var py = tmp1;
	return new tannus_geom_TPoint(r.width * (px / 100),r.height * (py / 100),0);
};
tannus_geom__$Point_Point_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_geom__$Point_Point_$Impl_$.toArray = function(this1) {
	return this1.toArray();
};
tannus_geom__$Point_Point_$Impl_$.fromFloatArray = function(a) {
	return tannus_geom_TPoint.fromFloatArray(a);
};
tannus_geom__$Point_Point_$Impl_$.fromIntArray = function(a) {
	return tannus_geom_TPoint.fromFloatArray(a);
};
tannus_geom__$Point_Point_$Impl_$.perc = function(what,of) {
	return tannus_math__$Percent_Percent_$Impl_$.percent(what,of);
};
tannus_geom__$Point_Point_$Impl_$.createLinked = function(x,y,z) {
	return new tannus_geom_LinkedPoint(x,y,z);
};
tannus_geom__$Point_Point_$Impl_$.createLinkedFromPointRef = function(p) {
	var x = new tannus_io__$Pointer_Ref(function() {
		var tmp;
		var this1 = p();
		tmp = this1.get_x();
		return tmp;
	},function(v) {
		var tmp1;
		var this2 = p();
		tmp1 = this2.set_x(v);
		return tmp1;
	});
	var y = new tannus_io__$Pointer_Ref(function() {
		var tmp2;
		var this3 = p();
		tmp2 = this3.get_y();
		return tmp2;
	},function(v1) {
		var tmp3;
		var this4 = p();
		tmp3 = this4.set_y(v1);
		return tmp3;
	});
	var z = new tannus_io__$Pointer_Ref(function() {
		var tmp4;
		var this5 = p();
		tmp4 = this5.get_z();
		return tmp4;
	},function(v2) {
		var tmp5;
		var this6 = p();
		tmp5 = this6.set_z(v2);
		return tmp5;
	});
	return new tannus_geom_LinkedPoint(x,y,z);
};
var tannus_geom_TPoint = function(x,y,z) {
	this._x = x;
	this._y = y;
	this._z = z;
};
$hxClasses["tannus.geom.TPoint"] = tannus_geom_TPoint;
tannus_geom_TPoint.__name__ = ["tannus","geom","TPoint"];
tannus_geom_TPoint.__interfaces__ = [tannus_ds_Comparable];
tannus_geom_TPoint.fromFloatArray = function(a) {
	var ma = a;
	var tmp;
	var this1 = ma[0];
	if(this1 != null) tmp = this1; else tmp = 0;
	var tmp1;
	var this2 = ma[1];
	if(this2 != null) tmp1 = this2; else tmp1 = 0;
	var tmp2;
	var this3 = ma[2];
	if(this3 != null) tmp2 = this3; else tmp2 = 0;
	return new tannus_geom_TPoint(tmp,tmp1,tmp2);
};
tannus_geom_TPoint.prototype = {
	angleTo: function(other) {
		var tmp;
		var tmp1;
		var x1 = this.get_x();
		var y1 = this.get_y();
		var x2 = other.get_x();
		var y2 = other.get_y();
		var radians = Math.atan2(y2 - y1,x2 - x1);
		tmp1 = radians * 180 / 3.141592653589793;
		var v = tmp1;
		tmp = new tannus_geom_CAngle(v);
		return tmp;
	}
	,distanceFrom: function(other) {
		return Math.sqrt(Math.pow(Math.abs(this.get_x() - other.get_x()),2) + Math.pow(Math.abs(this.get_y() - other.get_y()),2));
	}
	,copyFrom: function(p) {
		this.set_x(p.get_x());
		this.set_y(p.get_y());
		this.set_z(p.get_z());
	}
	,plusPoint: function(other) {
		var tmp;
		var x = this.get_x() + other.get_x();
		var y = this.get_y() + other.get_y();
		var z = this.get_z() + other.get_z();
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,plusFloat: function(n) {
		var tmp;
		var x = this.get_x() + n;
		var y = this.get_y() + n;
		var z = this.get_z() + n;
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,moveByPoint: function(other) {
		var _g = this;
		_g.set_x(_g.get_x() + other.get_x());
		var _g1 = this;
		_g1.set_y(_g1.get_y() + other.get_y());
		var _g2 = this;
		_g2.set_z(_g2.get_z() + other.get_z());
		return this;
	}
	,moveByFloat: function(n) {
		var _g = this;
		_g.set_x(_g.get_x() + n);
		var _g1 = this;
		_g1.set_y(_g1.get_y() + n);
		var _g2 = this;
		_g2.set_z(_g2.get_z() + n);
		return this;
	}
	,minusPoint: function(other) {
		var tmp;
		var x = this.get_x() - other.get_x();
		var y = this.get_y() - other.get_y();
		var z = this.get_z() - other.get_z();
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,minusFloat: function(n) {
		var tmp;
		var x = this.get_x() - n;
		var y = this.get_y() - n;
		var z = this.get_z() - n;
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,iminusPoint: function(other) {
		this.moveByPoint(other.negate());
		return this;
	}
	,iminusFloat: function(n) {
		this.moveByFloat(-n);
		return this;
	}
	,dividePoint: function(d) {
		var tmp;
		var x = this.get_x() / d.get_x();
		var y = this.get_y() / d.get_y();
		var z = this.get_z() != 0?this.get_z() / d.get_z():0;
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,divideFloat: function(f) {
		var tmp;
		var x = this.get_x() / f;
		var y = this.get_y() / f;
		var z = this.get_z() != 0?this.get_z() / f:0;
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,multPoint: function(p) {
		var tmp;
		var x = this.get_x() * p.get_x();
		var y = this.get_y() * p.get_y();
		var z = this.get_z() * p.get_z();
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,multFloat: function(n) {
		var tmp;
		var x = this.get_x() * n;
		var y = this.get_y() * n;
		var z = this.get_z() * n;
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,negate: function() {
		return this.multFloat(-1);
	}
	,clone: function() {
		var tmp;
		var x = this.get_x();
		var y = this.get_y();
		var z = this.get_z();
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,clamp: function() {
		var tmp;
		var f = this.get_x();
		tmp = f | 0;
		this.set_x(tmp);
		var tmp1;
		var f1 = this.get_y();
		tmp1 = f1 | 0;
		this.set_y(tmp1);
		var tmp2;
		var f2 = this.get_z();
		tmp2 = f2 | 0;
		this.set_z(tmp2);
	}
	,clamped: function() {
		var tmp;
		var tmp1;
		var f = this.get_x();
		tmp1 = f | 0;
		var x = tmp1;
		var tmp2;
		var f1 = this.get_y();
		tmp2 = f1 | 0;
		var y = tmp2;
		var tmp3;
		var f2 = this.get_z();
		tmp3 = f2 | 0;
		var z = tmp3;
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,lerp: function(other,weight) {
		var tmp;
		var tmp1;
		var a = this.get_x();
		var b = other.get_x();
		tmp1 = a + weight * (b - a);
		var x = tmp1;
		var tmp2;
		var a1 = this.get_y();
		var b1 = other.get_y();
		tmp2 = a1 + weight * (b1 - a1);
		var y = tmp2;
		var tmp3;
		var a2 = this.get_z();
		var b2 = other.get_z();
		tmp3 = a2 + weight * (b2 - a2);
		var z = tmp3;
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,mutate: function(f) {
		var tmp;
		var x = f(this.get_x());
		var y = f(this.get_y());
		var z = f(this.get_z());
		tmp = new tannus_geom_TPoint(x,y,z);
		return tmp;
	}
	,imutate: function(f) {
		this.set_x(f(this.get_x()));
		this.set_y(f(this.get_y()));
		this.set_z(f(this.get_z()));
		return this;
	}
	,equals: function(other) {
		return this.get_x() == other.get_x() && this.get_y() == other.get_y() && this.get_z() == other.get_z();
	}
	,nequals: function(other) {
		return !this.equals(other);
	}
	,toString: function() {
		return "Point(" + this.get_x() + ", " + this.get_y() + ", " + this.get_z() + ")";
	}
	,toArray: function() {
		return [this.get_x(),this.get_y(),this.get_z()];
	}
	,get_x: function() {
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,get_z: function() {
		return this._z;
	}
	,set_x: function(v) {
		return this._x = v;
	}
	,set_y: function(v) {
		return this._y = v;
	}
	,set_z: function(v) {
		return this._z = v;
	}
	,_x: null
	,_y: null
	,_z: null
	,__class__: tannus_geom_TPoint
	,__properties__: {set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_geom_LinkedPoint = function(x,y,z) {
	var _g = this;
	tannus_geom_TPoint.call(this,0,0,0);
	this.rx = x;
	this.ry = y;
	this.rz = z != null?z:new tannus_io__$Pointer_Ref(function() {
		return _g._z;
	},function(v) {
		return _g._z = v;
	});
};
$hxClasses["tannus.geom.LinkedPoint"] = tannus_geom_LinkedPoint;
tannus_geom_LinkedPoint.__name__ = ["tannus","geom","LinkedPoint"];
tannus_geom_LinkedPoint.__super__ = tannus_geom_TPoint;
tannus_geom_LinkedPoint.prototype = $extend(tannus_geom_TPoint.prototype,{
	get_x: function() {
		return this.rx.get();
	}
	,get_y: function() {
		return this.ry.get();
	}
	,get_z: function() {
		return this.rz.get();
	}
	,set_x: function(v) {
		return this.rx.set(v);
	}
	,set_y: function(v) {
		return this.ry.set(v);
	}
	,set_z: function(v) {
		return this.rz.set(v);
	}
	,rx: null
	,ry: null
	,rz: null
	,__class__: tannus_geom_LinkedPoint
});
var tannus_geom__$Rectangle_Rectangle_$Impl_$ = {};
$hxClasses["tannus.geom._Rectangle.Rectangle_Impl_"] = tannus_geom__$Rectangle_Rectangle_$Impl_$;
tannus_geom__$Rectangle_Rectangle_$Impl_$.__name__ = ["tannus","geom","_Rectangle","Rectangle_Impl_"];
tannus_geom__$Rectangle_Rectangle_$Impl_$._new = function(_x,_y,_width,_height) {
	if(_height == null) _height = 0;
	if(_width == null) _width = 0;
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	return new tannus_geom_CRectangle(_x,_y,_width,_height);
};
tannus_geom__$Rectangle_Rectangle_$Impl_$.eq = function(this1,o) {
	return this1.equals(o);
};
tannus_geom__$Rectangle_Rectangle_$Impl_$.floatDiv = function(this1,o) {
	return this1.divide(tannus_ds__$EitherType_EitherType_$Impl_$.fromL(o));
};
tannus_geom__$Rectangle_Rectangle_$Impl_$.rectDiv = function(this1,r) {
	var tmp;
	var e = tannus_ds_Either.Right(r);
	tmp = e;
	return this1.divide(tmp);
};
tannus_geom__$Rectangle_Rectangle_$Impl_$.fromArray = function(a) {
	switch(a.length) {
	case 2:
		var h = a[1];
		var w = a[0];
		return new tannus_geom_CRectangle(0,0,w,h);
	case 4:
		var h1 = a[3];
		var w1 = a[2];
		var y = a[1];
		var x = a[0];
		return new tannus_geom_CRectangle(x,y,w1,h1);
	default:
		return new tannus_geom_CRectangle(a[0],a[1],a[2],a[3]);
	}
};
var tannus_geom_Shape = function() { };
$hxClasses["tannus.geom.Shape"] = tannus_geom_Shape;
tannus_geom_Shape.__name__ = ["tannus","geom","Shape"];
tannus_geom_Shape.prototype = {
	getVertices: null
	,__class__: tannus_geom_Shape
};
var tannus_geom_CRectangle = function(_x,_y,_width,_height) {
	if(_height == null) _height = 0;
	if(_width == null) _width = 0;
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	this.x = _x;
	this.y = _y;
	this.z = 0;
	this.width = _width;
	this.height = _height;
	this.depth = 0;
};
$hxClasses["tannus.geom.CRectangle"] = tannus_geom_CRectangle;
tannus_geom_CRectangle.__name__ = ["tannus","geom","CRectangle"];
tannus_geom_CRectangle.__interfaces__ = [tannus_geom_Shape];
tannus_geom_CRectangle.perc = function(what,of) {
	return tannus_math__$Percent_Percent_$Impl_$.percent(what,of);
};
tannus_geom_CRectangle.prototype = {
	clone: function() {
		var r = new tannus_geom_CRectangle(this.x,this.y,this.width,this.height);
		r.z = this.z;
		r.depth = this.depth;
		return r;
	}
	,cloneFrom: function(other) {
		this.x = other.x;
		this.y = other.y;
		this.z = other.z;
		this.width = other.width;
		this.height = other.height;
		this.depth = other.depth;
	}
	,equals: function(other) {
		return this.x == other.x && this.y == other.y && this.z == other.z && this.width == other.width && this.height == other.height && this.depth == other.depth;
	}
	,divide: function(div) {
		{
			var _g = div;
			switch(_g[1]) {
			case 0:
				var f = _g[2];
				return new tannus_geom_CRectangle(this.x,this.y,this.width / f,this.height / f);
			case 1:
				var r = _g[2];
				return new tannus_geom_CRectangle(this.x,this.y,this.width / r.width,this.height / r.height);
			}
		}
	}
	,contains: function(ox,oy) {
		return ox > this.x && ox < this.x + this.width && (oy > this.y && oy < this.y + this.height);
	}
	,containsPoint: function(point) {
		var tmp;
		var ox = point.get_x();
		var oy = point.get_y();
		if(ox > this.x && ox < this.x + this.width) {
			if(oy > this.y) tmp = oy < this.y + this.height; else tmp = false;
		} else tmp = false;
		return tmp;
	}
	,containsRect: function(o) {
		var tmp;
		var point = new tannus_geom_TPoint(o.x + o.width / 2,o.y + o.height / 2,0);
		var ox = point.get_x();
		var oy = point.get_y();
		if(ox > this.x && ox < this.x + this.width) {
			if(oy > this.y) tmp = oy < this.y + this.height; else tmp = false;
		} else tmp = false;
		if(tmp) return true; else {
			var _g = 0;
			var _g1 = o.get_corners();
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				var tmp1;
				var ox1 = p.get_x();
				var oy1 = p.get_y();
				if(ox1 > this.x && ox1 < this.x + this.width) {
					if(oy1 > this.y) tmp1 = oy1 < this.y + this.height; else tmp1 = false;
				} else tmp1 = false;
				if(tmp1) return true;
			}
			return false;
		}
	}
	,enlarge: function(dw,dh) {
		var _g = this;
		_g.width = _g.width + dw;
		var _g1 = this;
		_g1.height = _g1.height + dh;
		this.x -= dw / 2;
		this.y -= dh / 2;
	}
	,move: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,scale: function(sw,sh) {
		if(sw != null) {
			var ratio = sw / this.width;
			this.width = sw;
			this.height = ratio * this.height;
		} else if(sh != null) {
			var ratio1 = sh / this.height;
			this.width = ratio1 * this.width;
			this.height = sh;
		} else return;
	}
	,scaled: function(sw,sh) {
		var s = this.clone();
		s.scale(sw,sh);
		return s;
	}
	,percentScale: function(amount) {
		this.width = this.width * (amount / 100);
		this.height = this.height * (amount / 100);
	}
	,percentScaled: function(amount) {
		return new tannus_geom_CRectangle(this.x,this.y,this.width * (amount / 100),this.height * (amount / 100));
	}
	,rotated: function(angle) {
		var rads = angle.v * Math.PI / 180;
		var nw = Math.abs(this.width * Math.sin(rads) + Math.abs(this.height * Math.cos(rads)));
		var nh = Math.abs(this.width * Math.cos(rads) + Math.abs(this.height * Math.sin(rads)));
		return new tannus_geom_CRectangle(this.x,this.y,nw,nh);
	}
	,split: function(count,vertical) {
		if(vertical == null) vertical = true;
		var all = [];
		if(vertical) {
			var ph = this.height / count;
			var _g = 0;
			while(_g < count) {
				var i = _g++;
				all.push(new tannus_geom_CRectangle(this.x,this.y + i * ph,this.width,ph));
			}
		} else {
			var pw = this.width / count;
			var _g1 = 0;
			while(_g1 < count) {
				var i1 = _g1++;
				all.push(new tannus_geom_CRectangle(this.x + i1 * pw,this.y,pw,this.height));
			}
		}
		return all;
	}
	,split2: function(count) {
		return this.split(count,true).map(function(r) {
			return r.split(count,false);
		});
	}
	,bisect: function(mode) {
		if(mode == null) mode = true;
		var pair = [];
		if(mode) {
			pair.push(new tannus_geom_Triangle(new tannus_geom_TPoint(this.x,this.y,0),new tannus_geom_TPoint(this.x + this.width,this.y,0),new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0)));
			pair.push(new tannus_geom_Triangle(new tannus_geom_TPoint(this.x,this.y,0),new tannus_geom_TPoint(this.x,this.y + this.height,0),new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0)));
		} else {
			pair.push(new tannus_geom_Triangle(new tannus_geom_TPoint(this.x + this.width,this.y,0),new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0),new tannus_geom_TPoint(this.x,this.y + this.height,0)));
			pair.push(new tannus_geom_Triangle(new tannus_geom_TPoint(this.x,this.y + this.height,0),new tannus_geom_TPoint(this.x,this.y,0),new tannus_geom_TPoint(this.x + this.width,this.y,0)));
		}
		return pair;
	}
	,bisect2: function() {
		return tannus_ds_ArrayTools.flatten(this.bisect().map(function(t) {
			return t.bisect();
		}));
	}
	,crop: function(cr) {
		var corners = cr.get_corners().map($bind(this,this.containsPoint));
		if(Lambda.has(corners,false)) return null;
		var left = new tannus_geom_CRectangle(this.x,this.y,cr.x - this.x,this.height);
		var top = new tannus_geom_CRectangle(cr.x,this.y,cr.width,cr.y - this.y);
		var bottom = new tannus_geom_CRectangle(cr.x,cr.y + cr.height,cr.width,this.y + this.height);
		bottom.height -= bottom.y;
		var right = new tannus_geom_CRectangle(cr.x + cr.width,this.y,0,this.height);
		right.width = this.x + this.width - right.x;
		return { 'top' : top, 'left' : left, 'bottom' : bottom, 'right' : right};
	}
	,vectorize: function(r) {
		var tmp;
		var this1 = new tannus_geom_TPoint(this.x,this.y,0);
		var tmp3;
		var what = this1.get_x();
		tmp3 = tannus_math__$Percent_Percent_$Impl_$.percent(what,r.width);
		var x = tmp3;
		var tmp4;
		var what1 = this1.get_y();
		tmp4 = tannus_math__$Percent_Percent_$Impl_$.percent(what1,r.height);
		var y = tmp4;
		tmp = new tannus_geom_TPoint(x,y,0);
		var pos = tmp;
		var tmp1;
		var w = tannus_math__$Percent_Percent_$Impl_$.percent(this.width,r.width);
		var h = tannus_math__$Percent_Percent_$Impl_$.percent(this.height,r.height);
		tmp1 = [w,h];
		var dim = tmp1;
		var tmp2;
		var _x = pos.get_x();
		var _y = pos.get_y();
		tmp2 = new tannus_geom_CRectangle(_x,_y,dim[0],dim[1]);
		return tmp2;
	}
	,devectorize: function(r) {
		var px = this.x;
		var py = this.y;
		var pw = this.width;
		var ph = this.height;
		return new tannus_geom_CRectangle(r.width * (px / 100),r.height * (py / 100),r.width * (pw / 100),r.height * (ph / 100));
	}
	,getVertices: function(precision) {
		var self = this;
		var tmp;
		var v = [new tannus_geom_TPoint(self.x,self.y,0),new tannus_geom_TPoint(self.x + self.width,self.y,0),new tannus_geom_TPoint(self.x + self.width,self.y + self.height,0),new tannus_geom_TPoint(self.x,self.y + self.height,0)];
		tmp = new tannus_geom_VertexArray(v);
		var verts = tmp;
		return verts;
	}
	,getCornerPointers: function() {
		var _g = this;
		var result = [new tannus_io__$Pointer_Ref(function() {
			return new tannus_geom_TPoint(_g.x,_g.y,0);
		},function(v) {
			return _g.set_topLeft(v);
		}),new tannus_io__$Pointer_Ref(function() {
			return new tannus_geom_TPoint(_g.x + _g.width,_g.y,0);
		},function(v1) {
			return _g.set_topRight(v1);
		}),new tannus_io__$Pointer_Ref(function() {
			return new tannus_geom_TPoint(_g.x,_g.y + _g.height,0);
		},function(v2) {
			return _g.set_bottomLeft(v2);
		}),new tannus_io__$Pointer_Ref(function() {
			return new tannus_geom_TPoint(_g.x + _g.width,_g.y + _g.height,0);
		},function(v3) {
			return _g.set_bottomRight(v3);
		})];
		return result;
	}
	,layers: function() {
		var results = [];
		var _g1 = Math.round(this.z);
		var _g = Math.round(this.z + this.depth);
		while(_g1 < _g) {
			var i = _g1++;
			var layer = new tannus_geom_CRectangle(this.x,this.y,this.width,this.height);
			layer.z = i;
			results.push(layer);
		}
		return results;
	}
	,toString: function() {
		return "Rectangle(" + this.x + ", " + this.y + ", " + this.width + ", " + this.height + ")";
	}
	,get_position: function() {
		return new tannus_geom_TPoint(this.x,this.y,this.z);
	}
	,set_position: function(np) {
		this.x = np.get_x();
		this.y = np.get_y();
		this.z = np.get_z();
		return new tannus_geom_TPoint(this.x,this.y,this.z);
	}
	,get_corners: function() {
		return [new tannus_geom_TPoint(this.x,this.y,0),new tannus_geom_TPoint(this.x + this.width,this.y,0),new tannus_geom_TPoint(this.x,this.y + this.height,0),new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0)];
	}
	,get_area: function() {
		return this.width * this.height;
	}
	,get_centerX: function() {
		return this.x + this.width / 2;
	}
	,set_centerX: function(v) {
		return this.x = v - this.width / 2;
	}
	,get_centerY: function() {
		return this.y + this.height / 2;
	}
	,set_centerY: function(v) {
		return this.y = v - this.height / 2;
	}
	,get_center: function() {
		return new tannus_geom_TPoint(this.x + this.width / 2,this.y + this.height / 2,0);
	}
	,set_center: function(nc) {
		var v = nc.get_x();
		this.x = v - this.width / 2;
		var v1 = nc.get_y();
		this.y = v1 - this.height / 2;
		return nc;
	}
	,get_topRight: function() {
		return new tannus_geom_TPoint(this.x + this.width,this.y,0);
	}
	,set_topRight: function(v) {
		this.x = v.get_x() - this.width;
		this.y = v.get_y();
		return new tannus_geom_TPoint(this.x + this.width,this.y,0);
	}
	,get_topLeft: function() {
		return new tannus_geom_TPoint(this.x,this.y,0);
	}
	,set_topLeft: function(v) {
		this.x = v.get_x();
		this.y = v.get_y();
		return new tannus_geom_TPoint(this.x,this.y,0);
	}
	,get_bottomLeft: function() {
		return new tannus_geom_TPoint(this.x,this.y + this.height,0);
	}
	,set_bottomLeft: function(v) {
		this.x = v.get_x();
		this.y = v.get_y() - this.height;
		return new tannus_geom_TPoint(this.x,this.y + this.height,0);
	}
	,get_bottomRight: function() {
		return new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0);
	}
	,set_bottomRight: function(v) {
		this.x = v.get_x() - this.width;
		this.y = v.get_y() - this.height;
		return new tannus_geom_TPoint(this.x + this.width,this.y + this.height,0);
	}
	,get_w: function() {
		return this.width;
	}
	,set_w: function(nw) {
		return this.width = nw;
	}
	,get_h: function() {
		return this.height;
	}
	,set_h: function(nh) {
		return this.height = nh;
	}
	,get_d: function() {
		return this.depth;
	}
	,set_d: function(nd) {
		return this.depth = nd;
	}
	,x: null
	,y: null
	,z: null
	,width: null
	,height: null
	,depth: null
	,__class__: tannus_geom_CRectangle
	,__properties__: {set_d:"set_d",get_d:"get_d",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottomLeft:"set_bottomLeft",get_bottomLeft:"get_bottomLeft",set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_topRight:"set_topRight",get_topRight:"get_topRight",set_center:"set_center",get_center:"get_center",set_centerY:"set_centerY",get_centerY:"get_centerY",set_centerX:"set_centerX",get_centerX:"get_centerX",get_area:"get_area",get_corners:"get_corners",set_position:"set_position",get_position:"get_position"}
};
var tannus_geom_Triangle = function(x,y,z) {
	this.one = x != null?x:new tannus_geom_TPoint(0,0,0);
	this.two = y != null?y:new tannus_geom_TPoint(0,0,0);
	this.three = z != null?z:new tannus_geom_TPoint(0,0,0);
};
$hxClasses["tannus.geom.Triangle"] = tannus_geom_Triangle;
tannus_geom_Triangle.__name__ = ["tannus","geom","Triangle"];
tannus_geom_Triangle.__interfaces__ = [tannus_geom_Shape];
tannus_geom_Triangle.prototype = {
	clone: function() {
		return new tannus_geom_Triangle(this.one.clone(),this.two.clone(),this.three.clone());
	}
	,bisect: function() {
		var tmp;
		var _this = new tannus_geom_Line(this.one,this.three);
		tmp = _this.one.lerp(_this.two,0.5);
		var mp = tmp;
		var l = new tannus_geom_Triangle(this.one,this.two,mp);
		var r = new tannus_geom_Triangle(mp,this.two,this.three);
		return [l,r];
	}
	,containsPoint: function(p) {
		var a = this.three.minusPoint(this.one);
		var b = this.two.minusPoint(this.one);
		var c = p.minusPoint(this.one);
		var dot_aa = a.get_x() * a.get_x() + a.get_y() * a.get_y();
		var dot_ab = a.get_x() * b.get_x() + a.get_y() * b.get_y();
		var dot_ac = a.get_x() * c.get_x() + a.get_y() * c.get_y();
		var dot_bb = b.get_x() * b.get_x() + b.get_y() * b.get_y();
		var dot_bc = b.get_x() * c.get_x() + b.get_y() * c.get_y();
		var invDenom = 1 / (dot_aa * dot_bb - dot_ab * dot_ab);
		var u = (dot_bb * dot_ac - dot_ab * dot_bc) * invDenom;
		var v = (dot_aa * dot_bc - dot_ab * dot_ac) * invDenom;
		return u >= 0 && v >= 0 && u + v < 1;
	}
	,dot: function(x,y) {
		return x.get_x() * y.get_x() + x.get_y() * y.get_y();
	}
	,vectorize: function(r) {
		var c = new tannus_geom_Triangle(this.one.clone(),this.two.clone(),this.three.clone());
		var tmp;
		var this1 = this.one;
		var tmp3;
		var what = this1.get_x();
		tmp3 = tannus_math__$Percent_Percent_$Impl_$.percent(what,r.width);
		var x = tmp3;
		var tmp4;
		var what1 = this1.get_y();
		tmp4 = tannus_math__$Percent_Percent_$Impl_$.percent(what1,r.height);
		var y = tmp4;
		tmp = new tannus_geom_TPoint(x,y,0);
		c.one = tmp;
		var tmp1;
		var this2 = this.two;
		var tmp5;
		var what2 = this2.get_x();
		tmp5 = tannus_math__$Percent_Percent_$Impl_$.percent(what2,r.width);
		var x1 = tmp5;
		var tmp6;
		var what3 = this2.get_y();
		tmp6 = tannus_math__$Percent_Percent_$Impl_$.percent(what3,r.height);
		var y1 = tmp6;
		tmp1 = new tannus_geom_TPoint(x1,y1,0);
		c.two = tmp1;
		var tmp2;
		var this3 = this.three;
		var tmp7;
		var what4 = this3.get_x();
		tmp7 = tannus_math__$Percent_Percent_$Impl_$.percent(what4,r.width);
		var x2 = tmp7;
		var tmp8;
		var what5 = this3.get_y();
		tmp8 = tannus_math__$Percent_Percent_$Impl_$.percent(what5,r.height);
		var y2 = tmp8;
		tmp2 = new tannus_geom_TPoint(x2,y2,0);
		c.three = tmp2;
		return c;
	}
	,devectorize: function(r) {
		var c = new tannus_geom_Triangle(this.one.clone(),this.two.clone(),this.three.clone());
		c.one = tannus_geom__$Point_Point_$Impl_$.devectorize(this.one,r);
		c.two = tannus_geom__$Point_Point_$Impl_$.devectorize(this.two,r);
		c.three = tannus_geom__$Point_Point_$Impl_$.devectorize(this.three,r);
		return c;
	}
	,getVertices: function(precision) {
		var tmp;
		var lines = this.get_lines();
		var tmp1;
		var _g = [];
		var _g1 = 0;
		while(_g1 < lines.length) {
			var l = lines[_g1];
			++_g1;
			_g.push([l.one,l.two]);
		}
		tmp1 = _g;
		var v = tannus_ds_ArrayTools.flatten(tmp1);
		tmp = new tannus_geom_VertexArray(v);
		return tmp;
	}
	,get_center: function() {
		var cx = (this.one.get_x() + this.two.get_x() + this.three.get_x()) / 3;
		var cy = (this.one.get_y() + this.two.get_y() + this.three.get_y()) / 3;
		var cz = (this.one.get_z() + this.two.get_z() + this.three.get_z()) / 3;
		return new tannus_geom_TPoint(cx,cy,cz);
	}
	,one: null
	,two: null
	,three: null
	,get_lines: function() {
		var la = [];
		la.push(new tannus_geom_Line(this.one,this.two));
		la.push(new tannus_geom_Line(this.two,this.three));
		la.push(new tannus_geom_Line(this.three,this.one));
		return la;
	}
	,get_points: function() {
		return [this.one,this.two,this.three];
	}
	,set_points: function(v) {
		this.one = v[0];
		this.two = v[1];
		this.three = v[2];
		return [this.one,this.two,this.three];
	}
	,__class__: tannus_geom_Triangle
	,__properties__: {set_points:"set_points",get_points:"get_points",get_lines:"get_lines",get_center:"get_center"}
};
var tannus_geom__$Velocity_Velocity_$Impl_$ = {};
$hxClasses["tannus.geom._Velocity.Velocity_Impl_"] = tannus_geom__$Velocity_Velocity_$Impl_$;
tannus_geom__$Velocity_Velocity_$Impl_$.__name__ = ["tannus","geom","_Velocity","Velocity_Impl_"];
tannus_geom__$Velocity_Velocity_$Impl_$._new = function(speed,angle) {
	return new tannus_geom_CVelocity(speed,angle);
};
tannus_geom__$Velocity_Velocity_$Impl_$.invert = function(this1) {
	return this1.invert();
};
tannus_geom__$Velocity_Velocity_$Impl_$.plus = function(this1,other) {
	return this1.plus(other);
};
tannus_geom__$Velocity_Velocity_$Impl_$.minus = function(this1,other) {
	return this1.minus(other);
};
tannus_geom__$Velocity_Velocity_$Impl_$.toPoint = function(this1) {
	return this1.get_vector();
};
tannus_geom__$Velocity_Velocity_$Impl_$.fromPoint = function(p) {
	return tannus_geom_CVelocity.fromPoint(p);
};
var tannus_geom_CVelocity = function(speed,angle) {
	this.speed = speed;
	this.angle = angle;
};
$hxClasses["tannus.geom.CVelocity"] = tannus_geom_CVelocity;
tannus_geom_CVelocity.__name__ = ["tannus","geom","CVelocity"];
tannus_geom_CVelocity.fromVector = function(x,y) {
	return tannus_geom_CVelocity.fromPoint(new tannus_geom_TPoint(x,y,0));
};
tannus_geom_CVelocity.fromPoint = function(p) {
	var tmp;
	var angle = new tannus_geom_CAngle(0);
	tmp = new tannus_geom_CVelocity(0,angle);
	var vel = tmp;
	vel.set_vector(p);
	return vel;
};
tannus_geom_CVelocity.prototype = {
	setVector: function(vx,vy) {
		var e = new tannus_geom_TPoint(vx,vy,0);
		var l = new tannus_geom_Line(new tannus_geom_TPoint(0,0,0),e);
		this.speed = l.one.distanceFrom(l.two);
		var tmp;
		var tmp1;
		var x2 = e.get_x();
		var y2 = e.get_y();
		var radians = Math.atan2(y2,x2);
		tmp1 = radians * 180 / 3.141592653589793;
		var v = tmp1;
		tmp = new tannus_geom_CAngle(v);
		this.angle = tmp;
	}
	,clone: function() {
		return new tannus_geom_CVelocity(this.speed,this.angle);
	}
	,invert: function() {
		return tannus_geom_CVelocity.fromVector(-(Math.cos(this.angle.v * Math.PI / 180) * this.speed),-(Math.sin(this.angle.v * Math.PI / 180) * this.speed));
	}
	,plus: function(other) {
		var tmp;
		var this1 = this.get_vector();
		var other1 = other.get_vector();
		tmp = this1.plusPoint(other1);
		return tannus_geom_CVelocity.fromPoint(tmp);
	}
	,minus: function(other) {
		var tmp;
		var this1 = this.get_vector();
		var p = other.get_vector();
		tmp = this1.minusPoint(p);
		return tannus_geom_CVelocity.fromPoint(tmp);
	}
	,lerp: function(other,weight) {
		var vec = this.get_vector().lerp(other.get_vector(),weight);
		return tannus_geom_CVelocity.fromPoint(vec);
	}
	,get_x: function() {
		return Math.cos(this.angle.v * Math.PI / 180) * this.speed;
	}
	,set_x: function(nx) {
		this.setVector(nx,Math.sin(this.angle.v * Math.PI / 180) * this.speed);
		return nx;
	}
	,get_y: function() {
		return Math.sin(this.angle.v * Math.PI / 180) * this.speed;
	}
	,set_y: function(ny) {
		this.setVector(Math.cos(this.angle.v * Math.PI / 180) * this.speed,ny);
		return ny;
	}
	,get_vector: function() {
		var tmp;
		var x = Math.cos(this.angle.v * Math.PI / 180) * this.speed;
		var y = Math.sin(this.angle.v * Math.PI / 180) * this.speed;
		tmp = new tannus_geom_TPoint(x,y,0);
		return tmp;
	}
	,set_vector: function(v) {
		this.setVector(v.get_x(),v.get_y());
		return this.get_vector();
	}
	,speed: null
	,angle: null
	,__class__: tannus_geom_CVelocity
	,__properties__: {set_vector:"set_vector",get_vector:"get_vector",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_geom_VertexArray = function(v) {
	this.set_data(v != null?v.slice():[]);
	this._lines = new tannus_ds_CPair(null,null);
	this._rect = null;
};
$hxClasses["tannus.geom.VertexArray"] = tannus_geom_VertexArray;
tannus_geom_VertexArray.__name__ = ["tannus","geom","VertexArray"];
tannus_geom_VertexArray.prototype = {
	resetCache: function() {
		this._lines = new tannus_ds_CPair(null,null);
		this._rect = null;
	}
	,get: function(i) {
		return this.data[i];
	}
	,set: function(i,p) {
		this.data[i] = p.clone();
		this.resetCache();
		return this.get(i);
	}
	,toImmutable: function(p) {
		if(!js_Boot.__instanceof(p,tannus_geom_ImmutablePoint)) {
			var np = new tannus_geom_ImmutablePoint(p.get_x(),p.get_y(),p.get_z());
			return np;
		} else return p.clone();
	}
	,toMutable: function(p) {
		if(js_Boot.__instanceof(p,tannus_geom_ImmutablePoint)) {
			var np = new tannus_geom_TPoint(0,0,0);
			np.copyFrom(p);
			return np;
		} else return p;
	}
	,iterator: function() {
		return new tannus_geom_VerticeIterator(this);
	}
	,push: function(p) {
		this.resetCache();
		return this.data.push(p.clone());
	}
	,pop: function() {
		this.resetCache();
		return this.data.pop();
	}
	,unshift: function(p) {
		this.resetCache();
		this.data.unshift(p.clone());
		return this.data.length;
	}
	,shift: function() {
		this.resetCache();
		return this.data.shift();
	}
	,concat: function(other) {
		var tmp;
		var v = this.data.concat(other.data);
		tmp = new tannus_geom_VertexArray(v);
		return tmp;
	}
	,append: function(other) {
		this.resetCache();
		this.set_data(this.data.concat(other.data));
		return new tannus_geom_VertexArray(this.data);
	}
	,clone: function() {
		return new tannus_geom_VertexArray(this.data);
	}
	,calculateLines: function(close) {
		if(close == null) close = false;
		var cached = close?this._lines.right:this._lines.left;
		if(cached != null) return cached; else {
			var lines = [];
			var i = 0;
			var last = null;
			while(i < this.data.length) {
				var start = this.data[i];
				if(last == null) last = start; else {
					lines.push(new tannus_geom_Line(last,start));
					last = start;
				}
				i++;
			}
			if(close) {
				lines.push(new tannus_geom_Line(tannus_ds_ArrayTools.last(this.data),this.data[0]));
				this._lines.right = lines;
			} else this._lines.left = lines;
			return lines;
		}
	}
	,lineStack: function(close) {
		if(close == null) close = false;
		return new tannus_ds_Stack(this.calculateLines(close));
	}
	,pointStack: function() {
		var rdat = this.data.slice();
		rdat.reverse();
		return new tannus_ds_Stack(rdat);
	}
	,simplify: function(threshold) {
		if(threshold == null) threshold = 2;
		var lines = this.calculateLines();
		var ndata = [];
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			if(Math.round(line.one.distanceFrom(line.two)) <= threshold) ndata.push(line.one.lerp(line.two,0.5)); else {
				ndata.push(line.one);
				ndata.push(line.two);
			}
		}
		this.set_data(ndata);
	}
	,each: function(f) {
		var points = this.pointStack();
		while(!points.get_empty()) {
			var p = points.pop();
			f(p);
		}
		this.resetCache();
	}
	,apply: function(m) {
		this.set_data(this.data.map(function(p) {
			return m.transformPoint(p);
		}));
	}
	,map: function(f) {
		return new tannus_geom_VertexArray(this.data.map(f));
	}
	,getContainingRect: function() {
		if(this._rect == null) {
			var xr = tannus_math_TMath.minmax(this.data,function(p) {
				return p.get_x();
			});
			var yr = tannus_math_TMath.minmax(this.data,function(p1) {
				return p1.get_y();
			});
			this._rect = new tannus_geom_CRectangle(xr.min,yr.min,xr.max - xr.min,yr.max - yr.min);
		}
		return this._rect;
	}
	,get_length: function() {
		return this.data.length;
	}
	,get_lines: function() {
		return this.calculateLines(true);
	}
	,get_rect: function() {
		return this.getContainingRect();
	}
	,get_first: function() {
		return this.get(0);
	}
	,get_last: function() {
		return this.get(this.data.length - 1);
	}
	,data: null
	,set_data: function(plist) {
		if(plist != this.data) this.resetCache();
		return this.data = plist;
	}
	,_lines: null
	,_rect: null
	,__class__: tannus_geom_VertexArray
	,__properties__: {set_data:"set_data",get_last:"get_last",get_first:"get_first",get_rect:"get_rect",get_lines:"get_lines",get_length:"get_length"}
};
var tannus_geom_VerticeIterator = function(va) {
	this.array = va;
	this.iter = new IntIterator(0,this.array.data.length);
};
$hxClasses["tannus.geom.VerticeIterator"] = tannus_geom_VerticeIterator;
tannus_geom_VerticeIterator.__name__ = ["tannus","geom","VerticeIterator"];
tannus_geom_VerticeIterator.prototype = {
	hasNext: function() {
		var tmp;
		var _this = this.iter;
		tmp = _this.min < _this.max;
		return tmp;
	}
	,next: function() {
		return this.array.get(this.iter.min++);
	}
	,array: null
	,iter: null
	,__class__: tannus_geom_VerticeIterator
};
var tannus_geom_ImmutablePoint = function(x,y,z) {
	tannus_geom_TPoint.call(this,x,y,z);
};
$hxClasses["tannus.geom.ImmutablePoint"] = tannus_geom_ImmutablePoint;
tannus_geom_ImmutablePoint.__name__ = ["tannus","geom","ImmutablePoint"];
tannus_geom_ImmutablePoint.__super__ = tannus_geom_TPoint;
tannus_geom_ImmutablePoint.prototype = $extend(tannus_geom_TPoint.prototype,{
	set_x: function(v) {
		return v;
	}
	,set_y: function(v) {
		return v;
	}
	,set_z: function(v) {
		return v;
	}
	,write: function(p) {
		this._x = p.get_x();
		this._y = p.get_y();
		this._z = p.get_z();
	}
	,__class__: tannus_geom_ImmutablePoint
});
var tannus_geom__$Vertices_Vertices_$Impl_$ = {};
$hxClasses["tannus.geom._Vertices.Vertices_Impl_"] = tannus_geom__$Vertices_Vertices_$Impl_$;
tannus_geom__$Vertices_Vertices_$Impl_$.__name__ = ["tannus","geom","_Vertices","Vertices_Impl_"];
tannus_geom__$Vertices_Vertices_$Impl_$._new = function(v) {
	return new tannus_geom_VertexArray(v);
};
tannus_geom__$Vertices_Vertices_$Impl_$.clone = function(this1) {
	return this1.clone();
};
tannus_geom__$Vertices_Vertices_$Impl_$.map = function(this1,f) {
	return this1.map(f);
};
tannus_geom__$Vertices_Vertices_$Impl_$.get = function(this1,i) {
	return this1.get(i);
};
tannus_geom__$Vertices_Vertices_$Impl_$.set = function(this1,i,p) {
	return this1.set(i,p);
};
tannus_geom__$Vertices_Vertices_$Impl_$.isum = function(this1,other) {
	return this1.append(other);
};
tannus_geom__$Vertices_Vertices_$Impl_$.sum = function(this1,other) {
	var tmp;
	var v = this1.data.concat(other.data);
	tmp = new tannus_geom_VertexArray(v);
	return tmp;
};
tannus_geom__$Vertices_Vertices_$Impl_$.toPoints = function(this1) {
	var tmp;
	var _g = [];
	var $it0 = this1.iterator();
	while( $it0.hasNext() ) {
		var p = $it0.next();
		_g.push(p.clone());
	}
	tmp = _g;
	return tmp;
};
tannus_geom__$Vertices_Vertices_$Impl_$.fromPoints = function(list) {
	return new tannus_geom_VertexArray(list);
};
tannus_geom__$Vertices_Vertices_$Impl_$.toLines = function(this1) {
	return this1.calculateLines(true);
};
tannus_geom__$Vertices_Vertices_$Impl_$.fromLines = function(lines) {
	var tmp;
	var tmp1;
	var _g = [];
	var _g1 = 0;
	while(_g1 < lines.length) {
		var l = lines[_g1];
		++_g1;
		_g.push([l.one,l.two]);
	}
	tmp1 = _g;
	var v = tannus_ds_ArrayTools.flatten(tmp1);
	tmp = new tannus_geom_VertexArray(v);
	return tmp;
};
tannus_geom__$Vertices_Vertices_$Impl_$.fromShape = function(s) {
	return s.getVertices();
};
var tannus_geom2_Line = function(a,b) {
	this.a_x = 0;
	this.a_y = 0;
	this.a_z = 0;
	this.b_x = 0;
	this.b_y = 0;
	this.b_z = 0;
	this.d = new tannus_ds_data_Data(2,null);
	this.initializeDataView();
	if(a != null) this.set_one(a);
	if(b != null) this.set_two(b);
};
$hxClasses["tannus.geom2.Line"] = tannus_geom2_Line;
tannus_geom2_Line.__name__ = ["tannus","geom2","Line"];
tannus_geom2_Line.prototype = {
	clone: function() {
		return new tannus_geom2_Line(this.d.get(0),this.d.get(1));
	}
	,initializeDataView: function() {
		var _g = this;
		var one = new tannus_geom2_LinkedPoint(new tannus_io__$Pointer_Ref(function() {
			return _g.a_x;
		},function(v) {
			return _g.a_x = v;
		}),new tannus_io__$Pointer_Ref(function() {
			return _g.a_y;
		},function(v1) {
			return _g.a_y = v1;
		}),new tannus_io__$Pointer_Ref(function() {
			return _g.a_z;
		},function(v2) {
			return _g.a_z = v2;
		}));
		var two = new tannus_geom2_LinkedPoint(new tannus_io__$Pointer_Ref(function() {
			return _g.b_x;
		},function(v3) {
			return _g.b_x = v3;
		}),new tannus_io__$Pointer_Ref(function() {
			return _g.b_y;
		},function(v4) {
			return _g.b_y = v4;
		}),new tannus_io__$Pointer_Ref(function() {
			return _g.b_z;
		},function(v5) {
			return _g.b_z = v5;
		}));
		this.d.set(0,one);
		this.d.set(1,two);
	}
	,get_one: function() {
		return this.d.get(0);
	}
	,set_one: function(v) {
		var _this = this.d.get(0);
		var v1 = v.d.get(0);
		_this.d.set(0,v1);
		var v2 = v.d.get(1);
		_this.d.set(1,v2);
		var v3 = v.d.get(1);
		_this.d.set(1,v3);
		return this.d.get(0);
	}
	,get_two: function() {
		return this.d.get(1);
	}
	,set_two: function(v) {
		var _this = this.d.get(1);
		var v1 = v.d.get(0);
		_this.d.set(0,v1);
		var v2 = v.d.get(1);
		_this.d.set(1,v2);
		var v3 = v.d.get(1);
		_this.d.set(1,v3);
		return this.d.get(1);
	}
	,get_length: function() {
		var tmp;
		var _this = this.d.get(0);
		var other = this.d.get(1);
		tmp = Math.sqrt(Math.pow(_this.d.get(0) - other.d.get(0),2) + Math.pow(_this.d.get(1) - other.d.get(1),2));
		return tmp;
	}
	,get_mid: function() {
		var tmp;
		var _this = this.d.get(0);
		var other = this.d.get(1);
		var tmp1;
		var a = _this.d.get(0);
		var b = other.d.get(0);
		tmp1 = a + 0.5 * (b - a);
		var tmp2;
		var a1 = _this.d.get(1);
		var b1 = other.d.get(1);
		tmp2 = a1 + 0.5 * (b1 - a1);
		var tmp3;
		var a2 = _this.d.get(1);
		var b2 = other.d.get(1);
		tmp3 = a2 + 0.5 * (b2 - a2);
		tmp = new tannus_geom2_Point(tmp1,tmp2,tmp3);
		return tmp;
	}
	,a_x: null
	,a_y: null
	,a_z: null
	,b_x: null
	,b_y: null
	,b_z: null
	,d: null
	,__class__: tannus_geom2_Line
	,__properties__: {get_mid:"get_mid",get_length:"get_length",set_two:"set_two",get_two:"get_two",set_one:"set_one",get_one:"get_one"}
};
var tannus_geom2_Point = function(x,y,z) {
	this.d = new tannus_ds_data_Data(3,0);
	if(x == null) x = 0;
	if(y == null) y = 0;
	if(z == null) z = 0;
	this.d.sets([x,y,z]);
};
$hxClasses["tannus.geom2.Point"] = tannus_geom2_Point;
tannus_geom2_Point.__name__ = ["tannus","geom2","Point"];
tannus_geom2_Point.prototype = {
	equals: function(other) {
		return this.d.get(0) == other.d.get(0) && this.d.get(1) == other.d.get(1) && this.d.get(1) == other.d.get(1);
	}
	,angleTo: function(other) {
		var tmp;
		var tmp1;
		var x1 = this.d.get(0);
		var y1 = other.d.get(0);
		var x2 = this.d.get(1);
		var y2 = other.d.get(1);
		var radians = Math.atan2(y2 - y1,x2 - x1);
		tmp1 = radians * 180 / 3.141592653589793;
		var v = tmp1;
		tmp = new tannus_geom_CAngle(v);
		return tmp;
	}
	,distanceFrom: function(other) {
		return Math.sqrt(Math.pow(this.d.get(0) - other.d.get(0),2) + Math.pow(this.d.get(1) - other.d.get(1),2));
	}
	,copyFrom: function(other) {
		var v = other.d.get(0);
		this.d.set(0,v);
		var v1 = other.d.get(1);
		this.d.set(1,v1);
		var v2 = other.d.get(1);
		this.d.set(1,v2);
	}
	,mutate: function(f) {
		return new tannus_geom2_Point(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(1)));
	}
	,mutate2: function(o,f) {
		return new tannus_geom2_Point(f(this.d.get(0),o.d.get(0)),f(this.d.get(1),o.d.get(1)),f(this.d.get(1),o.d.get(1)));
	}
	,plusPoint: function(other) {
		return new tannus_geom2_Point(this.d.get(0) + other.d.get(0),this.d.get(1) + other.d.get(1),this.d.get(1) + other.d.get(1));
	}
	,minusPoint: function(o) {
		return new tannus_geom2_Point(this.d.get(0) - o.d.get(0),this.d.get(1) - o.d.get(1),this.d.get(1) - o.d.get(1));
	}
	,clone: function() {
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1),this.d.get(1));
	}
	,lerp: function(other,weight) {
		var tmp;
		var a = this.d.get(0);
		var b = other.d.get(0);
		tmp = a + weight * (b - a);
		var tmp1;
		var a1 = this.d.get(1);
		var b1 = other.d.get(1);
		tmp1 = a1 + weight * (b1 - a1);
		var tmp2;
		var a2 = this.d.get(1);
		var b2 = other.d.get(1);
		tmp2 = a2 + weight * (b2 - a2);
		return new tannus_geom2_Point(tmp,tmp1,tmp2);
	}
	,round: function() {
		var tmp;
		var f = Math.round;
		tmp = new tannus_geom2_Point(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(1)));
		return tmp;
	}
	,floor: function() {
		var tmp;
		var f = Math.floor;
		tmp = new tannus_geom2_Point(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(1)));
		return tmp;
	}
	,ceil: function() {
		var tmp;
		var f = Math.ceil;
		tmp = new tannus_geom2_Point(f(this.d.get(0)),f(this.d.get(1)),f(this.d.get(1)));
		return tmp;
	}
	,get_x: function() {
		return this.d.get(0);
	}
	,set_x: function(v) {
		return this.d.set(0,v);
	}
	,get_y: function() {
		return this.d.get(1);
	}
	,set_y: function(v) {
		return this.d.set(1,v);
	}
	,get_z: function() {
		return this.d.get(1);
	}
	,set_z: function(v) {
		return this.d.set(1,v);
	}
	,d: null
	,__class__: tannus_geom2_Point
	,__properties__: {set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_geom2_LinkedPoint = function(x_ref,y_ref,z_ref) {
	tannus_geom2_Point.call(this,0,0,0);
	this.d = new tannus_ds_data_BoundData([x_ref,y_ref,z_ref]);
};
$hxClasses["tannus.geom2.LinkedPoint"] = tannus_geom2_LinkedPoint;
tannus_geom2_LinkedPoint.__name__ = ["tannus","geom2","LinkedPoint"];
tannus_geom2_LinkedPoint.__super__ = tannus_geom2_Point;
tannus_geom2_LinkedPoint.prototype = $extend(tannus_geom2_Point.prototype,{
	__class__: tannus_geom2_LinkedPoint
});
var tannus_geom2_Rect = function(x,y,width,height) {
	this.d = new tannus_ds_data_Data(4,0);
	if(x == null) x = 0;
	if(y == null) y = 0;
	if(width == null) width = 0;
	if(height == null) height = 0;
	this.d.sets([x,y,width,height]);
};
$hxClasses["tannus.geom2.Rect"] = tannus_geom2_Rect;
tannus_geom2_Rect.__name__ = ["tannus","geom2","Rect"];
tannus_geom2_Rect.prototype = {
	clone: function() {
		return new tannus_geom2_Rect(this.d.get(0),this.d.get(1),this.d.get(2),this.d.get(3));
	}
	,pull: function(src) {
		var v = src.d.get(0);
		this.d.set(0,v);
		var v1 = src.d.get(1);
		this.d.set(1,v1);
		var v2 = src.d.get(2);
		this.d.set(2,v2);
		var v3 = src.d.get(3);
		this.d.set(3,v3);
	}
	,equals: function(o) {
		return this.d.get(0) == o.d.get(0) && this.d.get(1) == o.d.get(1) && this.d.get(2) == o.d.get(2) && this.d.get(3) == o.d.get(3);
	}
	,contains: function(ox,oy) {
		return ox > this.d.get(0) && ox < this.d.get(0) + this.d.get(2) && (oy > this.d.get(1) && oy < this.d.get(1) + this.d.get(3));
	}
	,containsPoint: function(p) {
		return this.contains(p.d.get(0),p.d.get(1));
	}
	,getCorners: function() {
		return [new tannus_geom2_Point(this.d.get(0),this.d.get(1)),new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1)),new tannus_geom2_Point(this.d.get(0),this.d.get(1) + this.d.get(3)),new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1) + this.d.get(3))];
	}
	,containsRect: function(o) {
		var ocl = o.getCorners();
		var _g = 0;
		while(_g < ocl.length) {
			var p = ocl[_g];
			++_g;
			if(!this.contains(p.d.get(0),p.d.get(1))) return false;
		}
		return true;
	}
	,overlapsWith: function(o) {
		o.getCorners();
		var tmp;
		var p = o.get_center();
		tmp = this.contains(p.d.get(0),p.d.get(1));
		if(tmp) return true; else {
			var _g = 0;
			var _g1 = o.getCorners();
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				if(this.contains(p1.d.get(0),p1.d.get(1))) return true;
			}
			return false;
		}
	}
	,enlarge: function(dw,dh) {
		var _g = this;
		var v = _g.d.get(2) + dw;
		_g.d.set(2,v);
		var _g1 = this;
		var v1 = _g1.d.get(3) + dh;
		_g1.d.set(3,v1);
		var _g2 = this;
		var v2 = _g2.d.get(0) - Math.round(dw / 2);
		_g2.d.set(0,v2);
		var _g3 = this;
		var v3 = _g3.d.get(1) - Math.round(dh / 2);
		_g3.d.set(1,v3);
	}
	,get_x: function() {
		return this.d.get(0);
	}
	,set_x: function(v) {
		return this.d.set(0,v);
	}
	,get_y: function() {
		return this.d.get(1);
	}
	,set_y: function(v) {
		return this.d.set(1,v);
	}
	,get_width: function() {
		return this.d.get(2);
	}
	,set_width: function(v) {
		return this.d.set(2,v);
	}
	,get_height: function() {
		return this.d.get(3);
	}
	,set_height: function(v) {
		return this.d.set(3,v);
	}
	,get_w: function() {
		return this.d.get(2);
	}
	,set_w: function(v) {
		return this.d.set(2,v);
	}
	,get_h: function() {
		return this.d.get(3);
	}
	,set_h: function(v) {
		return this.d.set(3,v);
	}
	,get_topLeft: function() {
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1));
	}
	,set_topLeft: function(p) {
		var v = p.d.get(0);
		this.d.set(0,v);
		var v1 = p.d.get(1);
		this.d.set(1,v1);
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1));
	}
	,get_topRight: function() {
		return new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1));
	}
	,set_topRight: function(p) {
		var v = p.d.get(0) - this.d.get(2);
		this.d.set(0,v);
		var v1 = p.d.get(1);
		this.d.set(1,v1);
		return new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1));
	}
	,get_bottomLeft: function() {
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1) + this.d.get(3));
	}
	,set_bottomLeft: function(p) {
		var v = p.d.get(0);
		this.d.set(0,v);
		var v1 = p.d.get(1) - this.d.get(3);
		this.d.set(1,v1);
		return new tannus_geom2_Point(this.d.get(0),this.d.get(1) + this.d.get(3));
	}
	,get_bottomRight: function() {
		return new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1) + this.d.get(3));
	}
	,set_bottomRight: function(p) {
		var v = p.d.get(0) - this.d.get(2);
		this.d.set(0,v);
		var v1 = p.d.get(1) - this.d.get(3);
		this.d.set(1,v1);
		return new tannus_geom2_Point(this.d.get(0) + this.d.get(2),this.d.get(1) + this.d.get(3));
	}
	,get_centerX: function() {
		return this.d.get(0) + this.d.get(2) / 2;
	}
	,set_centerX: function(v) {
		var v1 = Math.round(v - this.d.get(2) / 2);
		this.d.set(0,v1);
		return this.d.get(0) + this.d.get(2) / 2;
	}
	,get_centerY: function() {
		return this.d.get(1) + this.d.get(3) / 2;
	}
	,set_centerY: function(v) {
		var v1 = Math.round(v - this.d.get(3) / 2);
		this.d.set(1,v1);
		return this.d.get(1) + this.d.get(3) / 2;
	}
	,get_center: function() {
		var _g = this;
		var z = 0;
		return new tannus_geom2_LinkedPoint(new tannus_io__$Pointer_Ref(function() {
			return _g.d.get(0) + _g.d.get(2) / 2;
		},function(v) {
			return _g.set_centerX(v);
		}),new tannus_io__$Pointer_Ref(function() {
			return _g.d.get(1) + _g.d.get(3) / 2;
		},function(v1) {
			return _g.set_centerY(v1);
		}),new tannus_io__$Pointer_Ref(function() {
			return z;
		},function(v2) {
			return z = v2;
		}));
	}
	,set_center: function(v) {
		this.set_centerX(v.d.get(0));
		this.set_centerY(v.d.get(1));
		return this.get_center();
	}
	,d: null
	,__class__: tannus_geom2_Rect
	,__properties__: {set_center:"set_center",get_center:"get_center",set_centerY:"set_centerY",get_centerY:"get_centerY",set_centerX:"set_centerX",get_centerX:"get_centerX",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottomLeft:"set_bottomLeft",get_bottomLeft:"get_bottomLeft",set_topRight:"set_topRight",get_topRight:"get_topRight",set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var tannus_geom2_VertexArray = function(points) {
	this.data = [];
	if(points != null) this.data = points.slice();
};
$hxClasses["tannus.geom2.VertexArray"] = tannus_geom2_VertexArray;
tannus_geom2_VertexArray.__name__ = ["tannus","geom2","VertexArray"];
tannus_geom2_VertexArray.prototype = {
	getContainingRect: function() {
		var minp = null;
		var maxp = null;
		var _g1 = 0;
		var _g = this.data.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = this.data[i];
			if(minp == null) minp = new tannus_geom2_Point(p.d.get(0),p.d.get(1),p.d.get(1)); else {
				var tmp;
				var a = minp.d.get(0);
				var b = p.d.get(0);
				if(a < b) tmp = a; else tmp = b;
				var v = tmp;
				minp.d.set(0,v);
				var tmp1;
				var a1 = minp.d.get(1);
				var b1 = p.d.get(1);
				if(a1 < b1) tmp1 = a1; else tmp1 = b1;
				var v1 = tmp1;
				minp.d.set(1,v1);
			}
			if(maxp == null) maxp = new tannus_geom2_Point(p.d.get(0),p.d.get(1),p.d.get(1)); else {
				var tmp2;
				var a2 = maxp.d.get(0);
				var b2 = p.d.get(0);
				if(a2 > b2) tmp2 = a2; else tmp2 = b2;
				var v2 = tmp2;
				maxp.d.set(0,v2);
				var tmp3;
				var a3 = maxp.d.get(1);
				var b3 = p.d.get(1);
				if(a3 > b3) tmp3 = a3; else tmp3 = b3;
				var v3 = tmp3;
				maxp.d.set(1,v3);
			}
		}
		return new tannus_geom2_Rect(minp.d.get(0),minp.d.get(1),maxp.d.get(0) - minp.d.get(0),maxp.d.get(1) - minp.d.get(1));
	}
	,iterPairs: function(f,close) {
		if(close == null) close = true;
		var index = 1;
		var prevPoint = this.data[0];
		while(index < this.data.length) {
			var point = this.data[index];
			f(prevPoint,point);
			prevPoint = point;
			index++;
		}
		if(close) f(prevPoint,this.data[0]);
	}
	,getLines: function(close) {
		var lines = [];
		this.iterPairs(function(a,b) {
			lines.push(new tannus_geom2_Line(a,b));
		},close);
		return lines;
	}
	,get: function(index) {
		return this.data[index];
	}
	,set: function(index,p) {
		return this.data[index] = p;
	}
	,push: function(p) {
		this.data.push(p);
	}
	,pop: function() {
		return this.data.pop();
	}
	,unshift: function(p) {
		this.data.unshift(p);
	}
	,shift: function() {
		return this.data.shift();
	}
	,insert: function(index,p) {
		this.data.splice(index,0,p);
	}
	,indexOf: function(point) {
		var _g1 = 0;
		var _g = this.data.length;
		while(_g1 < _g) {
			var i = _g1++;
			var tmp;
			var _this = this.data[i];
			if(_this.d.get(0) == point.d.get(0) && _this.d.get(1) == point.d.get(1)) tmp = _this.d.get(1) == point.d.get(1); else tmp = false;
			if(tmp) return i;
		}
		return -1;
	}
	,clone: function() {
		return new tannus_geom2_VertexArray(this.data.map(function(item) {
			return new tannus_geom2_Point(item.d.get(0),item.d.get(1),item.d.get(1));
		}));
	}
	,filter: function(f) {
		return new tannus_geom2_VertexArray(this.data.filter(f));
	}
	,map: function(f) {
		return new tannus_geom2_VertexArray(this.data.map(f));
	}
	,remove: function(point) {
		return HxOverrides.remove(this.data,point);
	}
	,iterator: function() {
		return HxOverrides.iter(this.data);
	}
	,mutate: function(f) {
		return new tannus_geom2_VertexArray(this.data.map(function(x) {
			return new tannus_geom2_Point(f(x.d.get(0)),f(x.d.get(1)),f(x.d.get(1)));
		}));
	}
	,round: function() {
		return this.mutate(Math.round);
	}
	,floor: function() {
		return this.mutate(Math.floor);
	}
	,ceil: function() {
		return this.mutate(Math.ceil);
	}
	,get_length: function() {
		return this.data.length;
	}
	,data: null
	,__class__: tannus_geom2_VertexArray
	,__properties__: {get_length:"get_length"}
};
var tannus_graphics__$Color_Color_$Impl_$ = {};
$hxClasses["tannus.graphics._Color.Color_Impl_"] = tannus_graphics__$Color_Color_$Impl_$;
tannus_graphics__$Color_Color_$Impl_$.__name__ = ["tannus","graphics","_Color","Color_Impl_"];
tannus_graphics__$Color_Color_$Impl_$._new = function(r,g,b,a) {
	if(b == null) b = 0;
	if(g == null) g = 0;
	if(r == null) r = 0;
	return new tannus_graphics__$Color_TColor(r,g,b,a);
};
tannus_graphics__$Color_Color_$Impl_$.clone = function(this1) {
	return this1.clone();
};
tannus_graphics__$Color_Color_$Impl_$.equals = function(this1,other) {
	return this1.equals(other);
};
tannus_graphics__$Color_Color_$Impl_$.invert = function(this1) {
	return this1.invert();
};
tannus_graphics__$Color_Color_$Impl_$.mix = function(this1,other,ratio) {
	return this1.mix(other,ratio);
};
tannus_graphics__$Color_Color_$Impl_$.lighten = function(this1,amount) {
	return this1.lighten(amount);
};
tannus_graphics__$Color_Color_$Impl_$.darken = function(this1,amount) {
	return this1.darken(amount);
};
tannus_graphics__$Color_Color_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_graphics__$Color_Color_$Impl_$.toByteArray = function(this1) {
	var tmp;
	var s = this1.toString();
	tmp = tannus_io_impl_BrowserBinary.ofString(s);
	return tmp;
};
tannus_graphics__$Color_Color_$Impl_$.toInt = function(this1) {
	return this1.toInt();
};
tannus_graphics__$Color_Color_$Impl_$.fromInt = function(color) {
	return new tannus_graphics__$Color_TColor(color >> 16 & 255,color >> 8 & 255,color & 255,null);
};
tannus_graphics__$Color_Color_$Impl_$.fromString = function(s) {
	return tannus_graphics__$Color_TColor.fromString(s);
};
tannus_graphics__$Color_Color_$Impl_$._linked = function(r,g,b,a) {
	return new tannus_graphics_LinkedColor(r,g,b,a);
};
var tannus_graphics__$Color_TColor = $hx_exports.Color = function(r,g,b,a,noset) {
	if(noset == null) noset = false;
	if(b == null) b = 0;
	if(g == null) g = 0;
	if(r == null) r = 0;
	if(!noset) {
		this.set_red(r);
		this.set_green(g);
		this.set_blue(b);
		this.set_alpha(a);
	}
};
$hxClasses["tannus.graphics._Color.TColor"] = tannus_graphics__$Color_TColor;
tannus_graphics__$Color_TColor.__name__ = ["tannus","graphics","_Color","TColor"];
tannus_graphics__$Color_TColor.__interfaces__ = [tannus_ds_Comparable];
tannus_graphics__$Color_TColor.fromString = function(_s) {
	if(StringTools.startsWith(_s,"#")) {
		var s = StringTools.replace(_s,"#","");
		var _g = s.length;
		switch(_g) {
		case 6:
			var parts = [];
			var chars = s.split("");
			parts.push(chars.shift() + chars.shift());
			parts.push(chars.shift() + chars.shift());
			parts.push(chars.shift() + chars.shift());
			var channels = [];
			var _g1 = 0;
			while(_g1 < parts.length) {
				var part = parts[_g1];
				++_g1;
				var channel = Std.parseInt("0x" + part);
				channels.push(channel);
			}
			return new tannus_graphics__$Color_TColor(channels[0],channels[1],channels[2]);
		case 3:
			var parts1 = [];
			var chars1 = s.split("");
			parts1.push(chars1.shift());
			parts1.push(chars1.shift());
			parts1.push(chars1.shift());
			parts1 = parts1.map(function(c) {
				return c + c;
			});
			var channels1 = [];
			var _g11 = 0;
			while(_g11 < parts1.length) {
				var part1 = parts1[_g11];
				++_g11;
				var channel1 = Std.parseInt("0x" + part1);
				channels1.push(channel1);
			}
			return new tannus_graphics__$Color_TColor(channels1[0],channels1[1],channels1[2]);
		default:
			throw new js__$Boot_HaxeError("ColorError: Cannot create Color from \"" + s + "\"!");
		}
	} else {
		var rgb = new EReg("rgb\\( ?([0-9]+), ?([0-9]+), ?([0-9]+) ?\\)","i");
		var rgba = new EReg("rgba\\( ?([0-9]+), ?([0-9]+), ?([0-9]+), ?([0-9]+) ?\\)","i");
		if(rgb.match(_s)) {
			var data = tannus_io__$RegEx_RegEx_$Impl_$.matches(rgb,_s)[0];
			console.log(data);
			var i = function(x) {
				return Std.parseInt(x);
			};
			return new tannus_graphics__$Color_TColor(i(data[1]),i(data[2]),i(data[3]));
		} else if(rgba.match(_s)) {
			var data1 = tannus_io__$RegEx_RegEx_$Impl_$.matches(rgba,_s)[0];
			console.log(data1);
			var i1 = function(x1) {
				return Std.parseInt(x1);
			};
			return new tannus_graphics__$Color_TColor(i1(data1[1]),i1(data1[2]),i1(data1[3]),i1(data1[4]));
		} else throw new js__$Boot_HaxeError("ColorError: Cannot create Color from \"" + _s + "\"!");
	}
};
tannus_graphics__$Color_TColor.fromInt = function(color) {
	return new tannus_graphics__$Color_TColor(color >> 16 & 255,color >> 8 & 255,color & 255,null);
};
tannus_graphics__$Color_TColor.hex = function(val,digits) {
	return StringTools.hex(val,digits);
};
tannus_graphics__$Color_TColor.prototype = {
	clone: function() {
		return new tannus_graphics__$Color_TColor(this.get_red(),this.get_green(),this.get_blue(),this.get_alpha());
	}
	,copyFrom: function(other) {
		this.set_red(other.get_red());
		this.set_green(other.get_green());
		this.set_blue(other.get_blue());
		this.set_alpha(other.get_alpha());
	}
	,equals: function(other) {
		return this.get_red() == other.get_red() && this.get_green() == other.get_green() && this.get_blue() == other.get_blue() && (this.get_alpha() != null?this.get_alpha() == other.get_alpha():true);
	}
	,mix: function(t,weight) {
		var ratio = weight / 100;
		var tmp;
		var tmp3;
		var a = this.get_red();
		var b = t.get_red();
		tmp3 = a + ratio * (b - a);
		var x = tmp3;
		tmp = x | 0;
		var tmp1;
		var tmp4;
		var a1 = this.get_green();
		var b1 = t.get_green();
		tmp4 = a1 + ratio * (b1 - a1);
		var x1 = tmp4;
		tmp1 = x1 | 0;
		var tmp2;
		var tmp5;
		var a2 = this.get_blue();
		var b2 = t.get_blue();
		tmp5 = a2 + ratio * (b2 - a2);
		var x2 = tmp5;
		tmp2 = x2 | 0;
		return new tannus_graphics__$Color_TColor(tmp,tmp1,tmp2,this.get_alpha());
	}
	,toString: function() {
		if(this.get_alpha() == null) {
			var out = "#";
			out += tannus_graphics__$Color_TColor.hex(this.get_red(),2);
			out += tannus_graphics__$Color_TColor.hex(this.get_green(),2);
			out += tannus_graphics__$Color_TColor.hex(this.get_blue(),2);
			return out;
		} else {
			var tmp;
			var this1 = tannus_math__$Percent_Percent_$Impl_$.percent(this.get_alpha(),255);
			tmp = this1;
			var out1 = "rgba(" + this.get_red() + ", " + this.get_green() + ", " + this.get_blue() + ", " + tannus_math_TMath.roundFloat(tmp / 100,2) + ")";
			return out1;
		}
	}
	,toInt: function() {
		if(this.get_alpha() == null) return Math.round(this.get_red()) << 16 | Math.round(this.get_green()) << 8 | Math.round(this.get_blue()); else return Math.round(this.get_red()) << 16 | Math.round(this.get_green()) << 8 | Math.round(this.get_blue()) | Math.round(this.get_alpha()) << 24;
	}
	,lighten: function(amount) {
		var col = this.clone();
		var tmp;
		var x = col.get_red() * (100 + amount) / 100;
		tmp = x | 0;
		var red = tmp;
		var tmp1;
		var x1 = col.get_green() * (100 + amount) / 100;
		tmp1 = x1 | 0;
		var green = tmp1;
		var tmp2;
		var x2 = col.get_blue() * (100 + amount) / 100;
		tmp2 = x2 | 0;
		var blue = tmp2;
		col.set_red(red);
		col.set_green(green);
		col.set_blue(blue);
		return col;
	}
	,darken: function(amount) {
		return this.lighten(0 - amount);
	}
	,invert: function() {
		return new tannus_graphics__$Color_TColor(255 - this.get_red(),255 - this.get_green(),255 - this.get_blue(),this.get_alpha());
	}
	,luminance: function() {
		return 0.2126 * this.get_red() + 0.7152 * this.get_green() + 0.0722 * this.get_blue();
	}
	,brightness: function() {
		var tmp;
		var x = (this.get_red() * 299 + this.get_green() * 587 + this.get_blue() * 114) / 1000;
		tmp = x | 0;
		return tmp;
	}
	,toHsl: function() {
		var chan = [this.get_red(),this.get_green(),this.get_blue()].map(function(x) {
			return x / 255.0;
		});
		var r = chan[0];
		var g = chan[1];
		var b = chan[2];
		var cmax = tannus_ds_ArrayTools.max(chan,function(n) {
			return n;
		});
		var cmin = tannus_ds_ArrayTools.min(chan,function(n1) {
			return n1;
		});
		var l = (cmax + cmin) / 2;
		var h;
		var s;
		if(cmax == cmin) h = s = 0; else {
			var d = cmax - cmin;
			s = d > 0.5?d / (2 - cmax - cmin):d / (cmax + cmin);
			if(cmax == r) h = (g - b) / d + (g < b?6:0); else if(cmax == g) h = (b - r) / d + 2; else if(cmax == b) h = (r - g) / d + 4; else h = 0;
			h /= 6;
		}
		return { 'hue' : h, 'saturation' : s, 'lightness' : l};
	}
	,getXYZ: function() {
		var vals = [this.get_red(),this.get_green(),this.get_blue()].map(function(x) {
			return x / 255;
		});
		vals = vals.map(function(x2) {
			if(x2 > 0.04045) return Math.pow((x2 + 0.0555) / 1.055,2.4); else return x2 / 12.92;
		});
		vals = vals.map(function(x3) {
			return x3 * 100;
		});
		var r = vals[0];
		var g = vals[1];
		var b = vals[2];
		var x1 = r * 0.4124 + g * 0.3576 + b * 0.1805;
		var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
		var z = r * 0.0193 + g * 0.1192 + b * 0.9505;
		return new tannus_geom_TPoint(x1,y,z);
	}
	,getLab: function() {
		var p = this.getXYZ();
		var vals = [p.get_x() / 95.047,p.get_y() / 100,p.get_z() / 108.883];
		vals = vals.map(function(x) {
			if(x > 0.008856) return Math.pow(x,0.333333333333333315); else return 7.787 * x + 0.137931034482758619;
		});
		var l = 116 * vals[1] - 16;
		var a = 500 * (vals[0] - vals[1]);
		var b = 200 * (vals[1] - vals[2]);
		return { 'l' : l, 'a' : a, 'b' : b};
	}
	,cie1994: function(other) {
		var x = this.getLab();
		var y = other.getLab();
		var kl = 1;
		var kh = 1;
		var kc = 1;
		var c1 = Math.sqrt(x.a * x.a + x.b * x.b);
		var c2 = Math.sqrt(y.a * y.a + y.b * y.b);
		var sh = 1 + 0.015 * c1;
		var sc = 1 + 0.045 * c1;
		var da = x.a - y.a;
		var db = x.b - y.b;
		var dc = c1 - c2;
		var dl = x.l - y.l;
		var dh = Math.sqrt(Math.pow(da,2) + Math.pow(db,2) + Math.pow(dc,2));
		return Math.sqrt(Math.pow(dl / kl,2) + Math.pow(dc / (kc * sc),2) + Math.pow(dh / (kh * sh),2)) / 10;
	}
	,greyscale: function() {
		var gray = this.clone();
		var tmp;
		var tmp1;
		var values = [gray.get_red(),gray.get_green(),gray.get_blue()];
		var sum = 0;
		var _g = 0;
		while(_g < values.length) {
			var n = values[_g];
			++_g;
			sum += n;
		}
		tmp1 = sum / values.length;
		var x = tmp1;
		tmp = x | 0;
		var avg = tmp;
		gray.set_channels([avg,avg,avg]);
		return gray;
	}
	,bound: function(n,max) {
		if(Math.abs(n - max) < 0.000001) return 1;
		return n % max / (max + 0.0) | 0;
	}
	,get_red: function() {
		return this._red;
	}
	,set_red: function(v) {
		return this._red = v < 0?0:v > 255?255:v;
	}
	,get_green: function() {
		return this._green;
	}
	,set_green: function(v) {
		return this._green = v < 0?0:v > 255?255:v;
	}
	,get_blue: function() {
		return this._blue;
	}
	,set_blue: function(v) {
		return this._blue = v < 0?0:v > 255?255:v;
	}
	,get_alpha: function() {
		return this._alpha;
	}
	,set_alpha: function(v) {
		return this._alpha = v != null?v < 0?0:v > 255?255:v:null;
	}
	,get_channels: function() {
		return [this.get_red(),this.get_green(),this.get_blue()];
	}
	,set_channels: function(v) {
		this.set_red(v[0]);
		this.set_green(v[1]);
		this.set_blue(v[2]);
		return [this.get_red(),this.get_green(),this.get_blue()];
	}
	,_red: null
	,_green: null
	,_blue: null
	,_alpha: null
	,__class__: tannus_graphics__$Color_TColor
	,__properties__: {set_channels:"set_channels",get_channels:"get_channels",set_alpha:"set_alpha",get_alpha:"get_alpha",set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red"}
};
var tannus_graphics_LinkedColor = function(r,g,b,a) {
	tannus_graphics__$Color_TColor.call(this,0,0,0,null,true);
	var tmp;
	var _v = null;
	tmp = new tannus_io__$Pointer_Ref(function() {
		return _v;
	},function(v) {
		return _v = v;
	});
	this._a = tmp;
	this._r = r;
	this._g = g;
	this._b = b;
	if(a != null) this._a = a;
};
$hxClasses["tannus.graphics.LinkedColor"] = tannus_graphics_LinkedColor;
tannus_graphics_LinkedColor.__name__ = ["tannus","graphics","LinkedColor"];
tannus_graphics_LinkedColor.__super__ = tannus_graphics__$Color_TColor;
tannus_graphics_LinkedColor.prototype = $extend(tannus_graphics__$Color_TColor.prototype,{
	get_red: function() {
		return this._r.get();
	}
	,set_red: function(v) {
		return this._r.set(v < 0?0:v > 255?255:v);
	}
	,get_green: function() {
		return this._g.get();
	}
	,set_green: function(v) {
		return this._g.set(v < 0?0:v > 255?255:v);
	}
	,get_blue: function() {
		return this._b.get();
	}
	,set_blue: function(v) {
		return this._b.set(v < 0?0:v > 255?255:v);
	}
	,get_alpha: function() {
		return this._a.get();
	}
	,set_alpha: function(v) {
		return this._a.set(v < 0?0:v > 255?255:v);
	}
	,_r: null
	,_g: null
	,_b: null
	,_a: null
	,__class__: tannus_graphics_LinkedColor
});
var tannus_html__$ElAttributes_ElAttributes_$Impl_$ = {};
$hxClasses["tannus.html._ElAttributes.ElAttributes_Impl_"] = tannus_html__$ElAttributes_ElAttributes_$Impl_$;
tannus_html__$ElAttributes_ElAttributes_$Impl_$.__name__ = ["tannus","html","_ElAttributes","ElAttributes_Impl_"];
tannus_html__$ElAttributes_ElAttributes_$Impl_$.__properties__ = {get_el:"get_el",get_elem:"get_elem"}
tannus_html__$ElAttributes_ElAttributes_$Impl_$._new = function(ref) {
	return ref;
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.reference = function(this1,name) {
	var tmp;
	var this2 = this1();
	tmp = this2.get(0);
	return tannus_html_ElAttr.fromAttr(tmp.attributes.getNamedItem(name));
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.get = function(this1,name) {
	return this1().attr(name);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.set = function(this1,name,value) {
	this1().attr(name,Std.string(value));
	return tannus_html__$ElAttributes_ElAttributes_$Impl_$.get(this1,name);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.remove = function(this1,name) {
	var tmp;
	var this2 = this1();
	tmp = this2.get(0);
	var had = tmp.hasAttribute(name);
	this1().removeAttr(name);
	return had;
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.exists = function(this1,name) {
	var tmp;
	var this2 = this1();
	tmp = this2.get(0);
	return tmp.hasAttribute(name);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.iterator = function(this1) {
	return new tannus_html_ElAttrIter(this1);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.names = function(this1) {
	return new tannus_html_ElAttrNameIter(this1);
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.writeObject = function(this1,o) {
	var _g = 0;
	var tmp;
	var this2 = o;
	tmp = Reflect.fields(this2).map(function(k) {
		var tmp1;
		var tmp2;
		if(this2 == null) tmp1 = null; else if(this2.__properties__ && (tmp2 = this2.__properties__["get_" + k])) tmp1 = this2[tmp2](); else tmp1 = this2[k];
		return { 'name' : k, 'value' : tmp1};
	});
	var _g1 = tmp;
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		tannus_html__$Element_Element_$Impl_$.set(this1(),p.name,Std.string(p.value));
	}
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.toObject = function(this1) {
	var o = { };
	var tmp;
	var this2 = this1();
	tmp = this2.get(0);
	var list = tmp.attributes;
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var i = _g1++;
		var p = list.item(i);
		var key = p.name;
		var value = p.value;
		var tmp2;
		if(o.__properties__ && (tmp2 = o.__properties__["set_" + key])) o[tmp2](value); else o[key] = value;
		var tmp1;
		var tmp3;
		if(o == null) tmp1 = null; else if(o.__properties__ && (tmp3 = o.__properties__["get_" + key])) tmp1 = o[tmp3](); else tmp1 = o[key];
		tmp1;
	}
	return o;
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.get_elem = function(this1) {
	return this1();
};
tannus_html__$ElAttributes_ElAttributes_$Impl_$.get_el = function(this1) {
	var tmp;
	var this2 = this1();
	tmp = this2.get(0);
	return tmp;
};
var tannus_html_ElAttrIter = function(e) {
	var tmp;
	var this1 = e();
	tmp = this1.get(0);
	this.a = tmp.attributes;
	this.i = new IntIterator(0,this.a.length);
};
$hxClasses["tannus.html.ElAttrIter"] = tannus_html_ElAttrIter;
tannus_html_ElAttrIter.__name__ = ["tannus","html","ElAttrIter"];
tannus_html_ElAttrIter.prototype = {
	hasNext: function() {
		var tmp;
		var _this = this.i;
		tmp = _this.min < _this.max;
		return tmp;
	}
	,next: function() {
		return tannus_html_ElAttr.fromAttr(this.a.item(this.i.min++));
	}
	,a: null
	,i: null
	,__class__: tannus_html_ElAttrIter
};
var tannus_html_ElAttrNameIter = function(e) {
	var tmp;
	var this1 = e();
	tmp = this1.get(0);
	this.a = tmp.attributes;
	this.i = new IntIterator(0,this.a.length);
};
$hxClasses["tannus.html.ElAttrNameIter"] = tannus_html_ElAttrNameIter;
tannus_html_ElAttrNameIter.__name__ = ["tannus","html","ElAttrNameIter"];
tannus_html_ElAttrNameIter.prototype = {
	hasNext: function() {
		var tmp;
		var _this = this.i;
		tmp = _this.min < _this.max;
		return tmp;
	}
	,next: function() {
		return this.a.item(this.i.min++).name;
	}
	,a: null
	,i: null
	,__class__: tannus_html_ElAttrNameIter
};
var tannus_html_ElAttr = function(n,v) {
	this.name = n;
	this.val = v;
};
$hxClasses["tannus.html.ElAttr"] = tannus_html_ElAttr;
tannus_html_ElAttr.__name__ = ["tannus","html","ElAttr"];
tannus_html_ElAttr.fromAttr = function(p) {
	return new tannus_html_ElAttr(p.name,new tannus_io__$Pointer_Ref(function() {
		return p.value;
	},function(v) {
		return p.value = v;
	}));
};
tannus_html_ElAttr.prototype = {
	get: function() {
		return this.val.get();
	}
	,set: function(v) {
		return this.val.set(v);
	}
	,'delete': function() {
		this.val["delete"]();
	}
	,name: null
	,val: null
	,__class__: tannus_html_ElAttr
};
var tannus_html__$ElData_ElData_$Impl_$ = {};
$hxClasses["tannus.html._ElData.ElData_Impl_"] = tannus_html__$ElData_ElData_$Impl_$;
tannus_html__$ElData_ElData_$Impl_$.__name__ = ["tannus","html","_ElData","ElData_Impl_"];
tannus_html__$ElData_ElData_$Impl_$.__properties__ = {get_self:"get_self",get_data:"get_data",get_elem:"get_elem"}
tannus_html__$ElData_ElData_$Impl_$._new = function(ref) {
	return ref;
};
tannus_html__$ElData_ElData_$Impl_$.get = function(this1,key) {
	var tmp;
	var this2 = this1().data();
	var tmp1;
	var tmp2;
	if(this2 == null) tmp1 = null; else if(this2.__properties__ && (tmp2 = this2.__properties__["get_" + key])) tmp1 = this2[tmp2](); else tmp1 = this2[key];
	tmp = tmp1;
	return tmp;
};
tannus_html__$ElData_ElData_$Impl_$.set = function(this1,key,value) {
	return (function($this) {
		var $r;
		var this2 = this1().data();
		{
			var tmp;
			if(this2.__properties__ && (tmp = this2.__properties__["set_" + key])) this2[tmp](value); else this2[key] = value;
		}
		$r = (function($this) {
			var $r;
			var tmp1;
			$r = this2 == null?null:this2.__properties__ && (tmp1 = this2.__properties__["get_" + key])?this2[tmp1]():this2[key];
			return $r;
		}($this));
		return $r;
	}(this));
};
tannus_html__$ElData_ElData_$Impl_$.exists = function(this1,key) {
	var tmp;
	var this2 = this1().data();
	var tmp1;
	var tmp2;
	if(this2 == null) tmp1 = null; else if(this2.__properties__ && (tmp2 = this2.__properties__["get_" + key])) tmp1 = this2[tmp2](); else tmp1 = this2[key];
	tmp = tmp1;
	return tmp != null;
};
tannus_html__$ElData_ElData_$Impl_$.reference = function(this1,key) {
	return new tannus_io__$Pointer_Ref(function() {
		return (function($this) {
			var $r;
			var this2 = this1().data();
			$r = (function($this) {
				var $r;
				var tmp;
				$r = this2 == null?null:this2.__properties__ && (tmp = this2.__properties__["get_" + key])?this2[tmp]():this2[key];
				return $r;
			}($this));
			return $r;
		}(this));
	},function(v) {
		return (function($this) {
			var $r;
			var this3 = this1().data();
			{
				var tmp1;
				if(this3.__properties__ && (tmp1 = this3.__properties__["set_" + key])) this3[tmp1](v); else this3[key] = v;
			}
			$r = (function($this) {
				var $r;
				var tmp2;
				$r = this3 == null?null:this3.__properties__ && (tmp2 = this3.__properties__["get_" + key])?this3[tmp2]():this3[key];
				return $r;
			}($this));
			return $r;
		}(this));
	});
};
tannus_html__$ElData_ElData_$Impl_$.get_elem = function(this1) {
	return this1();
};
tannus_html__$ElData_ElData_$Impl_$.get_data = function(this1) {
	return this1().data();
};
tannus_html__$ElData_ElData_$Impl_$.get_self = function(this1) {
	return this1;
};
var tannus_html__$ElStyles_ElStyles_$Impl_$ = {};
$hxClasses["tannus.html._ElStyles.ElStyles_Impl_"] = tannus_html__$ElStyles_ElStyles_$Impl_$;
tannus_html__$ElStyles_ElStyles_$Impl_$.__name__ = ["tannus","html","_ElStyles","ElStyles_Impl_"];
tannus_html__$ElStyles_ElStyles_$Impl_$._new = function(e) {
	return new tannus_html_CElStyles(e);
};
tannus_html__$ElStyles_ElStyles_$Impl_$.get = function(this1,name) {
	return this1.get(name);
};
tannus_html__$ElStyles_ElStyles_$Impl_$.set = function(this1,name,value) {
	return this1.set(name,value);
};
tannus_html__$ElStyles_ElStyles_$Impl_$.fromElement = function(e) {
	return tannus_html__$Element_Element_$Impl_$.get_style(e);
};
tannus_html__$ElStyles_ElStyles_$Impl_$.create = function(elem) {
	var key = "__tannus_styles";
	var tmp;
	var tmp1;
	if(elem == null) tmp = null; else if(elem.__properties__ && (tmp1 = elem.__properties__["get_" + key])) tmp = elem[tmp1](); else tmp = elem[key];
	var css = tmp;
	if(css == null) {
		var value = css = new tannus_html_CElStyles(elem);
		var tmp2;
		if(elem.__properties__ && (tmp2 = elem.__properties__["set_" + key])) elem[tmp2](value); else elem[key] = value;
	}
	return css;
};
var tannus_html_CElStyles = function(e) {
	this.elem = e;
};
$hxClasses["tannus.html.CElStyles"] = tannus_html_CElStyles;
tannus_html_CElStyles.__name__ = ["tannus","html","CElStyles"];
tannus_html_CElStyles.prototype = {
	get: function(name) {
		return this.elem.css(name);
	}
	,set: function(name,value) {
		this.elem.css(name,value);
		return this.get(name);
	}
	,exists: function(name) {
		var tmp;
		var this1 = this.get(name);
		tmp = this1 != null;
		return tmp;
	}
	,reference: function(name) {
		var tmp;
		var f = $bind(this,this.get);
		var a1 = name;
		tmp = function() {
			return f(a1);
		};
		var tmp1;
		var f1 = $bind(this,this.set);
		var a11 = name;
		tmp1 = function(a2) {
			return f1(a11,a2);
		};
		return new tannus_io__$Pointer_Ref(tmp,tmp1);
	}
	,values: function(name) {
		var s = this.get(name);
		if(s != null) return new tannus_css_vals_Lexer().parse(tannus_io_impl_BrowserBinary.ofString(s)); else return [];
	}
	,pluck: function(names) {
		var o = { };
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			var value = this.get(name);
			var tmp1;
			if(o.__properties__ && (tmp1 = o.__properties__["set_" + name])) o[tmp1](value); else o[name] = value;
			var tmp;
			var tmp2;
			if(o == null) tmp = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + name])) tmp = o[tmp2](); else tmp = o[name];
			tmp;
		}
		return o;
	}
	,gets: function(names) {
		return this.pluck(names);
	}
	,applyMap: function(map) {
		var $it0 = map.keys();
		while( $it0.hasNext() ) {
			var name = $it0.next();
			this.set(name,Std.string(__map_reserved[name] != null?map.getReserved(name):map.h[name]));
		}
	}
	,applyDict: function(map) {
		this.applyMap((js_Boot.__cast(map , tannus_ds_dict_StringDict)).m);
	}
	,applyObject: function(o) {
		var _g = 0;
		var _g1 = Reflect.fields(o);
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			var tmp;
			var tmp1;
			if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + name])) tmp = o[tmp1](); else tmp = o[name];
			this.set(name,Std.string(tmp));
		}
	}
	,writeObject: function(o) {
		this.applyObject(o);
	}
	,write: function(o) {
		this.applyObject(o);
	}
	,copy: function(keys,other) {
		this.applyObject(other.pluck(keys));
	}
	,elem: null
	,__class__: tannus_html_CElStyles
};
var tannus_html__$Element_Element_$Impl_$ = {};
$hxClasses["tannus.html._Element.Element_Impl_"] = tannus_html__$Element_Element_$Impl_$;
tannus_html__$Element_Element_$Impl_$.__name__ = ["tannus","html","_Element","Element_Impl_"];
tannus_html__$Element_Element_$Impl_$.__properties__ = {set_scrollPos:"set_scrollPos",get_scrollPos:"get_scrollPos",set_position:"set_position",get_position:"get_position",set_rectangle:"set_rectangle",get_rectangle:"get_rectangle",set_h:"set_h",get_h:"get_h",set_w:"set_w",get_w:"get_w",set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_classes:"set_classes",get_classes:"get_classes",get_edata:"get_edata",get_attributes:"get_attributes",get_style:"get_style",set_text:"set_text",get_text:"get_text",get_removed:"get_removed",get_exists:"get_exists",get_self:"get_self"}
tannus_html__$Element_Element_$Impl_$._new = function(jq) {
	return js.JQuery(jq);
};
tannus_html__$Element_Element_$Impl_$.get_self = function(this1) {
	return js.JQuery(this1);
};
tannus_html__$Element_Element_$Impl_$.get_exists = function(this1) {
	return this1.length > 0;
};
tannus_html__$Element_Element_$Impl_$.get_removed = function(this1) {
	return this1.closest("body").length < 1;
};
tannus_html__$Element_Element_$Impl_$.get_text = function(this1) {
	return this1.text();
};
tannus_html__$Element_Element_$Impl_$.set_text = function(this1,nt) {
	this1.text(nt);
	return this1.text();
};
tannus_html__$Element_Element_$Impl_$.get_style = function(this1) {
	return tannus_html__$ElStyles_ElStyles_$Impl_$.create(this1);
};
tannus_html__$Element_Element_$Impl_$._cs = function(this1,args) {
	var r = tannus_html__$Element_Element_$Impl_$.cs(this1,args[0],args[1]);
	return r != null?r:"";
};
tannus_html__$Element_Element_$Impl_$.get_attributes = function(this1) {
	return function() {
		return this1;
	};
};
tannus_html__$Element_Element_$Impl_$.get_edata = function(this1) {
	return function() {
		return this1;
	};
};
tannus_html__$Element_Element_$Impl_$.get_classes = function(this1) {
	var tmp;
	var this2 = this1.attr("class");
	if(this2 != null) tmp = this2; else tmp = "";
	return tmp.split(" ");
};
tannus_html__$Element_Element_$Impl_$.set_classes = function(this1,cl) {
	tannus_html__$Element_Element_$Impl_$.set(this1,"class",cl.join(" "));
	var tmp;
	var this2 = this1.attr("class");
	if(this2 != null) tmp = this2; else tmp = "";
	return tmp.split(" ");
};
tannus_html__$Element_Element_$Impl_$.cs = function(this1,k,v) {
	if(v != null) this1.css(k,v);
	return this1.css(k);
};
tannus_html__$Element_Element_$Impl_$.get_x = function(this1) {
	return this1.offset().left;
};
tannus_html__$Element_Element_$Impl_$.set_x = function(this1,nx) {
	tannus_html__$Element_Element_$Impl_$.cs(this1,"left",nx + "px");
	return this1.offset().left;
};
tannus_html__$Element_Element_$Impl_$.get_y = function(this1) {
	return this1.offset().top;
};
tannus_html__$Element_Element_$Impl_$.set_y = function(this1,ny) {
	tannus_html__$Element_Element_$Impl_$.cs(this1,"top",ny + "px");
	return this1.offset().top;
};
tannus_html__$Element_Element_$Impl_$.get_z = function(this1) {
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null?msz:"0");
	if(isNaN(mz)) mz = 0;
	return mz;
};
tannus_html__$Element_Element_$Impl_$.set_z = function(this1,nz) {
	tannus_html__$Element_Element_$Impl_$.cs(this1,"z-index",nz + "");
	var tmp;
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null?msz:"0");
	if(isNaN(mz)) mz = 0;
	tmp = mz;
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.get_w = function(this1) {
	return this1.width() + 0.0;
};
tannus_html__$Element_Element_$Impl_$.set_w = function(this1,v) {
	this1.width(Math.round(v));
	return this1.width() + 0.0;
};
tannus_html__$Element_Element_$Impl_$.get_h = function(this1) {
	return this1.height() + 0.0;
};
tannus_html__$Element_Element_$Impl_$.set_h = function(this1,v) {
	this1.height(Math.round(v));
	return this1.height() + 0.0;
};
tannus_html__$Element_Element_$Impl_$.get_rectangle = function(this1) {
	var tmp;
	var _x = this1.offset().left;
	var _y = this1.offset().top;
	var _width = this1.width() + 0.0;
	var _height = this1.height() + 0.0;
	tmp = new tannus_geom_CRectangle(_x,_y,_width,_height);
	var r = tmp;
	var tmp1;
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null?msz:"0");
	if(isNaN(mz)) mz = 0;
	tmp1 = mz;
	r.z = tmp1;
	return r;
};
tannus_html__$Element_Element_$Impl_$.set_rectangle = function(this1,nr) {
	tannus_html__$Element_Element_$Impl_$.cs(this1,"left",nr.x + "px");
	this1.offset().left;
	tannus_html__$Element_Element_$Impl_$.cs(this1,"top",nr.y + "px");
	this1.offset().top;
	tannus_html__$Element_Element_$Impl_$.cs(this1,"z-index",nr.z + "");
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null?msz:"0");
	if(isNaN(mz)) mz = 0;
	mz;
	this1.width(Math.round(nr.width));
	this1.width() + 0.0;
	this1.height(Math.round(nr.height));
	this1.height() + 0.0;
	return tannus_html__$Element_Element_$Impl_$.get_rectangle(this1);
};
tannus_html__$Element_Element_$Impl_$.get_position = function(this1) {
	var tmp;
	var x = this1.offset().left;
	var y = this1.offset().top;
	var tmp1;
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null?msz:"0");
	if(isNaN(mz)) mz = 0;
	tmp1 = mz;
	var z = tmp1;
	tmp = new tannus_geom_TPoint(x,y,z);
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.set_position = function(this1,np) {
	var nx = np.get_x();
	tannus_html__$Element_Element_$Impl_$.cs(this1,"left",nx + "px");
	this1.offset().left;
	var ny = np.get_y();
	tannus_html__$Element_Element_$Impl_$.cs(this1,"top",ny + "px");
	this1.offset().top;
	var nz = np.get_z();
	tannus_html__$Element_Element_$Impl_$.cs(this1,"z-index",nz + "");
	var msz = this1.css("z-index");
	var mz = parseFloat(msz != null?msz:"0");
	if(isNaN(mz)) mz = 0;
	mz;
	var tmp;
	var x = this1.offset().left;
	var y = this1.offset().top;
	var tmp1;
	var msz1 = this1.css("z-index");
	var mz1 = parseFloat(msz1 != null?msz1:"0");
	if(isNaN(mz1)) mz1 = 0;
	tmp1 = mz1;
	var z = tmp1;
	tmp = new tannus_geom_TPoint(x,y,z);
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.get_scrollPos = function(this1) {
	var tmp;
	var x = this1.scrollLeft();
	var y = this1.scrollTop();
	tmp = new tannus_geom_TPoint(x,y,0);
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.set_scrollPos = function(this1,p) {
	var tmp;
	var f = p.get_x();
	tmp = f | 0;
	this1.scrollLeft(tmp);
	var tmp1;
	var f1 = p.get_y();
	tmp1 = f1 | 0;
	this1.scrollTop(tmp1);
	var tmp2;
	var x = this1.scrollLeft();
	var y = this1.scrollTop();
	tmp2 = new tannus_geom_TPoint(x,y,0);
	return tmp2;
};
tannus_html__$Element_Element_$Impl_$.get = function(this1,key) {
	return this1.attr(key);
};
tannus_html__$Element_Element_$Impl_$.set = function(this1,key,value) {
	this1.attr(key,value);
	return value;
};
tannus_html__$Element_Element_$Impl_$.plugin = function(this1,name,$arguments) {
	if($arguments == null) $arguments = [];
	var tmp;
	var tmp1;
	var tmp2;
	if(this1 == null) tmp1 = null; else if(this1.__properties__ && (tmp2 = this1.__properties__["get_" + name])) tmp1 = this1[tmp2](); else tmp1 = this1[name];
	var func = tmp1;
	tmp = func.apply(this1,$arguments);
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.method = function(this1,name) {
	var _f = Reflect.makeVarArgs((function($this) {
		var $r;
		var f = (function($this) {
			var $r;
			var _e = this1;
			$r = function(func,args) {
				return func.apply(_e,args);
			};
			return $r;
		}($this));
		var a1 = (function($this) {
			var $r;
			var tmp;
			$r = this1 == null?null:this1.__properties__ && (tmp = this1.__properties__["get_" + name])?this1[tmp]():this1[name];
			return $r;
		}($this));
		$r = function(a2) {
			return f(a1,a2);
		};
		return $r;
	}(this)));
	return _f;
};
tannus_html__$Element_Element_$Impl_$.index = function(this1,child,value) {
	if(value == null) {
		var tmp;
		var tmp1;
		var o = this1.get(0).children;
		tmp1 = Array.prototype.slice.call(o,0);
		var _this = tmp1;
		var x = child.get(0);
		tmp = HxOverrides.indexOf(_this,x,0);
		return tmp;
	} else {
		var tmp2;
		var o1 = this1.get(0).children;
		tmp2 = Array.prototype.slice.call(o1,0);
		child.insertBefore(tmp2[value]);
		return tannus_html__$Element_Element_$Impl_$.index(this1,child);
	}
};
tannus_html__$Element_Element_$Impl_$.at = function(this1,index) {
	return this1.get(index);
};
tannus_html__$Element_Element_$Impl_$.contains = function(this1,other) {
	return other.closest(this1).length > 0;
};
tannus_html__$Element_Element_$Impl_$.containedBy = function(this1,other) {
	return this1.closest(other).length > 0;
};
tannus_html__$Element_Element_$Impl_$.appendElementable = function(this1,child) {
	return this1.append(child.toElement());
};
tannus_html__$Element_Element_$Impl_$.prependElementable = function(this1,child) {
	return this1.prepend(child.toElement());
};
tannus_html__$Element_Element_$Impl_$.afterElementable = function(this1,child) {
	return this1.after(child.toElement());
};
tannus_html__$Element_Element_$Impl_$.beforeElementable = function(this1,child) {
	return this1.before(child.toElement());
};
tannus_html__$Element_Element_$Impl_$.addToElement = function(this1,other) {
	return this1.add(other);
};
tannus_html__$Element_Element_$Impl_$.addToElementArray = function(this1,other) {
	var tmp;
	var tmp1;
	var _g = [];
	var _g2 = 0;
	var _g1 = this1.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var tmp2;
		var jq = this1.get(i);
		tmp2 = js.JQuery(jq);
		_g.push(tmp2);
	}
	tmp1 = _g;
	var els = tmp1.concat(other);
	var el = js.JQuery("");
	var _g3 = 0;
	while(_g3 < els.length) {
		var e = els[_g3];
		++_g3;
		el = el.add(e);
	}
	tmp = el;
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.addToElementable = function(this1,other) {
	return this1.add(other.toElement());
};
tannus_html__$Element_Element_$Impl_$.subFromElement = function(this1,other) {
	var tmp;
	var this2 = js.JQuery(this1);
	var tmp1;
	var _g = [];
	var _g2 = 0;
	var _g1 = other.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var tmp3;
		var jq = other.get(i);
		tmp3 = js.JQuery(jq);
		_g.push(tmp3);
	}
	tmp1 = _g;
	var els = tmp1;
	var tmp2;
	var _g3 = [];
	var _g21 = 0;
	var _g11 = this2.length;
	while(_g21 < _g11) {
		var i1 = _g21++;
		var tmp4;
		var jq1 = this2.get(i1);
		tmp4 = js.JQuery(jq1);
		_g3.push(tmp4);
	}
	tmp2 = _g3;
	var res = tmp2.filter(function(e) {
		return Lambda.has(els,e);
	});
	var result = js.JQuery("");
	var _g4 = 0;
	while(_g4 < res.length) {
		var e1 = res[_g4];
		++_g4;
		result = result.add(e1);
	}
	tmp = result;
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.subFromElementArray = function(this1,els) {
	var tmp;
	var _g = [];
	var _g2 = 0;
	var _g1 = this1.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var tmp1;
		var jq = this1.get(i);
		tmp1 = js.JQuery(jq);
		_g.push(tmp1);
	}
	tmp = _g;
	var res = tmp.filter(function(e) {
		return Lambda.has(els,e);
	});
	var result = js.JQuery("");
	var _g3 = 0;
	while(_g3 < res.length) {
		var e1 = res[_g3];
		++_g3;
		result = result.add(e1);
	}
	return result;
};
tannus_html__$Element_Element_$Impl_$.toArray = function(this1) {
	var tmp;
	var _g = [];
	var _g2 = 0;
	var _g1 = this1.length;
	while(_g2 < _g1) {
		var i = _g2++;
		var tmp1;
		var jq = this1.get(i);
		tmp1 = js.JQuery(jq);
		_g.push(tmp1);
	}
	tmp = _g;
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.fromArray = function(els) {
	var el = js.JQuery("");
	var _g = 0;
	while(_g < els.length) {
		var e = els[_g];
		++_g;
		el = el.add(e);
	}
	return el;
};
tannus_html__$Element_Element_$Impl_$.toHTMLElement = function(this1) {
	return this1.get(0);
};
tannus_html__$Element_Element_$Impl_$.fromString = function(q) {
	return js.JQuery(q);
};
tannus_html__$Element_Element_$Impl_$.fromDOMElement = function(el) {
	return js.JQuery(el);
};
tannus_html__$Element_Element_$Impl_$.extend = function(name,f) {
	var ext = function(args) {
		var self = this;
		args.unshift(self);
		return f.apply(self,args);
	};
	var tmp;
	var tmp1;
	var tmp2;
	var tmp4;
	var this3 = window;
	tmp4 = this3.jQuery;
	var d1 = tmp4;
	tmp2 = tannus_ds_CObj.create(d1);
	var this2 = tmp2;
	var tmp3;
	var o = this2.o;
	var tmp5;
	if(o == null) tmp3 = null; else if(o.__properties__ && (tmp5 = o.__properties__["get_" + "fn"])) tmp3 = o[tmp5](); else tmp3 = o.fn;
	tmp1 = tmp3;
	var d = tmp1;
	tmp = tannus_ds_CObj.create(d);
	var this1 = tmp;
	var val = Reflect.makeVarArgs(ext);
	this1.set(name,val);
};
tannus_html__$Element_Element_$Impl_$.jq = function() {
	var tmp;
	var this1 = window;
	tmp = this1.jQuery;
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.jqo = function() {
	var tmp;
	var tmp1;
	var this1 = window;
	tmp1 = this1.jQuery;
	var d = tmp1;
	tmp = tannus_ds_CObj.create(d);
	return tmp;
};
tannus_html__$Element_Element_$Impl_$.jqfn = function() {
	var tmp;
	var tmp1;
	var tmp2;
	var tmp4;
	var this2 = window;
	tmp4 = this2.jQuery;
	var d1 = tmp4;
	tmp2 = tannus_ds_CObj.create(d1);
	var this1 = tmp2;
	var tmp3;
	var o = this1.o;
	var tmp5;
	if(o == null) tmp3 = null; else if(o.__properties__ && (tmp5 = o.__properties__["get_" + "fn"])) tmp3 = o[tmp5](); else tmp3 = o.fn;
	tmp1 = tmp3;
	var d = tmp1;
	tmp = tannus_ds_CObj.create(d);
	return tmp;
};
var tannus_html__$JSFunction_JSFunction_$Impl_$ = {};
$hxClasses["tannus.html._JSFunction.JSFunction_Impl_"] = tannus_html__$JSFunction_JSFunction_$Impl_$;
tannus_html__$JSFunction_JSFunction_$Impl_$.__name__ = ["tannus","html","_JSFunction","JSFunction_Impl_"];
tannus_html__$JSFunction_JSFunction_$Impl_$.__properties__ = {set_prototype:"set_prototype",get_prototype:"get_prototype"}
tannus_html__$JSFunction_JSFunction_$Impl_$._new = function(f) {
	return f;
};
tannus_html__$JSFunction_JSFunction_$Impl_$.apply = function(this1,o,args) {
	return this1.apply(o,args);
};
tannus_html__$JSFunction_JSFunction_$Impl_$.bind = function(this1,thisValue) {
	return this1.bind(thisValue);
};
tannus_html__$JSFunction_JSFunction_$Impl_$.get_prototype = function(this1) {
	return this1.prototype;
};
tannus_html__$JSFunction_JSFunction_$Impl_$.set_prototype = function(this1,v) {
	return this1.prototype = v;
};
var tannus_html_JSTools = function() { };
$hxClasses["tannus.html.JSTools"] = tannus_html_JSTools;
tannus_html_JSTools.__name__ = ["tannus","html","JSTools"];
tannus_html_JSTools.arrayify = function(o) {
	return Array.prototype.slice.call(o,0);
};
tannus_html_JSTools.defineGetter = function(o,name,value) {
	var tmp;
	var tmp1;
	if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "__defineGetter__"])) tmp = o[tmp1](); else tmp = o.__defineGetter__;
	tmp.call(o,name,value);
};
tannus_html_JSTools.defineSetter = function(o,name,value) {
	var tmp;
	var tmp1;
	if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "__defineSetter__"])) tmp = o[tmp1](); else tmp = o.__defineSetter__;
	tmp.call(o,name,value);
};
tannus_html_JSTools.definePointer = function(o,name,value) {
	var tmp;
	var tmp2;
	if(o == null) tmp = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + "__defineGetter__"])) tmp = o[tmp2](); else tmp = o.__defineGetter__;
	tmp.call(o,name,value.getter);
	var tmp1;
	var tmp3;
	if(o == null) tmp1 = null; else if(o.__properties__ && (tmp3 = o.__properties__["get_" + "__defineSetter__"])) tmp1 = o[tmp3](); else tmp1 = o.__defineSetter__;
	tmp1.call(o,name,value.setter);
};
var tannus_html__$Win_Win_$Impl_$ = {};
$hxClasses["tannus.html._Win.Win_Impl_"] = tannus_html__$Win_Win_$Impl_$;
tannus_html__$Win_Win_$Impl_$.__name__ = ["tannus","html","_Win","Win_Impl_"];
tannus_html__$Win_Win_$Impl_$.__properties__ = {get_current:"get_current",get_document:"get_document",get_self:"get_self",get_viewport:"get_viewport"}
tannus_html__$Win_Win_$Impl_$._new = function(w) {
	return w != null?w:window;
};
tannus_html__$Win_Win_$Impl_$.onScroll = function(this1) {
	var sig = new tannus_io_Signal();
	var handlr = function(event) {
		var scroll = new tannus_geom_TPoint(this1.scrollX,this1.scrollY,0);
		sig.broadcast(scroll);
	};
	this1.addEventListener("scroll",handlr);
	sig.ondelete = function() {
		this1.removeEventListener("scroll",handlr);
	};
	return sig;
};
tannus_html__$Win_Win_$Impl_$.onResize = function(this1) {
	var sig = new tannus_io_Signal();
	var handlr = function(event) {
		var area = [this1.innerWidth,this1.innerHeight];
		sig.broadcast(area);
	};
	this1.addEventListener("resize",handlr);
	sig.ondelete = function() {
		this1.removeEventListener("resize",handlr);
	};
	return sig;
};
tannus_html__$Win_Win_$Impl_$.onKeydown = function(this1) {
	var sig = new tannus_io_Signal();
	var handle = function(event) {
		var mods = [];
		if(event.altKey) mods.push("alt");
		if(event.shiftKey) mods.push("shift");
		if(event.ctrlKey) mods.push("ctrl");
		var e = new tannus_events_KeyboardEvent("keydown",event.keyCode,mods);
		sig.broadcast(e);
	};
	var bod = this1.document.getElementsByTagName("body").item(0);
	bod.addEventListener("keydown",handle);
	sig.ondelete = function() {
		bod.removeEventListener("keydown",handle);
	};
	return sig;
};
tannus_html__$Win_Win_$Impl_$.onBeforeUnload = function(this1) {
	var sig = new tannus_io_Signal();
	var handlr = function(event) {
		var data = new Date().getTime();
		sig.broadcast(data);
	};
	this1.addEventListener("beforeunload",handlr);
	sig.ondelete = function() {
		this1.removeEventListener("beforeunload",handlr);
	};
	return sig;
};
tannus_html__$Win_Win_$Impl_$.requestFileSystem = function(this1,size,cb) {
	var self = tannus_ds_CObj.create(this1);
	var rfs = (function($this) {
		var $r;
		var o = self.o;
		var tmp;
		$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + "requestFileSystem"])?o[tmp]():o.requestFileSystem;
		return $r;
	}(this));
	if(rfs == null) rfs = (function($this) {
		var $r;
		var o1 = self.o;
		var tmp1;
		$r = o1 == null?null:o1.__properties__ && (tmp1 = o1.__properties__["get_" + "webkitRequestFileSystem"])?o1[tmp1]():o1.webkitRequestFileSystem;
		return $r;
	}(this));
	rfs((function($this) {
		var $r;
		var o2 = self.o;
		var tmp2;
		$r = o2 == null?null:o2.__properties__ && (tmp2 = o2.__properties__["get_" + "TEMPORARY"])?o2[tmp2]():o2.TEMPORARY;
		return $r;
	}(this)),size,cb);
};
tannus_html__$Win_Win_$Impl_$.expose = function(this1,name,value) {
	var self = tannus_ds_CObj.create(this1);
	var val = value;
	self.set(name,val);
};
tannus_html__$Win_Win_$Impl_$.exposeGetter = function(this1,name,get) {
	this1.__defineGetter__(name,get);
};
tannus_html__$Win_Win_$Impl_$.exposeSetter = function(this1,name,set) {
	this1.__defineSetter__(name,set);
};
tannus_html__$Win_Win_$Impl_$.exposeRef = function(this1,name,ref) {
	this1.__defineGetter__(name,ref.getter);
	this1.__defineSetter__(name,ref.setter);
};
tannus_html__$Win_Win_$Impl_$.get = function(this1,name) {
	return this1[name];
};
tannus_html__$Win_Win_$Impl_$.get_viewport = function(this1) {
	return new tannus_geom_CRectangle(this1.scrollX,this1.scrollY,this1.innerWidth,this1.innerHeight);
};
tannus_html__$Win_Win_$Impl_$.get_self = function(this1) {
	return tannus_ds_CObj.create(this1);
};
tannus_html__$Win_Win_$Impl_$.get_document = function(this1) {
	return this1.document;
};
tannus_html__$Win_Win_$Impl_$.get_current = function() {
	return window;
};
var tannus_html_fs_FilePromise = function(efunc) {
	this.entry = null;
	var _g = this;
	tannus_ds_Promise.call(this,function(accept,reject) {
		efunc(function(e) {
			_g.entry = e;
			_g.gotentry.broadcast(_g.entry);
			var f = e;
			f.file(function(me) {
				accept(new tannus_html_fs_WebFile(me));
			},function(error) {
				reject(error);
			});
		});
	},true);
	this.gotentry = new tannus_io_Signal();
	this.make();
};
$hxClasses["tannus.html.fs.FilePromise"] = tannus_html_fs_FilePromise;
tannus_html_fs_FilePromise.__name__ = ["tannus","html","fs","FilePromise"];
tannus_html_fs_FilePromise.__super__ = tannus_ds_Promise;
tannus_html_fs_FilePromise.prototype = $extend(tannus_ds_Promise.prototype,{
	writer: function() {
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			_g.useEntry(function(entry) {
				tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.writer(entry).then(accept).unless(reject);
			});
		},null);
	}
	,write: function(data) {
		this.writer().then(function(writer) {
			writer.write(data);
		});
		return this;
	}
	,read: function(pos,len) {
		if(pos == null) pos = 0;
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			_g.then(function(file) {
				file.read(pos,len).then(accept).unless(reject);
			});
			_g.unless(function(error) {
				reject(error);
			});
		},null);
	}
	,useEntry: function(action) {
		if(this.entry == null) this.gotentry.listen(action,true); else action(this.entry);
	}
	,entry: null
	,gotentry: null
	,__class__: tannus_html_fs_FilePromise
});
var tannus_html_fs_Macros = function() { };
$hxClasses["tannus.html.fs.Macros"] = tannus_html_fs_Macros;
tannus_html_fs_Macros.__name__ = ["tannus","html","fs","Macros"];
var tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebDirectoryEntry.WebDirectoryEntry_Impl_"] = tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$;
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.__name__ = ["tannus","html","fs","_WebDirectoryEntry","WebDirectoryEntry_Impl_"];
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$._new = function(dir) {
	return dir;
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.exists = function(this1,path) {
	return new tannus_ds_Promise(function(accept,reject) {
		this1.getFile(path,null,function(entry) {
			accept(true);
		},function(error) {
			var _g = error.code;
			switch(_g) {
			case 1:
				accept(false);
				break;
			default:
				reject(error);
			}
		});
	},null).bool();
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.createFile = function(this1,path) {
	var tmp;
	var f = $bind(this1,this1.getFile);
	var a1 = path;
	tmp = function(a3,a4) {
		f(a1,{ 'create' : true},a3,a4);
	};
	return new tannus_ds_Promise(tmp);
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.getFile = function(this1,path) {
	var tmp;
	var f = $bind(this1,this1.getFile);
	var a1 = path;
	tmp = function(a3,a4) {
		f(a1,{ },a3,a4);
	};
	return new tannus_ds_Promise(tmp);
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.createDirectory = function(this1,path) {
	var tmp;
	var f = $bind(this1,this1.getDirectory);
	var a1 = path;
	tmp = function(a3,a4) {
		f(a1,{ 'create' : true},a3,a4);
	};
	return new tannus_ds_Promise(tmp);
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.getDirectory = function(this1,path) {
	var tmp;
	var f = $bind(this1,this1.getDirectory);
	var a1 = path;
	tmp = function(a3,a4) {
		f(a1,{ },a3,a4);
	};
	return new tannus_ds_Promise(tmp);
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.readEntries = function(this1) {
	return tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.read(this1.createReader());
};
tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.walk = function(this1,cb,filter,step) {
	var all = [];
	tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.read(this1.createReader()).then(function(entries) {
		var stack = new tannus_ds_AsyncStack();
		var broken = false;
		var _g = 0;
		while(_g < entries.length) {
			var e = [entries[_g]];
			++_g;
			stack.under((function(e) {
				return function(done) {
					if(broken) {
						done();
						return;
					}
					if(e[0].isFile) {
						var add = filter == null || filter(e[0]);
						if(add) {
							var wfe = e[0];
							if(step != null) {
								var continu = step(wfe);
								if(!continu) broken = true;
							}
							all.push(wfe);
						}
						done();
					} else {
						var _f = e[0];
						tannus_html_fs__$WebDirectoryEntry_WebDirectoryEntry_$Impl_$.walk(_f,(function() {
							return function(sub) {
								all = all.concat(sub);
								done();
							};
						})(),filter);
					}
				};
			})(e));
		}
		stack.run(function() {
			cb(all);
		});
	});
};
var tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebDirectoryReader.WebDirectoryReader_Impl_"] = tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$;
tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.__name__ = ["tannus","html","fs","_WebDirectoryReader","WebDirectoryReader_Impl_"];
tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$._new = function(r) {
	return r;
};
tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.read = function(this1) {
	var me = this1;
	return new tannus_ds_Promise(function(accept,reject) {
		var on_results = function(entries) {
			accept(tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.__manip(me,entries));
		};
		var on_error = function(error) {
			reject(error);
		};
		this1.readEntries(on_results,on_error);
	},null).array();
};
tannus_html_fs__$WebDirectoryReader_WebDirectoryReader_$Impl_$.__manip = function(this1,entries) {
	return entries;
};
var tannus_html_fs_WebFile = function(f) {
	this._objectUrl = null;
	this.file = f;
};
$hxClasses["tannus.html.fs.WebFile"] = tannus_html_fs_WebFile;
tannus_html_fs_WebFile.__name__ = ["tannus","html","fs","WebFile"];
tannus_html_fs_WebFile.prototype = {
	slice: function(start,end,contentType) {
		return this.file.slice(start,end,contentType);
	}
	,read: function(pos,len) {
		if(pos == null) pos = 0;
		var _g = this;
		return new tannus_ds_Promise(function(accept,reject) {
			if(len == null) len = _g.file.size;
			var reader = new FileReader();
			reader.onerror = function(error) {
				reject(error.target.error);
			};
			reader.onload = function(event) {
				var data = tannus_io_impl_BrowserBinary.ofData(event.target.result);
				accept(data);
			};
			if(pos == 0 && len == _g.file.size) reader.readAsArrayBuffer(_g.file); else reader.readAsArrayBuffer(_g.slice(pos,pos + len,_g.file.type));
		},null);
	}
	,createReader: function() {
		return new tannus_html_fs_WebFileReader(this);
	}
	,input: function() {
		return new tannus_html_fs_WebFileInput(this);
	}
	,getObjectURL: function() {
		if(this._objectUrl == null) {
			var w = window;
			var getter = (w.URL || w.webkitURL).createObjectURL.bind(w);
			this._objectUrl = getter(this.file);
		}
		return this._objectUrl;
	}
	,get_name: function() {
		return this.file.name;
	}
	,get_size: function() {
		return this.file.size;
	}
	,get_type: function() {
		return this.file.type;
	}
	,get_lastModified: function() {
		return this.file.lastModifiedDate;
	}
	,file: null
	,_objectUrl: null
	,__class__: tannus_html_fs_WebFile
	,__properties__: {get_lastModified:"get_lastModified",get_type:"get_type",get_size:"get_size",get_name:"get_name"}
};
var tannus_html_fs_WebFileReader = function(f) {
	this.file = f;
	this.r = new FileReader();
	this.offset = 0;
};
$hxClasses["tannus.html.fs.WebFileReader"] = tannus_html_fs_WebFileReader;
tannus_html_fs_WebFileReader.__name__ = ["tannus","html","fs","WebFileReader"];
tannus_html_fs_WebFileReader.prototype = {
	seek: function(pos) {
		var tmp;
		var max = this.file.file.size;
		if(pos < 0) tmp = 0; else if(pos > max) tmp = max; else tmp = pos;
		return this.offset = tmp;
	}
	,read: function(size,provide,reject) {
		var _g = this;
		if(size == null) size = this.file.file.size - this.offset;
		var tmp;
		var b = this.file.file.size - this.offset;
		if(size < b) tmp = size; else tmp = b;
		size = tmp;
		this.r.onload = function(event) {
			_g.offset += size;
			if(_g.offset == _g.file.file.size) _g.r = null;
			try {
				provide(tannus_io_impl_BrowserBinary.ofData(event.target.result));
			} catch( error ) {
				if (error instanceof js__$Boot_HaxeError) error = error.val;
				reject(error);
			}
		};
		var tmp1;
		var f = reject;
		tmp1 = function(a1) {
			f(a1);
		};
		this.r.onerror = tmp1;
		this.r.readAsArrayBuffer(this.file.slice(this.offset,this.offset + size));
	}
	,file: null
	,r: null
	,offset: null
	,__class__: tannus_html_fs_WebFileReader
};
var tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebFileEntry.WebFileEntry_Impl_"] = tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$;
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.__name__ = ["tannus","html","fs","_WebFileEntry","WebFileEntry_Impl_"];
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.__properties__ = {get_o:"get_o",get_fileSystem:"get_fileSystem"}
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$._new = function(entry) {
	return entry;
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.get_fileSystem = function(this1) {
	return this1.filesystem;
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.file = function(this1) {
	return new tannus_html_fs_FilePromise(function(give) {
		give(this1);
	});
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.getFile = function(this1,cb) {
	var self = this1;
	if(Object.prototype.hasOwnProperty.call(self,"_file")) cb((function($this) {
		var $r;
		var tmp;
		$r = self == null?null:self.__properties__ && (tmp = self.__properties__["get_" + "_file"])?self[tmp]():self._file;
		return $r;
	}(this))); else this1.file(function(f) {
		{
			var tmp1;
			if(self.__properties__ && (tmp1 = self.__properties__["set_" + "_file"])) self[tmp1](f); else self._file = f;
			{
				var tmp2;
				if(self == null) null; else if(self.__properties__ && (tmp2 = self.__properties__["get_" + "_file"])) self[tmp2](); else self._file;
			}
		}
		cb(f);
	},function(err) {
		throw new js__$Boot_HaxeError(err);
	});
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.size = function(this1) {
	var tmp;
	var this2 = this1;
	tmp = new tannus_html_fs_FilePromise(function(give) {
		give(this2);
	});
	return tmp.transform(function(f) {
		return f.file.size;
	});
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.type = function(this1) {
	var tmp;
	var this2 = this1;
	tmp = new tannus_html_fs_FilePromise(function(give) {
		give(this2);
	});
	return tmp.transform(function(f) {
		return f.file.type;
	}).string();
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.read = function(this1) {
	return new tannus_ds_Promise(function(accept,reject) {
		tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.getFile(this1,function(file) {
			var reader = new FileReader();
			reader.onerror = function(error) {
				reject(error);
			};
			reader.onload = function(event) {
				var data = tannus_io_impl_BrowserBinary.ofData(event.target.result);
				accept(data);
			};
			reader.readAsArrayBuffer(file);
		});
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.writer = function(this1) {
	return new tannus_ds_Promise(function(accept,reject) {
		tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.createWriter(this1,function(writer) {
			accept(writer);
		},function(err) {
			reject(err);
		});
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.createWriter = function(this1,onsuccess,onerror) {
	this1.createWriter(function(fw) {
		onsuccess(new tannus_html_fs_CWebFileWriter(fw));
	},onerror);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.moveTo = function(this1,parent,name) {
	return new tannus_ds_Promise(function(accept,reject) {
		this1.moveTo(parent,name);
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.copyTo = function(this1,parent,name) {
	return new tannus_ds_Promise(function(accept,reject) {
		this1.copyTo(parent,name);
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.rename = function(this1,newname) {
	return new tannus_ds_Promise(function(accept,reject) {
		var tmp;
		var this2 = this1;
		tmp = new tannus_ds_Promise(function(accept1,reject1) {
			this2.getParent(function(parent) {
				if(parent.isDirectory) accept1(parent);
			},function(err) {
				reject1(err);
			});
		},null);
		var pp = tmp;
		pp.then(function(parent1) {
			tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.moveTo(this1,parent1,newname).then(accept).unless(reject);
		});
		pp.unless(function(error) {
			reject(error);
		});
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.remove = function(this1,cb) {
	this1.remove(cb);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.getDirectory = function(this1) {
	return new tannus_ds_Promise(function(accept,reject) {
		this1.getParent(function(parent) {
			if(parent.isDirectory) accept(parent);
		},function(err) {
			reject(err);
		});
	},null);
};
tannus_html_fs__$WebFileEntry_WebFileEntry_$Impl_$.get_o = function(this1) {
	return this1;
};
var tannus_html_fs_WebFileError = function(type,msg) {
	Error.call(this,msg);
	this.name = "FileSystemError";
	this.code = type;
};
$hxClasses["tannus.html.fs.WebFileError"] = tannus_html_fs_WebFileError;
tannus_html_fs_WebFileError.__name__ = ["tannus","html","fs","WebFileError"];
tannus_html_fs_WebFileError.__super__ = Error;
tannus_html_fs_WebFileError.prototype = $extend(Error.prototype,{
	code: null
	,__class__: tannus_html_fs_WebFileError
});
var tannus_io_Input = function() {
	this.__b = [];
	this.__eoi = false;
	this.opened = false;
	this.closed = false;
};
$hxClasses["tannus.io.Input"] = tannus_io_Input;
tannus_io_Input.__name__ = ["tannus","io","Input"];
tannus_io_Input.prototype = {
	read: function(provide,reject) {
		if(!this.opened) throw new js__$Boot_HaxeError("Error: ReadableStream must be opened (by calling the \"open\" method) before data can be read from it"); else if(this.closed) throw new js__$Boot_HaxeError("Error: Cannot read from a closed Stream");
		if(this.__b.length > 0) provide(this.__b.shift()); else {
			if(reject == null) reject = function(err) {
				throw new js__$Boot_HaxeError(err);
			};
			this.__get(function(chunk) {
				if(chunk == null) {
					var error = "No data available on ReadableStream";
					reject(error);
				} else provide(chunk);
			},function(error1) {
				reject(error1);
			});
		}
	}
	,__get: function(provide,reject) {
		provide(null);
	}
	,readAll: function(onchunk,onerror,oncomplete) {
		var _g = this;
		if(onchunk == null) onchunk = function(data) {
		};
		if(onerror == null) onerror = function(error) {
			throw new js__$Boot_HaxeError(error);
		};
		if(oncomplete == null) oncomplete = function() {
		};
		var tmp;
		var step1 = null;
		step1 = function(data1) {
			onchunk(data1);
			if(_g.__eoi) oncomplete(); else _g.read(step1,onerror);
		};
		tmp = step1;
		var step = tmp;
		this.read(step,onerror);
	}
	,open: function(cb) {
		this.opened = true;
	}
	,close: function() {
		this.closed = true;
	}
	,pipe: function(o) {
		var onchunk = function(chunk) {
			o.write(chunk);
		};
		this.readAll(onchunk);
	}
	,buffer: function(d) {
		this.__b.push(d);
	}
	,endOfInput: function() {
		this.__eoi = true;
	}
	,get_eoi: function() {
		return this.__eoi;
	}
	,__b: null
	,opened: null
	,closed: null
	,__eoi: null
	,__class__: tannus_io_Input
	,__properties__: {get_eoi:"get_eoi"}
};
var tannus_io_ByteArrayInput = function() {
	tannus_io_Input.call(this);
	this.chunkSize = -1;
	this.__chunk = null;
};
$hxClasses["tannus.io.ByteArrayInput"] = tannus_io_ByteArrayInput;
tannus_io_ByteArrayInput.__name__ = ["tannus","io","ByteArrayInput"];
tannus_io_ByteArrayInput.__super__ = tannus_io_Input;
tannus_io_ByteArrayInput.prototype = $extend(tannus_io_Input.prototype,{
	read: function(provide,reject) {
		var _g = this;
		tannus_io_Input.prototype.read.call(this,function(d) {
			if(!(_g.__eoi && Lambda.empty(_g.__b)) && _g.chunkSize != -1 && d._length != _g.chunkSize) {
				if(_g.__chunk == null) {
					if(d._length > _g.chunkSize) {
						_g.__chunk = d.slice(0,_g.chunkSize);
						d = d.slice(_g.chunkSize);
						_g.buffer(d);
						provide(_g.__chunk);
						_g.__chunk = null;
					} else if(d._length < _g.chunkSize) _g.__chunk = d;
				} else if(_g.__chunk._length + d._length >= _g.chunkSize) {
					_g.__chunk = _g.__chunk.concat(d);
					provide(_g.__chunk.slice(0,_g.chunkSize));
					if(_g.__chunk._length == _g.chunkSize) _g.__chunk = null; else _g.__chunk = _g.__chunk.slice(_g.chunkSize);
				} else _g.__chunk = _g.__chunk.concat(d);
			} else provide(d);
		},reject);
	}
	,seek: function(offset,done) {
		if(done == null) done = function() {
		};
		this.__seek(offset,done);
	}
	,__seek: function(offset,done) {
		this.__position(offset);
		done();
	}
	,pipe: function(o) {
		if(js_Boot.__instanceof(o,tannus_io_ByteArrayOutput)) {
			var bo = o;
			var pos = this.__position();
			bo.__position(pos);
			var len = this.__size();
			bo.__size(len);
		}
		tannus_io_Input.prototype.pipe.call(this,o);
	}
	,__size: function() {
		return -1;
	}
	,__position: function(v) {
		return -1;
	}
	,get_length: function() {
		return this.__size();
	}
	,get_position: function() {
		return this.__position();
	}
	,set_position: function(v) {
		return this.__position(v);
	}
	,chunkSize: null
	,__chunk: null
	,__class__: tannus_io_ByteArrayInput
	,__properties__: $extend(tannus_io_Input.prototype.__properties__,{set_position:"set_position",get_position:"get_position",get_length:"get_length"})
});
var tannus_html_fs_WebFileInput = function(file) {
	this.offset = 0;
	tannus_io_ByteArrayInput.call(this);
	this.src = file;
	this.reader = new tannus_html_fs_WebFileReader(this.src);
	this.chunkSize = 524288;
};
$hxClasses["tannus.html.fs.WebFileInput"] = tannus_html_fs_WebFileInput;
tannus_html_fs_WebFileInput.__name__ = ["tannus","html","fs","WebFileInput"];
tannus_html_fs_WebFileInput.__super__ = tannus_io_ByteArrayInput;
tannus_html_fs_WebFileInput.prototype = $extend(tannus_io_ByteArrayInput.prototype,{
	__get: function(provide,reject) {
		var _g = this;
		var _this = this.reader;
		var pos = this.offset;
		var tmp;
		var max = _this.file.file.size;
		if(pos < 0) tmp = 0; else if(pos > max) tmp = max; else tmp = pos;
		_this.offset = tmp;
		var gotChunk = function(data) {
			_g.offset += data._length;
			provide(data);
			if(_g.__position() == _g.__size()) _g.endOfInput();
		};
		this.reader.read(this.chunkSize,gotChunk,reject);
	}
	,__position: function(i) {
		if(i != null) this.offset = i;
		return this.offset;
	}
	,__size: function() {
		return this.src.file.size;
	}
	,offset: null
	,src: null
	,reader: null
	,__class__: tannus_html_fs_WebFileInput
});
var tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebFileSystem.WebFileSystem_Impl_"] = tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$;
tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$.__name__ = ["tannus","html","fs","_WebFileSystem","WebFileSystem_Impl_"];
tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$._new = function(w) {
	return w;
};
tannus_html_fs__$WebFileSystem_WebFileSystem_$Impl_$.request = function(size,cb) {
	tannus_html__$Win_Win_$Impl_$.requestFileSystem(window,size,cb);
};
var tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebFileWriter.WebFileWriter_Impl_"] = tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$;
tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$.__name__ = ["tannus","html","fs","_WebFileWriter","WebFileWriter_Impl_"];
tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$._new = function(w) {
	return new tannus_html_fs_CWebFileWriter(w);
};
tannus_html_fs__$WebFileWriter_WebFileWriter_$Impl_$.fromFileWriter = function(w) {
	return new tannus_html_fs_CWebFileWriter(w);
};
var tannus_html_fs_CWebFileWriter = function(writer) {
	this.w = writer;
	this.onwrite = new tannus_io_VoidSignal();
	this.w.onwrite = (function($this) {
		var $r;
		var f = ($_=$this.onwrite,$bind($_,$_.fire));
		$r = function() {
			f();
		};
		return $r;
	}(this));
	this.onerror = new tannus_io_Signal();
	this.w.onerror = (function($this) {
		var $r;
		var f1 = ($_=$this.onerror,$bind($_,$_.call));
		$r = function(a1) {
			f1(a1);
		};
		return $r;
	}(this));
	console.log("writer constructed");
};
$hxClasses["tannus.html.fs.CWebFileWriter"] = tannus_html_fs_CWebFileWriter;
tannus_html_fs_CWebFileWriter.__name__ = ["tannus","html","fs","CWebFileWriter"];
tannus_html_fs_CWebFileWriter.prototype = {
	seek: function(pos) {
		try {
			this.w.seek(pos);
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			var data = err;
			this.onerror.broadcast(data);
		}
	}
	,write: function(data,cb) {
		if(cb == null) cb = function(x) {
		};
		var cbed = false;
		this.onwrite.once(function() {
			if(!cbed) {
				cbed = true;
				cb(null);
			}
		});
		this.onerror.listen(function(err) {
			if(!cbed) {
				cbed = true;
				cb(err);
			}
		},true);
		var blob = new Blob([data.b]);
		this.w.seek(0);
		this.w.write(blob);
	}
	,truncate: function(len) {
		this.w.truncate(len);
	}
	,get_length: function() {
		return this.w.length;
	}
	,get_position: function() {
		return this.w.position;
	}
	,w: null
	,onwrite: null
	,onerror: null
	,__class__: tannus_html_fs_CWebFileWriter
	,__properties__: {get_position:"get_position",get_length:"get_length"}
};
var tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$ = {};
$hxClasses["tannus.html.fs._WebFileWriter.OldWebFileWriter_Impl_"] = tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$;
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.__name__ = ["tannus","html","fs","_WebFileWriter","OldWebFileWriter_Impl_"];
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$._new = function(w) {
	return w;
};
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.seek = function(this1,pos) {
	this1.seek(pos);
};
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.write = function(this1,data,cb) {
	if(cb == null) cb = function(x) {
	};
	this1.onwriteend = function(event) {
		cb(null);
	};
	this1.onerror = function(error) {
		cb(error);
	};
	var blob = new Blob([data.b]);
	this1.write(blob);
};
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.append = function(this1,data,cb) {
	this1.seek(this1.length);
	tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.write(this1,data,cb);
};
tannus_html_fs__$WebFileWriter_OldWebFileWriter_$Impl_$.truncate = function(this1,len) {
	this1.truncate(len);
};
var tannus_http__$Url_Url_$Impl_$ = {};
$hxClasses["tannus.http._Url.Url_Impl_"] = tannus_http__$Url_Url_$Impl_$;
tannus_http__$Url_Url_$Impl_$.__name__ = ["tannus","http","_Url","Url_Impl_"];
tannus_http__$Url_Url_$Impl_$._new = function(s) {
	return new tannus_http_CUrl(s);
};
tannus_http__$Url_Url_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_http__$Url_Url_$Impl_$.fromString = function(s) {
	return new tannus_http_CUrl(s);
};
var tannus_http_CUrl = $hx_exports.Href = function(surl) {
	this.protocol = null;
	this.hostname = null;
	this.pathname = null;
	this.search = null;
	this.hash = null;
	if(surl != null) {
		this.protocol = new EReg("^([A-Z]+):","i").match(surl)?surl.substring(0,surl.indexOf(":")):"";
		if(this.protocol.length == 0) this.protocol = "http";
		var noproto = tannus_ds_StringUtils.remove(surl,this.protocol + "://");
		if(StringTools.startsWith(noproto,"/")) noproto = noproto.substring(1);
		this.hostname = tannus_ds_StringUtils.before(noproto,"/");
		this.pathname = tannus_ds_StringUtils.has(noproto,"/")?tannus_ds_StringUtils.after(noproto,"/"):"";
		this.search = tannus_ds_StringUtils.has(this.pathname,"?")?tannus_ds_StringUtils.after(this.pathname,"?"):"";
		this.pathname = tannus_ds_StringUtils.strip(tannus_ds_StringUtils.strip(this.pathname,tannus_ds__$EitherType_EitherType_$Impl_$.fromL("?")),tannus_ds__$EitherType_EitherType_$Impl_$.fromL(this.search));
		this.hash = tannus_ds_StringUtils.has(this.search,"#")?tannus_ds_StringUtils.after(this.search,"#"):"";
		this.search = tannus_ds_StringUtils.before(this.search,"#");
		if(this.hash.length == 0 && tannus_ds_StringUtils.has(this.pathname,"#")) {
			this.hash = tannus_ds_StringUtils.after(this.pathname,"#");
			this.pathname = tannus_ds_StringUtils.before(this.pathname,"#");
		}
		this.params = tannus_ds_QueryString.parse(this.search);
		try {
			this.hashparams = tannus_ds_QueryString.parse(this.hash);
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			if( js_Boot.__instanceof(err,String) ) {
				this.hashparams = null;
			} else throw(err);
		}
	}
};
$hxClasses["tannus.http.CUrl"] = tannus_http_CUrl;
tannus_http_CUrl.__name__ = ["tannus","http","CUrl"];
tannus_http_CUrl.prototype = {
	toString: function() {
		this.search = tannus_ds_QueryString.stringify(this.params);
		this.hash = this.hashparams != null?tannus_ds_QueryString.stringify(this.hashparams):this.hash + "";
		var base = "" + this.protocol + "://" + this.hostname + "/" + this.pathname;
		base += Reflect.fields(this.params).length == 0?"":"?" + this.search;
		base += this.hash != ""?"#" + this.hash:"";
		return base;
	}
	,clone: function() {
		var tmp;
		var s = this.toString();
		tmp = new tannus_http_CUrl(s);
		return tmp;
	}
	,get_domain: function() {
		return this.hostname.split(".");
	}
	,set_domain: function(v) {
		this.hostname = v.join(".");
		return this.get_domain();
	}
	,get_path: function() {
		return new tannus_sys_CPath(this.pathname);
	}
	,set_path: function(v) {
		this.pathname = v.s;
		return new tannus_sys_CPath(this.pathname);
	}
	,protocol: null
	,hostname: null
	,pathname: null
	,search: null
	,hash: null
	,params: null
	,hashparams: null
	,__class__: tannus_http_CUrl
	,__properties__: {set_path:"set_path",get_path:"get_path",set_domain:"set_domain",get_domain:"get_domain"}
};
var tannus_http_WebRequest = $hx_exports.WebRequest = function() {
	this.complete = false;
	tannus_io_EventDispatcher.call(this);
	this.req = new XMLHttpRequest();
	this._listen();
};
$hxClasses["tannus.http.WebRequest"] = tannus_http_WebRequest;
tannus_http_WebRequest.__name__ = ["tannus","http","WebRequest"];
tannus_http_WebRequest.__super__ = tannus_io_EventDispatcher;
tannus_http_WebRequest.prototype = $extend(tannus_io_EventDispatcher.prototype,{
	open: function(method,url) {
		this.req.open(method,url);
	}
	,send: function(data) {
		this.req.send(data);
	}
	,loadAsText: function(cb) {
		this.req.responseType = "text";
		this.onres(cb);
	}
	,loadAsObject: function(cb) {
		this.req.responseType = "json";
		this.onres(function(o) {
			cb(tannus_ds_CObj.create(o));
		});
	}
	,loadAsBlob: function(cb) {
		this.req.responseType = "blob";
		this.onres(cb);
	}
	,loadAsArrayBuffer: function(cb) {
		this.req.responseType = "arraybuffer";
		this.onres(cb);
	}
	,loadAsDocument: function(cb) {
		this.req.responseType = "document";
		this.onres(cb);
	}
	,loadAsByteArray: function(cb) {
		this.req.responseType = "arraybuffer";
		this.onres(function(ab) {
			cb(tannus_io_impl_BrowserBinary.ofData(ab));
		});
	}
	,onres: function(cb) {
		if(this.complete) cb(this.req.response); else {
			this.addSignal(this.eventName());
			this.once(this.eventName(),cb);
		}
	}
	,listen: function() {
		var tmp;
		var f = $bind(this,this.readyStateChanged);
		tmp = function() {
			f();
		};
		this.req.onreadystatechange = tmp;
	}
	,readyStateChanged: function() {
		var _g = this.req.readyState;
		switch(_g) {
		case 2:
			console.log(this.req.getAllResponseHeaders());
			break;
		default:
		}
	}
	,_listen: function() {
		var _g = this;
		this.req.addEventListener("load",function(event) {
			_g.complete = true;
			window.setTimeout(function() {
				_g.done();
			},10);
		});
	}
	,done: function() {
		this.dispatch(this.eventName(),this.req.response);
	}
	,eventName: function() {
		return "got-" + js_Boot.__cast(this.req.responseType , String);
	}
	,get_readyState: function() {
		return this.req.readyState;
	}
	,get_responseType: function() {
		return js_Boot.__cast(this.req.responseType , String);
	}
	,set_responseType: function(v) {
		return this.req.responseType = v;
	}
	,req: null
	,complete: null
	,__class__: tannus_http_WebRequest
	,__properties__: {set_responseType:"set_responseType",get_responseType:"get_responseType",get_readyState:"get_readyState"}
});
var tannus_http__$WebRequest_ResponseType_$Impl_$ = {};
$hxClasses["tannus.http._WebRequest.ResponseType_Impl_"] = tannus_http__$WebRequest_ResponseType_$Impl_$;
tannus_http__$WebRequest_ResponseType_$Impl_$.__name__ = ["tannus","http","_WebRequest","ResponseType_Impl_"];
tannus_http__$WebRequest_ResponseType_$Impl_$.fromString = function(v) {
	var tmp;
	switch(v) {
	case "":case "text":
		tmp = "text";
		break;
	case "json":
		tmp = "json";
		break;
	case "arraybuffer":
		tmp = "arraybuffer";
		break;
	case "blob":
		tmp = "blob";
		break;
	case "document":
		tmp = "document";
		break;
	default:
		tmp = "text";
	}
	return tmp;
};
var tannus_internal_CompileTime = function() { };
$hxClasses["tannus.internal.CompileTime"] = tannus_internal_CompileTime;
tannus_internal_CompileTime.__name__ = ["tannus","internal","CompileTime"];
var tannus_internal__$Error_Error_$Impl_$ = {};
$hxClasses["tannus.internal._Error.Error_Impl_"] = tannus_internal__$Error_Error_$Impl_$;
tannus_internal__$Error_Error_$Impl_$.__name__ = ["tannus","internal","_Error","Error_Impl_"];
tannus_internal__$Error_Error_$Impl_$._new = function(msg) {
	return new Error(msg);
};
tannus_internal__$Error_Error_$Impl_$.fromString = function(s) {
	return new Error(s);
};
var tannus_internal_TypeTools = $hx_exports.TypeTools = function() { };
$hxClasses["tannus.internal.TypeTools"] = tannus_internal_TypeTools;
tannus_internal_TypeTools.__name__ = ["tannus","internal","TypeTools"];
tannus_internal_TypeTools.typename = function(o) {
	var valtype = Type["typeof"](o);
	switch(valtype[1]) {
	case 3:
		return "Bool";
	case 2:case 1:
		return "Number";
	case 0:
		return "Null";
	case 5:
		return "Function";
	case 8:
		return "Unknown";
	case 6:
		try {
			var name = Type.getClassName(valtype[2]);
			return name;
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			if( js_Boot.__instanceof(err,String) ) {
				return "Unknown";
			} else throw(err);
		}
		break;
	case 7:
		var enumer = valtype[2];
		var enumName = Type.getEnumName(enumer);
		var valueNames = Type.getEnumConstructs(enumer);
		var index = o[1];
		var results = "" + enumName + "." + valueNames[index];
		return results;
	case 4:
		try {
			var name1 = Type.getClassName(o);
			if(name1 != null) return "Class<" + name1 + ">"; else throw new js__$Boot_HaxeError("failed!");
		} catch( err1 ) {
			if (err1 instanceof js__$Boot_HaxeError) err1 = err1.val;
			if( js_Boot.__instanceof(err1,String) ) {
				try {
					var name2 = Type.getEnumName(o);
					if(name2 != null) return "Enum<" + name2 + ">"; else throw new js__$Boot_HaxeError("failed!");
				} catch( err2 ) {
					if (err2 instanceof js__$Boot_HaxeError) err2 = err2.val;
					return "Unknown";
				}
			} else throw(err1);
		}
		break;
	}
};
tannus_internal_TypeTools.getClassHierarchy = function(klass) {
	var kl = klass;
	var hierarchy = [];
	var name = Type.getClassName(klass);
	hierarchy.push(name);
	while(true) try {
		kl = Type.getSuperClass(kl);
		name = Type.getClassName(kl);
		hierarchy.push(name);
	} catch( err ) {
		if (err instanceof js__$Boot_HaxeError) err = err.val;
		break;
	}
	return hierarchy;
};
tannus_internal_TypeTools.hierarchy = function(o) {
	if(Reflect.isObject(o)) {
		var tmp;
		if(o == null) tmp = null; else tmp = js_Boot.getClass(o);
		var klass = tmp;
		if(klass != null) return tannus_internal_TypeTools.getClassHierarchy(klass);
	}
	return [];
};
tannus_internal_TypeTools.deepCopy = function(o) {
	if(o == null || typeof(o) == "boolean" || typeof(o) == "number" || typeof(o) == "string") return o; else if(Reflect.isEnumValue(o)) {
		var en = Type.getEnum(o);
		var env = o;
		var clonedParams = env.slice(2).map(tannus_internal_TypeTools.deepCopy);
		return Type.createEnumIndex(en,env[1],clonedParams);
	} else if((o instanceof Array) && o.__enum__ == null) return (js_Boot.__cast(o , Array)).map(tannus_internal_TypeTools.deepCopy); else if(Reflect.isObject(o)) {
		if(Reflect.isObject(o) && Object.prototype.hasOwnProperty.call(o,"_hxDeepCopy") && Reflect.isFunction((function($this) {
			var $r;
			var tmp;
			$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + "_hxDeepCopy"])?o[tmp]():o._hxDeepCopy;
			return $r;
		}(this)))) return (function($this) {
			var $r;
			var func = (function($this) {
				var $r;
				var tmp1;
				$r = o == null?null:o.__properties__ && (tmp1 = o.__properties__["get_" + "_hxDeepCopy"])?o[tmp1]():o._hxDeepCopy;
				return $r;
			}($this));
			$r = func.apply(o,[]);
			return $r;
		}(this)); else {
			var klass = o == null?null:js_Boot.getClass(o);
			if(klass != null) {
				var copy = Type.createEmptyInstance(klass);
				var fieldNames = Type.getInstanceFields(klass);
				var _g = 0;
				while(_g < fieldNames.length) {
					var n = fieldNames[_g];
					++_g;
					var val = (function($this) {
						var $r;
						var tmp2;
						$r = o == null?null:o.__properties__ && (tmp2 = o.__properties__["get_" + n])?o[tmp2]():o[n];
						return $r;
					}(this));
					if(Reflect.isFunction(val)) val = Reflect.makeVarArgs((function($this) {
						var $r;
						var o1 = [o];
						var a1 = [val];
						$r = (function(a1,o1) {
							return function(a2) {
								return Reflect.callMethod(o1[0],a1[0],a2);
							};
						})(a1,o1);
						return $r;
					}(this))); else val = tannus_internal_TypeTools.deepCopy(val);
					var tmp3;
					if(copy.__properties__ && (tmp3 = copy.__properties__["set_" + n])) copy[tmp3](val); else copy[n] = val;
				}
				return copy;
			} else return Reflect.copy(o);
		}
	} else if(Reflect.isFunction(o)) return Reflect.makeVarArgs((function($this) {
		var $r;
		var a11 = o;
		$r = function(a21) {
			return Reflect.callMethod(null,a11,a21);
		};
		return $r;
	}(this))); else {
		var vt = Type["typeof"](o);
		var err = "Error: Could not clone " + Std.string(vt);
		throw new js__$Boot_HaxeError(err);
	}
};
tannus_internal_TypeTools.isPrimitive = function(v) {
	return v == null || typeof(v) == "boolean" || typeof(v) == "number" || typeof(v) == "string";
};
tannus_internal_TypeTools.isDeepCopyable = function(v) {
	var tmp;
	if(Reflect.isObject(v) && Object.prototype.hasOwnProperty.call(v,"_hxDeepCopy")) {
		var tmp1;
		var tmp2;
		if(v == null) tmp1 = null; else if(v.__properties__ && (tmp2 = v.__properties__["get_" + "_hxDeepCopy"])) tmp1 = v[tmp2](); else tmp1 = v._hxDeepCopy;
		tmp = Reflect.isFunction(tmp1);
	} else tmp = false;
	return tmp;
};
var tannus_io_Asserts = function() { };
$hxClasses["tannus.io.Asserts"] = tannus_io_Asserts;
tannus_io_Asserts.__name__ = ["tannus","io","Asserts"];
var tannus_io_Binary = function(size,_b) {
	this._length = size;
	this.b = _b;
	this.position = 0;
};
$hxClasses["tannus.io.Binary"] = tannus_io_Binary;
tannus_io_Binary.__name__ = ["tannus","io","Binary"];
tannus_io_Binary.prototype = {
	get: function(index) {
		if(index >= this._length || index < 0) throw new js__$Boot_HaxeError(tannus_io_impl_BinaryError.OutOfBounds);
		return 0;
	}
	,set: function(index,value) {
		if(index >= this._length || index < 0) throw new js__$Boot_HaxeError(tannus_io_impl_BinaryError.OutOfBounds);
		return 0;
	}
	,getInt32: function(i) {
		return this.get(i) | this.get(i + 1) << 8 | this.get(i + 2) << 16 | this.get(i + 3) << 24;
	}
	,setInt32: function(i,v) {
		this.set(i,v);
		this.set(i + 1,v >> 8);
		this.set(i + 2,v >> 16);
		this.set(i + 3,v >> 24);
	}
	,getInt64: function(i) {
		var tmp;
		var high = this.getInt32(i + 4);
		var low = this.getInt32(i);
		var x = new haxe__$Int64__$_$_$Int64(high,low);
		tmp = x;
		return tmp;
	}
	,setInt64: function(i,v) {
		this.setInt32(i,v.low);
		this.setInt32(i + 4,v.high);
	}
	,getFloat: function(i) {
		return tannus_math_TMath.i32ToFloat(this.getInt32(i));
	}
	,setFloat: function(i,v) {
		this.setInt32(i,tannus_math_TMath.floatToI32(v));
	}
	,fill: function(c,index,size) {
		if(index == null) index = 0;
		if(size == null) size = this._length;
		var _g = index;
		while(_g < size) {
			var i = _g++;
			this.set(i,c);
		}
	}
	,readByte: function() {
		return this.get(this.position++);
	}
	,readInt32: function() {
		var v = this.getInt32(this.position);
		this.position += 4;
		return v;
	}
	,writeInt32: function(i) {
		this.setInt32(this.position,i);
		this.position += 4;
	}
	,readFloat: function() {
		return tannus_math_TMath.i32ToFloat(this.readInt32());
	}
	,writeFloat: function(v) {
		this.writeInt32(tannus_math_TMath.floatToI32(v));
	}
	,writeByte: function(c) {
		this.set(this.position++,c);
	}
	,read: function(len) {
		var res = this.sub(this.position,len);
		this.position += len;
		return res;
	}
	,readString: function(len) {
		var res = this.getString(this.position,len);
		this.position += len;
		return res;
	}
	,write: function(other,len) {
		if(len == null) len = other._length;
		this.blit(this.position,other,0,len);
		this.position += len;
	}
	,writeString: function(s) {
		var tmp;
		var o = js_Boot.getClass(this);
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "ofString"])) tmp = o[tmp1](); else tmp = o.ofString;
		this.write(tmp(s));
	}
	,push: function(c) {
		this.position = this._length;
		this.resize(this._length + 1);
		this;
		this.setData(this.b);
		this.set(this.position++,c);
		return this.position;
	}
	,pushInt32: function(i) {
		this.position = this._length;
		this.resize(this._length + 4);
		this;
		this.setData(this.b);
		this.writeInt32(i);
		return this.position;
	}
	,pushFloat: function(n) {
		return this.pushInt32(tannus_math_TMath.floatToI32(n));
	}
	,pushString: function(s) {
		this.appendString(s);
	}
	,unshift: function(c) {
		this.shiftRight(1);
		this.setData(this.b);
		this.set(0,c);
		return 0;
	}
	,pop: function() {
		var v = this.get(this._length - 1);
		this.position = 0;
		this.resize(this._length - 1);
		this.setData(this.b);
		return v;
	}
	,shift: function() {
		var v = this.get(0);
		this.setData(this.copy().slice(1).b);
		return v;
	}
	,append: function(footer,len) {
		if(len == null) len = footer._length;
		this.position = this._length;
		this.resize(this._length + len);
		this;
		this.write(footer);
		return this;
	}
	,appendString: function(foot,len) {
		var tmp;
		var o = js_Boot.getClass(this);
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + "ofString"])) tmp = o[tmp1](); else tmp = o.ofString;
		return this.append(tmp(foot),len);
	}
	,appendStruct: function(od) {
		var o = tannus_ds_CObj.create(od);
		if(Object.prototype.hasOwnProperty.call(o.o,"_append_ba")) {
			var tmp;
			var tmp1;
			var _e = o.o;
			tmp1 = function(func,args) {
				return func.apply(_e,args);
			};
			var f = tmp1;
			var tmp2;
			var o1 = o.o;
			var tmp3;
			if(o1 == null) tmp2 = null; else if(o1.__properties__ && (tmp3 = o1.__properties__["get_" + "_append_ba"])) tmp2 = o1[tmp3](); else tmp2 = o1._append_ba;
			var a1 = tmp2;
			tmp = function(a2) {
				return f(a1,a2);
			};
			var a = Reflect.makeVarArgs(tmp);
			var _i = this.position;
			a(this);
			var len = this.position - _i;
			return len;
		} else {
			throw new js__$Boot_HaxeError("Error: " + Std.string(o) + " Cannot be written to a ByteArray");
			return -1;
		}
	}
	,readStruct: function(type) {
		var ocl = tannus_ds_CObj.create(type);
		if(Object.prototype.hasOwnProperty.call(ocl.o,"_from_ba")) {
			var tmp;
			var tmp1;
			var _e = ocl.o;
			tmp1 = function(func,args) {
				return func.apply(_e,args);
			};
			var f = tmp1;
			var tmp2;
			var o = ocl.o;
			var tmp3;
			if(o == null) tmp2 = null; else if(o.__properties__ && (tmp3 = o.__properties__["get_" + "_from_ba"])) tmp2 = o[tmp3](); else tmp2 = o._from_ba;
			var a1 = tmp2;
			tmp = function(a2) {
				return f(a1,a2);
			};
			var _from = Reflect.makeVarArgs(tmp);
			return _from(this);
		} else throw new js__$Boot_HaxeError("Error: " + tannus_internal_TypeTools.typename(type) + " has no \"_from_ba\" method");
	}
	,prepend: function(header,len) {
		if(len == null) header._length;
		this.shiftRight(header._length);
		this.position = 0;
		this.write(header);
		return this;
	}
	,prependString: function(head,len) {
		var tmp;
		var tmp1;
		var o = js_Boot.getClass(this);
		var tmp2;
		if(o == null) tmp1 = null; else if(o.__properties__ && (tmp2 = o.__properties__["get_" + "ofString"])) tmp1 = o[tmp2](); else tmp1 = o.ofString;
		var header = tmp1(head);
		var len1 = len;
		if(len1 == null) len1 = header._length;
		this.shiftRight(header._length);
		this.position = 0;
		this.write(header);
		tmp = this;
		return tmp;
	}
	,shiftRight: function(digits) {
		var lpad = this._alloc(digits);
		lpad.fill(0);
		lpad = lpad.concat(this);
		this.resize(this._length + digits);
		this;
		this.setData(lpad.b);
	}
	,shiftLeft: function(digits) {
		var rpad = this._alloc(digits);
		rpad.fill(0);
		var tmp;
		var this1 = this.slice(digits);
		tmp = this1.concat(rpad);
		var backward = tmp;
		this.resize(this._length + digits);
		this;
		this.setData(backward.b);
	}
	,sub: function(index,size) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,slice: function(min,max) {
		return this.sub(min,(max != null?max:this._length) - min);
	}
	,blit: function(index,src,srcIndex,size) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,resize: function(size) {
		this._length = size;
	}
	,reverse: function() {
		var _g1 = 0;
		var _g = Math.floor(this._length / 2);
		while(_g1 < _g) {
			var i = _g1++;
			var temp = this.get(i);
			this.set(i,this.get(this._length - i - 1));
			this.set(this._length - i - 1,temp);
		}
	}
	,grow: function(amount) {
		this.resize(this._length + amount);
		return this;
	}
	,concat: function(other) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,copy: function() {
		return this;
	}
	,iterator: function() {
		return new tannus_io_impl_BinaryIterator(this);
	}
	,getString: function(index,len) {
		return "";
	}
	,getData: function() {
		return this.b;
	}
	,seek: function(i) {
		return this.position = i;
	}
	,toString: function() {
		return this.getString(0,this._length);
	}
	,toBytes: function() {
		return haxe_io_Bytes.alloc(0);
	}
	,toHex: function() {
		var sb_b = "";
		var chars = "0123456789ABCDEF".split("").map(function(s) {
			return HxOverrides.cca(s,0);
		});
		var _g1 = 0;
		var _g = this._length;
		while(_g1 < _g) {
			var i = _g1++;
			var c = this.get(i);
			sb_b += String.fromCharCode(chars[c >> 4]);
			sb_b += String.fromCharCode(chars[c & 15]);
		}
		return sb_b;
	}
	,base64Encode: function() {
		return haxe_crypto_Base64.encode(this.toBytes());
	}
	,toBase64: function() {
		return this.base64Encode();
	}
	,toDataUrl: function(type) {
		if(type == null) type = "text/plain";
		var encoded = this.base64Encode();
		return "data:" + type + ";base64," + encoded;
	}
	,toArray: function() {
		var tmp;
		var _g = [];
		var $it0 = this.iterator();
		while( $it0.hasNext() ) {
			var c = $it0.next();
			_g.push(c);
		}
		tmp = _g;
		return tmp;
	}
	,equals: function(other) {
		if(this._length != other._length) return false; else {
			var _g1 = 0;
			var _g = this._length;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.get(i) != other.get(i)) return false;
			}
			return true;
		}
	}
	,setData: function(data) {
		this.b = data;
	}
	,err: function(e) {
		throw new js__$Boot_HaxeError(e);
	}
	,outOfBounds: function() {
		throw new js__$Boot_HaxeError(tannus_io_impl_BinaryError.OutOfBounds);
	}
	,overflow: function() {
		throw new js__$Boot_HaxeError(tannus_io_impl_BinaryError.Overflow);
	}
	,_alloc: function(size) {
		var allocf = (function($this) {
			var $r;
			var o = js_Boot.getClass($this);
			var tmp;
			$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + "alloc"])?o[tmp]():o.alloc;
			return $r;
		}(this));
		return allocf(size);
	}
	,_ofString: function(s) {
		return ((function($this) {
			var $r;
			var o = js_Boot.getClass($this);
			var tmp;
			$r = o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + "ofString"])?o[tmp]():o.ofString;
			return $r;
		}(this)))(s);
	}
	,get_length: function() {
		return this._length;
	}
	,get_empty: function() {
		return this._length <= 0;
	}
	,get_first: function() {
		return this.get(0);
	}
	,set_first: function(v) {
		return this.set(0,v);
	}
	,get_last: function() {
		return this.get(this._length - 1);
	}
	,set_last: function(v) {
		return this.set(this._length - 1,v);
	}
	,_length: null
	,b: null
	,position: null
	,__class__: tannus_io_Binary
	,__properties__: {set_last:"set_last",get_last:"get_last",set_first:"set_first",get_first:"get_first",get_empty:"get_empty",get_length:"get_length"}
};
var tannus_io__$Blob_Blob_$Impl_$ = {};
$hxClasses["tannus.io._Blob.Blob_Impl_"] = tannus_io__$Blob_Blob_$Impl_$;
tannus_io__$Blob_Blob_$Impl_$.__name__ = ["tannus","io","_Blob","Blob_Impl_"];
tannus_io__$Blob_Blob_$Impl_$._new = function(name,mime,dat) {
	return new tannus_io_CBlob(name,mime,dat);
};
tannus_io__$Blob_Blob_$Impl_$.toNativeBlob = function(this1) {
	return new Blob([this1.data.b],{ 'type' : this1.type});
};
tannus_io__$Blob_Blob_$Impl_$.toObjectURL = function(this1) {
	return URL.createObjectURL(new Blob([this1.data.b],{ 'type' : this1.type}));
};
tannus_io__$Blob_Blob_$Impl_$.fromDataURL = function(durl) {
	return tannus_io_CBlob.fromDataURL(durl);
};
var tannus_io_CBlob = function(nam,mime,dat) {
	this.name = nam;
	if(mime != null) this.type = mime;
	if(this.type == null) {
		var np = new tannus_sys_CPath(this.name);
		this.type = tannus_sys_Mimes.getMimeType(np.get_extension());
	}
	if(this.type == null) this.type = "text/plain";
	var tmp;
	var this1;
	this1 = tannus_io_impl_BrowserBinary.alloc(0);
	tmp = this1;
	this.data = tmp;
	if(dat != null) this.data = dat;
};
$hxClasses["tannus.io.CBlob"] = tannus_io_CBlob;
tannus_io_CBlob.__name__ = ["tannus","io","CBlob"];
tannus_io_CBlob.fromDataURL = function(durl) {
	durl = durl.substring(5);
	var bits = durl.split(";");
	var mime = bits.shift();
	var encoded = durl.substring(durl.indexOf(",") + 1,durl.length - 1);
	var data = tannus_io_impl_BrowserBinary.fromBase64(encoded);
	return new tannus_io_CBlob("file",mime,data);
};
tannus_io_CBlob.prototype = {
	save: function(dirname) {
		var tmp;
		var p = tannus_sys__$Path_Path_$Impl_$.fromString("" + dirname + "/" + this.name);
		tmp = new tannus_sys_CFile(p);
		var f = tmp;
		tannus_sys_JavaScriptFileSystem.write(f._path.s,this.data);
		return f;
	}
	,toDataURL: function() {
		return this.data.toDataUrl(this.type);
	}
	,name: null
	,type: null
	,data: null
	,__class__: tannus_io_CBlob
};
var tannus_io__$Byte_Byte_$Impl_$ = {};
$hxClasses["tannus.io._Byte.Byte_Impl_"] = tannus_io__$Byte_Byte_$Impl_$;
tannus_io__$Byte_Byte_$Impl_$.__name__ = ["tannus","io","_Byte","Byte_Impl_"];
tannus_io__$Byte_Byte_$Impl_$.__properties__ = {set_aschar:"set_aschar",get_aschar:"get_aschar",set_asint:"set_asint",get_asint:"get_asint",get_self:"get_self"}
tannus_io__$Byte_Byte_$Impl_$._new = function(n) {
	var this1;
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	this1 = n;
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.get_self = function(this1) {
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.get_asint = function(this1) {
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.set_asint = function(this1,n) {
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	return n;
};
tannus_io__$Byte_Byte_$Impl_$.get_aschar = function(this1) {
	return String.fromCharCode(this1);
};
tannus_io__$Byte_Byte_$Impl_$.set_aschar = function(this1,s) {
	var n = HxOverrides.cca(s,0);
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	this1 = n;
	return String.fromCharCode(this1);
};
tannus_io__$Byte_Byte_$Impl_$.isNumeric = function(this1) {
	return this1 >= 48 && this1 <= 57;
};
tannus_io__$Byte_Byte_$Impl_$.isLetter = function(this1) {
	return this1 >= 65 && this1 <= 90 || this1 >= 97 && this1 <= 122;
};
tannus_io__$Byte_Byte_$Impl_$.isAlphaNumeric = function(this1) {
	var tmp;
	if(!(this1 >= 48 && this1 <= 57)) {
		var tmp1;
		if(this1 >= 65) tmp1 = this1 <= 90; else tmp1 = false;
		if(!tmp1) {
			if(this1 >= 97) tmp = this1 <= 122; else tmp = false;
		} else tmp = true;
	} else tmp = true;
	return tmp;
};
tannus_io__$Byte_Byte_$Impl_$.isUppercase = function(this1) {
	return this1 >= 65 && this1 <= 90;
};
tannus_io__$Byte_Byte_$Impl_$.isLowercase = function(this1) {
	return this1 >= 97 && this1 <= 122;
};
tannus_io__$Byte_Byte_$Impl_$.isWhiteSpace = function(this1) {
	return Lambda.has([9,10,11,12,13,32],this1);
};
tannus_io__$Byte_Byte_$Impl_$.isLineBreaking = function(this1) {
	return this1 == 10 || this1 == 13;
};
tannus_io__$Byte_Byte_$Impl_$.isPunctuation = function(this1) {
	return Lambda.has([33,44,45,46,58,59,53],this1);
};
tannus_io__$Byte_Byte_$Impl_$.equalsi = function(this1,other) {
	return this1 == other;
};
tannus_io__$Byte_Byte_$Impl_$.equalss = function(this1,other) {
	return this1 == HxOverrides.cca(other,0);
};
tannus_io__$Byte_Byte_$Impl_$.repeat = function(this1,times) {
	return tannus_ds_StringUtils.times(String.fromCharCode(this1),times);
};
tannus_io__$Byte_Byte_$Impl_$.toString = function(this1) {
	return String.fromCharCode(this1);
};
tannus_io__$Byte_Byte_$Impl_$.toInt = function(this1) {
	return this1;
};
tannus_io__$Byte_Byte_$Impl_$.fromString = function(s) {
	var tmp;
	var n = HxOverrides.cca(s,0);
	var this1;
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
	this1 = n;
	tmp = this1;
	return tmp;
};
tannus_io__$Byte_Byte_$Impl_$.isValid = function(n) {
	return ((n | 0) === n) && isFinite(n) && !isNaN(n);
};
tannus_io__$Byte_Byte_$Impl_$.assertValid = function(n) {
	if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
};
var tannus_io__$ByteArray_ByteArray_$Impl_$ = {};
$hxClasses["tannus.io._ByteArray.ByteArray_Impl_"] = tannus_io__$ByteArray_ByteArray_$Impl_$;
tannus_io__$ByteArray_ByteArray_$Impl_$.__name__ = ["tannus","io","_ByteArray","ByteArray_Impl_"];
tannus_io__$ByteArray_ByteArray_$Impl_$._new = function(size) {
	if(size == null) size = 0;
	var this1;
	this1 = tannus_io_impl_BrowserBinary.alloc(size);
	return this1;
};
tannus_io__$ByteArray_ByteArray_$Impl_$.get = function(this1,i) {
	return this1.get(i);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.set = function(this1,i,v) {
	return this1.set(i,v);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_io__$ByteArray_ByteArray_$Impl_$.toBytes = function(this1) {
	return this1.toBytes();
};
tannus_io__$ByteArray_ByteArray_$Impl_$.toBase = function(this1) {
	return this1.b;
};
tannus_io__$ByteArray_ByteArray_$Impl_$.toArray = function(this1) {
	return this1.toArray();
};
tannus_io__$ByteArray_ByteArray_$Impl_$.expandByString = function(this1,s) {
	return this1.appendString(s);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.expand = function(this1,other) {
	return this1.append(other);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.concat = function(this1,other) {
	return this1.concat(other);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.equals = function(this1,o) {
	return this1.equals(o);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.alloc = function(size) {
	return tannus_io_impl_BrowserBinary.alloc(size);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.ofData = function(d) {
	return tannus_io_impl_BrowserBinary.ofData(d);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.ofString = function(s) {
	return tannus_io_impl_BrowserBinary.ofString(s);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.fromBytes = function(b) {
	return tannus_io_impl_BrowserBinary.fromBytes(b);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.fromBase64 = function(s) {
	return tannus_io_impl_BrowserBinary.fromBase64(s);
};
tannus_io__$ByteArray_ByteArray_$Impl_$.fromVector = function(vec) {
	var tmp;
	var this1;
	this1 = tannus_io_impl_BrowserBinary.alloc(vec.length);
	tmp = this1;
	var data = tmp;
	var _g1 = 0;
	var _g = vec.length;
	while(_g1 < _g) {
		var index = _g1++;
		data.set(index,vec[index]);
	}
	return data;
};
var tannus_io_Output = function() {
	this.__b = [];
	this.opened = this.closed = this.paused = false;
};
$hxClasses["tannus.io.Output"] = tannus_io_Output;
tannus_io_Output.__name__ = ["tannus","io","Output"];
tannus_io_Output.prototype = {
	open: function(f) {
		this.opened = true;
	}
	,close: function(f) {
		this.closed = true;
	}
	,pause: function() {
		this.paused = true;
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.flush();
		}
	}
	,write: function(data,onwritten) {
		if(this.opened && !this.closed) {
			if(this.paused) this.__b.push(data); else {
				if(onwritten == null) onwritten = function() {
				};
				this.__write(data,onwritten);
			}
		} else {
			var e = new Error("Cannot write to closed or unopened Stream!");
			throw new js__$Boot_HaxeError(e);
		}
	}
	,__write: function(data,onwritten) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,flush: function(done) {
		var stack = new tannus_ds_AsyncStack();
		while(this.__b.length > 0) {
			var tmp;
			var f1 = [$bind(this,this.__write)];
			var a1 = [this.__b.shift()];
			tmp = (function(a1,f1) {
				return function(a2) {
					f1[0](a1[0],a2);
				};
			})(a1,f1);
			var f = tmp;
			stack.under(f);
		}
		stack.run(function() {
			if(done != null) done();
		});
	}
	,buffer: function(data) {
		this.__b.push(data);
	}
	,error: function(e) {
		throw new js__$Boot_HaxeError(e);
	}
	,get_writable: function() {
		return this.opened && !this.closed;
	}
	,__b: null
	,opened: null
	,closed: null
	,paused: null
	,__class__: tannus_io_Output
	,__properties__: {get_writable:"get_writable"}
};
var tannus_io_ByteArrayOutput = function() {
	tannus_io_Output.call(this);
	this.chunkSize = -1;
	this.__chunk = null;
};
$hxClasses["tannus.io.ByteArrayOutput"] = tannus_io_ByteArrayOutput;
tannus_io_ByteArrayOutput.__name__ = ["tannus","io","ByteArrayOutput"];
tannus_io_ByteArrayOutput.__super__ = tannus_io_Output;
tannus_io_ByteArrayOutput.prototype = $extend(tannus_io_Output.prototype,{
	write: function(data,done) {
		if(this.opened && !this.closed) {
			if(this.paused) this.__b.push(data); else {
				if(done == null) done = function() {
				};
				if(this.chunkSize != -1) {
					if(this.__chunk != null) {
						data = this.__chunk.concat(data);
						this.__chunk = null;
					}
					if(data._length > this.chunkSize) {
						data = data.slice(0,this.chunkSize);
						this.__chunk = data.slice(this.chunkSize);
					}
				}
				this.__write(data,done);
			}
		} else {
			var e = new Error("Cannot write to closed or unopened Stream!");
			throw new js__$Boot_HaxeError(e);
		}
	}
	,close: function(done) {
		tannus_io_Output.prototype.close.call(this,done);
		if(done == null) done = function() {
		};
		if(this.__chunk != null) this.__write(this.__chunk,done); else done();
	}
	,truncate: function(len) {
		this.__size(len);
	}
	,seek: function(pos) {
		return this.__position(pos);
	}
	,__size: function(value) {
		return -1;
	}
	,__position: function(value) {
		return -1;
	}
	,get_length: function() {
		return this.__size();
	}
	,set_length: function(v) {
		return this.__size(v);
	}
	,get_position: function() {
		return this.__position();
	}
	,set_position: function(v) {
		return this.__position(v);
	}
	,chunkSize: null
	,__chunk: null
	,__class__: tannus_io_ByteArrayOutput
	,__properties__: $extend(tannus_io_Output.prototype.__properties__,{set_position:"set_position",get_position:"get_position",set_length:"set_length",get_length:"get_length"})
});
var tannus_io_ByteStack = function(data) {
	tannus_ds_Stack.call(this,[]);
	this.b = data;
	this.i = 0;
};
$hxClasses["tannus.io.ByteStack"] = tannus_io_ByteStack;
tannus_io_ByteStack.__name__ = ["tannus","io","ByteStack"];
tannus_io_ByteStack.__super__ = tannus_ds_Stack;
tannus_io_ByteStack.prototype = $extend(tannus_ds_Stack.prototype,{
	read: function(dis) {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(dis);
		tmp = this1;
		var data = tmp;
		var _g = 0;
		while(_g < dis) {
			_g++;
			var c = this.pop();
			data.set(data.position++,c);
		}
		return data;
	}
	,readUntil: function(delimiter) {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		var res = tmp;
		while(this.peek() != delimiter) res.push(this.pop());
		return res;
	}
	,peekAhead: function(dis) {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(dis);
		tmp = this1;
		var data = tmp;
		var _g1 = 1;
		var _g = dis + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var c = this.peek(i);
			data.set(data.position++,c);
		}
		return data;
	}
	,copy: function() {
		var c = new tannus_io_ByteStack(this.b);
		c.i = this.i;
		return c;
	}
	,peek: function(dis) {
		if(dis == null) dis = 0;
		return this.b.get(this.i + dis);
	}
	,pop: function() {
		var tmp;
		var i = this.i++;
		tmp = this.b.get(i);
		return tmp;
	}
	,get_empty: function() {
		return this.i >= this.b._length;
	}
	,seek: function(pos) {
		this.i = pos;
	}
	,getByteArray: function() {
		return this.b.copy();
	}
	,remaining: function() {
		return this.b._length - this.i;
	}
	,b: null
	,i: null
	,__class__: tannus_io_ByteStack
});
var tannus_io__$Getter_Getter_$Impl_$ = {};
$hxClasses["tannus.io._Getter.Getter_Impl_"] = tannus_io__$Getter_Getter_$Impl_$;
tannus_io__$Getter_Getter_$Impl_$.__name__ = ["tannus","io","_Getter","Getter_Impl_"];
tannus_io__$Getter_Getter_$Impl_$.__properties__ = {get_v:"get_v"}
tannus_io__$Getter_Getter_$Impl_$._new = function(f) {
	return f;
};
tannus_io__$Getter_Getter_$Impl_$.get_v = function(this1) {
	return this1();
};
tannus_io__$Getter_Getter_$Impl_$.get = function(this1) {
	return this1();
};
tannus_io__$Getter_Getter_$Impl_$.toString = function(this1) {
	return Std.string(this1());
};
tannus_io__$Getter_Getter_$Impl_$.transform = function(this1,f) {
	var trans_get = function() {
		return f(this1());
	};
	return trans_get;
};
tannus_io__$Getter_Getter_$Impl_$.addNumber = function(get,val) {
	return get() + val;
};
tannus_io__$Getter_Getter_$Impl_$.addString = function(get,val) {
	return get() + val;
};
var tannus_io_LexerBase = function() { };
$hxClasses["tannus.io.LexerBase"] = tannus_io_LexerBase;
tannus_io_LexerBase.__name__ = ["tannus","io","LexerBase"];
tannus_io_LexerBase.prototype = {
	readGroup: function(start,end,esc,recursive) {
		if(recursive == null) recursive = true;
		var level = 1;
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		var data = tmp;
		var escaped = false;
		while(!(this.buffer != null && this.buffer.get_empty()) && level > 0) {
			var c = this.buffer.peek(null);
			if(!escaped) {
				if(c == start) {
					if(start != end) level++; else level--;
				} else if(c == end) level--; else if(esc != null && c == esc) escaped = true;
			} else escaped = false;
			if(level > 0) data.push(c);
			this.buffer.pop();
		}
		return data;
	}
	,readUntil: function(end,esc) {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		var d = tmp;
		var escaped = false;
		while(!(this.buffer != null && this.buffer.get_empty())) {
			var c = this.buffer.peek(null);
			if(!escaped) {
				if(c == end) {
					this.buffer.pop();
					break;
				} else if(esc != null && c == esc) escaped = true;
			} else escaped = false;
			d.push(this.buffer.pop());
		}
		return d;
	}
	,next: function(dis) {
		return this.buffer.peek(dis);
	}
	,advance: function() {
		return this.buffer.pop();
	}
	,get_done: function() {
		return this.buffer != null && this.buffer.get_empty();
	}
	,buffer: null
	,__class__: tannus_io_LexerBase
	,__properties__: {get_done:"get_done"}
};
var tannus_io__$Pointer_Pointer_$Impl_$ = {};
$hxClasses["tannus.io._Pointer.Pointer_Impl_"] = tannus_io__$Pointer_Pointer_$Impl_$;
tannus_io__$Pointer_Pointer_$Impl_$.__name__ = ["tannus","io","_Pointer","Pointer_Impl_"];
tannus_io__$Pointer_Pointer_$Impl_$.__properties__ = {set_deleter:"set_deleter",get_deleter:"get_deleter",get_set:"get_set",get_get:"get_get",get_exists:"get_exists",set__:"set__",get__:"get__",set_setter:"set_setter",get_setter:"get_setter",set_getter:"set_getter",get_getter:"get_getter",set_v:"set_v",get_v:"get_v",set_value:"set_value",get_value:"get_value",get_self:"get_self"}
tannus_io__$Pointer_Pointer_$Impl_$._new = function(g,s,d) {
	return new tannus_io__$Pointer_Ref(g,s);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_self = function(this1) {
	return this1;
};
tannus_io__$Pointer_Pointer_$Impl_$.get_value = function(this1) {
	return this1.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.set_value = function(this1,nv) {
	return this1.set(nv);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_v = function(this1) {
	return this1.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.set_v = function(this1,nv) {
	return this1.set(nv);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_getter = function(this1) {
	return this1.getter;
};
tannus_io__$Pointer_Pointer_$Impl_$.set_getter = function(this1,ng) {
	return this1.getter = ng;
};
tannus_io__$Pointer_Pointer_$Impl_$.get_setter = function(this1) {
	return this1.setter;
};
tannus_io__$Pointer_Pointer_$Impl_$.set_setter = function(this1,ns) {
	return this1.setter = ns;
};
tannus_io__$Pointer_Pointer_$Impl_$.get__ = function(this1) {
	return this1.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.set__ = function(this1,v) {
	return this1.set(v);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_exists = function(this1) {
	return this1.get() != null;
};
tannus_io__$Pointer_Pointer_$Impl_$.get_get = function(this1) {
	return $bind(this1,this1.get);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_set = function(this1) {
	return $bind(this1,this1.set);
};
tannus_io__$Pointer_Pointer_$Impl_$.get_deleter = function(this1) {
	return this1.deleter;
};
tannus_io__$Pointer_Pointer_$Impl_$.set_deleter = function(this1,nd) {
	return this1.deleter = nd;
};
tannus_io__$Pointer_Pointer_$Impl_$["delete"] = function(this1) {
	this1["delete"]();
};
tannus_io__$Pointer_Pointer_$Impl_$.to_underlying = function(this1) {
	return this1.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.setvalue = function(this1,v) {
	return this1.set(v);
};
tannus_io__$Pointer_Pointer_$Impl_$.setPointer = function(this1,v) {
	return this1.set(v.get());
};
tannus_io__$Pointer_Pointer_$Impl_$.access = function(this1,v) {
	return v != null?this1.set(v):this1.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.attach_str = function(this1,str) {
	var s = this1.setter;
	this1.setter = tannus_io__$Setter_Setter_$Impl_$.attach(s,str);
};
tannus_io__$Pointer_Pointer_$Impl_$._transform = function(this1,mget,mset) {
	var tmp;
	var g = tannus_io__$Getter_Getter_$Impl_$.transform(this1.getter,mget);
	var s = tannus_io__$Setter_Setter_$Impl_$.transform(this1.setter,mset);
	tmp = new tannus_io__$Pointer_Ref(g,s);
	return tmp;
};
tannus_io__$Pointer_Pointer_$Impl_$.clone = function(this1) {
	return new tannus_io__$Pointer_Ref(this1.getter,this1.setter);
};
tannus_io__$Pointer_Pointer_$Impl_$.toGetter = function(this1) {
	return this1.getter;
};
tannus_io__$Pointer_Pointer_$Impl_$.toSetter = function(this1) {
	return this1.setter;
};
tannus_io__$Pointer_Pointer_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_io__$Pointer_Pointer_$Impl_$.iterator = function(self) {
	return $iterator(self.get())();
};
tannus_io__$Pointer_Pointer_$Impl_$.pre_decrement = function(a) {
	a.set(a.get() - 1);
	return a.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.pre_increment = function(a) {
	a.set(a.get() + 1);
	return a.get();
};
tannus_io__$Pointer_Pointer_$Impl_$.post_decrement = function(a) {
	var r = a.get();
	a.set(r - 1);
	return r;
};
tannus_io__$Pointer_Pointer_$Impl_$.post_increment = function(a) {
	var r = a.get();
	a.set(r + 1);
	return r;
};
tannus_io__$Pointer_Pointer_$Impl_$.fromAccessor = function(af) {
	var tmp;
	var f = af;
	tmp = function() {
		return f(null);
	};
	var tmp1;
	var f1 = af;
	tmp1 = function(a1) {
		return f1(a1);
	};
	return new tannus_io__$Pointer_Ref(tmp,tmp1);
};
var tannus_io__$Pointer_Ref = function(g,s,d) {
	var _g = this;
	this.getter = g;
	this.setter = s;
	this.deleter = d;
	var prop = function(n) {
		var tmp;
		var tmp2;
		if(_g == null) tmp = null; else if(_g.__properties__ && (tmp2 = _g.__properties__["get_" + "__defineGetter__"])) tmp = _g[tmp2](); else tmp = _g.__defineGetter__;
		tmp.call(_g,n,$bind(_g,_g.get));
		var tmp1;
		var tmp3;
		if(_g == null) tmp1 = null; else if(_g.__properties__ && (tmp3 = _g.__properties__["get_" + "__defineSetter__"])) tmp1 = _g[tmp3](); else tmp1 = _g.__defineSetter__;
		tmp1.call(_g,n,$bind(_g,_g.set));
	};
	var _g1 = 0;
	var _g11 = ["value","v","_"];
	while(_g1 < _g11.length) {
		var n1 = _g11[_g1];
		++_g1;
		prop(n1);
	}
};
$hxClasses["tannus.io._Pointer.Ref"] = tannus_io__$Pointer_Ref;
tannus_io__$Pointer_Ref.__name__ = ["tannus","io","_Pointer","Ref"];
tannus_io__$Pointer_Ref.prototype = {
	get: function() {
		return this.getter();
	}
	,set: function(v) {
		return this.setter(v);
	}
	,'delete': function() {
		if(this.deleter != null) this.deleter();
	}
	,toString: function() {
		return Std.string(this.get());
	}
	,getter: null
	,setter: null
	,deleter: null
	,__class__: tannus_io__$Pointer_Ref
};
var tannus_io__$RegEx_RegEx_$Impl_$ = {};
$hxClasses["tannus.io._RegEx.RegEx_Impl_"] = tannus_io__$RegEx_RegEx_$Impl_$;
tannus_io__$RegEx_RegEx_$Impl_$.__name__ = ["tannus","io","_RegEx","RegEx_Impl_"];
tannus_io__$RegEx_RegEx_$Impl_$._new = function(pattern) {
	return pattern;
};
tannus_io__$RegEx_RegEx_$Impl_$.matches = function(this1,text) {
	var ma = [];
	this1.map(text,function(e) {
		var parts = [];
		var i = 0;
		var matched = true;
		while(matched) try {
			var p = e.matched(i);
			if(p == null) {
				matched = false;
				break;
			}
			parts.push(p);
			i++;
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			matched = false;
			break;
		}
		ma.push(parts);
		return "";
	});
	return ma;
};
tannus_io__$RegEx_RegEx_$Impl_$.search = function(this1,s) {
	return tannus_io__$RegEx_RegEx_$Impl_$.matches(this1,s);
};
tannus_io__$RegEx_RegEx_$Impl_$.extract = function(this1,str,n) {
	if(n == null) n = 0;
	return tannus_io__$RegEx_RegEx_$Impl_$.matches(this1,str)[n];
};
tannus_io__$RegEx_RegEx_$Impl_$.extractGroups = function(this1,str,n) {
	if(n == null) n = 0;
	return tannus_io__$RegEx_RegEx_$Impl_$.matches(this1,str)[0].slice(1);
};
tannus_io__$RegEx_RegEx_$Impl_$.findAll = function(this1,s) {
	var all = [];
	this1.map(s,function(e) {
		e.matchedPos();
		all.push({ 'str' : s, 'pos' : e.matchedPos()});
		return s;
	});
	return all;
};
tannus_io__$RegEx_RegEx_$Impl_$.replace = function(this1,rtext,text) {
	return this1.map(rtext,function(e) {
		var i = 0;
		var whole = null;
		var subs = [];
		while(true) try {
			var s = this1.matched(i++);
			if(whole == null) whole = s; else subs.push(s);
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			break;
		}
		var _t = text;
		var _g1 = 0;
		var _g = subs.length;
		while(_g1 < _g) {
			var ii = _g1++;
			_t = StringTools.replace(_t,"{{" + ii + "}}",subs[ii]);
		}
		return _t;
	});
};
tannus_io__$RegEx_RegEx_$Impl_$.toTester = function(this1) {
	var tmp;
	var f = $bind(this1,this1.match);
	tmp = function(s) {
		return f(s);
	};
	return tmp;
};
var tannus_io__$Setter_Setter_$Impl_$ = {};
$hxClasses["tannus.io._Setter.Setter_Impl_"] = tannus_io__$Setter_Setter_$Impl_$;
tannus_io__$Setter_Setter_$Impl_$.__name__ = ["tannus","io","_Setter","Setter_Impl_"];
tannus_io__$Setter_Setter_$Impl_$.__properties__ = {set_v:"set_v"}
tannus_io__$Setter_Setter_$Impl_$._new = function(f) {
	return f;
};
tannus_io__$Setter_Setter_$Impl_$.set_v = function(this1,nv) {
	return this1(nv);
};
tannus_io__$Setter_Setter_$Impl_$.wrap = function(this1,f) {
	var self = this1;
	(function(v) {
		return f(self,v);
	});
};
tannus_io__$Setter_Setter_$Impl_$.attach = function(this1,other) {
	var f = function(s,val) {
		other(val);
		return s(val);
	};
	var self = this1;
	this1 = function(v) {
		return f(self,v);
	};
	return this1;
};
tannus_io__$Setter_Setter_$Impl_$.transform = function(this1,f) {
	return function(o) {
		var v = f(o);
		this1(v);
		return o;
	};
};
tannus_io__$Setter_Setter_$Impl_$.set = function(this1,v) {
	return this1(v);
};
var tannus_io_Signal = function() {
	this.handlers = [];
	this.ondelete = function() {
	};
};
$hxClasses["tannus.io.Signal"] = tannus_io_Signal;
tannus_io_Signal.__name__ = ["tannus","io","Signal"];
tannus_io_Signal.prototype = {
	add: function(handler) {
		this.handlers.push(handler);
	}
	,listen: function(f,once) {
		if(once == null) once = false;
		if(!once) {
			var handler = tannus_io__$Signal_Handler.Normal(f);
			this.handlers.push(handler);
		} else {
			var _fired = false;
			var fired = new tannus_io__$Pointer_Ref(function() {
				return _fired;
			},function(v) {
				return _fired = v;
			});
			var handler1 = tannus_io__$Signal_Handler.Once(f,fired);
			this.handlers.push(handler1);
		}
	}
	,on: function(f,once) {
		if(once == null) once = false;
		this.listen(f,once);
	}
	,once: function(f) {
		this.listen(f,true);
	}
	,when: function(test,f) {
		var handler = tannus_io__$Signal_Handler.Tested(f,test);
		this.handlers.push(handler);
	}
	,times: function(count,f) {
		var _fired = 0;
		var fired = new tannus_io__$Pointer_Ref(function() {
			return _fired;
		},function(v) {
			return _fired = v;
		});
		var handler = tannus_io__$Signal_Handler.Counted(f,count,fired);
		this.handlers.push(handler);
	}
	,every: function(wait,f) {
		var _rem = 0;
		var rem = new tannus_io__$Pointer_Ref(function() {
			return _rem;
		},function(v) {
			return _rem = v;
		});
		var handler = tannus_io__$Signal_Handler.Every(f,wait,rem);
		this.handlers.push(handler);
	}
	,ignore: function(func) {
		this.handlers = this.handlers.filter(function(h) {
			switch(h[1]) {
			case 0:
				var f = h[2];
				return !Reflect.compareMethods(f,func);
			case 3:
				var f1 = h[2];
				return !Reflect.compareMethods(f1,func);
			case 4:
				var f2 = h[2];
				return !Reflect.compareMethods(f2,func);
			case 1:
				var f3 = h[2];
				return !Reflect.compareMethods(f3,func);
			case 2:
				var f4 = h[2];
				return !Reflect.compareMethods(f4,func);
			}
		});
	}
	,off: function(f) {
		this.ignore(f);
	}
	,clear: function() {
		this.handlers = [];
	}
	,callHandler: function(h,arg) {
		switch(h[1]) {
		case 0:
			h[2](arg);
			break;
		case 3:
			var fired = h[3];
			if(!fired.get()) {
				h[2](arg);
				fired.set(true);
			}
			break;
		case 4:
			if(h[3](arg)) h[2](arg);
			break;
		case 1:
			var called = h[4];
			if(called.get() <= h[3]) {
				h[2](arg);
				var v = called.get() + 1;
				called.set(v);
			}
			break;
		case 2:
			var rem = h[4];
			if(rem.get() == h[3]) {
				h[2](arg);
				rem.set(0);
			} else {
				var nv = rem.get() + 1;
				rem.set(nv);
			}
			break;
		}
	}
	,broadcast: function(data) {
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			this.callHandler(h,data);
		}
	}
	,call: function(data) {
		this.broadcast(data);
	}
	,handlers: null
	,ondelete: null
	,__class__: tannus_io_Signal
};
var tannus_io__$Signal_Handler = $hxClasses["tannus.io._Signal.Handler"] = { __ename__ : ["tannus","io","_Signal","Handler"], __constructs__ : ["Normal","Counted","Every","Once","Tested"] };
tannus_io__$Signal_Handler.Normal = function(func) { var $x = ["Normal",0,func]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal_Handler.Counted = function(func,count,fired) { var $x = ["Counted",1,func,count,fired]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal_Handler.Every = function(func,wait,remaining) { var $x = ["Every",2,func,wait,remaining]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal_Handler.Once = function(func,fired) { var $x = ["Once",3,func,fired]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
tannus_io__$Signal_Handler.Tested = function(func,test) { var $x = ["Tested",4,func,test]; $x.__enum__ = tannus_io__$Signal_Handler; $x.toString = $estr; return $x; };
var tannus_io_VoidSignal = function() {
	this.handlers = [];
	this.ondelete = function() {
	};
	this._remove = [];
};
$hxClasses["tannus.io.VoidSignal"] = tannus_io_VoidSignal;
tannus_io_VoidSignal.__name__ = ["tannus","io","VoidSignal"];
tannus_io_VoidSignal.prototype = {
	clone: function() {
		var c = new tannus_io_VoidSignal();
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			switch(h[1]) {
			case 0:
				var tmp;
				var f = [h[2]];
				tmp = (function(f) {
					return function() {
						f[0]();
					};
				})(f);
				var h1 = tannus_io__$VoidSignal_Handler.Normal(tmp);
				c.handlers.push(h1);
				break;
			case 1:
				var tmp1;
				var f1 = [h[2]];
				tmp1 = (function(f1) {
					return function() {
						f1[0]();
					};
				})(f1);
				var tmp2;
				var tmp3;
				var _v = [h[4]];
				tmp3 = new tannus_io__$Pointer_Ref((function(_v) {
					return function() {
						return _v[0];
					};
				})(_v),(function(_v) {
					return function(v) {
						return _v[0] = v;
					};
				})(_v));
				var this1 = tmp3;
				tmp2 = this1.get();
				var h2 = tannus_io__$VoidSignal_Handler.Counted(tmp1,h[3],tmp2);
				c.handlers.push(h2);
				break;
			case 3:
				if(!h[3].get()) {
					var tmp4;
					var f2 = [h[2]];
					tmp4 = (function(f2) {
						return function() {
							f2[0]();
						};
					})(f2);
					var tmp5;
					var _v1 = [false];
					tmp5 = new tannus_io__$Pointer_Ref((function(_v1) {
						return function() {
							return _v1[0];
						};
					})(_v1),(function(_v1) {
						return function(v1) {
							return _v1[0] = v1;
						};
					})(_v1));
					var h3 = tannus_io__$VoidSignal_Handler.Once(tmp4,tmp5);
					c.handlers.push(h3);
				}
				break;
			case 2:
				var tmp6;
				var f3 = [h[2]];
				tmp6 = (function(f3) {
					return function() {
						f3[0]();
					};
				})(f3);
				var tmp7;
				var tmp8;
				var _v2 = [h[4]];
				tmp8 = new tannus_io__$Pointer_Ref((function(_v2) {
					return function() {
						return _v2[0];
					};
				})(_v2),(function(_v2) {
					return function(v2) {
						return _v2[0] = v2;
					};
				})(_v2));
				var this2 = tmp8;
				tmp7 = this2.get();
				var h4 = tannus_io__$VoidSignal_Handler.Every(tmp6,h[3],tmp7);
				c.handlers.push(h4);
				break;
			}
		}
		return c;
	}
	,add: function(h) {
		this.handlers.push(h);
	}
	,on: function(f) {
		var h = tannus_io__$VoidSignal_Handler.Normal(f);
		this.handlers.push(h);
	}
	,once: function(f) {
		var tmp;
		var _v = false;
		tmp = new tannus_io__$Pointer_Ref(function() {
			return _v;
		},function(v) {
			return _v = v;
		});
		var h = tannus_io__$VoidSignal_Handler.Once(f,tmp);
		this.handlers.push(h);
	}
	,times: function(count,f) {
		var tmp;
		var _v = 0;
		tmp = new tannus_io__$Pointer_Ref(function() {
			return _v;
		},function(v) {
			return _v = v;
		});
		var h = tannus_io__$VoidSignal_Handler.Counted(f,count,tmp);
		this.handlers.push(h);
	}
	,every: function(interval,f) {
		var tmp;
		var _v = interval;
		tmp = new tannus_io__$Pointer_Ref(function() {
			return _v;
		},function(v) {
			return _v = v;
		});
		var h = tannus_io__$VoidSignal_Handler.Every(f,interval,tmp);
		this.handlers.push(h);
	}
	,ignore: function(func) {
		var ignores = [];
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			switch(h[1]) {
			case 0:
				if(Reflect.compareMethods(h[2],func)) ignores.push(h);
				break;
			case 3:
				if(Reflect.compareMethods(h[2],func)) ignores.push(h);
				break;
			case 1:
				if(Reflect.compareMethods(h[2],func)) ignores.push(h);
				break;
			case 2:
				if(Reflect.compareMethods(h[2],func)) ignores.push(h);
				break;
			}
		}
		var _g2 = 0;
		while(_g2 < ignores.length) {
			var h1 = ignores[_g2];
			++_g2;
			HxOverrides.remove(this.handlers,h1);
		}
	}
	,off: function(f) {
		this.ignore(f);
	}
	,clear: function() {
		this.handlers = [];
	}
	,callHandler: function(h) {
		switch(h[1]) {
		case 0:
			h[2]();
			break;
		case 3:
			if(!h[3].get()) {
				h[2]();
				this._remove.push(h);
			}
			break;
		case 1:
			var fired = h[4];
			if(fired.get() < h[3]) {
				h[2]();
				var nv = fired.get() + 1;
				fired.set(nv);
			} else this._remove.push(h);
			break;
		case 2:
			var rem = h[4];
			if(rem.get() == h[3]) {
				h[2]();
				rem.set(0);
			} else {
				var nv1 = rem.get() + 1;
				rem.set(nv1);
			}
			break;
		}
	}
	,call: function() {
		var _g = 0;
		var _g1 = this.handlers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			this.callHandler(h);
		}
		var _g2 = 0;
		var _g11 = this._remove;
		while(_g2 < _g11.length) {
			var h1 = _g11[_g2];
			++_g2;
			HxOverrides.remove(this.handlers,h1);
		}
		this._remove = [];
	}
	,fire: function() {
		this.call();
	}
	,handlers: null
	,ondelete: null
	,_remove: null
	,__class__: tannus_io_VoidSignal
};
var tannus_io__$VoidSignal_Handler = $hxClasses["tannus.io._VoidSignal.Handler"] = { __ename__ : ["tannus","io","_VoidSignal","Handler"], __constructs__ : ["Normal","Counted","Every","Once"] };
tannus_io__$VoidSignal_Handler.Normal = function(func) { var $x = ["Normal",0,func]; $x.__enum__ = tannus_io__$VoidSignal_Handler; $x.toString = $estr; return $x; };
tannus_io__$VoidSignal_Handler.Counted = function(func,count,fired) { var $x = ["Counted",1,func,count,fired]; $x.__enum__ = tannus_io__$VoidSignal_Handler; $x.toString = $estr; return $x; };
tannus_io__$VoidSignal_Handler.Every = function(func,wait,remaining) { var $x = ["Every",2,func,wait,remaining]; $x.__enum__ = tannus_io__$VoidSignal_Handler; $x.toString = $estr; return $x; };
tannus_io__$VoidSignal_Handler.Once = function(func,fired) { var $x = ["Once",3,func,fired]; $x.__enum__ = tannus_io__$VoidSignal_Handler; $x.toString = $estr; return $x; };
var tannus_io_impl_BinaryError = $hxClasses["tannus.io.impl.BinaryError"] = { __ename__ : ["tannus","io","impl","BinaryError"], __constructs__ : ["Overflow","OutOfBounds","Custom"] };
tannus_io_impl_BinaryError.Overflow = ["Overflow",0];
tannus_io_impl_BinaryError.Overflow.toString = $estr;
tannus_io_impl_BinaryError.Overflow.__enum__ = tannus_io_impl_BinaryError;
tannus_io_impl_BinaryError.OutOfBounds = ["OutOfBounds",1];
tannus_io_impl_BinaryError.OutOfBounds.toString = $estr;
tannus_io_impl_BinaryError.OutOfBounds.__enum__ = tannus_io_impl_BinaryError;
tannus_io_impl_BinaryError.Custom = function(error) { var $x = ["Custom",2,error]; $x.__enum__ = tannus_io_impl_BinaryError; $x.toString = $estr; return $x; };
var tannus_io_impl_BinaryIterator = function(b) {
	this.bin = b;
	this.index = 0;
};
$hxClasses["tannus.io.impl.BinaryIterator"] = tannus_io_impl_BinaryIterator;
tannus_io_impl_BinaryIterator.__name__ = ["tannus","io","impl","BinaryIterator"];
tannus_io_impl_BinaryIterator.prototype = {
	hasNext: function() {
		return this.index <= this.bin._length - 1;
	}
	,next: function() {
		var c = this.bin.get(this.index);
		this.index++;
		return c;
	}
	,index: null
	,bin: null
	,__class__: tannus_io_impl_BinaryIterator
};
var tannus_io_impl_BrowserBinary = $hx_exports.Binary = function(size,data,arr) {
	tannus_io_Binary.call(this,size,data);
	this.array = arr != null?arr:new Uint8Array(data);
};
$hxClasses["tannus.io.impl.BrowserBinary"] = tannus_io_impl_BrowserBinary;
tannus_io_impl_BrowserBinary.__name__ = ["tannus","io","impl","BrowserBinary"];
tannus_io_impl_BrowserBinary.alloc = function(size) {
	var list = new Uint8Array(size);
	var data = list.buffer;
	return new tannus_io_impl_BrowserBinary(size,data,list);
};
tannus_io_impl_BrowserBinary.ofData = function(d) {
	return new tannus_io_impl_BrowserBinary(d.byteLength,d);
};
tannus_io_impl_BrowserBinary.ofString = function(s) {
	if(s == "") return tannus_io_impl_BrowserBinary.alloc(0);
	var a = [];
	var i = 0;
	while(i < s.length) {
		var tmp;
		var index = i++;
		tmp = s.charCodeAt(index);
		var c = tmp;
		if(55296 <= c && c <= 56319) {
			var tmp1;
			var index1 = i++;
			tmp1 = s.charCodeAt(index1);
			c = c - 55232 << 10 | tmp1 & 1023;
		}
		if(c <= 127) a.push(c); else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	var tarr = new Uint8Array(a);
	return new tannus_io_impl_BrowserBinary(a.length,tarr.buffer);
};
tannus_io_impl_BrowserBinary.fromBuffer = function(b) {
	var jsb = tannus_io_impl_BrowserBinary.alloc(b.length);
	var _g1 = 0;
	var _g = b.length;
	while(_g1 < _g) {
		var i = _g1++;
		jsb.set(i,b[i]);
	}
	return jsb;
};
tannus_io_impl_BrowserBinary.fromBytes = function(b) {
	return tannus_io_impl_BrowserBinary.ofData(b.b.buffer);
};
tannus_io_impl_BrowserBinary.list = function(uia) {
	return Array.prototype.slice.call(uia,0);
};
tannus_io_impl_BrowserBinary.fromBase64 = function(s) {
	return tannus_io_impl_BrowserBinary.fromBytes(haxe_crypto_Base64.decode(s));
};
tannus_io_impl_BrowserBinary.__super__ = tannus_io_Binary;
tannus_io_impl_BrowserBinary.prototype = $extend(tannus_io_Binary.prototype,{
	idat: function() {
		if(this.data == null) this.data = new DataView(this.array.buffer,this.array.byteOffset,this.array.byteLength);
	}
	,get: function(i) {
		tannus_io_Binary.prototype.get.call(this,i);
		return this.array[i];
	}
	,set: function(i,v) {
		tannus_io_Binary.prototype.set.call(this,i,v);
		return this.array[i] = v;
	}
	,sub: function(index,size) {
		return new tannus_io_impl_BrowserBinary(size,this.b.slice(index,index + size));
	}
	,slice: function(start,end) {
		if(end == null) end = this._length;
		return new tannus_io_impl_BrowserBinary(end - start,this.b.slice(start,end));
	}
	,blit: function(index,src,srcIndex,size) {
		var _g = 0;
		while(_g < size) {
			var i = _g++;
			this.set(index + i,src.get(srcIndex + i));
		}
	}
	,getString: function(index,size) {
		var result = "";
		var _g = 0;
		while(_g < size) {
			var i = _g++;
			var tmp;
			var this1 = this.get(index + i);
			tmp = String.fromCharCode(this1);
			result += tmp;
		}
		return result;
	}
	,resize: function(size) {
		if(size < this._length) this.setData(this.b = this.b.slice(0,size)); else {
			var bigger = tannus_io_impl_BrowserBinary.alloc(size);
			bigger.blit(0,this,0,this._length);
			this.setData(bigger.b);
		}
	}
	,concat: function(other) {
		var lensum = this._length + other._length;
		var sum = new tannus_io_impl_BrowserBinary(lensum,new ArrayBuffer(lensum));
		sum.blit(0,this,0,this._length);
		sum.blit(this._length,other,0,other._length);
		return sum;
	}
	,setData: function(d) {
		this.b = d;
		this.array = new Uint8Array(this.b);
		this._length = this.array.length;
	}
	,toBytes: function() {
		return haxe_io_Bytes.ofData(this.b);
	}
	,toBuffer: function() {
		return new Buffer(this.array);
	}
	,array: null
	,data: null
	,__class__: tannus_io_impl_BrowserBinary
});
var tannus_macro_MacroTools = function() { };
$hxClasses["tannus.macro.MacroTools"] = tannus_macro_MacroTools;
tannus_macro_MacroTools.__name__ = ["tannus","macro","MacroTools"];
tannus_macro_MacroTools.toTypePath = function(s) {
	var path = { name : "", pack : [], params : null, sub : null};
	var bits = s.split(".");
	var _g = 0;
	while(_g < bits.length) {
		var b = bits[_g];
		++_g;
		if(b.toLowerCase() == b) path.pack.push(b); else if(b.charAt(0).toUpperCase() == b.charAt(0)) {
			if(path.name == "") path.name = b; else path.sub = b;
		}
	}
	return path;
};
var tannus_math__$Percent_Percent_$Impl_$ = {};
$hxClasses["tannus.math._Percent.Percent_Impl_"] = tannus_math__$Percent_Percent_$Impl_$;
tannus_math__$Percent_Percent_$Impl_$.__name__ = ["tannus","math","_Percent","Percent_Impl_"];
tannus_math__$Percent_Percent_$Impl_$.__properties__ = {set_delta:"set_delta",get_delta:"get_delta",set_value:"set_value",get_value:"get_value"}
tannus_math__$Percent_Percent_$Impl_$._new = function(f) {
	return f;
};
tannus_math__$Percent_Percent_$Impl_$.get_value = function(this1) {
	return this1;
};
tannus_math__$Percent_Percent_$Impl_$.set_value = function(this1,nv) {
	return nv;
};
tannus_math__$Percent_Percent_$Impl_$.get_delta = function(this1) {
	return this1 / 100;
};
tannus_math__$Percent_Percent_$Impl_$.set_delta = function(this1,v) {
	return v * 100;
};
tannus_math__$Percent_Percent_$Impl_$.toDelta = function(this1) {
	return this1 / 100;
};
tannus_math__$Percent_Percent_$Impl_$.complement = function(this1) {
	return 100 - this1;
};
tannus_math__$Percent_Percent_$Impl_$.plus = function(this1,other) {
	return this1 + other;
};
tannus_math__$Percent_Percent_$Impl_$.minus = function(this1,other) {
	return this1 - other;
};
tannus_math__$Percent_Percent_$Impl_$.preincrement = function(this1) {
	return ++this1;
};
tannus_math__$Percent_Percent_$Impl_$.postincrement = function(this1) {
	return this1++;
};
tannus_math__$Percent_Percent_$Impl_$.decrement = function(this1) {
	return --this1;
};
tannus_math__$Percent_Percent_$Impl_$.percent = function(what,of) {
	return what / of * 100;
};
tannus_math__$Percent_Percent_$Impl_$.toString = function(this1) {
	return "" + this1 + "%";
};
var tannus_math_Random = $hx_exports.Random = function(seed) {
	this.state = seed != null?seed:Math.floor(Math.random() * 2147483647);
};
$hxClasses["tannus.math.Random"] = tannus_math_Random;
tannus_math_Random.__name__ = ["tannus","math","Random"];
tannus_math_Random.stringSeed = function(seed) {
	var ba = tannus_io_impl_BrowserBinary.ofString(seed);
	var $it0 = ba.iterator();
	while( $it0.hasNext() ) {
		var bit = $it0.next();
		seed += bit;
	}
	return new tannus_math_Random(0);
};
tannus_math_Random.prototype = {
	nextInt: function() {
		this.state = (1103515245.0 * this.state + 12345) % 2147483647;
		return this.state;
	}
	,nextFloat: function() {
		return this.nextInt() / 2147483647;
	}
	,reset: function(value) {
		this.state = value;
	}
	,randint: function(min,max) {
		return Math.floor(this.nextFloat() * (max - min + 1) + min);
	}
	,chance: function(chances,choices,shuffleAll) {
		if(shuffleAll == null) shuffleAll = true;
		if(tannus_math_TMath.sum_Int(chances) != 100) throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("RandomError: The [chances] parameter for tannus.math.Random::chance must add up to 100")); else if(chances.length != choices.length) throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("RandomError: The [chances] and [choices] parameters for tannus.math.Random::chance must be of the same length")); else {
			var all = [];
			var _g1 = 0;
			var _g = chances.length;
			while(_g1 < _g) {
				var index = _g1++;
				var count = chances[index];
				var value = choices[index];
				var _g2 = 0;
				while(_g2 < count) {
					_g2++;
					all.push(value);
				}
			}
			if(shuffleAll) all = this.shuffle(all);
			return this.choice(all);
		}
	}
	,randchance: function(top,bottom) {
		var tmp;
		var _g = [];
		var _g1 = 0;
		while(_g1 < bottom) {
			var i = _g1++;
			_g.push(i);
		}
		tmp = _g;
		var choices = tmp;
		var correct = [];
		while(correct.length < top) {
			var cnum = this.choice(choices);
			if(!Lambda.has(correct,cnum)) correct.push(cnum);
		}
		return Lambda.has(correct,this.randint(top,bottom));
	}
	,randbool: function() {
		return this.randint(0,1) == 1;
	}
	,choice: function(set) {
		return set[this.randint(0,set.length - 1)];
	}
	,sample: function(set,size) {
		var sampleSize = size == null?this.randint(0,set.length):size;
		var items = [];
		while(items.length < sampleSize) {
			var ritem = this.choice(set);
			if(!Lambda.has(items,ritem)) items.push(ritem);
		}
		return items;
	}
	,shuffle: function(set) {
		var copy = set.slice();
		var result = [];
		if(copy.length > 0) {
			while(copy.length != 1) {
				var el = this.choice(copy);
				HxOverrides.remove(copy,el);
				result.push(el);
			}
			result.push(copy.pop());
		}
		return result;
	}
	,enumConstruct: function(_enum) {
		var name = this.choice(Type.getEnumConstructs(_enum));
		var tmp;
		var e = _enum;
		var a1 = name;
		tmp = function(a2) {
			return Type.createEnum(e,a1,a2);
		};
		return tmp;
	}
	,pointInRect: function(rect) {
		var tmp;
		var x = this.randint(Math.floor(rect.x),Math.floor(rect.x + rect.width));
		var y = this.randint(Math.floor(rect.y),Math.floor(rect.y + rect.height));
		tmp = new tannus_geom_TPoint(x,y,0);
		return tmp;
	}
	,state: null
	,__class__: tannus_math_Random
};
var tannus_math_RandomTools = function() { };
$hxClasses["tannus.math.RandomTools"] = tannus_math_RandomTools;
tannus_math_RandomTools.__name__ = ["tannus","math","RandomTools"];
tannus_math_RandomTools.__properties__ = {get_rand:"get_rand"}
tannus_math_RandomTools.randint = function(range) {
	return new tannus_math_Random().randint(range[0],range[1]);
};
tannus_math_RandomTools.between = function(r) {
	return r.min - r.min + new tannus_math_Random().randint(r.min | 0,r.max | 0);
};
tannus_math_RandomTools.choice = function(set) {
	return new tannus_math_Random().choice(Lambda.array(set));
};
tannus_math_RandomTools.chance = function(choices,chances,shuffleAll) {
	if(shuffleAll == null) shuffleAll = true;
	return new tannus_math_Random().chance(chances,choices,shuffleAll);
};
tannus_math_RandomTools.sample = function(list,size) {
	return new tannus_math_Random().sample(list,size);
};
tannus_math_RandomTools.shuffle = function(set) {
	return new tannus_math_Random().shuffle(set);
};
tannus_math_RandomTools.randomConstruct = function(enumer) {
	return new tannus_math_Random().enumConstruct(enumer);
};
tannus_math_RandomTools.get_rand = function() {
	return new tannus_math_Random();
};
var tannus_math__$Ratio_Ratio_$Impl_$ = {};
$hxClasses["tannus.math._Ratio.Ratio_Impl_"] = tannus_math__$Ratio_Ratio_$Impl_$;
tannus_math__$Ratio_Ratio_$Impl_$.__name__ = ["tannus","math","_Ratio","Ratio_Impl_"];
tannus_math__$Ratio_Ratio_$Impl_$._new = function(top,bottom) {
	return new tannus_math_CRatio(top,bottom);
};
tannus_math__$Ratio_Ratio_$Impl_$.equals = function(this1,other) {
	return this1.equals(other);
};
tannus_math__$Ratio_Ratio_$Impl_$.toFloat = function(this1) {
	return this1.toFloat();
};
tannus_math__$Ratio_Ratio_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_math__$Ratio_Ratio_$Impl_$.toPercent = function(this1) {
	return this1.toPercent();
};
tannus_math__$Ratio_Ratio_$Impl_$.fromFloatArray = function(a) {
	return new tannus_math_CRatio(a[0],a[1]);
};
tannus_math__$Ratio_Ratio_$Impl_$.fromIntArray = function(a) {
	return new tannus_math_CRatio(a[0],a[1]);
};
var tannus_math_CRatio = function(t,b) {
	this.top = t;
	this.bottom = b;
};
$hxClasses["tannus.math.CRatio"] = tannus_math_CRatio;
tannus_math_CRatio.__name__ = ["tannus","math","CRatio"];
tannus_math_CRatio.prototype = {
	bottomValue: function(topValue) {
		return topValue / this.top * this.bottom;
	}
	,topValue: function(bottomValue) {
		return bottomValue / this.bottom * this.top;
	}
	,toFloat: function() {
		return this.top / this.bottom;
	}
	,toString: function() {
		return "" + this.top + " / " + this.bottom;
	}
	,toPercent: function() {
		return tannus_math__$Percent_Percent_$Impl_$.percent(this.top,this.bottom);
	}
	,equals: function(other) {
		return this.toFloat() == other.toFloat();
	}
	,reciprocal: function() {
		var tmp;
		var bottom = this.toFloat();
		tmp = new tannus_math_CRatio(1,bottom);
		return tmp;
	}
	,get_percent: function() {
		return this.toPercent();
	}
	,top: null
	,bottom: null
	,__class__: tannus_math_CRatio
	,__properties__: {get_percent:"get_percent"}
};
var tannus_math_TMath = $hx_exports.TMath = function() { };
$hxClasses["tannus.math.TMath"] = tannus_math_TMath;
tannus_math_TMath.__name__ = ["tannus","math","TMath"];
tannus_math_TMath.sum_Float = function(list) {
	var res = null;
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		if(!(res != null)) res = item; else res = (res != null?res:res) + item;
	}
	return res;
};
tannus_math_TMath.clamp_Float = function(value,min,max) {
	return value < min?min:value > max?max:value;
};
tannus_math_TMath.sum_Int = function(list) {
	var res = null;
	var _g = 0;
	while(_g < list.length) {
		var item = list[_g];
		++_g;
		if(!(res != null)) res = item; else res = (res != null?res:res) + item;
	}
	return res;
};
tannus_math_TMath.clamp_Int = function(value,min,max) {
	return value < min?min:value > max?max:value;
};
tannus_math_TMath.toRadians = function(degrees) {
	return degrees * 3.141592653589793 / 180;
};
tannus_math_TMath.toDegrees = function(radians) {
	return radians * 180 / 3.141592653589793;
};
tannus_math_TMath.angleBetween = function(x1,y1,x2,y2) {
	var tmp;
	var radians = Math.atan2(y2 - y1,x2 - x1);
	tmp = radians * 180 / 3.141592653589793;
	return tmp;
};
tannus_math_TMath.distance = function(x1,y1,x2,y2) {
	return Math.sqrt(Math.pow(Math.abs(x2 - x1),2) + Math.pow(Math.abs(y2 - y1),2));
};
tannus_math_TMath.toFixed = function(n,c) {
	if(c == null) c = 0;
	var sn = Std.string(n);
	var bd = tannus_ds_StringUtils.before(sn,".");
	var wn = Std.parseInt(bd);
	var ad = "";
	var res = wn + "";
	if(tannus_ds_StringUtils.has(sn,".")) {
		ad = tannus_ds_StringUtils.after(sn,".");
		var sl = tannus_ds_StringUtils.slice(ad,0,c);
		if(ad.length > sl.length) {
			sl = tannus_ds_StringUtils.slice(ad,0,c + 1);
			var idec = Std.parseInt(sl);
			idec = Math.round(idec / 10);
			res += "." + idec;
		} else res += "." + sl;
	}
	return res;
};
tannus_math_TMath.max = function(a,b) {
	return a > b?a:b;
};
tannus_math_TMath.min = function(a,b) {
	return a < b?a:b;
};
tannus_math_TMath.maxr = function(nums) {
	var m = null;
	var $it0 = $iterator(nums)();
	while( $it0.hasNext() ) {
		var n = $it0.next();
		if(m == null) m = n;
		m = n > m?n:m;
	}
	return m;
};
tannus_math_TMath.minr = function(nums) {
	var m = null;
	var _g = 0;
	while(_g < nums.length) {
		var n = nums[_g];
		++_g;
		if(m == null) m = n;
		m = n < m?n:m;
	}
	return m;
};
tannus_math_TMath.range = function(nums) {
	var mi = null;
	var ma = null;
	var _g = 0;
	while(_g < nums.length) {
		var n = nums[_g];
		++_g;
		if(mi == null) mi = n;
		if(ma == null) ma = n;
		mi = n < mi?n:mi;
		ma = n > ma?n:ma;
	}
	return new tannus_ds_Range(mi,ma);
};
tannus_math_TMath.lerp = function(a,b,x) {
	return a + x * (b - a);
};
tannus_math_TMath.almostEquals = function(n,v,threshold) {
	return Math.abs(n - v) <= threshold;
};
tannus_math_TMath.i = function(f) {
	return f | 0;
};
tannus_math_TMath.roundFloat = function(f,digit) {
	var n = Math.pow(10,digit);
	var r = Math.round(f * n) / n;
	return r;
};
tannus_math_TMath.average = function(values) {
	var sum = 0;
	var _g = 0;
	while(_g < values.length) {
		var n = values[_g];
		++_g;
		sum += n;
	}
	return sum / values.length;
};
tannus_math_TMath.largest = function(items,predicate) {
	var highest = 0;
	var $it0 = $iterator(items)();
	while( $it0.hasNext() ) {
		var item = $it0.next();
		var tmp;
		var b = predicate(item);
		if(highest > b) tmp = highest; else tmp = b;
		highest = tmp;
	}
	return highest;
};
tannus_math_TMath.smallest = function(items,predicate) {
	var lowest = 0;
	var $it0 = $iterator(items)();
	while( $it0.hasNext() ) {
		var item = $it0.next();
		var tmp;
		var b = predicate(item);
		if(lowest < b) tmp = lowest; else tmp = b;
		lowest = tmp;
	}
	return lowest;
};
tannus_math_TMath.largestItem = function(items,predicate) {
	var asarr = Lambda.array(items);
	if(asarr.length == 0) return null; else if(asarr.length == 1) return asarr[0]; else if(asarr.length == 2) {
		var px = predicate(asarr[0]);
		var py = predicate(asarr[1]);
		if(px >= py) return asarr[0]; else return asarr[1];
	} else {
		var best = null;
		var $it0 = $iterator(items)();
		while( $it0.hasNext() ) {
			var item = $it0.next();
			var score = predicate(item);
			if(best == null || score > best.score) best = { 'item' : item, 'score' : score};
		}
		return best.item;
	}
};
tannus_math_TMath.minmax = function(items,predicate) {
	var res = new tannus_ds_FloatRange(NaN,NaN);
	var $it0 = $iterator(items)();
	while( $it0.hasNext() ) {
		var item = $it0.next();
		var score = predicate(item);
		if(res.max < score || isNaN(res.max)) res.max = score; else if(res.min > score || isNaN(res.min)) res.min = score;
		if(res.min > res.max) {
			var _t = res.max;
			res.max = res.min;
			res.min = _t;
		}
	}
	return res;
};
tannus_math_TMath.inRange = function(value,min,max) {
	return value >= min && value <= max;
};
tannus_math_TMath.sign = function(value) {
	return value < 0?-1:value > 0?1:0;
};
tannus_math_TMath.applySign = function(value,sign) {
	return value * sign;
};
tannus_math_TMath.sumf = function(set,extractor) {
	var res = null;
	var $it0 = $iterator(set)();
	while( $it0.hasNext() ) {
		var item = $it0.next();
		res = res != null?res + extractor(item):extractor(item);
	}
	return res;
};
tannus_math_TMath.sampleVariance = function(data) {
	var sampleSize = data.length;
	if(sampleSize < 2) return 0;
	var tmp;
	var sum = 0;
	var _g = 0;
	while(_g < data.length) {
		var n = data[_g];
		++_g;
		sum += n;
	}
	tmp = sum / data.length;
	var mean = tmp;
	return tannus_math_TMath.sum_Float(data.map(function(val) {
		return Math.pow(val - mean,2);
	})) / (sampleSize - 1);
};
tannus_math_TMath.standardDeviation = function(data) {
	return Math.sqrt(tannus_math_TMath.sampleVariance(data));
};
tannus_math_TMath.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) return 0.0;
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
tannus_math_TMath.floatToI32 = function(f) {
	if(f == 0) return 0;
	var af = f < 0?-f:f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) exp = -127; else if(exp > 128) exp = 128;
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
	return (f < 0?-2147483648:0) | exp + 127 << 23 | sig;
};
tannus_math_TMath.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) return 0.0;
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
tannus_math_TMath.snap = function(value,min,step,max) {
	if(value < min) return min; else if(max != null && value > max) return max; else {
		var v = min;
		while(true) {
			if(value <= v) {
				var prev = v - step;
				if(value >= prev) {
					if(v - value < value - prev) return v; else return prev;
				}
			}
			v += step;
		}
	}
};
tannus_math_TMath.prettify = function(num,dec) {
	if(dec == null) dec = 0;
	var i = num | 0;
	var si = i == null?"null":"" + i;
	console.log(si);
	var tmp;
	var this1;
	this1 = tannus_io_impl_BrowserBinary.alloc(0);
	tmp = this1;
	var res = tmp;
	var index = si.length - 1;
	while(index >= 0) {
		var tmp1;
		if(index <= si.length - 1) {
			var n = HxOverrides.cca(si,index);
			var this2;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			this2 = n;
			tmp1 = this2;
		} else throw new js__$Boot_HaxeError("IndexOutOfBoundError: " + index + " is not within range(0, " + (si.length - 1) + ")");
		var c = tmp1;
		res.push(c);
		if((index + 1) % 3 == 0) res.push(44);
		index--;
	}
	res.reverse();
	return res.toString();
};
var tannus_media__$Duration_Duration_$Impl_$ = {};
$hxClasses["tannus.media._Duration.Duration_Impl_"] = tannus_media__$Duration_Duration_$Impl_$;
tannus_media__$Duration_Duration_$Impl_$.__name__ = ["tannus","media","_Duration","Duration_Impl_"];
tannus_media__$Duration_Duration_$Impl_$._new = function(s,m,h) {
	if(h == null) h = 0;
	if(m == null) m = 0;
	if(s == null) s = 0;
	return new tannus_media_CDur(s,m,h);
};
tannus_media__$Duration_Duration_$Impl_$.equals = function(this1,other) {
	return this1.equals(other);
};
tannus_media__$Duration_Duration_$Impl_$.nequals = function(this1,other) {
	return !this1.equals(other);
};
tannus_media__$Duration_Duration_$Impl_$.gt = function(this1,other) {
	return 3600 * this1.hours + 60 * this1.minutes + this1.seconds > 3600 * other.hours + 60 * other.minutes + other.seconds;
};
tannus_media__$Duration_Duration_$Impl_$.lt = function(this1,other) {
	return 3600 * this1.hours + 60 * this1.minutes + this1.seconds < 3600 * other.hours + 60 * other.minutes + other.seconds;
};
tannus_media__$Duration_Duration_$Impl_$.plus = function(this1,other) {
	return this1.plus(other);
};
tannus_media__$Duration_Duration_$Impl_$.minus = function(this1,other) {
	return this1.minus(other);
};
tannus_media__$Duration_Duration_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_media__$Duration_Duration_$Impl_$.toInt = function(this1) {
	return 3600 * this1.hours + 60 * this1.minutes + this1.seconds;
};
tannus_media__$Duration_Duration_$Impl_$.toFloat = function(this1) {
	return 3600 * this1.hours + 60 * this1.minutes + this1.seconds + 0.0;
};
tannus_media__$Duration_Duration_$Impl_$.fromSecondsI = function(i) {
	return tannus_media_CDur.fromSecondsI(i);
};
tannus_media__$Duration_Duration_$Impl_$.fromSecondsF = function(n) {
	return tannus_media_CDur.fromSecondsI(Math.floor(n));
};
tannus_media__$Duration_Duration_$Impl_$.fromInt = function(i) {
	return tannus_media_CDur.fromSecondsI(i);
};
tannus_media__$Duration_Duration_$Impl_$.fromFloat = function(n) {
	return tannus_media_CDur.fromSecondsI(Math.floor(n));
};
tannus_media__$Duration_Duration_$Impl_$.fromString = function(s) {
	return tannus_media_CDur.fromString(s);
};
tannus_media__$Duration_Duration_$Impl_$.fromIntArray = function(a) {
	return tannus_media__$Duration_Duration_$Impl_$._new(a[0],a[1],a[2]);
};
var tannus_media_CDur = $hx_exports.tannus.media.Duration = function(s,m,h) {
	this.seconds = s;
	this.minutes = m;
	this.hours = h;
};
$hxClasses["tannus.media.CDur"] = tannus_media_CDur;
tannus_media_CDur.__name__ = ["tannus","media","CDur"];
tannus_media_CDur.__interfaces__ = [tannus_ds_Comparable];
tannus_media_CDur.fromSecondsI = function(i) {
	var d = tannus_media__$Duration_Duration_$Impl_$._new();
	d.set_totalSeconds(i);
	return d;
};
tannus_media_CDur.fromInt = function(i) {
	return tannus_media_CDur.fromSecondsI(i);
};
tannus_media_CDur.fromSecondsF = function(n) {
	return tannus_media_CDur.fromSecondsI(Math.floor(n));
};
tannus_media_CDur.fromFloat = function(n) {
	return tannus_media_CDur.fromSecondsI(Math.floor(n));
};
tannus_media_CDur.fromString = function(s) {
	var data = StringTools.trim(s).split(":").map(Std.parseInt);
	switch(data.length) {
	case 1:
		var s1 = data[0];
		return tannus_media__$Duration_Duration_$Impl_$._new(s1);
	case 2:
		var s2 = data[1];
		var m = data[0];
		return tannus_media__$Duration_Duration_$Impl_$._new(s2,m);
	case 3:
		var s3 = data[2];
		var m1 = data[1];
		var h = data[0];
		return tannus_media__$Duration_Duration_$Impl_$._new(s3,m1,h);
	default:
		throw new js__$Boot_HaxeError("Invalid Duration string \"" + s + "\"");
	}
};
tannus_media_CDur.fromIntArray = function(a) {
	return tannus_media__$Duration_Duration_$Impl_$._new(a[0],a[1],a[2]);
};
tannus_media_CDur.prototype = {
	toString: function() {
		var bits = [];
		bits.unshift(this.seconds + "");
		bits.unshift(this.minutes + "");
		if(this.hours > 0) bits.unshift(this.hours + "");
		bits = bits.map(function(s) {
			if(s.length < 2) s = tannus_ds_StringUtils.times("0",2 - s.length) + s;
			return s;
		});
		return bits.join(":");
	}
	,equals: function(other) {
		return this.seconds == other.seconds && this.minutes == other.minutes && this.hours == other.hours;
	}
	,greaterThan: function(other) {
		return 3600 * this.hours + 60 * this.minutes + this.seconds > 3600 * other.hours + 60 * other.minutes + other.seconds;
	}
	,lessThan: function(other) {
		return 3600 * this.hours + 60 * this.minutes + this.seconds < 3600 * other.hours + 60 * other.minutes + other.seconds;
	}
	,compare: function(other) {
		return this.equals(other)?0:3600 * this.hours + 60 * this.minutes + this.seconds > 3600 * other.hours + 60 * other.minutes + other.seconds?1:-1;
	}
	,plus: function(other) {
		return tannus_media_CDur.fromSecondsI(3600 * this.hours + 60 * this.minutes + this.seconds + (3600 * other.hours + 60 * other.minutes + other.seconds));
	}
	,minus: function(other) {
		return tannus_media_CDur.fromSecondsI(3600 * this.hours + 60 * this.minutes + this.seconds - (3600 * other.hours + 60 * other.minutes + other.seconds));
	}
	,toInt: function() {
		return 3600 * this.hours + 60 * this.minutes + this.seconds;
	}
	,toFloat: function() {
		return 3600 * this.hours + 60 * this.minutes + this.seconds + 0.0;
	}
	,get_totalHours: function() {
		return Math.floor(this.hours + this.minutes / 60.0);
	}
	,get_totalMinutes: function() {
		return Math.floor(60 * this.hours + this.minutes + this.seconds / 60.0);
	}
	,get_totalSeconds: function() {
		return 3600 * this.hours + 60 * this.minutes + this.seconds;
	}
	,set_totalSeconds: function(v) {
		this.hours = Math.floor(v / 3600);
		v = v - this.hours * 3600;
		this.minutes = Math.floor(v / 60);
		this.seconds = v - this.minutes * 60;
		return 3600 * this.hours + 60 * this.minutes + this.seconds;
	}
	,seconds: null
	,minutes: null
	,hours: null
	,__class__: tannus_media_CDur
	,__properties__: {set_totalSeconds:"set_totalSeconds",get_totalSeconds:"get_totalSeconds",get_totalMinutes:"get_totalMinutes",get_totalHours:"get_totalHours"}
};
var tannus_media_TimeRange = function(s,e) {
	this.start = s;
	this.end = e;
};
$hxClasses["tannus.media.TimeRange"] = tannus_media_TimeRange;
tannus_media_TimeRange.__name__ = ["tannus","media","TimeRange"];
tannus_media_TimeRange.__interfaces__ = [tannus_ds_Comparable];
tannus_media_TimeRange.prototype = {
	equals: function(other) {
		return this.start.equals(other.start) && this.end.equals(other.end);
	}
	,contains: function(time) {
		var tmp;
		var value = 3600 * time.hours + 60 * time.minutes + time.seconds;
		var tmp1;
		var this1 = this.start;
		tmp1 = 3600 * this1.hours + 60 * this1.minutes + this1.seconds;
		if(value >= tmp1) {
			var tmp2;
			var this2 = this.end;
			tmp2 = 3600 * this2.hours + 60 * this2.minutes + this2.seconds;
			tmp = value <= tmp2;
		} else tmp = false;
		return tmp;
	}
	,overlapsWith: function(other) {
		var tmp;
		var time = other.start;
		var value = 3600 * time.hours + 60 * time.minutes + time.seconds;
		var tmp4;
		var this1 = this.start;
		tmp4 = 3600 * this1.hours + 60 * this1.minutes + this1.seconds;
		if(value >= tmp4) {
			var tmp5;
			var this2 = this.end;
			tmp5 = 3600 * this2.hours + 60 * this2.minutes + this2.seconds;
			tmp = value <= tmp5;
		} else tmp = false;
		var tmp1;
		if(!tmp) {
			var time1 = other.end;
			var value1 = 3600 * time1.hours + 60 * time1.minutes + time1.seconds;
			var tmp6;
			var this3 = this.start;
			tmp6 = 3600 * this3.hours + 60 * this3.minutes + this3.seconds;
			if(value1 >= tmp6) {
				var tmp7;
				var this4 = this.end;
				tmp7 = 3600 * this4.hours + 60 * this4.minutes + this4.seconds;
				tmp1 = value1 <= tmp7;
			} else tmp1 = false;
		} else tmp1 = true;
		var tmp2;
		if(!tmp1) {
			var time2 = this.start;
			var value2 = 3600 * time2.hours + 60 * time2.minutes + time2.seconds;
			var tmp8;
			var this5 = other.start;
			tmp8 = 3600 * this5.hours + 60 * this5.minutes + this5.seconds;
			if(value2 >= tmp8) {
				var tmp9;
				var this6 = other.end;
				tmp9 = 3600 * this6.hours + 60 * this6.minutes + this6.seconds;
				tmp2 = value2 <= tmp9;
			} else tmp2 = false;
		} else tmp2 = true;
		var tmp3;
		if(!tmp2) {
			var time3 = this.end;
			var value3 = 3600 * time3.hours + 60 * time3.minutes + time3.seconds;
			var tmp10;
			var this7 = other.start;
			tmp10 = 3600 * this7.hours + 60 * this7.minutes + this7.seconds;
			if(value3 >= tmp10) {
				var tmp11;
				var this8 = other.end;
				tmp11 = 3600 * this8.hours + 60 * this8.minutes + this8.seconds;
				tmp3 = value3 <= tmp11;
			} else tmp3 = false;
		} else tmp3 = true;
		return tmp3;
	}
	,toIntRange: function() {
		var tmp;
		var this1 = this.start;
		tmp = 3600 * this1.hours + 60 * this1.minutes + this1.seconds;
		var tmp1;
		var this2 = this.end;
		tmp1 = 3600 * this2.hours + 60 * this2.minutes + this2.seconds;
		return new tannus_ds_IntRange(tmp,tmp1);
	}
	,toFloatRange: function() {
		var tmp;
		var this1 = this.start;
		tmp = 3600 * this1.hours + 60 * this1.minutes + this1.seconds + 0.0;
		var tmp1;
		var this2 = this.end;
		tmp1 = 3600 * this2.hours + 60 * this2.minutes + this2.seconds + 0.0;
		return new tannus_ds_FloatRange(tmp,tmp1);
	}
	,toString: function() {
		return "TimeRange(from " + this.start.toString() + " to " + this.end.toString() + ")";
	}
	,get_duration: function() {
		var tmp;
		var this1 = this.end;
		tmp = 3600 * this1.hours + 60 * this1.minutes + this1.seconds + 0.0;
		var tmp1;
		var this2 = this.start;
		tmp1 = 3600 * this2.hours + 60 * this2.minutes + this2.seconds + 0.0;
		return tannus_media_CDur.fromSecondsI(Math.floor(tmp - tmp1));
	}
	,start: null
	,end: null
	,__class__: tannus_media_TimeRange
	,__properties__: {get_duration:"get_duration"}
};
var tannus_media__$TimeRange_OldTimeRange_$Impl_$ = {};
$hxClasses["tannus.media._TimeRange.OldTimeRange_Impl_"] = tannus_media__$TimeRange_OldTimeRange_$Impl_$;
tannus_media__$TimeRange_OldTimeRange_$Impl_$.__name__ = ["tannus","media","_TimeRange","OldTimeRange_Impl_"];
tannus_media__$TimeRange_OldTimeRange_$Impl_$.__properties__ = {set_endn:"set_endn",get_endn:"get_endn",set_startn:"set_startn",get_startn:"get_startn",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",get_duration:"get_duration"}
tannus_media__$TimeRange_OldTimeRange_$Impl_$._new = function(start,end) {
	return [start,end];
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.equals = function(this1,other) {
	return this1[0].equals(other.start) && this1[1].equals(other.end);
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.contains = function(this1,time) {
	var tmp;
	var value = 3600 * time.hours + 60 * time.minutes + time.seconds;
	var tmp1;
	var this2 = this1[0];
	tmp1 = 3600 * this2.hours + 60 * this2.minutes + this2.seconds;
	if(value >= tmp1) {
		var tmp2;
		var this3 = this1[1];
		tmp2 = 3600 * this3.hours + 60 * this3.minutes + this3.seconds;
		tmp = value <= tmp2;
	} else tmp = false;
	return tmp;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.toIntRange = function(this1) {
	var tmp;
	var this2 = this1[0];
	tmp = 3600 * this2.hours + 60 * this2.minutes + this2.seconds;
	var tmp1;
	var this3 = this1[1];
	tmp1 = 3600 * this3.hours + 60 * this3.minutes + this3.seconds;
	return new tannus_ds_IntRange(tmp,tmp1);
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.toFloatRange = function(this1) {
	var tmp;
	var this2 = this1[0];
	tmp = 3600 * this2.hours + 60 * this2.minutes + this2.seconds + 0.0;
	var tmp1;
	var this3 = this1[1];
	tmp1 = 3600 * this3.hours + 60 * this3.minutes + this3.seconds + 0.0;
	return new tannus_ds_FloatRange(tmp,tmp1);
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_duration = function(this1) {
	return this1[1].minus(this1[0]);
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_start = function(this1) {
	return this1[0];
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.set_start = function(this1,v) {
	return this1[0] = v;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_end = function(this1) {
	return this1[1];
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.set_end = function(this1,v) {
	return this1[1] = v;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_startn = function(this1) {
	var tmp;
	var _this = this1[0];
	tmp = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
	return tmp;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.set_startn = function(this1,v) {
	var tmp;
	var tmp1;
	var v1 = tannus_media_CDur.fromSecondsI(Math.floor(v));
	tmp1 = this1[0] = v1;
	var _this = tmp1;
	tmp = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
	return tmp;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.get_endn = function(this1) {
	var tmp;
	var _this = this1[1];
	tmp = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
	return tmp;
};
tannus_media__$TimeRange_OldTimeRange_$Impl_$.set_endn = function(this1,v) {
	var tmp;
	var tmp1;
	var v1 = tannus_media_CDur.fromSecondsI(Math.floor(v));
	tmp1 = this1[1] = v1;
	var _this = tmp1;
	tmp = 3600 * _this.hours + 60 * _this.minutes + _this.seconds;
	return tmp;
};
var tannus_media__$TimeRanges_TimeRanges_$Impl_$ = {};
$hxClasses["tannus.media._TimeRanges.TimeRanges_Impl_"] = tannus_media__$TimeRanges_TimeRanges_$Impl_$;
tannus_media__$TimeRanges_TimeRanges_$Impl_$.__name__ = ["tannus","media","_TimeRanges","TimeRanges_Impl_"];
tannus_media__$TimeRanges_TimeRanges_$Impl_$._new = function(a) {
	return a;
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.getTotal = function(this1) {
	var tmp;
	var n = tannus_math_TMath.sumf(this1,function(item) {
		var tmp1;
		var tmp2;
		var this3 = item.end;
		tmp2 = 3600 * this3.hours + 60 * this3.minutes + this3.seconds + 0.0;
		var tmp3;
		var this4 = item.start;
		tmp3 = 3600 * this4.hours + 60 * this4.minutes + this4.seconds + 0.0;
		var this2 = tannus_media_CDur.fromSecondsI(Math.floor(tmp2 - tmp3));
		tmp1 = 3600 * this2.hours + 60 * this2.minutes + this2.seconds + 0.0;
		return tmp1;
	});
	tmp = tannus_media_CDur.fromSecondsI(Math.floor(n));
	return tmp;
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.findContainingRange = function(this1,time) {
	return tannus_ds_ArrayTools.firstMatch(this1,function(item) {
		var tmp;
		var value = 3600 * time.hours + 60 * time.minutes + time.seconds;
		var tmp1;
		var this2 = item.start;
		tmp1 = 3600 * this2.hours + 60 * this2.minutes + this2.seconds;
		if(value >= tmp1) {
			var tmp2;
			var this3 = item.end;
			tmp2 = 3600 * this3.hours + 60 * this3.minutes + this3.seconds;
			tmp = value <= tmp2;
		} else tmp = false;
		return tmp;
	});
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.inAnyRange = function(this1,time) {
	var tmp;
	var time1 = time;
	tmp = tannus_ds_ArrayTools.firstMatch(this1,function(item) {
		var tmp1;
		var value = 3600 * time1.hours + 60 * time1.minutes + time1.seconds;
		var tmp2;
		var this2 = item.start;
		tmp2 = 3600 * this2.hours + 60 * this2.minutes + this2.seconds;
		if(value >= tmp2) {
			var tmp3;
			var this3 = item.end;
			tmp3 = 3600 * this3.hours + 60 * this3.minutes + this3.seconds;
			tmp1 = value <= tmp3;
		} else tmp1 = false;
		return tmp1;
	});
	return tmp != null;
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.sortRanges = function(this1) {
	haxe_ds_ArraySort.sort(this1,function(left,right) {
		var tmp;
		var this2 = right.start;
		tmp = 3600 * this2.hours + 60 * this2.minutes + this2.seconds;
		var tmp1;
		var this3 = left.start;
		tmp1 = 3600 * this3.hours + 60 * this3.minutes + this3.seconds;
		return tmp - tmp1;
	});
};
tannus_media__$TimeRanges_TimeRanges_$Impl_$.fromJavaScriptTimeRanges = function(trl) {
	var ranges = [];
	var _g1 = 0;
	var _g = trl.length;
	while(_g1 < _g) {
		var index = _g1++;
		var tmp;
		var n = trl.start(index);
		tmp = tannus_media_CDur.fromSecondsI(Math.floor(n));
		var tmp1;
		var n1 = trl.end(index);
		tmp1 = tannus_media_CDur.fromSecondsI(Math.floor(n1));
		var range = new tannus_media_TimeRange(tmp,tmp1);
		ranges.push(range);
	}
	return ranges;
};
var tannus_mvc_BaseAttribute = function() {
	this.change = new tannus_io_Signal();
	this.keychange = new tannus_io_Signal();
	this.keys = [];
};
$hxClasses["tannus.mvc.BaseAttribute"] = tannus_mvc_BaseAttribute;
tannus_mvc_BaseAttribute.__name__ = ["tannus","mvc","BaseAttribute"];
tannus_mvc_BaseAttribute.prototype = {
	get: function() {
		throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("Not implemented"));
	}
	,set: function(value) {
		throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("Not implemented"));
	}
	,'delete': function() {
		return false;
	}
	,dispose: function() {
	}
	,exists: function() {
		return false;
	}
	,allockey: function(key) {
		if(!Lambda.has(this.keys,key)) this.keys.push(key);
	}
	,deallockey: function(key) {
		return HxOverrides.remove(this.keys,key);
	}
	,defaultValue: function() {
		throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("Not implemented"));
	}
	,get_value: function() {
		return this.get();
	}
	,set_value: function(v) {
		return this.set(v);
	}
	,get_v: function() {
		return this.get();
	}
	,set_v: function(v) {
		return this.set(v);
	}
	,name: null
	,keys: null
	,change: null
	,keychange: null
	,__class__: tannus_mvc_BaseAttribute
	,__properties__: {set_v:"set_v",get_v:"get_v",set_value:"set_value",get_value:"get_value"}
};
var tannus_mvc_Attribute = function(m,n) {
	tannus_mvc_BaseAttribute.call(this);
	this.model = m;
	this.name = n;
	this.model.watch($bind(this,this.onchange));
};
$hxClasses["tannus.mvc.Attribute"] = tannus_mvc_Attribute;
tannus_mvc_Attribute.__name__ = ["tannus","mvc","Attribute"];
tannus_mvc_Attribute.__super__ = tannus_mvc_BaseAttribute;
tannus_mvc_Attribute.prototype = $extend(tannus_mvc_BaseAttribute.prototype,{
	unbind: function() {
		this.model.unwatch($bind(this,this.onchange));
	}
	,rebind: function(m) {
		this.unbind();
		this.model = m;
		this.model.watch($bind(this,this.onchange));
	}
	,get: function() {
		if(!this.exists()) return this.set(this.defaultValue()); else return this.model.getAttribute(this.name);
	}
	,set: function(value) {
		return this.model.setAttribute(this.name,value);
	}
	,kg: function(key) {
		return this.model.getAttribute(key);
	}
	,ks: function(key,value) {
		return this.model.setAttribute(key,value);
	}
	,'delete': function() {
		return this.model.removeAttribute(this.name);
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			this.deallockey(key);
		}
		this.model.am.removeAttribute(this);
	}
	,exists: function() {
		return this.model.hasAttribute(this.name);
	}
	,allockey: function(key) {
		this.model.am.allockey(this,key);
		tannus_mvc_BaseAttribute.prototype.allockey.call(this,key);
	}
	,deallockey: function(key) {
		var r = tannus_mvc_BaseAttribute.prototype.deallockey.call(this,key);
		this.model.removeAttribute(key);
		return r;
	}
	,onchange: function(mc) {
		if(mc.name == this.name) this.change.broadcast(mc.value); else if(Lambda.has(this.keys,mc.name)) this.keychange.broadcast(mc.value); else return;
	}
	,__listen: function() {
		this.model.watch($bind(this,this.onchange));
	}
	,model: null
	,__class__: tannus_mvc_Attribute
});
var tannus_mvc_Collection = function() {
	this.a = [];
};
$hxClasses["tannus.mvc.Collection"] = tannus_mvc_Collection;
tannus_mvc_Collection.__name__ = ["tannus","mvc","Collection"];
tannus_mvc_Collection.prototype = {
	addAttribute: function(attr) {
		this.validate(attr);
		this.a.push(attr);
	}
	,removeAttribute: function(attr) {
		return HxOverrides.remove(this.a,attr);
	}
	,getAttribute: function(n) {
		var _g = 0;
		var _g1 = this.a;
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			if(x.name == n) return x;
		}
		return null;
	}
	,validate: function(attr) {
		[attr.name].concat(attr.keys);
		var _g = 0;
		var _g1 = this.a;
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			if(x != attr && x.name == attr.name) throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("AttributeError: There is already an Attribute named \"" + x.name + "\" attached to [this] Collection")); else {
				var skol = tannus_ds_ArrayTools.union(x.keys,attr.keys);
				if(skol.length > 0) {
					var tmp;
					var message = "AttributeError: Attribute \"" + attr.name + "\" has the following keys in common with another Attribute: (" + skol.join(", ") + ")";
					tmp = new tannus_utils_JavaScriptError(message);
					throw new js__$Boot_HaxeError(tmp);
				} else {
					var gol = tannus_ds_ArrayTools.union([x.name].concat(x.keys),[attr.name].concat(attr.keys));
					if(!Lambda.empty(gol)) throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("AttributeError: Attribute \"" + attr.name + "\" utilizes keys already in use by another Attribute"));
				}
			}
		}
	}
	,a: null
	,__class__: tannus_mvc_Collection
};
var tannus_mvc_ListAttribute = function(model,name) {
	tannus_mvc_Attribute.call(this,model,name);
	this.set(0);
};
$hxClasses["tannus.mvc.ListAttribute"] = tannus_mvc_ListAttribute;
tannus_mvc_ListAttribute.__name__ = ["tannus","mvc","ListAttribute"];
tannus_mvc_ListAttribute.__super__ = tannus_mvc_Attribute;
tannus_mvc_ListAttribute.prototype = $extend(tannus_mvc_Attribute.prototype,{
	getItem: function(index) {
		if(index >= this.get() || index < 0) throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("IndexOutOfBoundsError: List index " + index + " does not exist"));
		return this.kg("" + this.name + "[" + index + "]");
	}
	,setItem: function(index,value) {
		if(index >= this.get() || index < 0) throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("IndexOutOfBoundsError: List index " + index + " does not exist"));
		return this.ks("" + this.name + "[" + index + "]",value);
	}
	,removeItem: function(index) {
		var before = this.slice(0,index);
		var after = this.slice(index + 1);
		this.truncate(this.get() - 1);
		var tmp;
		var index1 = this.get();
		tmp = "" + this.name + "[" + index1 + "]";
		this.deallockey(tmp);
		var all = before.concat(after);
		var _g1 = 0;
		var _g = all.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.setItem(i,all[i]);
		}
	}
	,remove: function(x) {
		var _g1 = 0;
		var _g = this.get();
		while(_g1 < _g) {
			var index = _g1++;
			var item = this.getItem(index);
			if(item == x) {
				this.removeItem(index);
				return true;
			}
		}
		return false;
	}
	,slice: function(index,end) {
		if(end == null) end = this.get();
		var tmp;
		var _g = [];
		var _g1 = index;
		while(_g1 < end) {
			var i = _g1++;
			_g.push(this.getItem(i));
		}
		tmp = _g;
		return tmp;
	}
	,concat: function(arr) {
		return this.list().concat(arr);
	}
	,append: function(tail) {
		var _g = 0;
		while(_g < tail.length) {
			var x = tail[_g];
			++_g;
			this.push(x);
		}
	}
	,push: function(item) {
		var index = this.get();
		this.truncate(index + 1);
		this.setItem(index,item);
		return this.get();
	}
	,unshift: function(item) {
		var l = this.list();
		this.setItem(0,item);
		this.truncate(this.get() + 1);
		var _g1 = 1;
		var _g = this.get();
		while(_g1 < _g) {
			var i = _g1++;
			this.setItem(i,l[i - 1]);
		}
	}
	,shift: function() {
		if(this.get() > 0) {
			var first = this.getItem(0);
			var all = this.slice(1);
			this.truncate(this.get() - 1);
			var _g1 = 0;
			var _g = all.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.setItem(i,all[i]);
			}
			return first;
		} else return null;
	}
	,pop: function() {
		if(this.get() > 0) {
			var last = this.getItem(this.get() - 1);
			this.truncate(this.get() - 1);
			return last;
		} else return null;
	}
	,indexOf: function(item) {
		var _g1 = 0;
		var _g = this.get();
		while(_g1 < _g) {
			var index = _g1++;
			if(this.getItem(index) == item) return index;
		}
		return -1;
	}
	,lastIndexOf: function(item) {
		var i = this.get();
		while(i > 0) if(this.getItem(--i) == item) return i;
		console.log(i);
		return -1;
	}
	,insert: function(index,item) {
		if(index < 0) {
			index = this.get() + index;
			if(index < 0) index = 0;
		}
		if(index >= this.get()) {
			this.push(item);
			return;
		} else if(index == 0) {
			this.unshift(item);
			return;
		}
		var l = this.get();
		this.truncate(l + 1);
		var ii = l - 1;
		while(ii >= index) this.setItem(ii + 1,this.getItem(ii--));
		this.setItem(index,item);
	}
	,reverse: function() {
		var _g1 = 0;
		var _g = Math.floor(this.get() / 2);
		while(_g1 < _g) {
			var index = _g1++;
			var temp = this.getItem(index);
			this.setItem(index,this.getItem(this.get() - index - 1));
			this.setItem(this.get() - index - 1,temp);
		}
	}
	,list: function() {
		return Lambda.array(this);
	}
	,iterator: function() {
		return new tannus_mvc_ListAttributeIter(this);
	}
	,truncate: function(mlen) {
		if(this.get() > mlen) {
			var _g1 = mlen + 1;
			var _g = this.get();
			while(_g1 < _g) {
				var index = _g1++;
				this.deallockey("" + this.name + "[" + index + "]");
			}
		} else if(mlen > this.get()) {
			var _g2 = this.get();
			while(_g2 < mlen) {
				var index1 = _g2++;
				this.allockey("" + this.name + "[" + index1 + "]");
			}
		}
		this.set(mlen);
	}
	,ikey: function(index) {
		return "" + this.name + "[" + index + "]";
	}
	,vi: function(index) {
		if(index >= this.get() || index < 0) throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("IndexOutOfBoundsError: List index " + index + " does not exist"));
	}
	,get_length: function() {
		return this.get();
	}
	,__class__: tannus_mvc_ListAttribute
	,__properties__: $extend(tannus_mvc_Attribute.prototype.__properties__,{get_length:"get_length"})
});
var tannus_mvc_ListAttributeIter = function(l) {
	this.a = l;
	this.i = 0;
};
$hxClasses["tannus.mvc.ListAttributeIter"] = tannus_mvc_ListAttributeIter;
tannus_mvc_ListAttributeIter.__name__ = ["tannus","mvc","ListAttributeIter"];
tannus_mvc_ListAttributeIter.prototype = {
	hasNext: function() {
		return this.i < this.a.get();
	}
	,next: function() {
		return this.a.getItem(this.i++);
	}
	,a: null
	,i: null
	,__class__: tannus_mvc_ListAttributeIter
};
var tannus_mvc_ModelCollection = function(m) {
	tannus_mvc_Collection.call(this);
	this.model = m;
};
$hxClasses["tannus.mvc.ModelCollection"] = tannus_mvc_ModelCollection;
tannus_mvc_ModelCollection.__name__ = ["tannus","mvc","ModelCollection"];
tannus_mvc_ModelCollection.__super__ = tannus_mvc_Collection;
tannus_mvc_ModelCollection.prototype = $extend(tannus_mvc_Collection.prototype,{
	allockey: function(allocer,key) {
		var _g = 0;
		var _g1 = this.a;
		while(_g < _g1.length) {
			var atr = _g1[_g];
			++_g;
			if(atr != allocer && (atr.name == key || Lambda.has(atr.keys,key))) throw new js__$Boot_HaxeError(new tannus_utils_JavaScriptError("AttributeError: Attempted to allocate key \"" + key + "\" (already allocated by the \"" + atr.name + "\" Attribute)"));
		}
	}
	,model: null
	,__class__: tannus_mvc_ModelCollection
});
var tannus_mvc_Requirements = function() {
	this.tasks = new haxe_ds_StringMap();
	this.complete = new tannus_io_VoidSignal();
};
$hxClasses["tannus.mvc.Requirements"] = tannus_mvc_Requirements;
tannus_mvc_Requirements.__name__ = ["tannus","mvc","Requirements"];
tannus_mvc_Requirements.prototype = {
	add: function(name,task) {
		var _this = this.tasks;
		if(__map_reserved[name] != null) _this.setReserved(name,task); else _this.h[name] = task;
	}
	,onComplete: function(f) {
		this.complete.on(f);
	}
	,meet: function(cb) {
		if(cb != null) this.complete.on(cb);
		var stack = new tannus_ds_AsyncStack();
		var $it0 = this.tasks.keys();
		while( $it0.hasNext() ) {
			var name = $it0.next();
			var tmp;
			var _this = this.tasks;
			if(__map_reserved[name] != null) tmp = _this.getReserved(name); else tmp = _this.h[name];
			stack.under(tmp);
		}
		stack.run(($_=this.complete,$bind($_,$_.fire)));
	}
	,tasks: null
	,complete: null
	,__class__: tannus_mvc_Requirements
};
var tannus_nore_Check = $hxClasses["tannus.nore.Check"] = { __ename__ : ["tannus","nore","Check"], __constructs__ : ["TypeCheck","LooseTypeCheck","ShortTypeCheck","NestedCheck","FieldExistsCheck","FieldValueCheck","FieldValueBlockCheck","FieldValueTypeCheck","HelperCheck","GroupCheck","EitherCheck","InvertedCheck","TernaryCheck"] };
tannus_nore_Check.TypeCheck = function(t) { var $x = ["TypeCheck",0,t]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.LooseTypeCheck = function(t) { var $x = ["LooseTypeCheck",1,t]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.ShortTypeCheck = function(t) { var $x = ["ShortTypeCheck",2,t]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.NestedCheck = function(op,value) { var $x = ["NestedCheck",3,op,value]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.FieldExistsCheck = function(name) { var $x = ["FieldExistsCheck",4,name]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.FieldValueCheck = function(op,name,value) { var $x = ["FieldValueCheck",5,op,name,value]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.FieldValueBlockCheck = function(name,checks) { var $x = ["FieldValueBlockCheck",6,name,checks]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.FieldValueTypeCheck = function(name,type,loose) { var $x = ["FieldValueTypeCheck",7,name,type,loose]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.HelperCheck = function(name,args) { var $x = ["HelperCheck",8,name,args]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.GroupCheck = function(checks) { var $x = ["GroupCheck",9,checks]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.EitherCheck = function(left,right) { var $x = ["EitherCheck",10,left,right]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.InvertedCheck = function(check) { var $x = ["InvertedCheck",11,check]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
tannus_nore_Check.TernaryCheck = function(condition,itrue,ifalse) { var $x = ["TernaryCheck",12,condition,itrue,ifalse]; $x.__enum__ = tannus_nore_Check; $x.toString = $estr; return $x; };
var tannus_nore_Compiler = function() {
	this.reset();
};
$hxClasses["tannus.nore.Compiler"] = tannus_nore_Compiler;
tannus_nore_Compiler.__name__ = ["tannus","nore","Compiler"];
tannus_nore_Compiler.prototype = {
	compileString: function(s) {
		var l = new tannus_nore_Lexer();
		var $it0 = this.operators.keys();
		while( $it0.hasNext() ) {
			var s1 = $it0.next();
			l.operators.push(s1);
		}
		var p = new tannus_nore_Parser();
		var toks = l.lex(s);
		var tree = p.parse(toks);
		return this.compile(tree);
	}
	,compile: function(checkList) {
		this.checks = new tannus_ds_Stack(checkList);
		while(!this.checks.get_empty()) {
			var cf = this.compileCheck(this.checks.pop());
			this.checkFuncs.push(cf);
		}
		var tmp;
		var f = $bind(this,this.testAll);
		tmp = function(o) {
			return f(o);
		};
		return tmp;
	}
	,compileCheck: function(check) {
		var _g = this;
		switch(check[1]) {
		case 9:
			var list = check[2];
			var state = this.save();
			var child = new tannus_nore_Compiler();
			child.restore(state);
			return child.compile(list);
		case 0:
			var type = check[2];
			var tmp;
			var f = ($_=this.tools,$bind($_,$_.checkType));
			var a1 = type;
			tmp = function(o) {
				return f(o,a1,false);
			};
			return tmp;
		case 1:
			var type1 = check[2];
			var tmp1;
			var f1 = ($_=this.tools,$bind($_,$_.checkType));
			var a11 = type1;
			tmp1 = function(o1) {
				return f1(o1,a11,true);
			};
			return tmp1;
		case 2:
			var type2 = check[2];
			var tmp2;
			var f2 = ($_=this.tools,$bind($_,$_.checkShortType));
			var a12 = type2;
			tmp2 = function(o2) {
				return f2(o2,a12);
			};
			return tmp2;
		case 3:
			var value = check[3];
			var sop = check[2];
			var tmp3;
			var _this = this.operators;
			if(__map_reserved[sop] != null) tmp3 = _this.existsReserved(sop); else tmp3 = _this.h.hasOwnProperty(sop);
			if(tmp3) {
				var tmp4;
				var _this1 = this.operators;
				if(__map_reserved[sop] != null) tmp4 = _this1.getReserved(sop); else tmp4 = _this1.h[sop];
				var op = tmp4;
				return function(o3) {
					var tmp5;
					var this1 = tannus_nore_ValueTools.haxeValue(value,_g.tools,o3);
					tmp5 = this1();
					return op(o3,tmp5);
				};
			} else throw new js__$Boot_HaxeError("CompilationError: Invalid operator \"" + sop + "\"!");
			break;
		case 4:
			var name = check[2];
			var tmp6;
			var f3 = ($_=this.tools,$bind($_,$_.has));
			var a13 = name;
			tmp6 = function(o4) {
				return f3(o4,a13);
			};
			return tmp6;
		case 5:
			var value1 = check[4];
			var name1 = check[3];
			var sop1 = check[2];
			var tmp7;
			var _this2 = this.operators;
			if(__map_reserved[sop1] != null) tmp7 = _this2.existsReserved(sop1); else tmp7 = _this2.h.hasOwnProperty(sop1);
			if(tmp7) {
				var tmp8;
				var _this3 = this.operators;
				if(__map_reserved[sop1] != null) tmp8 = _this3.getReserved(sop1); else tmp8 = _this3.h[sop1];
				var op1 = tmp8;
				return function(o5) {
					var tmp9;
					var this2 = tannus_nore_ValueTools.haxeValue(value1,_g.tools,o5);
					tmp9 = this2();
					return op1(_g.tools.get(o5,name1),tmp9);
				};
			} else throw new js__$Boot_HaxeError("CompilationError: Invalid operator \"" + sop1 + "\"!");
			break;
		case 7:
			var loose = check[4];
			var type3 = check[3];
			var name2 = check[2];
			return function(o6) {
				return _g.tools.checkType(_g.tools.get(o6,name2),type3,loose);
			};
		case 6:
			var block = check[3];
			var name3 = check[2];
			var tmp10;
			var f4 = ($_=this.tools,$bind($_,$_.get));
			var a14 = name3;
			tmp10 = function(o7) {
				return f4(o7,a14);
			};
			var getit = tmp10;
			var test = this.sub(block);
			return function(o8) {
				var ctx = getit(o8);
				return test(ctx);
			};
		case 8:
			var vargs = check[3];
			var name4 = check[2];
			var tmp11;
			var f5 = ($_=this.tools,$bind($_,$_.helper_check));
			var a15 = name4;
			var a2 = vargs;
			tmp11 = function(o9) {
				return f5(o9,a15,a2);
			};
			return tmp11;
		case 10:
			var cright = check[3];
			var cleft = check[2];
			var left = this.compileCheck(cleft);
			var right = this.compileCheck(cright);
			return function(o10) {
				return left(o10) || right(o10);
			};
		case 11:
			var cc = check[2];
			var c = this.compileCheck(cc);
			return function(o11) {
				return !c(o11);
			};
		case 12:
			var cfalse = check[4];
			var ctrue = check[3];
			var ccondition = check[2];
			var cond = this.compileCheck(ccondition);
			var itrue = this.compileCheck(ctrue);
			var ifalse = cfalse != null?this.compileCheck(cfalse):null;
			return function(o12) {
				if(cond(o12)) return itrue(o12); else if(ifalse != null) return ifalse(o12); else return true;
			};
		}
	}
	,reset: function() {
		this.checks = new tannus_ds_Stack();
		this.checkFuncs = [];
		try {
			var _this = this.operators;
			if(__map_reserved[""] != null) _this.existsReserved(""); else _this.h.hasOwnProperty("");
		} catch( error ) {
			if (error instanceof js__$Boot_HaxeError) error = error.val;
			this.operators = new haxe_ds_StringMap();
		}
		try {
			var _this1 = this.helpers;
			if(__map_reserved[""] != null) _this1.existsReserved(""); else _this1.h.hasOwnProperty("");
		} catch( error1 ) {
			if (error1 instanceof js__$Boot_HaxeError) error1 = error1.val;
			this.helpers = new haxe_ds_StringMap();
		}
		this.tools = new tannus_nore_CompilerTools(this);
		this.initOperators();
		this.initHelpers();
	}
	,initOperators: function() {
		var _g = this;
		var eq2 = function(x,y) {
			if(tannus_internal_TypeTools.typename(x) == tannus_internal_TypeTools.typename(y)) {
				if(x == y) return true; else {
					var eq = _g.tools.get(x,"equals");
					if(Reflect.isFunction(eq)) try {
						var tmp;
						var func = eq;
						tmp = func.apply(x,[y]);
						var eqv = tmp;
						if(eqv != null) return eqv == true;
					} catch( err ) {
						if (err instanceof js__$Boot_HaxeError) err = err.val;
						null;
					}
					var eq1 = _g.tools.get(y,"equals");
					if(Reflect.isFunction(eq1)) try {
						var tmp1;
						var func1 = eq1;
						tmp1 = func1.apply(y,[x]);
						var eqv1 = tmp1;
						if(eqv1 != null) return eqv1 == true;
					} catch( err1 ) {
						if (err1 instanceof js__$Boot_HaxeError) err1 = err1.val;
						null;
					}
					return false;
				}
			} else return false;
		};
		var _this = this.operators;
		if(__map_reserved["=="] != null) _this.setReserved("==",eq2); else _this.h["=="] = eq2;
		var _this1 = this.operators;
		if(__map_reserved["!="] != null) _this1.setReserved("!=",function(x5,y5) {
			return !eq2(x5,y5);
		}); else _this1.h["!="] = function(x5,y5) {
			return !eq2(x5,y5);
		};
		var greaterThan = function(x1,y1) {
			if(tannus_internal_TypeTools.typename(x1) == "Number" && tannus_internal_TypeTools.typename(y1) == "Number") return x1 > y1; else return false;
		};
		var lessThan = function(x2,y2) {
			if(tannus_internal_TypeTools.typename(x2) == "Number" && tannus_internal_TypeTools.typename(y2) == "Number") return x2 < y2; else return false;
		};
		var _this2 = this.operators;
		if(__map_reserved[">"] != null) _this2.setReserved(">",greaterThan); else _this2.h[">"] = greaterThan;
		var _this3 = this.operators;
		if(__map_reserved["<"] != null) _this3.setReserved("<",lessThan); else _this3.h["<"] = lessThan;
		var _this4 = this.operators;
		if(__map_reserved[">="] != null) _this4.setReserved(">=",function(x6,y6) {
			return greaterThan(x6,y6) || eq2(x6,y6);
		}); else _this4.h[">="] = function(x6,y6) {
			return greaterThan(x6,y6) || eq2(x6,y6);
		};
		var _this5 = this.operators;
		if(__map_reserved["<="] != null) _this5.setReserved("<=",function(x7,y7) {
			return lessThan(x7,y7) || eq2(x7,y7);
		}); else _this5.h["<="] = function(x7,y7) {
			return lessThan(x7,y7) || eq2(x7,y7);
		};
		var has = function(x3,y3) {
			if(typeof(x3) == "string") return tannus_ds_StringUtils.has(js_Boot.__cast(x3 , String),Std.string(y3)); else if((x3 instanceof Array) && x3.__enum__ == null) return Lambda.has(js_Boot.__cast(x3 , Array),y3); else return false;
		};
		var _this6 = this.operators;
		if(__map_reserved.has != null) _this6.setReserved("has",has); else _this6.h["has"] = has;
		var _this7 = this.operators;
		if(__map_reserved.contains != null) _this7.setReserved("contains",has); else _this7.h["contains"] = has;
		var regtest = function(x4,y4) {
			{
				var _g1 = [x4,y4].map(function(o) {
					return tannus_internal_TypeTools.typename(o);
				});
				switch(_g1.length) {
				case 2:
					switch(_g1[1]) {
					case "String":
						var reg = new EReg(Std.string(y4),"");
						return reg.match(Std.string(x4));
					default:
						return false;
					}
					break;
				default:
					return false;
				}
			}
		};
		var _this8 = this.operators;
		if(__map_reserved["~="] != null) _this8.setReserved("~=",regtest); else _this8.h["~="] = regtest;
	}
	,initHelpers: function() {
	}
	,operator: function(name,f) {
		var _this = this.operators;
		if(__map_reserved[name] != null) _this.setReserved(name,f); else _this.h[name] = f;
	}
	,helper: function(name,f) {
		var _this = this.helpers;
		if(__map_reserved[name] != null) _this.setReserved(name,f); else _this.h[name] = f;
	}
	,save: function() {
		return { 'checks' : this.checks.copy(), 'checkFuncs' : this.checkFuncs.slice(), 'operators' : this.copyOperators(), 'helpers' : this.copyHelpers(), 'tools' : this.tools};
	}
	,restore: function(s) {
		this.checks = s.checks;
		this.checkFuncs = s.checkFuncs;
		this.operators = s.operators;
		this.helpers = s.helpers;
		this.tools = s.tools;
	}
	,sub: function(checkList) {
		var subc = new tannus_nore_Compiler();
		subc.tools = this.tools;
		subc.operators = this.copyOperators();
		subc.helpers = this.copyHelpers();
		var f = subc.compile(checkList);
		return f;
	}
	,copyOperators: function() {
		var copy = new haxe_ds_StringMap();
		var $it0 = this.operators.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			var tmp;
			var _this = this.operators;
			if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
			var value = tmp;
			if(__map_reserved[key] != null) copy.setReserved(key,value); else copy.h[key] = value;
		}
		return copy;
	}
	,copyHelpers: function() {
		var copy = new haxe_ds_StringMap();
		var $it0 = this.helpers.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			var tmp;
			var _this = this.helpers;
			if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
			var value = tmp;
			if(__map_reserved[key] != null) copy.setReserved(key,value); else copy.h[key] = value;
		}
		return copy;
	}
	,testAll: function(o) {
		var _g = 0;
		var _g1 = this.checkFuncs;
		while(_g < _g1.length) {
			var check = _g1[_g];
			++_g;
			if(!check(o)) return false;
		}
		return true;
	}
	,get_end: function() {
		return this.checks.get_empty();
	}
	,checks: null
	,checkFuncs: null
	,operators: null
	,helpers: null
	,tools: null
	,__class__: tannus_nore_Compiler
	,__properties__: {get_end:"get_end"}
};
var tannus_nore_CompilerTools = function(owner) {
	this.c = owner;
};
$hxClasses["tannus.nore.CompilerTools"] = tannus_nore_CompilerTools;
tannus_nore_CompilerTools.__name__ = ["tannus","nore","CompilerTools"];
tannus_nore_CompilerTools.prototype = {
	has: function(o,name) {
		return Object.prototype.hasOwnProperty.call(o,name);
	}
	,get: function(o,name) {
		var tmp;
		var tmp1;
		if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + name])) tmp = o[tmp1](); else tmp = o[name];
		return tmp;
	}
	,checkType: function(o,type,loose) {
		if(loose == null) loose = false;
		if(!loose) return tannus_internal_TypeTools.typename(o) == type; else {
			var tc = Type.resolveClass(type);
			return js_Boot.__instanceof(o,tc);
		}
	}
	,checkShortType: function(o,type) {
		var className = tannus_ds_ArrayTools.last(tannus_internal_TypeTools.typename(o).split("."));
		return className == type;
	}
	,helper_check: function(o,name,vargs) {
		var tmp;
		var _g = [];
		var _g1 = 0;
		while(_g1 < vargs.length) {
			var v = vargs[_g1];
			++_g1;
			var tmp2;
			var this1 = tannus_nore_ValueTools.haxeValue(v,this,o);
			tmp2 = this1();
			_g.push(tmp2);
		}
		tmp = _g;
		var args = tmp;
		var tmp1;
		var _this = this.c.helpers;
		if(__map_reserved[name] != null) tmp1 = _this.existsReserved(name); else tmp1 = _this.h.hasOwnProperty(name);
		if(tmp1) {
			var tmp3;
			var _this1 = this.c.helpers;
			if(__map_reserved[name] != null) tmp3 = _this1.getReserved(name); else tmp3 = _this1.h[name];
			var help = tmp3;
			return help(o,args);
		} else if(this.has(o,name)) {
			var v1 = this.get(o,name);
			if(typeof(v1) == "boolean") return v1; else if(Reflect.isFunction(v1)) {
				var tmp4;
				var func = this.get(o,name);
				tmp4 = func.apply(o,args);
				return tmp4 == true;
			} else return false;
		} else return false;
	}
	,c: null
	,__class__: tannus_nore_CompilerTools
};
var tannus_nore_Lexer = function() {
	this.tokens = [];
	this.canCall = false;
	this.inTernary = false;
	var tmp;
	var this1;
	this1 = tannus_io_impl_BrowserBinary.alloc(0);
	tmp = this1;
	this.bytes = new tannus_io_ByteStack(tmp);
	this.operators = [];
	this.operators.push("=>");
	this.operators.push("is");
	this.operators.push("has");
	this.operators.push("contains");
};
$hxClasses["tannus.nore.Lexer"] = tannus_nore_Lexer;
tannus_nore_Lexer.__name__ = ["tannus","nore","Lexer"];
tannus_nore_Lexer.lexString = function(s) {
	return new tannus_nore_Lexer().lex(s);
};
tannus_nore_Lexer.prototype = {
	operator: function(op) {
		this.operators.push(op);
	}
	,lex: function(s) {
		this.tokens = [];
		this.canCall = false;
		this.inTernary = false;
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		this.bytes = new tannus_io_ByteStack(tmp);
		this.bytes = new tannus_io_ByteStack(tannus_io_impl_BrowserBinary.ofString(s));
		while(!this.bytes.get_empty()) {
			var t = this.lexNext();
			if(t != null) this.tokens.push(t);
		}
		return this.tokens;
	}
	,lexNext: function() {
		var c = this.bytes.peek();
		if(Lambda.has([9,10,11,12,13,32],c)) {
			this.bytes.pop();
			if(!this.bytes.get_empty()) return this.lexNext(); else return null;
		} else if(c >= 65 && c <= 90 || c >= 97 && c <= 122 || c == 95) {
			var id = String.fromCharCode(c);
			this.bytes.pop();
			while(!this.bytes.get_empty() && this.isIdent(this.bytes.peek())) {
				var tmp;
				var this1 = this.bytes.pop();
				tmp = String.fromCharCode(this1);
				id += tmp;
			}
			if(Lambda.has(this.operators,id)) return tannus_nore_Token.TOperator(id);
			if(Lambda.has(["if"],id.toLowerCase())) return this.lexStructure(id.toLowerCase()); else return tannus_nore_Token.TConst(tannus_nore_Const.CIdent(id));
		} else if(c == 64) {
			this.bytes.pop();
			var id1 = "";
			while(!this.bytes.get_empty() && this.isIdent(this.bytes.peek())) {
				var tmp1;
				var this2 = this.bytes.pop();
				tmp1 = String.fromCharCode(this2);
				id1 += tmp1;
			}
			return tannus_nore_Token.TConst(tannus_nore_Const.CReference(id1));
		} else if(Lambda.has([34,39,96],c)) {
			var delimiter = this.bytes.pop();
			var tmp2;
			switch(delimiter) {
			case 39:
				tmp2 = 1;
				break;
			case 34:
				tmp2 = 2;
				break;
			case 96:
				tmp2 = 3;
				break;
			default:
				tmp2 = -1;
			}
			var level = tmp2;
			var tmp3;
			var this3 = this.bytes.readUntil(delimiter);
			tmp3 = this3.toString();
			var str = tmp3;
			this.bytes.pop();
			return tannus_nore_Token.TConst(tannus_nore_Const.CString(str,level));
		} else if(c >= 48 && c <= 57) {
			var tmp4;
			var this4 = this.bytes.pop();
			tmp4 = String.fromCharCode(this4);
			var snum = tmp4;
			while(true) {
				var tmp5;
				if(!this.bytes.get_empty()) {
					var tmp7;
					var this5 = this.bytes.peek();
					if(this5 >= 48) tmp7 = this5 <= 57; else tmp7 = false;
					if(!tmp7) {
						var this6 = this.bytes.peek();
						tmp5 = this6 == HxOverrides.cca(".",0);
					} else tmp5 = true;
				} else tmp5 = false;
				if(!tmp5) break;
				var tmp6;
				var this7 = this.bytes.pop();
				tmp6 = String.fromCharCode(this7);
				snum += tmp6;
			}
			return tannus_nore_Token.TConst(tannus_nore_Const.CNumber(parseFloat(snum)));
		} else if(c == 91) {
			var tmp8;
			var tmp9;
			var n = HxOverrides.cca("[",0);
			var this9;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			this9 = n;
			tmp9 = this9;
			var tmp10;
			var n1 = HxOverrides.cca("]",0);
			var this10;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n1)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n1 + ")!");
			this10 = n1;
			tmp10 = this10;
			var this8 = this.readGroup(tmp9,tmp10);
			tmp8 = this8.toString();
			var sgroup = tmp8;
			var group = this.sub(sgroup);
			return tannus_nore_Token.TBrackets(group);
		} else if(c == 123) {
			var tmp11;
			var tmp12;
			var n2 = HxOverrides.cca("{",0);
			var this12;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n2)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n2 + ")!");
			this12 = n2;
			tmp12 = this12;
			var tmp13;
			var n3 = HxOverrides.cca("}",0);
			var this13;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n3)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n3 + ")!");
			this13 = n3;
			tmp13 = this13;
			var this11 = this.readGroup(tmp12,tmp13);
			tmp11 = this11.toString();
			var sg = tmp11;
			var g = this.sub(sg);
			return tannus_nore_Token.TBoxBrackets(g);
		} else if(this.isOpChar(c)) {
			var state = this.save();
			var tmp14;
			var this14 = this.bytes.pop();
			tmp14 = String.fromCharCode(this14);
			var op = tmp14;
			while(!this.bytes.get_empty() && this.isOpChar(this.bytes.peek())) {
				var tmp15;
				var this15 = this.bytes.pop();
				tmp15 = String.fromCharCode(this15);
				op += tmp15;
			}
			if(Lambda.has(this.operators,op)) return tannus_nore_Token.TOperator(op); else switch(op) {
			case "!":
				return tannus_nore_Token.TNot;
			default:
				throw new js__$Boot_HaxeError("SyntaxError: Invalid operator \"" + op + "\"!");
				return null;
			}
		} else if(c == 40) {
			var tmp16;
			var n4 = HxOverrides.cca("(",0);
			var this16;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n4)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n4 + ")!");
			this16 = n4;
			tmp16 = this16;
			var tmp17;
			var n5 = HxOverrides.cca(")",0);
			var this17;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n5)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n5 + ")!");
			this17 = n5;
			tmp17 = this17;
			var s = this.readGroup(tmp16,tmp17);
			var toklist = s._length <= 0?[]:this.sub(s.toString());
			var treeStack = new tannus_ds_Stack(toklist.slice());
			var tree = [];
			var hasComma = false;
			while(!treeStack.get_empty()) {
				var t = treeStack.pop();
				var tmp18;
				switch(t[1]) {
				case 9:
					tmp18 = true;
					break;
				default:
					tmp18 = false;
				}
				if(!tmp18) tree.push(t); else hasComma = true;
			}
			if(hasComma) return tannus_nore_Token.TTuple(tree); else return tannus_nore_Token.TGroup(toklist);
		} else if(c == 44) {
			this.bytes.pop();
			return tannus_nore_Token.TComma;
		} else if(c == 124) {
			this.bytes.pop();
			return tannus_nore_Token.TOr;
		} else if(c == 58) {
			this.bytes.pop();
			this.canCall = true;
			var name = this.lexNext();
			if(name != null) switch(name[1]) {
			case 0:
				switch(name[2][1]) {
				case 0:
					var name1 = name[2][2];
					if(!this.bytes.get_empty()) {
						var state1 = this.save();
						var targs = this.lexNext();
						if(targs != null) switch(targs[1]) {
						case 5:
							var args = targs[2];
							console.log("helper");
							return tannus_nore_Token.THelper(name1,args);
						case 4:
							var __ex0 = targs[2];
							{
								var _g = __ex0[0];
								var arg = _g;
								console.log("helper");
								return tannus_nore_Token.THelper(name1,[arg]);
							}
							break;
						default:
							this.restore(state1);
							console.log("helper");
							return tannus_nore_Token.THelper(name1,[]);
						} else {
							this.restore(state1);
							console.log("helper");
							return tannus_nore_Token.THelper(name1,[]);
						}
					} else {
						console.log("helper");
						return tannus_nore_Token.THelper(name1,[]);
					}
					break;
				default:
					throw new js__$Boot_HaxeError("SyntaxError: Expected identifier, got " + Std.string(name));
				}
				break;
			default:
				throw new js__$Boot_HaxeError("SyntaxError: Expected identifier, got " + Std.string(name));
			} else throw new js__$Boot_HaxeError("SyntaxError: Expected identifier, got " + Std.string(name));
		} else if(c == 46) {
			this.bytes.pop();
			var tmp19;
			var this18 = this.bytes.peek();
			tmp19 = this18 == 46;
			if(tmp19) {
				this.bytes.pop();
				return tannus_nore_Token.TDoubleDot;
			} else {
				var tmp20;
				var this19 = this.bytes.peek();
				tmp20 = String.fromCharCode(this19);
				throw new js__$Boot_HaxeError("SyntaxError: Expected \".\", got " + tmp20);
			}
		} else if(c == 126) {
			this.bytes.pop();
			return tannus_nore_Token.TApprox;
		} else throw new js__$Boot_HaxeError("SyntaxError: Unexpected \"" + String.fromCharCode(c) + "\"!");
	}
	,lexStructure: function(kw) {
		switch(kw) {
		case "if":
			var cond = this.lexNext();
			console.log(cond);
			var then = this.lexNext();
			console.log(then);
			switch(then[1]) {
			case 0:
				switch(then[2][1]) {
				case 0:
					switch(then[2][2]) {
					case "then":
						var itrue = this.lexNext();
						console.log(itrue);
						var ifalse = null;
						if(!this.bytes.get_empty()) {
							var state = this.save();
							var otherwise = this.lexNext();
							switch(otherwise[1]) {
							case 0:
								switch(otherwise[2][1]) {
								case 0:
									switch(otherwise[2][2]) {
									case "else":
										ifalse = this.lexNext();
										console.log(ifalse);
										break;
									default:
										this.restore(state);
									}
									break;
								default:
									this.restore(state);
								}
								break;
							default:
								this.restore(state);
							}
						}
						if(cond != null) {
						} else throw new js__$Boot_HaxeError("SyntaxError: Unexpected if!");
						if(itrue != null) {
						} else throw new js__$Boot_HaxeError("SyntaxError: Unexpected end of input!");
						return tannus_nore_Token.TIf(cond,itrue,ifalse);
					default:
						throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(then) + "!");
					}
					break;
				default:
					throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(then) + "!");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(then) + "!");
			}
			break;
		default:
			throw new js__$Boot_HaxeError("FuckUpError: \"" + kw + "\" is not a keyword");
		}
	}
	,readGroup: function(start,end) {
		var c = this.bytes.peek();
		if(c == start) {
			var level = 1;
			var tmp1;
			var this1;
			this1 = tannus_io_impl_BrowserBinary.alloc(0);
			tmp1 = this1;
			var data = tmp1;
			this.bytes.pop();
			while(level > 0) {
				c = this.bytes.peek();
				if(c == start) level++; else if(c == end) level--;
				if(level > 0) data.push(c);
				this.bytes.pop();
			}
			return data;
		}
		var tmp;
		var this2;
		this2 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this2;
		return tmp;
	}
	,sub: function(s) {
		var state = this.save();
		var _it = this.inTernary;
		var result = this.lex(s);
		this.restore(state);
		this.inTernary = _it;
		return result;
	}
	,reset: function() {
		this.tokens = [];
		this.canCall = false;
		this.inTernary = false;
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		this.bytes = new tannus_io_ByteStack(tmp);
	}
	,save: function() {
		return { 'tokens' : this.tokens.slice(), 'bytes' : this.bytes.copy(), 'canCall' : this.canCall};
	}
	,restore: function(s) {
		this.bytes = s.bytes;
		this.tokens = s.tokens;
		this.canCall = s.canCall;
	}
	,next: function() {
		return this.bytes.peek();
	}
	,advance: function() {
		return this.bytes.pop();
	}
	,last: function() {
		return this.tokens.pop();
	}
	,isIdent: function(c) {
		var tmp;
		if(!(c >= 48 && c <= 57)) {
			var tmp1;
			if(c >= 65) tmp1 = c <= 90; else tmp1 = false;
			if(!tmp1) {
				if(c >= 97) tmp = c <= 122; else tmp = false;
			} else tmp = true;
		} else tmp = true;
		return tmp || c == 46 || c == 95;
	}
	,isOpChar: function(c) {
		return Lambda.has(["=","!","<",">","$","^"],String.fromCharCode(c));
	}
	,isOperator: function(op) {
		return Lambda.has(this.operators,op);
	}
	,isKeyword: function(id) {
		return Lambda.has(["if"],id.toLowerCase());
	}
	,get_end: function() {
		return this.bytes.get_empty();
	}
	,bytes: null
	,tokens: null
	,operators: null
	,canCall: null
	,inTernary: null
	,__class__: tannus_nore_Lexer
	,__properties__: {get_end:"get_end"}
};
var tannus_nore_ORegEx = function() { };
$hxClasses["tannus.nore.ORegEx"] = tannus_nore_ORegEx;
tannus_nore_ORegEx.__name__ = ["tannus","nore","ORegEx"];
tannus_nore_ORegEx.compile = function(sel,pred) {
	var comp = new tannus_nore_Compiler();
	if(pred != null) pred(comp);
	return comp.compileString(sel);
};
var tannus_nore_Parser = function() {
	this.reset();
};
$hxClasses["tannus.nore.Parser"] = tannus_nore_Parser;
tannus_nore_Parser.__name__ = ["tannus","nore","Parser"];
tannus_nore_Parser.parseTokens = function(tree) {
	return new tannus_nore_Parser().parse(tree);
};
tannus_nore_Parser.parseString = function(s) {
	var tmp;
	var tree = new tannus_nore_Lexer().lex(s);
	tmp = new tannus_nore_Parser().parse(tree);
	return tmp;
};
tannus_nore_Parser.prototype = {
	parse: function(tokenList) {
		this.reset();
		this.tokens = new tannus_ds_Stack(tokenList);
		while(!this.tokens.get_empty()) this.tree.push(this.nextCheck());
		return this.tree;
	}
	,nextCheck: function() {
		var t = this.tokens.pop();
		switch(t[1]) {
		case 0:
			switch(t[2][1]) {
			case 0:
				return tannus_nore_Check.TypeCheck(t[2][2]);
			default:
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
			}
			break;
		case 12:
			t = this.tokens.pop();
			switch(t[1]) {
			case 0:
				switch(t[2][1]) {
				case 0:
					return tannus_nore_Check.LooseTypeCheck(t[2][2]);
				default:
					throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
			}
			break;
		case 13:
			t = this.tokens.pop();
			switch(t[1]) {
			case 0:
				switch(t[2][1]) {
				case 0:
					return tannus_nore_Check.ShortTypeCheck(t[2][2]);
				default:
					throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
			}
			break;
		case 2:
			var group = t[2];
			switch(group.length) {
			case 1:
				switch(group[0][1]) {
				case 0:
					switch(group[0][2][1]) {
					case 0:
						return tannus_nore_Check.FieldExistsCheck(group[0][2][2]);
					default:
						throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
					}
					break;
				default:
					throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
				}
				break;
			case 3:
				switch(group[0][1]) {
				case 0:
					switch(group[0][2][1]) {
					case 0:
						switch(group[1][1]) {
						case 1:
							var op = group[1][2];
							var op1 = group[1][2];
							switch(group[1][2]) {
							case "=>":
								var valueToken = group[2];
								var valueToken1 = group[2];
								switch(group[2][1]) {
								case 3:
									{
										var _g = this.sub(group[2][2]);
										return tannus_nore_Check.FieldValueBlockCheck(group[0][2][2],_g);
									}
									break;
								default:
									switch(group[0][2][2]) {
									case "this":
										return tannus_nore_Check.NestedCheck(op,tannus_nore_ValueTools.toValue(valueToken));
									default:
										return tannus_nore_Check.FieldValueCheck(op1,group[0][2][2],tannus_nore_ValueTools.toValue(valueToken1));
									}
								}
								break;
							case "is":
								var valueToken2 = group[2];
								var valueToken3 = group[2];
								switch(group[2][1]) {
								case 0:
									switch(group[2][2][1]) {
									case 0:
										return tannus_nore_Check.FieldValueTypeCheck(group[0][2][2],group[2][2][2],false);
									default:
										switch(group[0][2][2]) {
										case "this":
											return tannus_nore_Check.NestedCheck(op,tannus_nore_ValueTools.toValue(valueToken2));
										default:
											return tannus_nore_Check.FieldValueCheck(op1,group[0][2][2],tannus_nore_ValueTools.toValue(valueToken3));
										}
									}
									break;
								default:
									switch(group[0][2][2]) {
									case "this":
										return tannus_nore_Check.NestedCheck(op,tannus_nore_ValueTools.toValue(valueToken2));
									default:
										return tannus_nore_Check.FieldValueCheck(op1,group[0][2][2],tannus_nore_ValueTools.toValue(valueToken3));
									}
								}
								break;
							default:
								switch(group[0][2][2]) {
								case "this":
									var valueToken4 = group[2];
									return tannus_nore_Check.NestedCheck(op,tannus_nore_ValueTools.toValue(valueToken4));
								default:
									var valueToken5 = group[2];
									return tannus_nore_Check.FieldValueCheck(op1,group[0][2][2],tannus_nore_ValueTools.toValue(valueToken5));
								}
							}
							break;
						default:
							throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
						}
						break;
					default:
						throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
					}
					break;
				default:
					throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
				}
				break;
			case 4:
				switch(group[0][1]) {
				case 0:
					switch(group[0][2][1]) {
					case 0:
						switch(group[1][1]) {
						case 1:
							switch(group[1][2]) {
							case "is":
								switch(group[2][1]) {
								case 12:
									switch(group[3][1]) {
									case 0:
										switch(group[3][2][1]) {
										case 0:
											return tannus_nore_Check.FieldValueTypeCheck(group[0][2][2],group[3][2][2],true);
										default:
											throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
										}
										break;
									default:
										throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
									}
									break;
								default:
									throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
								}
								break;
							default:
								throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
							}
							break;
						default:
							throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
						}
						break;
					default:
						throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
					}
					break;
				default:
					throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("SyntaxError: " + Std.string(group) + " is not a valid field-check!");
			}
			break;
		case 4:
			var subChecks = this.sub(t[2]);
			return tannus_nore_Check.GroupCheck(subChecks);
		case 3:
			var subChecks1 = this.sub(t[2]);
			return tannus_nore_Check.GroupCheck(subChecks1);
		case 7:
			var argTokens = t[3];
			var tmp;
			var _g1 = [];
			var _g11 = 0;
			while(_g11 < argTokens.length) {
				var t1 = argTokens[_g11];
				++_g11;
				_g1.push(tannus_nore_ValueTools.toValue(t1));
			}
			tmp = _g1;
			var args = tmp;
			return tannus_nore_Check.HelperCheck(t[2],args);
		case 10:
			var left = this.tree.pop();
			var right = this.nextCheck();
			if(left == null) throw new js__$Boot_HaxeError("SyntaxError: Unexpected \"|\"!"); else switch(left[1]) {
			default:
				if(right == null) throw new js__$Boot_HaxeError("SyntaxError: Unexpected end of input!"); else switch(right[1]) {
				default:
					return tannus_nore_Check.EitherCheck(left,right);
				}
			}
			break;
		case 11:
			var check = this.nextCheck();
			if(check != null) return tannus_nore_Check.InvertedCheck(check); else throw new js__$Boot_HaxeError("SyntaxError: Unexpected end of input!");
			break;
		case 8:
			var telse = t[4];
			var toks = [t[2],t[3]];
			if(telse != null) toks.push(telse);
			var chl = this.sub(toks);
			return Type.createEnum(tannus_nore_Check,"TernaryCheck",chl);
		default:
			throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t) + "!");
		}
	}
	,reset: function() {
		this.tokens = new tannus_ds_Stack();
		this.tree = [];
	}
	,token: function() {
		return this.tokens.pop();
	}
	,last: function() {
		return this.tree.pop();
	}
	,save: function() {
		return { 'tokens' : this.tokens.copy(), 'tree' : this.tree.slice()};
	}
	,restore: function(s) {
		this.tokens = s.tokens;
		this.tree = s.tree;
	}
	,sub: function(toks) {
		var child = new tannus_nore_Parser();
		return child.parse(toks);
	}
	,get_end: function() {
		return this.tokens.get_empty();
	}
	,tokens: null
	,tree: null
	,__class__: tannus_nore_Parser
	,__properties__: {get_end:"get_end"}
};
var tannus_nore__$Selector_Selector_$Impl_$ = {};
$hxClasses["tannus.nore._Selector.Selector_Impl_"] = tannus_nore__$Selector_Selector_$Impl_$;
tannus_nore__$Selector_Selector_$Impl_$.__name__ = ["tannus","nore","_Selector","Selector_Impl_"];
tannus_nore__$Selector_Selector_$Impl_$._new = function(s) {
	return new tannus_nore_CSelector(s);
};
tannus_nore__$Selector_Selector_$Impl_$.invert = function(this1) {
	return this1.invert();
};
tannus_nore__$Selector_Selector_$Impl_$.sum = function(this1,other) {
	return this1.sum(other);
};
tannus_nore__$Selector_Selector_$Impl_$.diff = function(this1,other) {
	return this1.diff(other);
};
tannus_nore__$Selector_Selector_$Impl_$.toPredicate = function(this1) {
	return this1.f;
};
tannus_nore__$Selector_Selector_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tannus_nore__$Selector_Selector_$Impl_$.fromString = function(s) {
	return new tannus_nore_CSelector(s);
};
var tannus_nore_CSelector = function(sel) {
	this.selector = sel;
	this.f = tannus_nore_ORegEx.compile(sel);
};
$hxClasses["tannus.nore.CSelector"] = tannus_nore_CSelector;
tannus_nore_CSelector.__name__ = ["tannus","nore","CSelector"];
tannus_nore_CSelector.prototype = {
	test: function(o) {
		return this.f(o);
	}
	,filter: function(list) {
		return list.filter(this.f);
	}
	,clone: function() {
		return new tannus_nore_CSelector(this.selector);
	}
	,toString: function() {
		return "Selector(" + this.selector + ")";
	}
	,invert: function() {
		return new tannus_nore_CSelector("!(" + this.selector + ")");
	}
	,sum: function(other) {
		return new tannus_nore_CSelector(this.selector + other.selector);
	}
	,diff: function(other) {
		var tmp;
		var s = this.selector + other.invert().selector;
		tmp = new tannus_nore_CSelector(s);
		return tmp;
	}
	,selector: null
	,f: null
	,__class__: tannus_nore_CSelector
};
var tannus_nore_Token = $hxClasses["tannus.nore.Token"] = { __ename__ : ["tannus","nore","Token"], __constructs__ : ["TConst","TOperator","TBrackets","TBoxBrackets","TGroup","TTuple","TCall","THelper","TIf","TComma","TOr","TNot","TApprox","TDoubleDot"] };
tannus_nore_Token.TConst = function(c) { var $x = ["TConst",0,c]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TOperator = function(op) { var $x = ["TOperator",1,op]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TBrackets = function(tree) { var $x = ["TBrackets",2,tree]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TBoxBrackets = function(tree) { var $x = ["TBoxBrackets",3,tree]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TGroup = function(tree) { var $x = ["TGroup",4,tree]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TTuple = function(values) { var $x = ["TTuple",5,values]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TCall = function(id,args) { var $x = ["TCall",6,id,args]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.THelper = function(id,args) { var $x = ["THelper",7,id,args]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TIf = function(test,then,otherwise) { var $x = ["TIf",8,test,then,otherwise]; $x.__enum__ = tannus_nore_Token; $x.toString = $estr; return $x; };
tannus_nore_Token.TComma = ["TComma",9];
tannus_nore_Token.TComma.toString = $estr;
tannus_nore_Token.TComma.__enum__ = tannus_nore_Token;
tannus_nore_Token.TOr = ["TOr",10];
tannus_nore_Token.TOr.toString = $estr;
tannus_nore_Token.TOr.__enum__ = tannus_nore_Token;
tannus_nore_Token.TNot = ["TNot",11];
tannus_nore_Token.TNot.toString = $estr;
tannus_nore_Token.TNot.__enum__ = tannus_nore_Token;
tannus_nore_Token.TApprox = ["TApprox",12];
tannus_nore_Token.TApprox.toString = $estr;
tannus_nore_Token.TApprox.__enum__ = tannus_nore_Token;
tannus_nore_Token.TDoubleDot = ["TDoubleDot",13];
tannus_nore_Token.TDoubleDot.toString = $estr;
tannus_nore_Token.TDoubleDot.__enum__ = tannus_nore_Token;
var tannus_nore_Const = $hxClasses["tannus.nore.Const"] = { __ename__ : ["tannus","nore","Const"], __constructs__ : ["CIdent","CString","CReference","CNumber"] };
tannus_nore_Const.CIdent = function(id) { var $x = ["CIdent",0,id]; $x.__enum__ = tannus_nore_Const; $x.toString = $estr; return $x; };
tannus_nore_Const.CString = function(s,quotes) { var $x = ["CString",1,s,quotes]; $x.__enum__ = tannus_nore_Const; $x.toString = $estr; return $x; };
tannus_nore_Const.CReference = function(name) { var $x = ["CReference",2,name]; $x.__enum__ = tannus_nore_Const; $x.toString = $estr; return $x; };
tannus_nore_Const.CNumber = function(n) { var $x = ["CNumber",3,n]; $x.__enum__ = tannus_nore_Const; $x.toString = $estr; return $x; };
var tannus_nore_Value = $hxClasses["tannus.nore.Value"] = { __ename__ : ["tannus","nore","Value"], __constructs__ : ["VString","VNumber","VArray","VField"] };
tannus_nore_Value.VString = function(str) { var $x = ["VString",0,str]; $x.__enum__ = tannus_nore_Value; $x.toString = $estr; return $x; };
tannus_nore_Value.VNumber = function(num) { var $x = ["VNumber",1,num]; $x.__enum__ = tannus_nore_Value; $x.toString = $estr; return $x; };
tannus_nore_Value.VArray = function(values) { var $x = ["VArray",2,values]; $x.__enum__ = tannus_nore_Value; $x.toString = $estr; return $x; };
tannus_nore_Value.VField = function(name) { var $x = ["VField",3,name]; $x.__enum__ = tannus_nore_Value; $x.toString = $estr; return $x; };
var tannus_nore_ValueTools = function() { };
$hxClasses["tannus.nore.ValueTools"] = tannus_nore_ValueTools;
tannus_nore_ValueTools.__name__ = ["tannus","nore","ValueTools"];
tannus_nore_ValueTools.toValue = function(t) {
	switch(t[1]) {
	case 0:
		switch(t[2][1]) {
		case 1:
			return tannus_nore_Value.VString(t[2][2]);
		case 3:
			return tannus_nore_Value.VNumber(t[2][2]);
		case 2:
			return tannus_nore_Value.VField(t[2][2]);
		default:
			throw new js__$Boot_HaxeError("ValueError: Cannot get a Value from " + Std.string(t) + "!");
		}
		break;
	case 5:
		var values = t[2].map(tannus_nore_ValueTools.toValue);
		return tannus_nore_Value.VArray(values);
	default:
		throw new js__$Boot_HaxeError("ValueError: Cannot get a Value from " + Std.string(t) + "!");
	}
};
tannus_nore_ValueTools.haxeValue = function(val,tools,o) {
	switch(val[1]) {
	case 0:
		var str = val[2];
		return function() {
			return str;
		};
	case 1:
		var num = val[2];
		return function() {
			return num;
		};
	case 2:
		var values = val[2];
		return function() {
			var tmp;
			var _g = [];
			var _g1 = 0;
			while(_g1 < values.length) {
				var v = values[_g1];
				++_g1;
				_g.push(tannus_nore_ValueTools.haxeValue(v,tools,o));
			}
			tmp = _g;
			return tmp;
		};
	case 3:
		var name = val[2];
		return function() {
			return tools.get(o,name);
		};
	}
};
var tannus_storage_Commit = $hxClasses["tannus.storage.Commit"] = { __ename__ : ["tannus","storage","Commit"], __constructs__ : ["Create","Delete","Change"] };
tannus_storage_Commit.Create = function(key,value) { var $x = ["Create",0,key,value]; $x.__enum__ = tannus_storage_Commit; $x.toString = $estr; return $x; };
tannus_storage_Commit.Delete = function(key) { var $x = ["Delete",1,key]; $x.__enum__ = tannus_storage_Commit; $x.toString = $estr; return $x; };
tannus_storage_Commit.Change = function(key,prev,next) { var $x = ["Change",2,key,prev,next]; $x.__enum__ = tannus_storage_Commit; $x.toString = $estr; return $x; };
var tannus_storage_Storage = function() {
	this.local = new haxe_ds_StringMap();
	this.remote = null;
	this.commits = [];
	this.deleted = [];
	this._ready = false;
	this._remote_commit = new tannus_ds_CRef($bind(this,this._remoteCommitSignal));
};
$hxClasses["tannus.storage.Storage"] = tannus_storage_Storage;
tannus_storage_Storage.__name__ = ["tannus","storage","Storage"];
tannus_storage_Storage.copy = function(d) {
	var result = new haxe_ds_StringMap();
	var $it0 = d.keys();
	while( $it0.hasNext() ) {
		var key = $it0.next();
		var value = __map_reserved[key] != null?d.getReserved(key):d.h[key];
		var value1 = value;
		if(__map_reserved[key] != null) result.setReserved(key,value1); else result.h[key] = value1;
	}
	return result;
};
tannus_storage_Storage.prototype = {
	fetch: function(done) {
		var _g = this;
		this._fetch(function(fdata) {
			_g.remote = fdata;
			done();
		});
	}
	,push: function(done) {
		var _g = this;
		this._fetch(function(fdata) {
			fdata = _g._applyCommits(fdata,_g.commits);
			_g._push(fdata,function(err) {
				if(err != null) throw new js__$Boot_HaxeError(err);
				_g.local = new haxe_ds_StringMap();
				_g.deleted = [];
				_g.commits = [];
				_g.remote = tannus_storage_Storage.copy(fdata);
				done();
			});
		});
	}
	,init: function(cb) {
		var _g = this;
		this.fetch(function() {
			_g._ready = true;
			cb();
		});
	}
	,get: function(key) {
		if(this.remote != null) {
			if(Lambda.has(this.deleted,key)) return null;
			var tmp;
			var _this = this.remote;
			if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
			var rv = tmp;
			var tmp1;
			var _this1 = this.local;
			if(__map_reserved[key] != null) tmp1 = _this1.getReserved(key); else tmp1 = _this1.h[key];
			var lv = tmp1;
			{
				var rem = rv;
				var rem1 = rv;
				if(rv == null) {
					var loc = lv;
					if(loc != null) return loc; else {
						var loc1 = lv;
						if(lv == null) {
							if(rem != null) return rem; else if(rem1 != null && loc1 != null) return loc1; else return null;
						} else switch(lv) {
						default:
							if(rem1 != null && loc1 != null) return loc1; else return null;
						}
					}
				} else switch(rv) {
				default:
					var loc1 = lv;
					if(lv == null) {
						if(rem != null) return rem; else if(rem1 != null && loc1 != null) return loc1; else return null;
					} else switch(lv) {
					default:
						if(rem1 != null && loc1 != null) return loc1; else return null;
					}
				}
			}
		} else throw new js__$Boot_HaxeError("StorageError: Storage has not been initialized!");
	}
	,set: function(key,value) {
		if(this.remote != null) {
			if(Lambda.has(this.deleted,key)) {
				HxOverrides.remove(this.deleted,key);
				var c = tannus_storage_Commit.Create(key,value);
				this.commits.push(c);
			} else {
				var prev = this.get(key);
				if(prev != null) {
					var c1 = tannus_storage_Commit.Change(key,prev,value);
					this.commits.push(c1);
				} else {
					var c2 = tannus_storage_Commit.Create(key,value);
					this.commits.push(c2);
				}
			}
			var tmp;
			var _this = this.local;
			if(__map_reserved[key] != null) _this.setReserved(key,value); else _this.h[key] = value;
			tmp = value;
			tmp;
			return value;
		} else throw new js__$Boot_HaxeError("StorageError: Storage has not been initialized!");
	}
	,exists: function(key) {
		if(this.remote != null) {
			if(Lambda.has(this.deleted,key)) return false; else {
				var tmp;
				var _this = this.local;
				if(__map_reserved[key] != null) tmp = _this.existsReserved(key); else tmp = _this.h.hasOwnProperty(key);
				var tmp1;
				if(!tmp) {
					var _this1 = this.remote;
					if(__map_reserved[key] != null) tmp1 = _this1.existsReserved(key); else tmp1 = _this1.h.hasOwnProperty(key);
				} else tmp1 = true;
				return tmp1;
			}
		} else throw new js__$Boot_HaxeError("StorageError: Storage has not been initialized!");
	}
	,watch: function(handler) {
		var sig = this._remote_commit.get();
		sig.listen(handler,false);
	}
	,remove: function(key) {
		this.deleted.push(key);
		var c = tannus_storage_Commit.Delete(key);
		this.commits.push(c);
	}
	,reference: function(key) {
		var ref = new tannus_io__$Pointer_Ref((function($this) {
			var $r;
			var f = $bind($this,$this.get);
			var a1 = key;
			$r = function() {
				return f(a1);
			};
			return $r;
		}(this)),(function($this) {
			var $r;
			var f1 = $bind($this,$this.set);
			var a11 = key;
			$r = function(a2) {
				return f1(a11,a2);
			};
			return $r;
		}(this)));
		return ref;
	}
	,keys: function() {
		return tannus_ds_ArrayTools.without(tannus_ds_ArrayTools.unique(tannus_ds_MapTools.keyArray(this.remote).concat(tannus_ds_MapTools.keyArray(this.local))),this.deleted);
	}
	,getState: function() {
		return this._applyCommits(this.remote != null?this.remote:new haxe_ds_StringMap(),this.commits);
	}
	,rollback: function() {
		this.local = new haxe_ds_StringMap();
		this.deleted = [];
		this.commits = [];
	}
	,_fetch: function(cb) {
		throw new js__$Boot_HaxeError("StorageMethodNotImplemented: _fetch!");
	}
	,_applyCommits: function(rem,coms) {
		var result = tannus_storage_Storage.copy(rem);
		var _g = 0;
		while(_g < coms.length) {
			var commit = coms[_g];
			++_g;
			switch(commit[1]) {
			case 0:
				var value = commit[3];
				var key = commit[2];
				var value1 = value;
				var value2 = value1;
				if(__map_reserved[key] != null) result.setReserved(key,value2); else result.h[key] = value2;
				break;
			case 2:
				var next = commit[4];
				var prev = commit[3];
				var key1 = commit[2];
				var value3 = next;
				var value4 = value3;
				if(__map_reserved[key1] != null) result.setReserved(key1,value4); else result.h[key1] = value4;
				break;
			case 1:
				var key2 = commit[2];
				result.remove(key2);
				break;
			}
		}
		return result;
	}
	,_push: function(data,cb) {
		throw new js__$Boot_HaxeError("StorageMethodNotImplemented: _push!");
	}
	,_remoteCommitSignal: function() {
		throw new js__$Boot_HaxeError("StorageMethodNotImplemented: _remoteCommitSignal!");
	}
	,commit: function(c) {
		this.commits.push(c);
	}
	,get_ready: function() {
		return this._ready;
	}
	,local: null
	,remote: null
	,commits: null
	,deleted: null
	,_ready: null
	,_remote_commit: null
	,__class__: tannus_storage_Storage
	,__properties__: {get_ready:"get_ready"}
};
var tannus_storage_SubStorage = function(paref) {
	tannus_storage_Storage.call(this);
	this._parent = paref;
	this.key = null;
	this.prefix = null;
	this.autoPush = true;
};
$hxClasses["tannus.storage.SubStorage"] = tannus_storage_SubStorage;
tannus_storage_SubStorage.__name__ = ["tannus","storage","SubStorage"];
tannus_storage_SubStorage.__super__ = tannus_storage_Storage;
tannus_storage_SubStorage.prototype = $extend(tannus_storage_Storage.prototype,{
	_fetch: function(cb) {
		var _g = this;
		var dat = new haxe_ds_StringMap();
		this._parent().fetch(function() {
			if(_g.key != null) {
				var encoded = _g._parent().get(_g.key) + "";
				var decoded = haxe_Unserializer.run(encoded);
				cb(tannus_ds__$Object_Object_$Impl_$.toMap(decoded));
			} else if(_g.prefix != null) {
				var keys = _g._parent().keys().filter(function(item) {
					return StringTools.startsWith(item,_g.prefix);
				});
				var _g1 = 0;
				while(_g1 < keys.length) {
					var key = keys[_g1];
					++_g1;
					var k = tannus_ds_StringUtils.after(key,_g.prefix);
					var v = _g._parent().get(key);
					var value = v;
					if(__map_reserved[k] != null) dat.setReserved(k,value); else dat.h[k] = value;
					v;
				}
				cb(dat);
			} else throw new js__$Boot_HaxeError("Error: Either key or prefix must be defined, and neither are");
		});
	}
	,_push: function(data,cb) {
		if(this.key != null) {
			var encoded = haxe_Serializer.run(tannus_ds_MapTools.toObject(data));
			this._parent().set(this.key,encoded);
			this._parent().push(function() {
				cb(null);
			});
		} else if(this.prefix != null) {
			var $it0 = data.keys();
			while( $it0.hasNext() ) {
				var key = $it0.next();
				this._parent().set(this.prefix + key,__map_reserved[key] != null?data.getReserved(key):data.h[key]);
			}
			var _g = 0;
			var _g1 = this.deleted;
			while(_g < _g1.length) {
				var key1 = _g1[_g];
				++_g;
				this._parent().remove(this.prefix != null?this.prefix + key1:key1);
			}
			this._parent().push(function() {
				cb(null);
			});
		} else throw new js__$Boot_HaxeError("Error: Either key or prefix must be defined, and neither are");
	}
	,_remoteCommitSignal: function() {
		var _g = this;
		var sig = new tannus_io_Signal();
		this._parent().watch(function(commit) {
			switch(commit[1]) {
			case 2:
				var next = commit[4];
				var prev = commit[3];
				var key = commit[2];
				if(_g.relevantKey(key)) {
					var data = tannus_storage_Commit.Change(_g.prefix != null?tannus_ds_StringUtils.after(key,_g.prefix):key,prev,next);
					sig.broadcast(data);
				}
				break;
			case 0:
				var value = commit[3];
				var key1 = commit[2];
				if(_g.relevantKey(key1)) {
					var data1 = tannus_storage_Commit.Create(_g.prefix != null?tannus_ds_StringUtils.after(key1,_g.prefix):key1,value);
					sig.broadcast(data1);
				}
				break;
			case 1:
				var key2 = commit[2];
				if(_g.relevantKey(key2)) {
					var data2 = tannus_storage_Commit.Delete(_g.prefix != null?tannus_ds_StringUtils.after(key2,_g.prefix):key2);
					sig.broadcast(data2);
				}
				break;
			}
		});
		return sig;
	}
	,relevantKey: function(k) {
		if(this.key != null) return k == this.key; else if(this.prefix != null) return StringTools.startsWith(k,this.prefix); else return false;
	}
	,localKey: function(k) {
		if(this.prefix != null) return tannus_ds_StringUtils.after(k,this.prefix); else return k;
	}
	,globalKey: function(k) {
		if(this.prefix != null) return this.prefix + k; else return k;
	}
	,set: function(key,value) {
		var res = tannus_storage_Storage.prototype.set.call(this,key,value);
		if(this.autoPush) this.push(function() {
		});
		return res;
	}
	,get_parent: function() {
		return this._parent();
	}
	,key: null
	,prefix: null
	,autoPush: null
	,_parent: null
	,__class__: tannus_storage_SubStorage
	,__properties__: $extend(tannus_storage_Storage.prototype.__properties__,{get_parent:"get_parent"})
});
var tannus_storage_chrome_ChromeStorage = function(a) {
	tannus_storage_Storage.call(this);
	this.area = a;
};
$hxClasses["tannus.storage.chrome.ChromeStorage"] = tannus_storage_chrome_ChromeStorage;
tannus_storage_chrome_ChromeStorage.__name__ = ["tannus","storage","chrome","ChromeStorage"];
tannus_storage_chrome_ChromeStorage.__super__ = tannus_storage_Storage;
tannus_storage_chrome_ChromeStorage.prototype = $extend(tannus_storage_Storage.prototype,{
	_fetch: function(cb) {
		var _g = this;
		this.area.get(null,function(data) {
			var d = _g.decode(tannus_ds__$Object_Object_$Impl_$.toMap(data));
			cb(d);
		});
	}
	,_push: function(map_data,cb) {
		var _g = this;
		var data = tannus_ds_MapTools.toObject(this.encode(map_data));
		this.area.remove(this.deleted,function() {
			_g.area.set(data,function() {
				cb(null);
			});
		});
	}
	,_remoteCommitSignal: function() {
		var signal = new tannus_io_Signal();
		tannus_chrome__$StorageArea_StorageArea_$Impl_$.watchAll(this.area,function(change) {
			var removed = [];
			var created = new haxe_ds_StringMap();
			var changed = new haxe_ds_StringMap();
			var commits = [];
			var $it0 = change.keys();
			while( $it0.hasNext() ) {
				var key = $it0.next();
				var delta = __map_reserved[key] != null?change.getReserved(key):change.h[key];
				{
					var _g = delta[1];
					var _g1 = delta[0];
					var value = _g;
					var prev = _g;
					if(_g == null) {
						var value1 = _g1;
						var tmp;
						if(__map_reserved[key] != null) created.setReserved(key,value1); else created.h[key] = value1;
						tmp = value1;
						tmp;
						commits.push(tannus_storage_Commit.Create(key,value1));
					} else switch(_g) {
					default:
						var next = _g1;
						if(_g1 == null) {
							removed.push(key);
							commits.push(tannus_storage_Commit.Delete(key));
						} else switch(_g1) {
						default:
							if(__map_reserved[key] != null) changed.setReserved(key,delta); else changed.h[key] = delta;
							commits.push(tannus_storage_Commit.Change(key,prev,next));
						}
					}
				}
			}
			var _g2 = 0;
			while(_g2 < commits.length) {
				var c = commits[_g2];
				++_g2;
				signal.broadcast(c);
			}
		});
		return signal;
	}
	,encode: function(data) {
		var e = new haxe_ds_StringMap();
		var $it0 = data.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			var v = haxe_Serializer.run(__map_reserved[key] != null?data.getReserved(key):data.h[key]);
			var value = v;
			if(__map_reserved[key] != null) e.setReserved(key,value); else e.h[key] = value;
			v;
		}
		return e;
	}
	,decode: function(data) {
		var d = new haxe_ds_StringMap();
		var $it0 = data.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			var v = haxe_Unserializer.run(__map_reserved[key] != null?data.getReserved(key):data.h[key]);
			var value = v;
			if(__map_reserved[key] != null) d.setReserved(key,value); else d.h[key] = value;
			v;
		}
		return d;
	}
	,area: null
	,__class__: tannus_storage_chrome_ChromeStorage
});
var tannus_sys_CDirectory = function(path,create) {
	if(create == null) create = false;
	this._path = path;
	if(tannus_sys_JavaScriptFileSystem.exists(this._path.s)) {
		if(!tannus_sys_JavaScriptFileSystem.isDirectory(this._path.s)) throw new js__$Boot_HaxeError("IOError: " + path.s + " is not a Directory!");
	} else if(create) tannus_sys_JavaScriptFileSystem.createDirectory(this._path.s); else throw new js__$Boot_HaxeError("IOError: " + path.s + " is not a File or a Directory!");
};
$hxClasses["tannus.sys.CDirectory"] = tannus_sys_CDirectory;
tannus_sys_CDirectory.__name__ = ["tannus","sys","CDirectory"];
tannus_sys_CDirectory.prototype = {
	getEntry: function(name) {
		var tmp;
		if(this.hasEntry(name)) {
			var tmp1;
			var other = tannus_sys__$Path_Path_$Impl_$.fromString(name);
			tmp1 = tannus_sys_CPath.join([this._path,other]);
			tmp = tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath(tmp1);
		} else tmp = null;
		return tmp;
	}
	,hasEntry: function(name) {
		var pp = tannus_sys_CPath.join([this._path,tannus_sys__$Path_Path_$Impl_$.fromString(name)]);
		if(this._path.get_absolute()) pp = pp.absolutize();
		return tannus_sys_JavaScriptFileSystem.exists(pp.s);
	}
	,file: function(name) {
		var tmp;
		var p = tannus_sys__$Path_Path_$Impl_$.fromString((this._path.get_absolute()?"/":"") + this._path.s + name);
		tmp = new tannus_sys_CFile(p);
		return tmp;
	}
	,dir: function(name,create) {
		if(create == null) create = false;
		var tmp;
		var tmp1;
		var tmp2;
		var other = tannus_sys__$Path_Path_$Impl_$.fromString(name);
		tmp2 = tannus_sys_CPath.join([this._path,other]);
		var this1 = tmp2;
		tmp1 = this1.s;
		var p = tannus_sys__$Path_Path_$Impl_$.fromString((this._path.get_absolute()?"/":"") + tmp1);
		tmp = new tannus_sys_CDirectory(p,create);
		return tmp;
	}
	,iterator: function() {
		return new tannus_sys_DirIter(this);
	}
	,walk: function(f) {
		var _g = new tannus_sys_DirIter(this);
		while(_g.ei.hasNext()) {
			var e = _g.next();
			{
				var _g1 = e;
				switch(_g1[1]) {
				case 0:
					f(e);
					break;
				case 1:
					f(e);
					_g1[2].walk(f);
					break;
				}
			}
		}
	}
	,gather: function(tester) {
		var results = [];
		var _g = 0;
		var _g1 = this.get_entries();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			{
				var _g2 = e;
				switch(_g2[1]) {
				case 0:
					var f = _g2[2];
					if(tester == null) results.push(f); else if(tester(f)) results.push(f);
					break;
				case 1:
					var sub = _g2[2].gather(tester);
					results = results.concat(sub);
					break;
				}
			}
		}
		return results;
	}
	,search: function(pattern,recursive) {
		if(recursive == null) recursive = false;
		if(!recursive) {
			var results = [];
			var _g = 0;
			var _g1 = this.get_entries();
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(tannus_sys__$FSEntry_FSEntry_$Impl_$.isFile(e)) {
					var tmp1;
					var this1 = tannus_sys__$FSEntry_FSEntry_$Impl_$.get_path(e);
					tmp1 = this1.s;
					tmp = pattern.test(tmp1);
				} else tmp = false;
				if(tmp) results.push(tannus_sys__$FSEntry_FSEntry_$Impl_$.file(e));
			}
			return results;
		} else return this.gather(function(f) {
			return pattern.test(f._path.s);
		});
	}
	,'delete': function(force) {
		if(force == null) force = false;
		if(!force) tannus_sys_JavaScriptFileSystem.deleteDirectory(this._path.s); else tannus_sys_JavaScriptFileSystem.deleteDirectory(this._path.s);
	}
	,rename: function(npath) {
		tannus_sys_JavaScriptFileSystem.volume.rename(this._path.s,npath.s);
		tannus_sys_JavaScriptFileSystem.save();
		this._path = npath;
	}
	,get_path: function() {
		return this._path;
	}
	,get_exists: function() {
		return tannus_sys_JavaScriptFileSystem.exists(this._path.s);
	}
	,get_subpaths: function() {
		var _g = this;
		return tannus_sys_JavaScriptFileSystem.readDirectory(this._path.get_str()).map(tannus_sys__$Path_Path_$Impl_$.fromString).map(function(sp) {
			sp.set_directory(_g._path);
			return sp;
		});
	}
	,get_entries: function() {
		return this.get_subpaths().map(tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath);
	}
	,_path: null
	,__class__: tannus_sys_CDirectory
	,__properties__: {get_entries:"get_entries",get_subpaths:"get_subpaths",get_exists:"get_exists",get_path:"get_path"}
};
var tannus_sys_DirIter = function(cd) {
	this.pp = new tannus_sys_CPath(cd._path.s);
	var tmp;
	var _this = tannus_sys_JavaScriptFileSystem.readDirectory(this.pp.get_str());
	tmp = HxOverrides.iter(_this);
	this.ei = tmp;
};
$hxClasses["tannus.sys.DirIter"] = tannus_sys_DirIter;
tannus_sys_DirIter.__name__ = ["tannus","sys","DirIter"];
tannus_sys_DirIter.prototype = {
	hasNext: function() {
		return this.ei.hasNext();
	}
	,next: function() {
		var tmp;
		var other = tannus_sys__$Path_Path_$Impl_$.fromString(this.ei.next());
		tmp = tannus_sys_CPath.join([this.pp,other]);
		var epath = tmp;
		return tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath(epath);
	}
	,ei: null
	,pp: null
	,__class__: tannus_sys_DirIter
};
var tannus_sys__$Directory_Directory_$Impl_$ = {};
$hxClasses["tannus.sys._Directory.Directory_Impl_"] = tannus_sys__$Directory_Directory_$Impl_$;
tannus_sys__$Directory_Directory_$Impl_$.__name__ = ["tannus","sys","_Directory","Directory_Impl_"];
tannus_sys__$Directory_Directory_$Impl_$._new = function(p,create) {
	if(create == null) create = false;
	return new tannus_sys_CDirectory(p,create);
};
tannus_sys__$Directory_Directory_$Impl_$.get = function(this1,name) {
	var tmp;
	if(this1.hasEntry(name)) {
		var tmp1;
		var other = tannus_sys__$Path_Path_$Impl_$.fromString(name);
		tmp1 = tannus_sys_CPath.join([this1._path,other]);
		tmp = tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath(tmp1);
	} else tmp = null;
	return tmp;
};
tannus_sys__$Directory_Directory_$Impl_$.fromPath = function(path) {
	return new tannus_sys_CDirectory(path,false);
};
tannus_sys__$Directory_Directory_$Impl_$.fromString = function(s) {
	var tmp;
	var p = tannus_sys__$Path_Path_$Impl_$.fromString(s);
	tmp = new tannus_sys_CDirectory(p,false);
	return tmp;
};
var tannus_sys__$FSEntry_FSEntry_$Impl_$ = {};
$hxClasses["tannus.sys._FSEntry.FSEntry_Impl_"] = tannus_sys__$FSEntry_FSEntry_$Impl_$;
tannus_sys__$FSEntry_FSEntry_$Impl_$.__name__ = ["tannus","sys","_FSEntry","FSEntry_Impl_"];
tannus_sys__$FSEntry_FSEntry_$Impl_$.__properties__ = {get_name:"get_name",get_path:"get_path",get_type:"get_type"}
tannus_sys__$FSEntry_FSEntry_$Impl_$._new = function(et) {
	return et;
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.get_type = function(this1) {
	return this1;
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.get_path = function(this1) {
	var tmp;
	var _g = this1;
	switch(_g[1]) {
	case 0:
		tmp = _g[2]._path;
		break;
	case 1:
		tmp = _g[2]._path;
		break;
	}
	return tmp;
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.get_name = function(this1) {
	return tannus_sys__$FSEntry_FSEntry_$Impl_$.get_path(this1).get_name();
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.rename = function(this1,ndir) {
	{
		var _g = this1;
		switch(_g[1]) {
		case 0:
			_g[2].set_path(ndir);
			break;
		case 1:
			_g[2].rename(ndir);
			break;
		}
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$["delete"] = function(this1) {
	{
		var _g = this1;
		switch(_g[1]) {
		case 0:
			tannus_sys_JavaScriptFileSystem.volume.deleteFile(_g[2]._path.s);
			tannus_sys_JavaScriptFileSystem.save();
			break;
		case 1:
			_g[2]["delete"]();
			break;
		}
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.file = function(this1) {
	{
		var _g = this1;
		switch(_g[1]) {
		case 0:
			return _g[2];
		case 1:
			throw new js__$Boot_HaxeError("IOError: Cannot cast a Directory to a File!");
			break;
		}
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.isFile = function(this1) {
	var tmp;
	var _g = this1;
	switch(_g[1]) {
	case 0:
		tmp = true;
		break;
	case 1:
		tmp = false;
		break;
	}
	return tmp;
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.isDirectory = function(this1) {
	var tmp;
	var _g = this1;
	switch(_g[1]) {
	case 0:
		tmp = false;
		break;
	case 1:
		tmp = true;
		break;
	}
	return tmp;
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.folder = function(this1) {
	{
		var _g = this1;
		switch(_g[1]) {
		case 0:
			throw new js__$Boot_HaxeError("IOError: Cannot cast a File to a Directory!");
			break;
		case 1:
			return _g[2];
		}
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath = function(p) {
	if(tannus_sys_JavaScriptFileSystem.exists(p.s)) {
		if(tannus_sys_JavaScriptFileSystem.isDirectory(p.s)) {
			var tmp;
			var et = tannus_sys_FSEntryType.Folder(new tannus_sys_CDirectory(p,false));
			tmp = et;
			return tmp;
		} else {
			var tmp1;
			var et1 = tannus_sys_FSEntryType.File(new tannus_sys_CFile(p));
			tmp1 = et1;
			return tmp1;
		}
	} else {
		var err = "IOError: Cannot create FSEntry instance for non-existent Path(\"" + p.s + "\")";
		console.log(err);
		throw new js__$Boot_HaxeError(err);
	}
};
tannus_sys__$FSEntry_FSEntry_$Impl_$.fromString = function(s) {
	return tannus_sys__$FSEntry_FSEntry_$Impl_$.fromPath(tannus_sys__$Path_Path_$Impl_$.fromString(s));
};
var tannus_sys_FSEntryType = $hxClasses["tannus.sys.FSEntryType"] = { __ename__ : ["tannus","sys","FSEntryType"], __constructs__ : ["File","Folder"] };
tannus_sys_FSEntryType.File = function(f) { var $x = ["File",0,f]; $x.__enum__ = tannus_sys_FSEntryType; $x.toString = $estr; return $x; };
tannus_sys_FSEntryType.Folder = function(d) { var $x = ["Folder",1,d]; $x.__enum__ = tannus_sys_FSEntryType; $x.toString = $estr; return $x; };
var tannus_sys__$File_File_$Impl_$ = {};
$hxClasses["tannus.sys._File.File_Impl_"] = tannus_sys__$File_File_$Impl_$;
tannus_sys__$File_File_$Impl_$.__name__ = ["tannus","sys","_File","File_Impl_"];
tannus_sys__$File_File_$Impl_$._new = function(p) {
	return new tannus_sys_CFile(p);
};
tannus_sys__$File_File_$Impl_$.fromString = function(p) {
	var tmp;
	var p1 = tannus_sys__$Path_Path_$Impl_$.fromString(p);
	tmp = new tannus_sys_CFile(p1);
	return tmp;
};
tannus_sys__$File_File_$Impl_$.fromPath = function(p) {
	return new tannus_sys_CFile(p);
};
tannus_sys__$File_File_$Impl_$.fromByteArray = function(p) {
	var tmp;
	var p1 = p.toString();
	var p2 = tannus_sys__$Path_Path_$Impl_$.fromString(p1);
	tmp = new tannus_sys_CFile(p2);
	return tmp;
};
var tannus_sys_CFile = function(p) {
	this._path = p;
	if(tannus_sys_JavaScriptFileSystem.exists(this._path.s) && tannus_sys_JavaScriptFileSystem.isDirectory(this._path.s)) throw new js__$Boot_HaxeError("FileError: " + ("\"" + this._path.s + "\" is a directory!"));
};
$hxClasses["tannus.sys.CFile"] = tannus_sys_CFile;
tannus_sys_CFile.__name__ = ["tannus","sys","CFile"];
tannus_sys_CFile.ferror = function(msg) {
	throw new js__$Boot_HaxeError("FileError: " + msg);
};
tannus_sys_CFile.prototype = {
	read: function() {
		return tannus_sys_JavaScriptFileSystem.read(this._path.s);
	}
	,write: function(data) {
		tannus_sys_JavaScriptFileSystem.write(this._path.s,data);
	}
	,append: function(data) {
		tannus_sys_JavaScriptFileSystem.append(this._path.s,data);
	}
	,writeString: function(s) {
		tannus_sys_JavaScriptFileSystem.write(this._path.s,tannus_io_impl_BrowserBinary.ofString(s));
	}
	,rename: function(newpath) {
		this.set_path(newpath);
	}
	,'delete': function() {
		tannus_sys_JavaScriptFileSystem.volume.deleteFile(this._path.s);
		tannus_sys_JavaScriptFileSystem.save();
	}
	,lines: function(list) {
		if(list == null) {
			var res = [];
			var buf = "";
			var data = tannus_sys_JavaScriptFileSystem.read(this._path.s);
			var $it0 = data.iterator();
			while( $it0.hasNext() ) {
				var $byte = $it0.next();
				if($byte == 10 || $byte == 13) {
					res.push(buf);
					buf = "";
				} else buf += String.fromCharCode($byte);
			}
			if(buf.length != 0) res.push(buf);
			return res;
		} else {
			var tmp;
			var s = list.join("\n");
			tmp = tannus_io_impl_BrowserBinary.ofString(s);
			var data1 = tmp;
			tannus_sys_JavaScriptFileSystem.write(this._path.s,data1);
			return list;
		}
	}
	,get_exists: function() {
		return tannus_sys_JavaScriptFileSystem.exists(this._path.s);
	}
	,get_size: function() {
		var stats = tannus_sys_JavaScriptFileSystem.volume.stat(this._path.s);
		return stats.size;
	}
	,get_data: function() {
		return tannus_sys_JavaScriptFileSystem.read(this._path.s);
	}
	,set_data: function(nd) {
		tannus_sys_JavaScriptFileSystem.write(this._path.s,nd);
		return tannus_sys_JavaScriptFileSystem.read(this._path.s);
	}
	,get_content: function() {
		var f = this;
		var tmp;
		var f1 = new tannus_io__$Pointer_Ref(function() {
			return f;
		},function(v) {
			return f = v;
		});
		tmp = f1;
		return tmp;
	}
	,get_path: function() {
		return this._path;
	}
	,set_path: function(np) {
		tannus_sys_JavaScriptFileSystem.volume.rename(this._path.s,np.s);
		tannus_sys_JavaScriptFileSystem.save();
		return this._path = np;
	}
	,get_directory: function() {
		var tmp;
		var path = this._path.get_directory();
		tmp = new tannus_sys_CDirectory(path,false);
		return tmp;
	}
	,get_input: function() {
		var tmp;
		var this1 = this.get_data();
		tmp = this1.toBytes();
		var inp = new haxe_io_BytesInput(tmp);
		return inp;
	}
	,get_stats: function() {
		return tannus_sys_JavaScriptFileSystem.volume.stat(this._path.s);
	}
	,_path: null
	,__class__: tannus_sys_CFile
	,__properties__: {get_stats:"get_stats",get_input:"get_input",get_directory:"get_directory",set_path:"set_path",get_path:"get_path",get_content:"get_content",set_data:"set_data",get_data:"get_data",get_size:"get_size",get_exists:"get_exists"}
};
var tannus_sys__$GlobStar_GlobStar_$Impl_$ = {};
$hxClasses["tannus.sys._GlobStar.GlobStar_Impl_"] = tannus_sys__$GlobStar_GlobStar_$Impl_$;
tannus_sys__$GlobStar_GlobStar_$Impl_$.__name__ = ["tannus","sys","_GlobStar","GlobStar_Impl_"];
tannus_sys__$GlobStar_GlobStar_$Impl_$._new = function(s,flags) {
	if(flags == null) flags = "";
	return new tannus_sys_CGlobStar(s,flags);
};
tannus_sys__$GlobStar_GlobStar_$Impl_$.fromString = function(s) {
	return new tannus_sys_CGlobStar(s,"");
};
var tannus_sys_CGlobStar = $hx_exports.globstar = function(pat,flags) {
	this.spat = pat;
	var data = tannus_sys_gs_Printer.compile(pat,flags);
	this.pattern = data.regex;
	this.pind = data.params;
};
$hxClasses["tannus.sys.CGlobStar"] = tannus_sys_CGlobStar;
tannus_sys_CGlobStar.__name__ = ["tannus","sys","CGlobStar"];
tannus_sys_CGlobStar.prototype = {
	test: function(path) {
		return this.pattern.match(path);
	}
	,match: function(s) {
		var dat = tannus_io__$RegEx_RegEx_$Impl_$.matches(this.pattern,s);
		if(dat.length == 0) return null; else {
			var m = dat[0];
			var res = { };
			var $it0 = this.pind.keys();
			while( $it0.hasNext() ) {
				var k = $it0.next();
				var tmp;
				var _this = this.pind;
				if(__map_reserved[k] != null) tmp = _this.getReserved(k); else tmp = _this.h[k];
				var i = tmp;
				var value = m[i + 1];
				var tmp2;
				if(res.__properties__ && (tmp2 = res.__properties__["set_" + k])) res[tmp2](value); else res[k] = value;
				var tmp1;
				var tmp3;
				if(res == null) tmp1 = null; else if(res.__properties__ && (tmp3 = res.__properties__["get_" + k])) tmp1 = res[tmp3](); else tmp1 = res[k];
				tmp1;
			}
			return res;
		}
	}
	,toString: function() {
		var s = "GlobStar(" + this.spat + " => " + this.patternString() + ")";
		return s;
	}
	,patternString: function() {
		return this.pattern.r.toString();
	}
	,spat: null
	,pattern: null
	,pind: null
	,printer: null
	,__class__: tannus_sys_CGlobStar
};
var tannus_sys_Token = $hxClasses["tannus.sys.Token"] = { __ename__ : ["tannus","sys","Token"], __constructs__ : ["TLiteral","TExpan"] };
tannus_sys_Token.TLiteral = function(s) { var $x = ["TLiteral",0,s]; $x.__enum__ = tannus_sys_Token; $x.toString = $estr; return $x; };
tannus_sys_Token.TExpan = function(bits) { var $x = ["TExpan",1,bits]; $x.__enum__ = tannus_sys_Token; $x.toString = $estr; return $x; };
var tannus_sys_JavaScriptFileSystem = function() { };
$hxClasses["tannus.sys.JavaScriptFileSystem"] = tannus_sys_JavaScriptFileSystem;
tannus_sys_JavaScriptFileSystem.__name__ = ["tannus","sys","JavaScriptFileSystem"];
tannus_sys_JavaScriptFileSystem.__properties__ = {get_v:"get_v"}
tannus_sys_JavaScriptFileSystem.load = function() {
	var ls = js_Browser.getLocalStorage();
	var saved = ls.getItem("::fs::");
	if(saved == null) {
		tannus_sys_JavaScriptFileSystem.volume = new tannus_sys_VirtualVolume("fs");
		tannus_sys_JavaScriptFileSystem.save();
	} else tannus_sys_JavaScriptFileSystem.volume = tannus_sys_VirtualVolume.deserialize(tannus_io_impl_BrowserBinary.ofString(saved));
};
tannus_sys_JavaScriptFileSystem.save = function() {
	var ls = js_Browser.getLocalStorage();
	var data = tannus_sys_JavaScriptFileSystem.volume.serialize();
	ls.setItem("::fs::",data.toString());
};
tannus_sys_JavaScriptFileSystem.get_v = function() {
	return tannus_sys_JavaScriptFileSystem.volume;
};
tannus_sys_JavaScriptFileSystem.exists = function(name) {
	return tannus_sys_JavaScriptFileSystem.volume.exists(name);
};
tannus_sys_JavaScriptFileSystem.isDirectory = function(name) {
	return tannus_sys_JavaScriptFileSystem.volume.isDirectory(name);
};
tannus_sys_JavaScriptFileSystem.createDirectory = function(name) {
	tannus_sys_JavaScriptFileSystem.volume.createDirectory(name);
	tannus_sys_JavaScriptFileSystem.save();
};
tannus_sys_JavaScriptFileSystem.deleteDirectory = function(name) {
	tannus_sys_JavaScriptFileSystem.volume.deleteDirectory(name);
	tannus_sys_JavaScriptFileSystem.save();
};
tannus_sys_JavaScriptFileSystem.deleteFile = function(name) {
	tannus_sys_JavaScriptFileSystem.volume.deleteFile(name);
	tannus_sys_JavaScriptFileSystem.save();
};
tannus_sys_JavaScriptFileSystem.readDirectory = function(name) {
	return tannus_sys_JavaScriptFileSystem.volume.readDirectory(name);
};
tannus_sys_JavaScriptFileSystem.read = function(name) {
	return tannus_sys_JavaScriptFileSystem.volume.read(name);
};
tannus_sys_JavaScriptFileSystem.write = function(name,data) {
	tannus_sys_JavaScriptFileSystem.volume.write(name,data);
	tannus_sys_JavaScriptFileSystem.save();
};
tannus_sys_JavaScriptFileSystem.append = function(name,data) {
	tannus_sys_JavaScriptFileSystem.volume.append(name,data);
	tannus_sys_JavaScriptFileSystem.save();
};
tannus_sys_JavaScriptFileSystem.rename = function(o,n) {
	tannus_sys_JavaScriptFileSystem.volume.rename(o,n);
	tannus_sys_JavaScriptFileSystem.save();
};
tannus_sys_JavaScriptFileSystem.stat = function(name) {
	return tannus_sys_JavaScriptFileSystem.volume.stat(name);
};
var tannus_sys__$Mime_Mime_$Impl_$ = {};
$hxClasses["tannus.sys._Mime.Mime_Impl_"] = tannus_sys__$Mime_Mime_$Impl_$;
tannus_sys__$Mime_Mime_$Impl_$.__name__ = ["tannus","sys","_Mime","Mime_Impl_"];
tannus_sys__$Mime_Mime_$Impl_$.__properties__ = {get_subtype:"get_subtype",get_type:"get_type"}
tannus_sys__$Mime_Mime_$Impl_$._new = function(m) {
	return m;
};
tannus_sys__$Mime_Mime_$Impl_$.get_type = function(this1) {
	return tannus_ds_StringUtils.has(this1,"/")?this1.substring(0,this1.indexOf("/")):this1;
};
tannus_sys__$Mime_Mime_$Impl_$.get_subtype = function(this1) {
	var st = tannus_ds_StringUtils.has(this1,"/")?this1.substring(this1.indexOf("/") + 1):null;
	if(st == null) return null;
	return tannus_ds_StringUtils.before(tannus_ds_StringUtils.after(st,"."),"+");
};
tannus_sys__$Mime_Mime_$Impl_$.getSegments = function(this1) {
	var res = [];
	res = res.concat(this1.split("/"));
	var last;
	if(res.length == 2) {
		last = res.pop();
		var subs = last.split(".");
		res = res.concat(subs);
		last = res.pop();
		if(tannus_ds_StringUtils.has(last,"+")) {
			var suff = last.split("+");
			res = res.concat(suff);
		} else res.push(last);
	}
	return res;
};
tannus_sys__$Mime_Mime_$Impl_$.getMainType = function(this1) {
	return tannus_ds_StringUtils.has(this1,"/")?this1.substring(0,this1.indexOf("/")):this1;
};
tannus_sys__$Mime_Mime_$Impl_$.getSubType = function(this1) {
	return tannus_ds_StringUtils.has(this1,"/")?this1.substring(this1.indexOf("/") + 1):null;
};
tannus_sys__$Mime_Mime_$Impl_$.getTree = function(this1) {
	var st = tannus_ds_StringUtils.has(this1,"/")?this1.substring(this1.indexOf("/") + 1):null;
	if(st == null) return null; else if(tannus_ds_StringUtils.has(st,".")) return st.substring(0,st.indexOf(".")); else return null;
};
var tannus_sys_Mimes = $hx_exports.tannus.sys.Mimes = function() { };
$hxClasses["tannus.sys.Mimes"] = tannus_sys_Mimes;
tannus_sys_Mimes.__name__ = ["tannus","sys","Mimes"];
tannus_sys_Mimes.minit = function() {
	if(!tannus_sys_Mimes.initted) tannus_sys_Mimes.__init();
};
tannus_sys_Mimes.getMimeType = function(ext) {
	if(!tannus_sys_Mimes.initted) tannus_sys_Mimes.__init();
	if(StringTools.startsWith(ext,".")) ext = ext.substring(1);
	var tmp;
	var _this = tannus_sys_Mimes.extensions;
	if(__map_reserved[ext] != null) tmp = _this.existsReserved(ext); else tmp = _this.h.hasOwnProperty(ext);
	if(tmp) {
		var tmp1;
		var _this1 = tannus_sys_Mimes.extensions;
		if(__map_reserved[ext] != null) tmp1 = _this1.getReserved(ext); else tmp1 = _this1.h[ext];
		return tmp1;
	} else return "application/octet-stream";
};
tannus_sys_Mimes.getExtensionList = function(mime) {
	if(!tannus_sys_Mimes.initted) tannus_sys_Mimes.__init();
	var tmp;
	var _this = tannus_sys_Mimes.types;
	if(__map_reserved[mime] != null) tmp = _this.existsReserved(mime); else tmp = _this.h.hasOwnProperty(mime);
	if(tmp) {
		var tmp1;
		var _this1 = tannus_sys_Mimes.types;
		if(__map_reserved[mime] != null) tmp1 = _this1.getReserved(mime); else tmp1 = _this1.h[mime];
		return tmp1;
	} else return [];
};
tannus_sys_Mimes.__init = function() {
	tannus_sys_Mimes.types = new haxe_ds_StringMap();
	tannus_sys_Mimes.extensions = new haxe_ds_StringMap();
	var all = Reflect.fields(tannus_sys_Mimes.primitive);
	var _g = 0;
	while(_g < all.length) {
		var ext = all[_g];
		++_g;
		var tmp;
		var this1 = tannus_sys_Mimes.primitive;
		var tmp4;
		var tmp5;
		if(this1 == null) tmp4 = null; else if(this1.__properties__ && (tmp5 = this1.__properties__["get_" + ext])) tmp4 = this1[tmp5](); else tmp4 = this1[ext];
		tmp = tmp4;
		var type = Std.string(tmp);
		var tmp1;
		var _this = tannus_sys_Mimes.extensions;
		if(__map_reserved[ext] != null) _this.setReserved(ext,type); else _this.h[ext] = type;
		tmp1 = type;
		tmp1;
		var tmp2;
		var _this1 = tannus_sys_Mimes.types;
		if(__map_reserved[type] != null) tmp2 = _this1.getReserved(type); else tmp2 = _this1.h[type];
		if(tmp2 == null) {
			var v = [];
			var _this2 = tannus_sys_Mimes.types;
			if(__map_reserved[type] != null) _this2.setReserved(type,v); else _this2.h[type] = v;
			v;
		}
		var tmp3;
		var _this3 = tannus_sys_Mimes.types;
		if(__map_reserved[type] != null) tmp3 = _this3.getReserved(type); else tmp3 = _this3.h[type];
		tmp3.push(ext);
	}
	tannus_sys_Mimes.initted = true;
};
tannus_sys_Mimes.getTypeToExtensionsMap = function() {
	if(!tannus_sys_Mimes.initted) tannus_sys_Mimes.__init();
	var m = new haxe_ds_StringMap();
	var $it0 = tannus_sys_Mimes.types.keys();
	while( $it0.hasNext() ) {
		var mime = $it0.next();
		var tmp;
		var tmp1;
		var _this1 = tannus_sys_Mimes.types;
		if(__map_reserved[mime] != null) tmp1 = _this1.getReserved(mime); else tmp1 = _this1.h[mime];
		var _this = tmp1;
		tmp = _this.slice();
		var value = tmp;
		if(__map_reserved[mime] != null) m.setReserved(mime,value); else m.h[mime] = value;
	}
	return m;
};
var tannus_sys__$Path_Path_$Impl_$ = {};
$hxClasses["tannus.sys._Path.Path_Impl_"] = tannus_sys__$Path_Path_$Impl_$;
tannus_sys__$Path_Path_$Impl_$.__name__ = ["tannus","sys","_Path","Path_Impl_"];
tannus_sys__$Path_Path_$Impl_$._new = function(s) {
	return new tannus_sys_CPath(s);
};
tannus_sys__$Path_Path_$Impl_$.sum = function(x,y) {
	var tmp;
	var tmp1;
	var this1 = tannus_sys_CPath.join([tannus_sys__$Path_Path_$Impl_$.fromString(x.s),tannus_sys__$Path_Path_$Impl_$.fromString(y.s)]);
	tmp1 = this1.s;
	var s = tmp1;
	tmp = new tannus_sys_CPath(s);
	return tmp;
};
tannus_sys__$Path_Path_$Impl_$.plusPath = function(this1,other) {
	return tannus_sys_CPath.join([this1,other]);
};
tannus_sys__$Path_Path_$Impl_$.plusString = function(this1,other) {
	return tannus_sys_CPath.join([this1,tannus_sys__$Path_Path_$Impl_$.fromString(other)]);
};
tannus_sys__$Path_Path_$Impl_$.toString = function(this1) {
	return this1.s;
};
tannus_sys__$Path_Path_$Impl_$.fromString = function(s) {
	return new tannus_sys_CPath(s);
};
tannus_sys__$Path_Path_$Impl_$.toByteArray = function(this1) {
	return tannus_io_impl_BrowserBinary.ofString(this1.s);
};
tannus_sys__$Path_Path_$Impl_$.fromByteArray = function(b) {
	return tannus_sys__$Path_Path_$Impl_$.fromString(b.toString());
};
var tannus_sys_CPath = function(str) {
	this.s = str;
};
$hxClasses["tannus.sys.CPath"] = tannus_sys_CPath;
tannus_sys_CPath.__name__ = ["tannus","sys","CPath"];
tannus_sys_CPath.join = function(list) {
	var bits = [];
	var resroot = list[0] != null && list[0].get_absolute();
	var _g = 0;
	while(_g < list.length) {
		var path = list[_g];
		++_g;
		bits = bits.concat(path.get_pieces());
	}
	bits = bits.filter(function(s) {
		return s != null && !(s.length == 0);
	});
	var tmp;
	var s1 = bits.join("/");
	tmp = new tannus_sys_CPath(s1);
	var sum = tmp.normalize();
	if(resroot) sum = sum.absolutize();
	return sum;
};
tannus_sys_CPath.sjoin = function(slist) {
	return tannus_sys_CPath.join(slist.map(function(s) {
		return new tannus_sys_CPath(s);
	}));
};
tannus_sys_CPath._expand = function(p) {
	var segments = p.get_pieces();
	var pieces = [];
	var _g = 0;
	while(_g < segments.length) {
		var s = segments[_g];
		++_g;
		switch(s) {
		case ".":case "":
			continue;
			break;
		case "..":
			pieces.pop();
			break;
		default:
			pieces.push(s);
		}
	}
	var result = tannus_sys_CPath.sjoin(pieces).normalize();
	return result;
};
tannus_sys_CPath.err = function(msg) {
	throw new js__$Boot_HaxeError("PathError: " + msg);
};
tannus_sys_CPath.prototype = {
	toString: function() {
		return this.s;
	}
	,normalize: function() {
		var norm = this.s;
		norm = StringTools.replace(norm.split("\\").join("/"),"//","/");
		var _root = StringTools.startsWith(norm,"/");
		if(_root) norm = tannus_ds_StringUtils.after(norm,"/");
		var r = new tannus_sys_CPath(norm);
		if(this.get_absolute()) r = r.absolutize();
		return r;
	}
	,absolutize: function() {
		var spath = this.s + "";
		if(!StringTools.startsWith(spath,"/")) spath = "/" + spath;
		return new tannus_sys_CPath(spath);
	}
	,expand: function() {
		var pieces = this.get_pieces();
		var res = [];
		var _g = 0;
		while(_g < pieces.length) {
			var n = pieces[_g];
			++_g;
			switch(n) {
			case ".":case "":
				break;
			case "..":
				res.pop();
				break;
			default:
				res.push(n);
			}
		}
		var tmp;
		var s = res.join("/");
		tmp = new tannus_sys_CPath(s);
		var p = tmp;
		if(this.get_absolute()) p = p.absolutize();
		return p;
	}
	,resolve: function(other) {
		var res = tannus_sys_CPath.join([this,other]).expand();
		if(this.get_absolute()) res = res.absolutize();
		return res;
	}
	,relative: function(other) {
		if(this.get_absolute() && other.get_absolute()) {
			var a = this.get_pieces();
			var b = other.get_pieces();
			var keep = [];
			var diffs = 0;
			var additions = [];
			var diffhit = false;
			var _g1 = 0;
			var _g = a.length;
			while(_g1 < _g) {
				var i = _g1++;
				var mine = a[i];
				var yurs = b[i];
				if(mine != yurs) diffhit = true;
				if(!diffhit) keep.push(mine); else {
					diffs++;
					if(yurs != null) additions.push(yurs);
				}
			}
			var respieces = tannus_ds_ArrayTools.times([".."],diffs).concat(additions);
			return tannus_sys_CPath.sjoin(respieces);
		} else throw new js__$Boot_HaxeError("PathError: " + "Both Paths must be absolute!");
		return tannus_sys__$Path_Path_$Impl_$.fromString("");
	}
	,get_sdir: function() {
		return haxe_io_Path.directory(this.s);
	}
	,get_str: function() {
		return this.s;
	}
	,set_str: function(v) {
		return this.s = v;
	}
	,get_directory: function() {
		var tmp;
		var s = this.get_sdir();
		tmp = new tannus_sys_CPath(s);
		return tmp;
	}
	,set_directory: function(v) {
		var tmp;
		var this1 = tannus_sys_CPath.sjoin([v.s,this.get_name()]);
		tmp = this1.s;
		this.s = tmp;
		if(v.get_absolute() && !StringTools.startsWith(this.s,"/")) this.s = "/" + this.s;
		return this.get_directory();
	}
	,get_name: function() {
		return haxe_io_Path.withoutDirectory(this.s);
	}
	,set_name: function(v) {
		var tmp;
		var this1 = tannus_sys_CPath.join([tannus_sys__$Path_Path_$Impl_$.fromString(this.get_sdir()),tannus_sys__$Path_Path_$Impl_$.fromString(v)]);
		tmp = this1.s;
		this.s = tmp;
		return this.get_name();
	}
	,get_basename: function() {
		return haxe_io_Path.withoutExtension(this.s);
	}
	,set_basename: function(v) {
		this.set_name(v + ("." + this.get_extension()));
		return this.get_basename();
	}
	,get_extension: function() {
		return haxe_io_Path.extension(this.s);
	}
	,set_extension: function(v) {
		this.s = tannus_ds_StringUtils.beforeLast(this.s,".") + ("." + v);
		return this.get_extension();
	}
	,get_mime: function() {
		var tmp;
		var s = this.get_extension();
		tmp = s.length == 0;
		if(!tmp) {
			var tmp1;
			var m = tannus_sys_Mimes.getMimeType(this.get_extension());
			tmp1 = m;
			return tmp1;
		} else return null;
	}
	,get_root: function() {
		var tmp;
		var s = this.get_sdir();
		tmp = s.length == 0;
		return tmp;
	}
	,get_absolute: function() {
		return haxe_io_Path.isAbsolute(this.s);
	}
	,get_pieces: function() {
		return this.s.split("/");
	}
	,set_pieces: function(v) {
		var tmp;
		var this1 = tannus_sys_CPath.sjoin(v);
		tmp = this1.s;
		this.s = tmp;
		return this.get_pieces();
	}
	,s: null
	,__class__: tannus_sys_CPath
	,__properties__: {set_pieces:"set_pieces",get_pieces:"get_pieces",get_absolute:"get_absolute",get_root:"get_root",get_mime:"get_mime",set_extension:"set_extension",get_extension:"get_extension",set_basename:"set_basename",get_basename:"get_basename",set_name:"set_name",get_name:"get_name",set_directory:"set_directory",get_directory:"get_directory",set_str:"set_str",get_str:"get_str",get_sdir:"get_sdir"}
};
var tannus_sys_VVEntry = function(vv,nam,typ) {
	this.name = nam;
	this.content = null;
	this.type = typ;
	this.meta = new haxe_ds_StringMap();
	this.volume = vv;
	this.__init();
};
$hxClasses["tannus.sys.VVEntry"] = tannus_sys_VVEntry;
tannus_sys_VVEntry.__name__ = ["tannus","sys","VVEntry"];
tannus_sys_VVEntry.deserialize = function(o,vol) {
	var e = new tannus_sys_VVEntry(vol,o.name,o.type);
	e.meta = o.meta;
	e.content = o.content;
	return e;
};
tannus_sys_VVEntry.prototype = {
	__init: function() {
		this.set_cdate(new Date());
	}
	,update: function() {
		this.set_mdate(new Date());
	}
	,list: function() {
		var _g = this;
		if(!this.get_isFile()) {
			var entries = this.volume.entries;
			return entries.filter(function(e) {
				return tannus_sys__$Path_Path_$Impl_$.fromString(e.name).get_directory() == tannus_sys__$Path_Path_$Impl_$.fromString(_g.name);
			});
		} else {
			var tmp;
			var this1 = tannus_sys__$Path_Path_$Impl_$.fromString(this.name);
			tmp = this1.s;
			throw new js__$Boot_HaxeError("IOError: " + ("\"" + tmp + "\" is a File!"));
		}
		return [];
	}
	,write: function(data) {
		var tmp;
		if(!this.get_isFile()) {
			var tmp1;
			var this1 = tannus_sys__$Path_Path_$Impl_$.fromString(this.name);
			tmp1 = this1.s;
			tmp = !this.volume.exists(tmp1);
		} else tmp = true;
		if(tmp) {
			this.content = data;
			this.set_mdate(new Date());
		} else {
			var tmp2;
			var this2 = tannus_sys__$Path_Path_$Impl_$.fromString(this.name);
			tmp2 = this2.s;
			throw new js__$Boot_HaxeError("IOError: " + ("\"" + tmp2 + "\" is a Directory!"));
		}
	}
	,read: function() {
		if(this.get_isFile()) {
			if(this.content == null) return tannus_io_impl_BrowserBinary.ofString(""); else return this.content;
		} else {
			var tmp1;
			var this1 = tannus_sys__$Path_Path_$Impl_$.fromString(this.name);
			tmp1 = this1.s;
			throw new js__$Boot_HaxeError("IOError: " + ("\"" + tmp1 + "\" cannot be read!"));
		}
		var tmp;
		var this2;
		this2 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this2;
		return tmp;
	}
	,append: function(data) {
		if(this.get_isFile()) {
			this.content = this.read();
			var s = data.toString();
			this.content.appendString(s);
			this.set_mdate(new Date());
		} else {
			var tmp;
			var this1 = tannus_sys__$Path_Path_$Impl_$.fromString(this.name);
			tmp = this1.s;
			throw new js__$Boot_HaxeError("IOError: " + ("\"" + tmp + "\" cannot be written to!"));
		}
	}
	,rename: function(newname) {
		if(this.get_isFile()) this.name = newname; else {
			var subs = this.list();
			var _g = 0;
			while(_g < subs.length) {
				var e = subs[_g];
				++_g;
				var tmp;
				var this1 = tannus_sys__$Path_Path_$Impl_$.fromString(e.name).normalize();
				tmp = this1.s;
				var np = tmp;
				var tmp1;
				var this2 = tannus_sys__$Path_Path_$Impl_$.fromString(this.name).normalize();
				tmp1 = this2.s;
				var tmp2;
				var this3 = new tannus_sys_CPath(newname).normalize();
				tmp2 = this3.s;
				np = StringTools.replace(np,tmp1,tmp2);
				e.name = np;
			}
			this.name = newname;
		}
	}
	,serialize: function() {
		return { 'name' : this.name, 'type' : this.type, 'meta' : this.meta, 'content' : this.content};
	}
	,get_path: function() {
		return tannus_sys__$Path_Path_$Impl_$.fromString(this.name);
	}
	,set_path: function(np) {
		this.name = np.s;
		return tannus_sys__$Path_Path_$Impl_$.fromString(this.name);
	}
	,get_stats: function() {
		if(!this.get_isFile()) {
			var tmp1;
			var this1 = tannus_sys__$Path_Path_$Impl_$.fromString(this.name);
			tmp1 = this1.s;
			throw new js__$Boot_HaxeError("IOError: " + ("\"" + tmp1 + "\" is a Directory!"));
		}
		var tmp;
		var _this = this.read();
		tmp = _this._length;
		return { 'size' : tmp, 'ctime' : this.get_cdate(), 'mtime' : this.get_mdate()};
	}
	,get_isFile: function() {
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			return true;
		default:
			return false;
		}
	}
	,get_isDirectory: function() {
		return !this.get_isFile();
	}
	,get_cdate: function() {
		var tmp;
		var _this = this.meta;
		if(__map_reserved.cdate != null) tmp = _this.getReserved("cdate"); else tmp = _this.h["cdate"];
		return tmp;
	}
	,set_cdate: function(cd) {
		var tmp;
		var _this = this.meta;
		if(__map_reserved.cdate != null) tmp = _this.getReserved("cdate"); else tmp = _this.h["cdate"];
		var _cd = tmp;
		if(_cd != null && js_Boot.__instanceof(_cd,Date)) return _cd; else {
			var tmp1;
			var _this1 = this.meta;
			if(__map_reserved.cdate != null) _this1.setReserved("cdate",cd); else _this1.h["cdate"] = cd;
			tmp1 = cd;
			return tmp1;
		}
	}
	,get_mdate: function() {
		var tmp;
		var _this = this.meta;
		if(__map_reserved.mdate != null) tmp = _this.getReserved("mdate"); else tmp = _this.h["mdate"];
		var m = tmp;
		return m != null?m:this.get_cdate();
	}
	,set_mdate: function(nm) {
		var tmp;
		var _this = this.meta;
		if(__map_reserved.mdate != null) _this.setReserved("mdate",nm); else _this.h["mdate"] = nm;
		tmp = nm;
		return tmp;
	}
	,name: null
	,content: null
	,type: null
	,meta: null
	,volume: null
	,__class__: tannus_sys_VVEntry
	,__properties__: {set_mdate:"set_mdate",get_mdate:"get_mdate",set_cdate:"set_cdate",get_cdate:"get_cdate",get_isDirectory:"get_isDirectory",get_isFile:"get_isFile",get_stats:"get_stats",set_path:"set_path",get_path:"get_path"}
};
var tannus_sys_VVType = $hxClasses["tannus.sys.VVType"] = { __ename__ : ["tannus","sys","VVType"], __constructs__ : ["VVFile","VVFolder"] };
tannus_sys_VVType.VVFile = ["VVFile",0];
tannus_sys_VVType.VVFile.toString = $estr;
tannus_sys_VVType.VVFile.__enum__ = tannus_sys_VVType;
tannus_sys_VVType.VVFolder = ["VVFolder",1];
tannus_sys_VVType.VVFolder.toString = $estr;
tannus_sys_VVType.VVFolder.__enum__ = tannus_sys_VVType;
var tannus_sys_VirtualVolume = function(nam) {
	this.name = nam;
	this.entries = [];
};
$hxClasses["tannus.sys.VirtualVolume"] = tannus_sys_VirtualVolume;
tannus_sys_VirtualVolume.__name__ = ["tannus","sys","VirtualVolume"];
tannus_sys_VirtualVolume.deserialize = function(data) {
	var bits = haxe_Unserializer.run(data.toString());
	var vv = new tannus_sys_VirtualVolume("wut");
	var _g = 0;
	while(_g < bits.length) {
		var bit = bits[_g];
		++_g;
		var e = tannus_sys_VVEntry.deserialize(bit,vv);
		vv.entries.push(e);
	}
	return vv;
};
tannus_sys_VirtualVolume.error = function(msg) {
	throw new js__$Boot_HaxeError("IOError: " + msg);
};
tannus_sys_VirtualVolume.normal = function(name) {
	var tmp;
	var this1 = new tannus_sys_CPath(name).normalize();
	tmp = this1.s;
	return tmp;
};
tannus_sys_VirtualVolume.prototype = {
	all: function() {
		return this.entries;
	}
	,getEntry: function(name) {
		var tmp;
		var this1 = new tannus_sys_CPath(name).normalize();
		tmp = this1.s;
		name = tmp;
		var _g = 0;
		var _g1 = this.entries;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var tmp1;
			var this2 = tannus_sys__$Path_Path_$Impl_$.fromString(f.name);
			tmp1 = this2.s;
			if(tmp1 == name) return f;
		}
		return null;
	}
	,create: function(name,type) {
		var tmp;
		var this1 = new tannus_sys_CPath(name).normalize();
		tmp = this1.s;
		name = tmp;
		var e = new tannus_sys_VVEntry(this,name,type);
		this.entries.push(e);
		return e;
	}
	,validatePath: function(p) {
		var tmp;
		var this1 = new tannus_sys_CPath(this.name).normalize();
		tmp = this1.s;
		this.name = tmp;
		var _p = p;
		while(true) if(_p.get_root()) break; else {
			_p = _p.get_directory();
			if(!this.exists(_p.s)) throw new js__$Boot_HaxeError("IOError: " + ("No such file or directory \"" + _p.s + "\"!"));
		}
	}
	,exists: function(name) {
		var tmp;
		var this1 = new tannus_sys_CPath(name).normalize();
		tmp = this1.s;
		name = tmp;
		var p = tannus_sys__$Path_Path_$Impl_$.fromString(name);
		return this.getEntry(p.s) != null;
	}
	,isDirectory: function(name) {
		var tmp;
		var this1 = new tannus_sys_CPath(name).normalize();
		tmp = this1.s;
		name = tmp;
		tannus_sys__$Path_Path_$Impl_$.fromString(name);
		var e = this.getEntry(name);
		if(e == null) return false; else if(name == "" || name == "/") return true; else {
			var _g = e.type;
			switch(_g[1]) {
			case 1:
				return true;
			default:
				return false;
			}
		}
	}
	,createDirectory: function(name) {
		var tmp;
		var this1 = new tannus_sys_CPath(name).normalize();
		tmp = this1.s;
		name = tmp;
		this.validatePath(tannus_sys__$Path_Path_$Impl_$.fromString(name));
		var name1 = name;
		var tmp1;
		var this2 = new tannus_sys_CPath(name1).normalize();
		tmp1 = this2.s;
		name1 = tmp1;
		var e = new tannus_sys_VVEntry(this,name1,tannus_sys_VVType.VVFolder);
		this.entries.push(e);
	}
	,deleteDirectory: function(name) {
		var tmp;
		var this1 = new tannus_sys_CPath(name).normalize();
		tmp = this1.s;
		name = tmp;
		if(this.isDirectory(name)) {
			var e = this.getEntry(name);
			var subs = e.list();
			if(subs.length == 0) HxOverrides.remove(this.entries,e); else throw new js__$Boot_HaxeError("IOError: " + ("Directory not empty \"" + name + "\"!"));
		}
	}
	,readDirectory: function(name) {
		var tmp;
		var this1 = new tannus_sys_CPath(name).normalize();
		tmp = this1.s;
		name = tmp;
		tannus_sys__$Path_Path_$Impl_$.fromString(name);
		if(name == "" || name == "/") return this.entries.filter(function(e) {
			return tannus_sys__$Path_Path_$Impl_$.fromString(e.name).get_root();
		}).map(function(e1) {
			var tmp1;
			var this2 = tannus_sys__$Path_Path_$Impl_$.fromString(e1.name).normalize();
			tmp1 = this2.s;
			return tmp1;
		}); else if(this.isDirectory(name)) {
			var e2 = this.getEntry(name);
			return e2.list().map(function(e3) {
				return e3.name;
			});
		} else throw new js__$Boot_HaxeError("IOError: " + ("\"" + name + "\" is not a Directory!"));
	}
	,write: function(path,data) {
		var tmp;
		var this1 = new tannus_sys_CPath(path).normalize();
		tmp = this1.s;
		path = tmp;
		this.validatePath(tannus_sys__$Path_Path_$Impl_$.fromString(path));
		var e = this.getEntry(path);
		if(e == null) {
			var tmp1;
			var name = path;
			var tmp2;
			var this2 = new tannus_sys_CPath(name).normalize();
			tmp2 = this2.s;
			name = tmp2;
			var e1 = new tannus_sys_VVEntry(this,name,tannus_sys_VVType.VVFile);
			this.entries.push(e1);
			tmp1 = e1;
			e = tmp1;
		}
		e.write(data);
	}
	,read: function(path) {
		var tmp;
		var this1 = new tannus_sys_CPath(path).normalize();
		tmp = this1.s;
		path = tmp;
		var e = this.getEntry(path);
		if(e != null && e.get_isFile()) return e.read(); else throw new js__$Boot_HaxeError("IOError: " + ("\"" + path + "\" is either a Directory, or does not exist!"));
	}
	,append: function(path,data) {
		var tmp;
		var this1 = new tannus_sys_CPath(path).normalize();
		tmp = this1.s;
		path = tmp;
		var e = this.getEntry(path);
		if(e != null && e.get_isFile()) e.append(data); else throw new js__$Boot_HaxeError("IOError: " + ("\"" + path + "\" cannot be written to!"));
	}
	,deleteFile: function(path) {
		var tmp;
		var this1 = new tannus_sys_CPath(path).normalize();
		tmp = this1.s;
		path = tmp;
		var e = this.getEntry(path);
		if(e != null && e.get_isFile()) HxOverrides.remove(this.entries,e); else throw new js__$Boot_HaxeError("IOError: " + ("Cannot delete \"" + path + "\"!"));
	}
	,rename: function(oldp,newp) {
		var tmp;
		var this1 = new tannus_sys_CPath(oldp).normalize();
		tmp = this1.s;
		oldp = tmp;
		var tmp1;
		var this2 = new tannus_sys_CPath(newp).normalize();
		tmp1 = this2.s;
		newp = tmp1;
		if(this.exists(oldp)) {
			this.validatePath(tannus_sys__$Path_Path_$Impl_$.fromString(newp));
			var e = this.getEntry(oldp);
			e.rename(newp);
		} else throw new js__$Boot_HaxeError("IOError: " + ("No such file or directory \"" + oldp + "\"!"));
	}
	,stat: function(path) {
		var tmp;
		var this1 = new tannus_sys_CPath(path).normalize();
		tmp = this1.s;
		path = tmp;
		var e = this.getEntry(path);
		if(e != null) return e.get_stats(); else throw new js__$Boot_HaxeError("IOError: " + ("No such file or directory \"" + path + "\"!"));
	}
	,serialize: function() {
		var bits = [];
		var _g = 0;
		var _g1 = this.entries;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			bits.push(e.serialize());
		}
		haxe_Serializer.USE_CACHE = true;
		haxe_Serializer.USE_ENUM_INDEX = true;
		var tmp;
		var s = haxe_Serializer.run(bits);
		tmp = tannus_io_impl_BrowserBinary.ofString(s);
		var data = tmp;
		return data;
	}
	,zip: function() {
		var entry_list = new List();
		var _g = 0;
		var _g1 = this.entries;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.get_isFile()) {
				var tmp1;
				var this1 = tannus_sys__$Path_Path_$Impl_$.fromString(e.name);
				tmp1 = this1.s;
				var zentry = { 'fileTime' : new Date(), 'fileSize' : e.content._length, fileName : tmp1, 'dataSize' : e.content._length, 'data' : e.content.toBytes(), 'compressed' : false, 'extraFields' : null, 'crc32' : null};
				entry_list.push(zentry);
			}
		}
		var out = new haxe_io_BytesOutput();
		var writer = new haxe_zip_Writer(out);
		writer.write(entry_list);
		var tmp;
		var b = out.getBytes();
		tmp = tannus_io_impl_BrowserBinary.fromBytes(b);
		var zip_data = tmp;
		return new tannus_io_CBlob("zipfile","application/zip",zip_data);
	}
	,name: null
	,entries: null
	,__class__: tannus_sys_VirtualVolume
};
var tannus_sys_gs_Lexer = function() {
	this.reserved = [];
	var tmp;
	var this1;
	this1 = tannus_io_impl_BrowserBinary.alloc(0);
	tmp = this1;
	this.buffer = new tannus_io_ByteStack(tmp);
	this.tree = [];
	var set = tannus_io_impl_BrowserBinary.ofString("*{[,:<");
	this.reserved = this.reserved.concat(set.toArray());
};
$hxClasses["tannus.sys.gs.Lexer"] = tannus_sys_gs_Lexer;
tannus_sys_gs_Lexer.__name__ = ["tannus","sys","gs","Lexer"];
tannus_sys_gs_Lexer.prototype = {
	lex: function(s) {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		this.buffer = new tannus_io_ByteStack(tmp);
		this.tree = [];
		this.buffer = new tannus_io_ByteStack(tannus_io_impl_BrowserBinary.ofString(s));
		while(true) {
			var t = this.lexNext();
			if(t == null) break; else this.tree.push(t);
		}
		return this.tree;
	}
	,lexNext: function() {
		if(this.buffer.get_empty()) return null;
		var c = this.buffer.peek();
		if(c == 42) {
			this.advance();
			var tmp;
			if(!this.buffer.get_empty()) {
				var this1 = this.buffer.peek();
				tmp = this1 == 42;
			} else tmp = false;
			if(tmp) {
				this.advance();
				return tannus_sys_gs_Token.DoubleStar;
			} else return tannus_sys_gs_Token.Star;
		} else if(c == 44) {
			this.advance();
			return tannus_sys_gs_Token.Comma;
		} else if(c == 123) {
			var tmp1;
			var n = HxOverrides.cca("{",0);
			var this2;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n + ")!");
			this2 = n;
			tmp1 = this2;
			var tmp2;
			var n1 = HxOverrides.cca("}",0);
			var this3;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n1)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n1 + ")!");
			this3 = n1;
			tmp2 = this3;
			var betw = this.between(tmp1,tmp2);
			var etree = this.ilex(betw);
			var list = [];
			var ct = [];
			var _g = 0;
			while(_g < etree.length) {
				var tk = etree[_g];
				++_g;
				switch(tk[1]) {
				case 6:
					list.push(ct);
					ct = [];
					break;
				default:
					ct.push(tk);
				}
			}
			list.push(ct);
			return tannus_sys_gs_Token.Expand(list);
		} else if(c == 91) {
			var tmp3;
			var n2 = HxOverrides.cca("[",0);
			var this4;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n2)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n2 + ")!");
			this4 = n2;
			tmp3 = this4;
			var tmp4;
			var n3 = HxOverrides.cca("]",0);
			var this5;
			if(!tannus_io__$Byte_Byte_$Impl_$.isValid(n3)) throw new js__$Boot_HaxeError("Invalid Byte Value (" + n3 + ")!");
			this5 = n3;
			tmp4 = this5;
			var opt = this.ilex(this.between(tmp3,tmp4));
			return tannus_sys_gs_Token.Optional(opt);
		} else if(c == 58) {
			this.advance();
			return tannus_sys_gs_Token.Colon;
		} else if(c == 60) {
			this.advance();
			var code = "";
			while(!this.buffer.get_empty() && this.buffer.peek() != 62) {
				var tmp5;
				var this6 = this.advance();
				tmp5 = String.fromCharCode(this6);
				code += tmp5;
			}
			this.advance();
			var param = this.ilex(code);
			var name = "";
			var check = tannus_sys_gs_Token.Star;
			var bits = [param.shift(),param.shift(),param.shift()];
			switch(bits.length) {
			case 3:
				switch(bits[0][1]) {
				case 0:
					if(bits[1] == null) {
						if(bits[2] == null) name = StringTools.trim(bits[0][2]); else switch(bits[2][1]) {
						default:
							throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
						}
					} else switch(bits[1][1]) {
					case 7:
						var tcheck = bits[2];
						if(tcheck != null) {
							name = bits[0][2];
							check = tcheck;
						} else throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
						break;
					default:
						throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
					}
					break;
				default:
					throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Unexpected " + Std.string(bits));
			}
			return tannus_sys_gs_Token.Param(name,check);
		} else {
			var txt = String.fromCharCode(c);
			this.advance();
			while(!this.buffer.get_empty() && !Lambda.has(this.reserved,this.buffer.peek())) {
				c = this.advance();
				txt += String.fromCharCode(c);
			}
			return tannus_sys_gs_Token.Literal(txt);
		}
	}
	,ilex: function(s) {
		var current = this.save();
		this.tree = [];
		var res = this.lex(s);
		this.restore(current);
		return res;
	}
	,between: function(start,end,recursive) {
		if(recursive == null) recursive = true;
		var c = this.buffer.peek();
		var str = "";
		if(c == start) {
			this.advance();
			var lvl = 1;
			while(!this.buffer.get_empty() && lvl > 0) {
				c = this.buffer.peek();
				if(c == start && recursive) lvl++; else if(c == end) lvl--;
				if(lvl > 0) str += String.fromCharCode(c);
				this.advance();
			}
		} else throw new js__$Boot_HaxeError("Structure not present!");
		return str;
	}
	,reset: function() {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		this.buffer = new tannus_io_ByteStack(tmp);
		this.tree = [];
	}
	,next: function() {
		return this.buffer.peek();
	}
	,advance: function() {
		return this.buffer.pop();
	}
	,reserve: function(set) {
		this.reserved = this.reserved.concat(set.toArray());
	}
	,save: function() {
		return { 'buffer' : this.buffer.copy(), 'tree' : this.tree};
	}
	,restore: function(s) {
		this.buffer = s.buffer;
		this.tree = s.tree;
	}
	,get_eoi: function() {
		return this.buffer.get_empty();
	}
	,buffer: null
	,tree: null
	,reserved: null
	,__class__: tannus_sys_gs_Lexer
	,__properties__: {get_eoi:"get_eoi"}
};
var tannus_sys_gs_Printer = function() {
	this.groupCount = 0;
	this.params = new haxe_ds_StringMap();
};
$hxClasses["tannus.sys.gs.Printer"] = tannus_sys_gs_Printer;
tannus_sys_gs_Printer.__name__ = ["tannus","sys","gs","Printer"];
tannus_sys_gs_Printer.compile = function(s,flags) {
	var p = new tannus_sys_gs_Printer();
	var t = new tannus_sys_gs_Lexer().lex(s);
	return { 'regex' : p.pattern(t,flags), 'params' : p.params};
};
tannus_sys_gs_Printer.prototype = {
	pattern: function(tree,flags) {
		if(flags == null) flags = "";
		return new EReg(this.print(tree),flags);
	}
	,print: function(tree) {
		var s = "";
		var _g = 0;
		while(_g < tree.length) {
			var t = tree[_g];
			++_g;
			s += this.printToken(t);
		}
		return s;
	}
	,printToken: function(t,parent) {
		switch(t[1]) {
		case 0:
			var txt = t[2];
			return this.escape(txt);
		case 4:
			this.groupCount++;
			return "([^/]+)";
		case 5:
			this.groupCount++;
			return "(.+)";
		case 3:
			var check = t[3];
			var name = t[2];
			var v = this.groupCount;
			var _this = this.params;
			if(__map_reserved[name] != null) _this.setReserved(name,v); else _this.h[name] = v;
			v;
			return this.printToken(check,t);
		case 2:
			var tree = t[2];
			this.groupCount++;
			var tmp;
			var f = $bind(this,this.printToken);
			var a1 = t;
			tmp = function(t1) {
				return f(t1,a1);
			};
			var sprint = tmp;
			return tannus_ds_StringUtils.wrap(tree.map(sprint).join(""),"(",")") + "?";
		case 1:
			var choices = t[2];
			this.groupCount++;
			var tmp1;
			var f1 = $bind(this,this.printToken);
			var a11 = t;
			tmp1 = function(t2) {
				return f1(t2,a11);
			};
			var sprint1 = tmp1;
			var tmp2;
			var _g = [];
			var _g1 = 0;
			while(_g1 < choices.length) {
				var c = choices[_g1];
				++_g1;
				_g.push(c.map(sprint1).join(""));
			}
			tmp2 = _g;
			var schoices = tmp2;
			var canBeEmpty = HxOverrides.remove(schoices,"");
			var res = tannus_ds_StringUtils.wrap(schoices.join("|"),"(",")");
			if(canBeEmpty) res += "?";
			return res;
		default:
			console.log(Std.string(t) + "");
			throw new js__$Boot_HaxeError("SyntaxError: Unexpected " + Std.string(t));
			return "";
		}
	}
	,escape: function(txt) {
		var esc = [".","^","$","+","(",")","?"];
		var _g = 0;
		while(_g < esc.length) {
			var c = esc[_g];
			++_g;
			txt = StringTools.replace(txt,c,"\\" + c);
		}
		return txt;
	}
	,groupCount: null
	,params: null
	,__class__: tannus_sys_gs_Printer
};
var tannus_sys_gs_Token = $hxClasses["tannus.sys.gs.Token"] = { __ename__ : ["tannus","sys","gs","Token"], __constructs__ : ["Literal","Expand","Optional","Param","Star","DoubleStar","Comma","Colon"] };
tannus_sys_gs_Token.Literal = function(txt) { var $x = ["Literal",0,txt]; $x.__enum__ = tannus_sys_gs_Token; $x.toString = $estr; return $x; };
tannus_sys_gs_Token.Expand = function(pieces) { var $x = ["Expand",1,pieces]; $x.__enum__ = tannus_sys_gs_Token; $x.toString = $estr; return $x; };
tannus_sys_gs_Token.Optional = function(sub) { var $x = ["Optional",2,sub]; $x.__enum__ = tannus_sys_gs_Token; $x.toString = $estr; return $x; };
tannus_sys_gs_Token.Param = function(name,check) { var $x = ["Param",3,name,check]; $x.__enum__ = tannus_sys_gs_Token; $x.toString = $estr; return $x; };
tannus_sys_gs_Token.Star = ["Star",4];
tannus_sys_gs_Token.Star.toString = $estr;
tannus_sys_gs_Token.Star.__enum__ = tannus_sys_gs_Token;
tannus_sys_gs_Token.DoubleStar = ["DoubleStar",5];
tannus_sys_gs_Token.DoubleStar.toString = $estr;
tannus_sys_gs_Token.DoubleStar.__enum__ = tannus_sys_gs_Token;
tannus_sys_gs_Token.Comma = ["Comma",6];
tannus_sys_gs_Token.Comma.toString = $estr;
tannus_sys_gs_Token.Comma.__enum__ = tannus_sys_gs_Token;
tannus_sys_gs_Token.Colon = ["Colon",7];
tannus_sys_gs_Token.Colon.toString = $estr;
tannus_sys_gs_Token.Colon.__enum__ = tannus_sys_gs_Token;
var tannus_sys_internal__$FileContent_FileContent_$Impl_$ = {};
$hxClasses["tannus.sys.internal._FileContent.FileContent_Impl_"] = tannus_sys_internal__$FileContent_FileContent_$Impl_$;
tannus_sys_internal__$FileContent_FileContent_$Impl_$.__name__ = ["tannus","sys","internal","_FileContent","FileContent_Impl_"];
tannus_sys_internal__$FileContent_FileContent_$Impl_$.__properties__ = {get_f:"get_f"}
tannus_sys_internal__$FileContent_FileContent_$Impl_$._new = function(f) {
	return f;
};
tannus_sys_internal__$FileContent_FileContent_$Impl_$.get_f = function(this1) {
	return this1.get();
};
tannus_sys_internal__$FileContent_FileContent_$Impl_$.append = function(this1,data) {
	var _this = this1.get();
	tannus_sys_JavaScriptFileSystem.append(_this._path.s,data);
};
tannus_sys_internal__$FileContent_FileContent_$Impl_$.toByteArray = function(this1) {
	var tmp;
	var _this = this1.get();
	tmp = tannus_sys_JavaScriptFileSystem.read(_this._path.s);
	return tmp;
};
tannus_sys_internal__$FileContent_FileContent_$Impl_$.toString = function(this1) {
	var tmp;
	var tmp1;
	var _this = this1.get();
	tmp1 = tannus_sys_JavaScriptFileSystem.read(_this._path.s);
	var this2 = tmp1;
	tmp = this2.toString();
	return tmp;
};
var tannus_utils__$Error_Error_$Impl_$ = {};
$hxClasses["tannus.utils._Error.Error_Impl_"] = tannus_utils__$Error_Error_$Impl_$;
tannus_utils__$Error_Error_$Impl_$.__name__ = ["tannus","utils","_Error","Error_Impl_"];
tannus_utils__$Error_Error_$Impl_$._new = function(message) {
	return new tannus_utils_JavaScriptError(message);
};
tannus_utils__$Error_Error_$Impl_$.toString = function(this1) {
	return Std.string(this1);
};
var tannus_utils_JavaScriptError = function(message) {
	Error.call(this,message);
};
$hxClasses["tannus.utils.JavaScriptError"] = tannus_utils_JavaScriptError;
tannus_utils_JavaScriptError.__name__ = ["tannus","utils","JavaScriptError"];
tannus_utils_JavaScriptError.__super__ = Error;
tannus_utils_JavaScriptError.prototype = $extend(Error.prototype,{
	__class__: tannus_utils_JavaScriptError
});
var tannus_xml_Elem = function(type,parent) {
	this.tag = type;
	this.text = "";
	this.attributes = { };
	this.children = [];
	if(parent != null) parent.addChild(this);
};
$hxClasses["tannus.xml.Elem"] = tannus_xml_Elem;
tannus_xml_Elem.__name__ = ["tannus","xml","Elem"];
tannus_xml_Elem.create = function(t) {
	return new tannus_xml_Elem(t);
};
tannus_xml_Elem.fromXml = function(x) {
	var tmp;
	if(x.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + x.nodeType);
	tmp = x.nodeName;
	var el = new tannus_xml_Elem(tmp);
	try {
		var tmp1;
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + x.nodeType);
		tmp1 = x.children[0];
		var firstNode = tmp1;
		if(firstNode != null) {
			var tmp2;
			if(firstNode.nodeType == Xml.Document || firstNode.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + firstNode.nodeType);
			tmp2 = firstNode.nodeValue;
			el.text = tmp2;
		} else el.text = "";
	} catch( err ) {
		if (err instanceof js__$Boot_HaxeError) err = err.val;
		if( js_Boot.__instanceof(err,String) ) {
		} else throw(err);
	}
	var $it0 = x.attributes();
	while( $it0.hasNext() ) {
		var k = $it0.next();
		el.set(k,x.get(k));
	}
	var $it1 = x.elements();
	while( $it1.hasNext() ) {
		var e = $it1.next();
		el.addChild(tannus_xml_Elem.fromXml(e));
	}
	return el;
};
tannus_xml_Elem.parse = function(code) {
	var tmp;
	var _this = Xml.parse(code);
	if(_this.nodeType != Xml.Document && _this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _this.nodeType);
	tmp = _this.children[0];
	return tannus_xml_Elem.fromXml(tmp);
};
tannus_xml_Elem.prototype = {
	addChild: function(child) {
		this.children.push(child);
		child.parent = this;
	}
	,removeChild: function(child) {
		HxOverrides.remove(this.children,child);
	}
	,insertChild: function(child,index) {
		this.children.splice(index,0,child);
	}
	,replaceChild: function(oldChild,newChild) {
		this.children[HxOverrides.indexOf(this.children,oldChild,0)] = newChild;
	}
	,indexOfChild: function(child) {
		var _g1 = 0;
		var _g = this.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.children[i] == child) return i;
		}
		return -1;
	}
	,index: function() {
		if(this.parent != null) return this.parent.indexOfChild(this); else return -1;
	}
	,replaceWith: function(other) {
		if(this.parent != null) this.parent.replaceChild(this,other);
	}
	,append: function(child) {
		this.addChild(child);
	}
	,prepend: function(child) {
		this.addChild(child);
		HxOverrides.remove(this.children,child);
		this.children.splice(0,0,child);
	}
	,insertBefore: function(what,before) {
		this.addChild(what);
		HxOverrides.remove(this.children,what);
		var pos = this.indexOfChild(before);
		this.children.splice(pos,0,what);
	}
	,insertAfter: function(what,after) {
		this.addChild(what);
		HxOverrides.remove(this.children,what);
		var pos = this.indexOfChild(after) + 1;
		this.children.splice(pos,0,what);
	}
	,after: function(what) {
		if(this.parent != null) this.parent.insertAfter(what,this);
	}
	,before: function(what) {
		if(this.parent != null) this.parent.insertBefore(what,this);
	}
	,hasChild: function(child) {
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e == child) return true;
		}
		return false;
	}
	,hasDescendendant: function(child) {
		var _g = 0;
		var _g1 = this.descend();
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e == child) return true;
		}
		return false;
	}
	,childOf: function(par) {
		return par.hasChild(this);
	}
	,descendantOf: function(par) {
		return par.hasDescendendant(this);
	}
	,get: function(key) {
		var tmp;
		var tmp1;
		var this2 = this.attributes;
		var tmp2;
		var tmp3;
		if(this2 == null) tmp2 = null; else if(this2.__properties__ && (tmp3 = this2.__properties__["get_" + key])) tmp2 = this2[tmp3](); else tmp2 = this2[key];
		tmp1 = tmp2;
		var this1 = tmp1;
		if(this1 != null) tmp = this1; else tmp = this1;
		return tmp;
	}
	,set: function(key,val) {
		var this1 = this.attributes;
		var tmp1;
		if(this1.__properties__ && (tmp1 = this1.__properties__["set_" + key])) this1[tmp1](val); else this1[key] = val;
		var tmp;
		var tmp2;
		if(this1 == null) tmp = null; else if(this1.__properties__ && (tmp2 = this1.__properties__["get_" + key])) tmp = this1[tmp2](); else tmp = this1[key];
		tmp;
		return this.get(key);
	}
	,exists: function(key) {
		return Object.prototype.hasOwnProperty.call(this.attributes,key);
	}
	,attr: function(_batch) {
		var batch = tannus_ds_CObj.create(_batch);
		var _g = 0;
		var _g1 = batch.keys();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var tmp;
			var o = batch.o;
			var tmp1;
			if(o == null) tmp = null; else if(o.__properties__ && (tmp1 = o.__properties__["get_" + key])) tmp = o[tmp1](); else tmp = o[key];
			this.set(key,Std.string(tmp));
		}
		return this;
	}
	,walk: function(f) {
		if(this.parent != null) f(this);
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var kid = _g1[_g];
			++_g;
			f(kid);
		}
	}
	,descend: function() {
		var all = [];
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			all.push(c);
			all = all.concat(c.descend());
		}
		return all;
	}
	,query: function(test) {
		var res = [];
		this.walk(function(el) {
			if(test(el)) res.push(el);
		});
		return res;
	}
	,find: function(name) {
		var res = [];
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.tag == name) res.push(e);
		}
		return res;
	}
	,findByName: function(name) {
		return this.query(function(e) {
			return e.tag.toLowerCase() == name.toLowerCase();
		});
	}
	,findByAttribute: function(key,val) {
		return this.query(function(e) {
			var tmp;
			var tmp1;
			var this2 = e.attributes;
			var tmp2;
			var tmp3;
			if(this2 == null) tmp2 = null; else if(this2.__properties__ && (tmp3 = this2.__properties__["get_" + key])) tmp2 = this2[tmp3](); else tmp2 = this2[key];
			tmp1 = tmp2;
			var this1 = tmp1;
			if(this1 != null) tmp = this1; else tmp = this1;
			return tmp == val;
		});
	}
	,toXml: function() {
		var xm = Xml.createElement(this.tag);
		if(this.text != "") xm.addChild(Xml.createPCData(this.text));
		var _g = 0;
		var _g1 = Reflect.fields(this.attributes);
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			xm.set(k,this.get(k));
		}
		var _g2 = 0;
		var _g11 = this.children;
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			xm.addChild(child.toXml());
		}
		return xm;
	}
	,print: function(pretty) {
		if(pretty == null) pretty = false;
		return tannus_xml_Printer.print(this,pretty);
	}
	,_pre_print: function() {
	}
	,tag: null
	,text: null
	,attributes: null
	,children: null
	,parent: null
	,__class__: tannus_xml_Elem
};
var tannus_xml_Printer = function() {
	this.buffer = "";
	this.history = new tannus_ds_Stack();
	this.space = "   ";
	this.pretty = false;
};
$hxClasses["tannus.xml.Printer"] = tannus_xml_Printer;
tannus_xml_Printer.__name__ = ["tannus","xml","Printer"];
tannus_xml_Printer.print = function(e,pretty) {
	if(pretty == null) pretty = false;
	var p = new tannus_xml_Printer();
	p.pretty = pretty;
	return p.generate(e);
};
tannus_xml_Printer.prototype = {
	generate: function(e) {
		this.buffer = "";
		this.history = new tannus_ds_Stack();
		this.preprocess(e);
		this.genElem(e);
		return this.buffer;
	}
	,genElem: function(e,indent) {
		if(indent == null) indent = 0;
		var pre = tannus_ds_StringUtils.times(this.space,indent);
		if(this.pretty) indent++;
		var tmp;
		var _g = [];
		var _g1 = 0;
		var _g2 = Reflect.fields(e.attributes);
		while(_g1 < _g2.length) {
			var name = _g2[_g1];
			++_g1;
			var tmp1;
			var this1 = e.attributes;
			var tmp2;
			var tmp3;
			if(this1 == null) tmp2 = null; else if(this1.__properties__ && (tmp3 = this1.__properties__["get_" + name])) tmp2 = this1[tmp3](); else tmp2 = this1[name];
			tmp1 = tmp2;
			_g.push(name + "=\"" + Std.string(tmp1) + "\"");
		}
		tmp = _g;
		var parts = tmp;
		var open = "<" + e.tag;
		if(parts.length > 0) {
			open += " ";
			open += parts.join(" ");
		}
		open += ">";
		var close = "</" + e.tag + ">";
		var lines = e.text.split("\n");
		var txt = this.getElemText(e,indent);
		if(e.children.length > 0) {
			this.write(pre + open + txt + "\n");
			var _g11 = 0;
			var _g21 = e.children;
			while(_g11 < _g21.length) {
				var child = _g21[_g11];
				++_g11;
				this.genElem(child,indent);
			}
			this.write(pre + close + "\n");
		} else {
			this.write(pre + open);
			this.write(txt);
			if(lines.length > 1) this.write(pre + close + "\n"); else this.write(close + "\n");
		}
	}
	,preprocess: function(e) {
		e._pre_print();
		var _g = 0;
		var _g1 = e.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.preprocess(child);
		}
	}
	,getElemText: function(e,indent) {
		var lines = e.text.split("\n");
		var pre = tannus_ds_StringUtils.times(this.space,indent);
		if(lines.length > 1) {
			var res = "\n";
			var _g = 0;
			while(_g < lines.length) {
				var l = lines[_g];
				++_g;
				res += pre + l + "\n";
			}
			return res;
		} else return e.text;
	}
	,save: function() {
		this.history.add(this.buffer);
	}
	,restore: function() {
		this.buffer = this.history.pop();
	}
	,write: function(s) {
		this.buffer += s;
	}
	,writeln: function(s) {
		this.write(s + "\n");
	}
	,history: null
	,buffer: null
	,space: null
	,pretty: null
	,__class__: tannus_xml_Printer
};
var vex_core_BaseElement = function() {
	this.id = tannus_ds_Memory.allocRandomId(6);
};
$hxClasses["vex.core.BaseElement"] = vex_core_BaseElement;
vex_core_BaseElement.__name__ = ["vex","core","BaseElement"];
vex_core_BaseElement.prototype = {
	appendTo: function(parent) {
	}
	,append: function(child) {
	}
	,remove: function() {
	}
	,removeElement: function(child) {
		return true;
	}
	,hasChild: function(child) {
		return true;
	}
	,attr: function(name,value) {
		if(value == null) return this.getAttribute(name); else return this.setAttribute(name,value);
	}
	,getAttribute: function(key) {
		return "";
	}
	,setAttribute: function(name,value) {
		return Std.string(value);
	}
	,removeAttribute: function(name) {
		return false;
	}
	,hasAttribute: function(name) {
		return false;
	}
	,id: null
	,__class__: vex_core_BaseElement
};
var vex_svg_SVGElement = function() {
	vex_core_BaseElement.call(this);
	this._children = [];
	this.o = tannus_ds_CObj.create(this);
	this.style = new vex_svg_SVGStyle(this);
};
$hxClasses["vex.svg.SVGElement"] = vex_svg_SVGElement;
vex_svg_SVGElement.__name__ = ["vex","svg","SVGElement"];
vex_svg_SVGElement.createElement = function(type) {
	return window.document.createElementNS("http://www.w3.org/2000/svg",type);
};
vex_svg_SVGElement.__super__ = vex_core_BaseElement;
vex_svg_SVGElement.prototype = $extend(vex_core_BaseElement.prototype,{
	appendTo: function(parent) {
		parent.appendChild(this.e);
	}
	,append: function(child) {
		if(js_Boot.__instanceof(child,vex_svg_SVGElement)) {
			this.e.appendChild((js_Boot.__cast(child , vex_svg_SVGElement)).e);
			this._children.push(child);
		} else vex_core_BaseElement.prototype.append.call(this,child);
	}
	,removeElement: function(child) {
		if(js_Boot.__instanceof(child,vex_svg_SVGElement)) {
			var had = this.hasChild(child);
			this.e.removeChild(child.e);
			return had;
		} else return vex_core_BaseElement.prototype.removeElement.call(this,child);
	}
	,remove: function() {
		this.e.remove();
	}
	,hasChild: function(child) {
		return Lambda.has(this._children,child);
	}
	,getAttribute: function(name) {
		return this.e.getAttribute(name);
	}
	,setAttribute: function(name,value) {
		this.e.setAttribute(name,Std.string(value));
		return this.getAttribute(name);
	}
	,removeAttribute: function(name) {
		var had = this.e.hasAttribute(name);
		this.e.removeAttribute(name);
		return had;
	}
	,hasAttribute: function(name) {
		return this.e.hasAttribute(name);
	}
	,addEventListener: function(name,handler,transformer) {
		this.e.addEventListener(name,function(event) {
			if(transformer != null) event = transformer(event);
			handler(event);
		});
	}
	,removeEventListener: function(name,handler) {
		this.e.removeEventListener(name,handler);
	}
	,clone: function() {
		var c = new vex_svg_SVGElement();
		if(this.e != null) {
			c.e = this.e.cloneNode();
			c.style.cloneFrom(this.style);
		}
		return c;
	}
	,toString: function() {
		return this.e.outerHTML;
	}
	,toXml: function() {
		return tannus_xml_Elem.parse(this.toString());
	}
	,print: function(pretty) {
		if(pretty == null) pretty = false;
		var s = "<?xml version=\"1.0\" encoding=\"utf-8\"?>";
		if(pretty) s += "\n";
		s += "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">";
		if(pretty) s += "\n";
		s += this.toXml().print(pretty);
		return s;
	}
	,e: null
	,_children: null
	,o: null
	,style: null
	,__class__: vex_svg_SVGElement
});
var vex_core_BaseDocument = function() {
	vex_svg_SVGElement.call(this);
};
$hxClasses["vex.core.BaseDocument"] = vex_core_BaseDocument;
vex_core_BaseDocument.__name__ = ["vex","core","BaseDocument"];
vex_core_BaseDocument.__super__ = vex_svg_SVGElement;
vex_core_BaseDocument.prototype = $extend(vex_svg_SVGElement.prototype,{
	get_x: function() {
		return 0;
	}
	,set_x: function(v) {
		return 0;
	}
	,get_y: function() {
		return 0;
	}
	,set_y: function(v) {
		return 0;
	}
	,get_width: function() {
		return 0;
	}
	,set_width: function(v) {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,set_height: function(v) {
		return 0;
	}
	,__class__: vex_core_BaseDocument
	,__properties__: {set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
});
var vex_svg_SVGDocument = function() {
	vex_core_BaseDocument.call(this);
	this.e = window.document.createElementNS("http://www.w3.org/2000/svg","svg");
	this.attr("xmlns","http://www.w3.org/2000/svg");
	this.attr("xmlns:xlink","http://www.w3.org/1999/xlink");
	this.attr("version","1.1");
};
$hxClasses["vex.svg.SVGDocument"] = vex_svg_SVGDocument;
vex_svg_SVGDocument.__name__ = ["vex","svg","SVGDocument"];
vex_svg_SVGDocument.__super__ = vex_core_BaseDocument;
vex_svg_SVGDocument.prototype = $extend(vex_core_BaseDocument.prototype,{
	toBlob: function() {
		var tmp;
		var tmp1;
		var s = this.print(true);
		tmp1 = tannus_io_impl_BrowserBinary.ofString(s);
		var dat = tmp1;
		tmp = new tannus_io_CBlob("image.svg","image/svg+xml",dat);
		return tmp;
	}
	,toImage: function() {
		var blob = this.toBlob();
		return gryffin_display_Image.load(URL.createObjectURL(new Blob([blob.data.b],{ 'type' : blob.type})));
	}
	,get_x: function() {
		var tmp;
		if(this.hasAttribute("x")) {
			var x = this.getAttribute("x");
			tmp = parseFloat(x);
		} else tmp = 0;
		return tmp;
	}
	,set_x: function(v) {
		var tmp;
		var x = this.setAttribute("x",v);
		tmp = parseFloat(x);
		return tmp;
	}
	,get_y: function() {
		var tmp;
		if(this.hasAttribute("y")) {
			var x = this.getAttribute("y");
			tmp = parseFloat(x);
		} else tmp = 0;
		return tmp;
	}
	,set_y: function(v) {
		var tmp;
		var x = this.setAttribute("y",v);
		tmp = parseFloat(x);
		return tmp;
	}
	,get_width: function() {
		var tmp;
		if(this.hasAttribute("width")) {
			var x = this.getAttribute("width");
			tmp = parseFloat(x);
		} else tmp = 0;
		return tmp;
	}
	,set_width: function(v) {
		var tmp;
		var x = this.setAttribute("width",v);
		tmp = parseFloat(x);
		return tmp;
	}
	,get_height: function() {
		var tmp;
		if(this.hasAttribute("height")) {
			var x = this.getAttribute("height");
			tmp = parseFloat(x);
		} else tmp = 0;
		return tmp;
	}
	,set_height: function(v) {
		var tmp;
		var x = this.setAttribute("height",v);
		tmp = parseFloat(x);
		return tmp;
	}
	,get_viewBox: function() {
		if(this.hasAttribute("viewBox")) {
			var nums = StringTools.replace(this.getAttribute("viewBox"),","," ").split(" ").filter(function(item) {
				var tmp;
				var s = StringTools.trim(item);
				tmp = s.length == 0;
				return !tmp;
			}).map(Std.parseFloat);
			return tannus_geom__$Rectangle_Rectangle_$Impl_$.fromArray(nums);
		} else {
			var tmp1;
			var _x = this.get_x();
			var _y = this.get_y();
			var _width = this.get_width();
			var _height = this.get_height();
			tmp1 = new tannus_geom_CRectangle(_x,_y,_width,_height);
			return tmp1;
		}
	}
	,set_viewBox: function(v) {
		this.setAttribute("viewBox",[v.x,v.y,v.width,v.height].map(Std.string).join(","));
		return v.clone();
	}
	,get_svg: function() {
		return this.e;
	}
	,__class__: vex_svg_SVGDocument
	,__properties__: $extend(vex_core_BaseDocument.prototype.__properties__,{get_svg:"get_svg",set_viewBox:"set_viewBox",get_viewBox:"get_viewBox"})
});
var vex_svg_SVGPath = $hx_exports.Path = function() {
	vex_svg_SVGElement.call(this);
	this.e = window.document.createElementNS("http://www.w3.org/2000/svg","path");
};
$hxClasses["vex.svg.SVGPath"] = vex_svg_SVGPath;
vex_svg_SVGPath.__name__ = ["vex","svg","SVGPath"];
vex_svg_SVGPath.fromCommandString = function(s) {
	var path = new vex_svg_SVGPath();
	path.attr("d",s);
	return path;
};
vex_svg_SVGPath.__super__ = vex_svg_SVGElement;
vex_svg_SVGPath.prototype = $extend(vex_svg_SVGElement.prototype,{
	edit: function() {
		return new vex_svg_path_Editor(this);
	}
	,clone: function() {
		var c = new vex_svg_SVGPath();
		c.set_commands(this.get_commands());
		c.style.cloneFrom(this.style);
		return c;
	}
	,toGeomPath: function() {
		return [];
	}
	,get_d: function() {
		return this.hasAttribute("d")?this.attr("d"):"";
	}
	,set_d: function(v) {
		return this.attr("d",v);
	}
	,get_commands: function() {
		return vex_svg_path_Parser.parseString(this.hasAttribute("d")?this.attr("d"):"");
	}
	,set_commands: function(list) {
		var v = vex_svg_path_Printer.print(list);
		this.attr("d",v);
		return list.slice();
	}
	,__class__: vex_svg_SVGPath
	,__properties__: {set_commands:"set_commands",get_commands:"get_commands",set_d:"set_d",get_d:"get_d"}
});
var vex_svg_SVGStyle = function(element) {
	this.e = element;
	var _g = this;
	var o = tannus_ds_CObj.create(this);
	var pointer = new tannus_io__$Pointer_Ref(function() {
		return _g.e.hasAttribute("stroke")?_g.e.getAttribute("stroke"):null;
	},function(v) {
		return _g.set_stroke(v);
	});
	var tmp;
	var tmp2;
	var o1 = o.o;
	var tmp3;
	if(o1 == null) tmp2 = null; else if(o1.__properties__ && (tmp3 = o1.__properties__["get_" + "__defineGetter__"])) tmp2 = o1[tmp3](); else tmp2 = o1.__defineGetter__;
	var func = tmp2;
	tmp = func.apply(o.o,["stroke",pointer.getter]);
	tmp;
	var tmp1;
	var tmp4;
	var o2 = o.o;
	var tmp5;
	if(o2 == null) tmp4 = null; else if(o2.__properties__ && (tmp5 = o2.__properties__["get_" + "__defineSetter__"])) tmp4 = o2[tmp5](); else tmp4 = o2.__defineSetter__;
	var func1 = tmp4;
	tmp1 = func1.apply(o.o,["stroke",pointer.setter]);
	tmp1;
	var pointer1 = new tannus_io__$Pointer_Ref(function() {
		var tmp6;
		if(_g.e.hasAttribute("stroke-width")) {
			var x = _g.e.getAttribute("stroke-width");
			tmp6 = parseFloat(x);
		} else tmp6 = 1;
		return tmp6;
	},function(v1) {
		var tmp7;
		var x1 = _g.e.attr("stroke-width",v1);
		tmp7 = parseFloat(x1);
		return tmp7;
	});
	var tmp8;
	var tmp10;
	var o3 = o.o;
	var tmp11;
	if(o3 == null) tmp10 = null; else if(o3.__properties__ && (tmp11 = o3.__properties__["get_" + "__defineGetter__"])) tmp10 = o3[tmp11](); else tmp10 = o3.__defineGetter__;
	var func2 = tmp10;
	tmp8 = func2.apply(o.o,["strokeWidth",pointer1.getter]);
	tmp8;
	var tmp9;
	var tmp12;
	var o4 = o.o;
	var tmp13;
	if(o4 == null) tmp12 = null; else if(o4.__properties__ && (tmp13 = o4.__properties__["get_" + "__defineSetter__"])) tmp12 = o4[tmp13](); else tmp12 = o4.__defineSetter__;
	var func3 = tmp12;
	tmp9 = func3.apply(o.o,["strokeWidth",pointer1.setter]);
	tmp9;
	var pointer2 = new tannus_io__$Pointer_Ref(function() {
		return _g.e.hasAttribute("fill")?_g.e.getAttribute("fill"):null;
	},function(v2) {
		return _g.set_fill(v2);
	});
	var tmp14;
	var tmp16;
	var o5 = o.o;
	var tmp17;
	if(o5 == null) tmp16 = null; else if(o5.__properties__ && (tmp17 = o5.__properties__["get_" + "__defineGetter__"])) tmp16 = o5[tmp17](); else tmp16 = o5.__defineGetter__;
	var func4 = tmp16;
	tmp14 = func4.apply(o.o,["fill",pointer2.getter]);
	tmp14;
	var tmp15;
	var tmp18;
	var o6 = o.o;
	var tmp19;
	if(o6 == null) tmp18 = null; else if(o6.__properties__ && (tmp19 = o6.__properties__["get_" + "__defineSetter__"])) tmp18 = o6[tmp19](); else tmp18 = o6.__defineSetter__;
	var func5 = tmp18;
	tmp15 = func5.apply(o.o,["fill",pointer2.setter]);
	tmp15;
};
$hxClasses["vex.svg.SVGStyle"] = vex_svg_SVGStyle;
vex_svg_SVGStyle.__name__ = ["vex","svg","SVGStyle"];
vex_svg_SVGStyle.prototype = {
	jsify: function() {
		var _g = this;
		var o = tannus_ds_CObj.create(this);
		var pointer = new tannus_io__$Pointer_Ref(function() {
			return _g.e.hasAttribute("stroke")?_g.e.getAttribute("stroke"):null;
		},function(v) {
			return _g.set_stroke(v);
		});
		var tmp;
		var tmp2;
		var o1 = o.o;
		var tmp3;
		if(o1 == null) tmp2 = null; else if(o1.__properties__ && (tmp3 = o1.__properties__["get_" + "__defineGetter__"])) tmp2 = o1[tmp3](); else tmp2 = o1.__defineGetter__;
		var func = tmp2;
		tmp = func.apply(o.o,["stroke",pointer.getter]);
		tmp;
		var tmp1;
		var tmp4;
		var o2 = o.o;
		var tmp5;
		if(o2 == null) tmp4 = null; else if(o2.__properties__ && (tmp5 = o2.__properties__["get_" + "__defineSetter__"])) tmp4 = o2[tmp5](); else tmp4 = o2.__defineSetter__;
		var func1 = tmp4;
		tmp1 = func1.apply(o.o,["stroke",pointer.setter]);
		tmp1;
		var pointer1 = new tannus_io__$Pointer_Ref(function() {
			var tmp6;
			if(_g.e.hasAttribute("stroke-width")) {
				var x = _g.e.getAttribute("stroke-width");
				tmp6 = parseFloat(x);
			} else tmp6 = 1;
			return tmp6;
		},function(v1) {
			var tmp7;
			var x1 = _g.e.attr("stroke-width",v1);
			tmp7 = parseFloat(x1);
			return tmp7;
		});
		var tmp8;
		var tmp10;
		var o3 = o.o;
		var tmp11;
		if(o3 == null) tmp10 = null; else if(o3.__properties__ && (tmp11 = o3.__properties__["get_" + "__defineGetter__"])) tmp10 = o3[tmp11](); else tmp10 = o3.__defineGetter__;
		var func2 = tmp10;
		tmp8 = func2.apply(o.o,["strokeWidth",pointer1.getter]);
		tmp8;
		var tmp9;
		var tmp12;
		var o4 = o.o;
		var tmp13;
		if(o4 == null) tmp12 = null; else if(o4.__properties__ && (tmp13 = o4.__properties__["get_" + "__defineSetter__"])) tmp12 = o4[tmp13](); else tmp12 = o4.__defineSetter__;
		var func3 = tmp12;
		tmp9 = func3.apply(o.o,["strokeWidth",pointer1.setter]);
		tmp9;
		var pointer2 = new tannus_io__$Pointer_Ref(function() {
			return _g.e.hasAttribute("fill")?_g.e.getAttribute("fill"):null;
		},function(v2) {
			return _g.set_fill(v2);
		});
		var tmp14;
		var tmp16;
		var o5 = o.o;
		var tmp17;
		if(o5 == null) tmp16 = null; else if(o5.__properties__ && (tmp17 = o5.__properties__["get_" + "__defineGetter__"])) tmp16 = o5[tmp17](); else tmp16 = o5.__defineGetter__;
		var func4 = tmp16;
		tmp14 = func4.apply(o.o,["fill",pointer2.getter]);
		tmp14;
		var tmp15;
		var tmp18;
		var o6 = o.o;
		var tmp19;
		if(o6 == null) tmp18 = null; else if(o6.__properties__ && (tmp19 = o6.__properties__["get_" + "__defineSetter__"])) tmp18 = o6[tmp19](); else tmp18 = o6.__defineSetter__;
		var func5 = tmp18;
		tmp15 = func5.apply(o.o,["fill",pointer2.setter]);
		tmp15;
	}
	,cloneFrom: function(src) {
		this.set_stroke(src.e.hasAttribute("stroke")?src.e.getAttribute("stroke"):null);
		var tmp;
		if(src.e.hasAttribute("stroke-width")) {
			var x1 = src.e.getAttribute("stroke-width");
			tmp = parseFloat(x1);
		} else tmp = 1;
		var v = tmp;
		var x = this.e.attr("stroke-width",v);
		parseFloat(x);
		this.set_fill(src.e.hasAttribute("fill")?src.e.getAttribute("fill"):null);
	}
	,get_stroke: function() {
		return this.e.hasAttribute("stroke")?this.e.getAttribute("stroke"):null;
	}
	,set_stroke: function(v) {
		if(v == null) v = "none";
		return this.e.setAttribute("stroke",v);
	}
	,get_fill: function() {
		return this.e.hasAttribute("fill")?this.e.getAttribute("fill"):null;
	}
	,set_fill: function(v) {
		if(v == null) v = "none";
		return this.e.setAttribute("fill",v);
	}
	,get_fillOpacity: function() {
		var tmp;
		if(this.e.hasAttribute("fill-opacity")) {
			var x = this.e.attr("fill-opacity");
			tmp = parseFloat(x);
		} else tmp = 1;
		return tmp;
	}
	,set_fillOpacity: function(v) {
		var tmp;
		var x = this.e.attr("fill-opacity",v);
		tmp = parseFloat(x);
		return tmp;
	}
	,get_strokeWidth: function() {
		var tmp;
		if(this.e.hasAttribute("stroke-width")) {
			var x = this.e.getAttribute("stroke-width");
			tmp = parseFloat(x);
		} else tmp = 1;
		return tmp;
	}
	,set_strokeWidth: function(v) {
		var tmp;
		var x = this.e.attr("stroke-width",v);
		tmp = parseFloat(x);
		return tmp;
	}
	,get_lineJoin: function() {
		return this.e.hasAttribute("stroke-linejoin")?this.e.attr("stroke-linejoin"):null;
	}
	,set_lineJoin: function(v) {
		return this.e.attr("stroke-linejoin",v);
	}
	,e: null
	,__class__: vex_svg_SVGStyle
	,__properties__: {set_lineJoin:"set_lineJoin",get_lineJoin:"get_lineJoin",set_strokeWidth:"set_strokeWidth",get_strokeWidth:"get_strokeWidth",set_fillOpacity:"set_fillOpacity",get_fillOpacity:"get_fillOpacity",set_fill:"set_fill",get_fill:"get_fill",set_stroke:"set_stroke",get_stroke:"get_stroke"}
};
var vex_svg_path_Command = $hxClasses["vex.svg.path.Command"] = { __ename__ : ["vex","svg","path","Command"], __constructs__ : ["CMove","CLine","CVertical","CHorizontal","CBezier","CQuadratic","CArc","CClose"] };
vex_svg_path_Command.CMove = function(p,relative) { var $x = ["CMove",0,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CLine = function(p,relative) { var $x = ["CLine",1,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CVertical = function(d,relative) { var $x = ["CVertical",2,d,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CHorizontal = function(d,relative) { var $x = ["CHorizontal",3,d,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CBezier = function(ctrl1,ctrl2,p,relative) { var $x = ["CBezier",4,ctrl1,ctrl2,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CQuadratic = function(ctrl,p,relative) { var $x = ["CQuadratic",5,ctrl,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CArc = function(radius,angle,large,sweep,p,relative) { var $x = ["CArc",6,radius,angle,large,sweep,p,relative]; $x.__enum__ = vex_svg_path_Command; $x.toString = $estr; return $x; };
vex_svg_path_Command.CClose = ["CClose",7];
vex_svg_path_Command.CClose.toString = $estr;
vex_svg_path_Command.CClose.__enum__ = vex_svg_path_Command;
var vex_svg_path_Editor = function(p) {
	this.path = p;
	this.commands = this.path.get_commands();
};
$hxClasses["vex.svg.path.Editor"] = vex_svg_path_Editor;
vex_svg_path_Editor.__name__ = ["vex","svg","path","Editor"];
vex_svg_path_Editor.prototype = {
	clear: function() {
		this.commands = [];
	}
	,moveToPoint: function(p) {
		var c = vex_svg_path_Command.CMove(p,false);
		this.commands.push(c);
	}
	,moveTo: function(x,y) {
		this.moveToPoint(new tannus_geom_TPoint(x,y,0));
	}
	,movePoint: function(p) {
		var c = vex_svg_path_Command.CMove(p,true);
		this.commands.push(c);
	}
	,move: function(x,y) {
		this.movePoint(new tannus_geom_TPoint(x,y,0));
	}
	,lineToPoint: function(p) {
		var c = vex_svg_path_Command.CLine(p,false);
		this.commands.push(c);
	}
	,lineTo: function(x,y) {
		this.lineToPoint(new tannus_geom_TPoint(x,y,0));
	}
	,linePoint: function(p) {
		var c = vex_svg_path_Command.CLine(p,true);
		this.commands.push(c);
	}
	,line: function(x,y) {
		this.linePoint(new tannus_geom_TPoint(x,y,0));
	}
	,vertical: function(to_y) {
		var c = vex_svg_path_Command.CVertical(to_y,false);
		this.commands.push(c);
	}
	,horizontal: function(to_x) {
		var c = vex_svg_path_Command.CHorizontal(to_x,false);
		this.commands.push(c);
	}
	,up: function(d) {
		var c = vex_svg_path_Command.CVertical(-d,true);
		this.commands.push(c);
	}
	,down: function(d) {
		var c = vex_svg_path_Command.CVertical(d,true);
		this.commands.push(c);
	}
	,right: function(d) {
		var c = vex_svg_path_Command.CHorizontal(d,true);
		this.commands.push(c);
	}
	,left: function(d) {
		this.right(-d);
	}
	,addBezier: function(b,relative) {
		if(relative == null) relative = false;
		var c = vex_svg_path_Command.CBezier(b.ctrl1,b.ctrl2,b.end,relative);
		this.commands.push(c);
	}
	,bezier: function(c1x,c1y,c2x,c2y,x,y,relative) {
		if(relative == null) relative = false;
		var b = new tannus_geom_Bezier(new tannus_geom_TPoint(0,0,0),new tannus_geom_TPoint(c1x,c1y,0),new tannus_geom_TPoint(c2x,c2y,0),new tannus_geom_TPoint(x,y,0));
		this.addBezier(b);
	}
	,addEllipticalArc: function(goal,radius,angle,large,sweep,relative) {
		if(relative == null) relative = false;
		if(sweep == null) sweep = false;
		if(large == null) large = false;
		var c = vex_svg_path_Command.CArc(radius,angle,large,sweep,goal,relative);
		this.commands.push(c);
	}
	,earc: function(tox,toy,radx,rady,angle,large,sweep,relative) {
		if(relative == null) relative = false;
		if(sweep == null) sweep = false;
		if(large == null) large = false;
		this.addEllipticalArc(new tannus_geom_TPoint(tox,toy,0),new tannus_geom_TPoint(radx,rady,0),angle,large,sweep,relative);
	}
	,addArc: function(center,radius,startAngle,endAngle) {
		var x1 = center.get_x() + radius * Math.cos(-(startAngle.v * Math.PI / 180));
		var y1 = center.get_y() + radius * Math.sin(-(startAngle.v * Math.PI / 180));
		var x2 = center.get_x() + radius * Math.cos(-(endAngle.v * Math.PI / 180));
		var y2 = center.get_y() + radius * Math.sin(-(endAngle.v * Math.PI / 180));
		this.moveTo(x1,y1);
		this.earc(x2,y2,radius,radius,endAngle.v,endAngle.v - startAngle.v > 180,false,false);
	}
	,arc: function(cx,cy,r,start,end) {
		this.addArc(new tannus_geom_TPoint(cx,cy,0),r,new tannus_geom_CAngle(start),new tannus_geom_CAngle(end));
	}
	,addWedge: function(center,radius,startAngle,endAngle) {
		var x1 = center.get_x() + radius * Math.cos(-(startAngle.v * Math.PI / 180));
		var y1 = center.get_y() + radius * Math.sin(-(startAngle.v * Math.PI / 180));
		var x2 = center.get_x() + radius * Math.cos(-(endAngle.v * Math.PI / 180));
		var y2 = center.get_y() + radius * Math.sin(-(endAngle.v * Math.PI / 180));
		this.moveToPoint(center);
		this.lineTo(x1,y1);
		this.earc(x2,y2,radius,radius,endAngle.v,endAngle.v - startAngle.v > 180,false,false);
		this.lineToPoint(center);
	}
	,wedge: function(cx,cy,r,start,end) {
		this.addWedge(new tannus_geom_TPoint(cx,cy,0),r,new tannus_geom_CAngle(start),new tannus_geom_CAngle(end));
	}
	,close: function() {
		this.commands.push(vex_svg_path_Command.CClose);
	}
	,save: function() {
		this.path.set_commands(this.commands);
	}
	,undo: function() {
		this.commands.pop();
	}
	,cmd: function(c) {
		this.commands.push(c);
	}
	,path: null
	,commands: null
	,__class__: vex_svg_path_Editor
};
var vex_svg_path_Parser = $hx_exports.PathParser = function() {
	this.commands = [];
};
$hxClasses["vex.svg.path.Parser"] = vex_svg_path_Parser;
vex_svg_path_Parser.__name__ = ["vex","svg","path","Parser"];
vex_svg_path_Parser.parseString = function(s) {
	if(s.length == 0) return []; else return new vex_svg_path_Parser().parse(tannus_io_impl_BrowserBinary.ofString(s));
};
vex_svg_path_Parser.__super__ = tannus_io_LexerBase;
vex_svg_path_Parser.prototype = $extend(tannus_io_LexerBase.prototype,{
	parse: function(data) {
		this.buffer = new tannus_io_ByteStack(data);
		this.commands = [];
		while(!(this.buffer != null && this.buffer.get_empty())) this.commands.push(this.parseCommand());
		return this.commands;
	}
	,parseCommand: function() {
		var c = this.buffer.peek(null);
		if(Lambda.has([9,10,11,12,13,32],c)) {
			this.buffer.pop();
			return this.parseCommand();
		} else if(c == 90) {
			this.buffer.pop();
			return vex_svg_path_Command.CClose;
		} else if(c == 77 || c == 109) {
			var rel = c == 109;
			this.buffer.pop();
			var tmp;
			var x = this.readInt();
			var y = this.readInt();
			tmp = new tannus_geom_TPoint(x,y,0);
			var p = tmp;
			return vex_svg_path_Command.CMove(p,rel);
		} else if(c == 76 || c == 108) {
			var rel1 = c == 108;
			this.buffer.pop();
			var tmp1;
			var x1 = this.readInt();
			var y1 = this.readInt();
			tmp1 = new tannus_geom_TPoint(x1,y1,0);
			var p1 = tmp1;
			return vex_svg_path_Command.CLine(p1,rel1);
		} else if(c == 86 || c == 118) {
			var rel2 = c == 118;
			this.buffer.pop();
			return vex_svg_path_Command.CVertical(this.readInt(),rel2);
		} else if(c == 72 || c == 104) {
			var rel3 = c == 104;
			this.buffer.pop();
			return vex_svg_path_Command.CHorizontal(this.readInt(),rel3);
		} else if(c == 67 || c == 99) {
			var rel4 = c == 99;
			this.buffer.pop();
			var tmp2;
			var x2 = this.readFloat();
			var y2 = this.readFloat();
			tmp2 = new tannus_geom_TPoint(x2,y2,0);
			var ctrl1 = tmp2;
			var tmp3;
			var x3 = this.readFloat();
			var y3 = this.readFloat();
			tmp3 = new tannus_geom_TPoint(x3,y3,0);
			var ctrl2 = tmp3;
			var tmp4;
			var x4 = this.readFloat();
			var y4 = this.readFloat();
			tmp4 = new tannus_geom_TPoint(x4,y4,0);
			var p2 = tmp4;
			return vex_svg_path_Command.CBezier(ctrl1,ctrl2,p2,rel4);
		} else if(c == 81 || c == 113) {
			var rel5 = c == 113;
			this.buffer.pop();
			var tmp5;
			var x5 = this.readFloat();
			var y5 = this.readFloat();
			tmp5 = new tannus_geom_TPoint(x5,y5,0);
			var ctrl = tmp5;
			var tmp6;
			var x6 = this.readFloat();
			var y6 = this.readFloat();
			tmp6 = new tannus_geom_TPoint(x6,y6,0);
			var p3 = tmp6;
			return vex_svg_path_Command.CQuadratic(ctrl,p3,rel5);
		} else if(c == 65 || c == 97) {
			var rel6 = c == 97;
			this.buffer.pop();
			var tmp7;
			var x7 = this.readFloat();
			var y7 = this.readFloat();
			tmp7 = new tannus_geom_TPoint(x7,y7,0);
			var radius = tmp7;
			var angle = this.readFloat();
			var large = this.readInt() == 1;
			var sweep = this.readInt() == 1;
			var tmp8;
			var x8 = this.readFloat();
			var y8 = this.readFloat();
			tmp8 = new tannus_geom_TPoint(x8,y8,0);
			var p4 = tmp8;
			return vex_svg_path_Command.CArc(radius,angle,large,sweep,p4,rel6);
		} else {
			this.buffer.pop();
			return this.parseCommand();
		}
	}
	,readInt: function() {
		var s = "";
		while(true) {
			var tmp;
			if(!(this.buffer != null && this.buffer.get_empty())) {
				var tmp1;
				var this1 = this.buffer.peek(null);
				if(this1 >= 48) tmp1 = this1 <= 57; else tmp1 = false;
				tmp = !tmp1;
			} else tmp = false;
			if(!tmp) break;
			this.buffer.pop();
		}
		while(true) {
			var tmp2;
			if(!(this.buffer != null && this.buffer.get_empty())) {
				var this2 = this.buffer.peek(null);
				if(this2 >= 48) tmp2 = this2 <= 57; else tmp2 = false;
			} else tmp2 = false;
			if(!tmp2) break;
			var tmp3;
			var this3 = this.buffer.pop();
			tmp3 = String.fromCharCode(this3);
			s += tmp3;
		}
		return Std.parseInt(s);
	}
	,readFloat: function() {
		var s = "";
		while(true) {
			var tmp;
			if(!(this.buffer != null && this.buffer.get_empty())) {
				var tmp1;
				var this1 = this.buffer.peek(null);
				if(this1 >= 48) tmp1 = this1 <= 57; else tmp1 = false;
				tmp = !tmp1;
			} else tmp = false;
			if(!tmp) break;
			this.buffer.pop();
		}
		while(true) {
			var tmp2;
			if(!(this.buffer != null && this.buffer.get_empty())) {
				var tmp4;
				var this2 = this.buffer.peek(null);
				if(this2 >= 48) tmp4 = this2 <= 57; else tmp4 = false;
				if(!tmp4) {
					var this3 = this.buffer.peek(null);
					tmp2 = this3 == 46;
				} else tmp2 = true;
			} else tmp2 = false;
			if(!tmp2) break;
			var tmp3;
			var this4 = this.buffer.pop();
			tmp3 = String.fromCharCode(this4);
			s += tmp3;
		}
		console.log(s);
		return parseFloat(s);
	}
	,readPoint: function() {
		var tmp;
		var x = this.readFloat();
		var y = this.readFloat();
		tmp = new tannus_geom_TPoint(x,y,0);
		return tmp;
	}
	,readBool: function() {
		return this.readInt() == 1;
	}
	,commands: null
	,__class__: vex_svg_path_Parser
});
var vex_svg_path_Printer = function() {
};
$hxClasses["vex.svg.path.Printer"] = vex_svg_path_Printer;
vex_svg_path_Printer.__name__ = ["vex","svg","path","Printer"];
vex_svg_path_Printer.print = function(list) {
	return new vex_svg_path_Printer().printCommands(list);
};
vex_svg_path_Printer.prototype = {
	printCommands: function(list) {
		var tmp;
		var this1;
		this1 = tannus_io_impl_BrowserBinary.alloc(0);
		tmp = this1;
		this.buffer = tmp;
		this.commands = list;
		var _g = 0;
		var _g1 = this.commands;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.printCommand(c);
		}
		return this.buffer.toString();
	}
	,printCommand: function(c) {
		switch(c[1]) {
		case 0:
			var pos = c[2];
			var s = "M";
			if(c[3]) s = "M".toLowerCase();
			this.buffer.appendString(s);
			var n = pos.get_x();
			this.buffer.appendString(n + "");
			this.buffer.appendString(" ");
			var n1 = pos.get_y();
			this.buffer.appendString(n1 + "");
			break;
		case 1:
			var pos1 = c[2];
			var s1 = "L";
			if(c[3]) s1 = "L".toLowerCase();
			this.buffer.appendString(s1);
			var n2 = pos1.get_x();
			this.buffer.appendString(n2 + "");
			this.buffer.appendString(" ");
			var n3 = pos1.get_y();
			this.buffer.appendString(n3 + "");
			break;
		case 2:
			var s2 = "V";
			if(c[3]) s2 = "V".toLowerCase();
			this.buffer.appendString(s2);
			this.buffer.appendString(c[2] + "");
			break;
		case 3:
			var s3 = "H";
			if(c[3]) s3 = "H".toLowerCase();
			this.buffer.appendString(s3);
			this.buffer.appendString(c[2] + "");
			break;
		case 4:
			var s4 = "C";
			if(c[5]) s4 = "C".toLowerCase();
			this.buffer.appendString(s4);
			this.points([c[2],c[3],c[4]]);
			break;
		case 5:
			var s5 = "Q";
			if(c[4]) s5 = "Q".toLowerCase();
			this.buffer.appendString(s5);
			this.points([c[2],c[3]]);
			break;
		case 6:
			var pos2 = c[6];
			var radius = c[2];
			var s6 = "A";
			if(c[7]) s6 = "A".toLowerCase();
			this.buffer.appendString(s6);
			var n4 = radius.get_x();
			this.buffer.appendString(n4 + "");
			this.buffer.appendString(" ");
			var n5 = radius.get_y();
			this.buffer.appendString(n5 + "");
			this.buffer.appendString(" ");
			this.buffer.appendString(c[3] + "");
			this.buffer.appendString(" ");
			this.buffer.appendString(c[4]?"1":"0");
			this.buffer.appendString(" ");
			this.buffer.appendString(c[5]?"1":"0");
			this.buffer.appendString(" ");
			var n6 = pos2.get_x();
			this.buffer.appendString(n6 + "");
			this.buffer.appendString(" ");
			var n7 = pos2.get_y();
			this.buffer.appendString(n7 + "");
			break;
		case 7:
			this.buffer.appendString("Z");
			break;
		}
	}
	,tag: function(s,lower) {
		if(lower) s = s.toLowerCase();
		this.buffer.appendString(s);
	}
	,points: function(list) {
		var last = list.pop();
		var _g = 0;
		while(_g < list.length) {
			var p = list[_g];
			++_g;
			var n = p.get_x();
			this.buffer.appendString(n + "");
			this.buffer.appendString(" ");
			var n1 = p.get_y();
			this.buffer.appendString(n1 + "");
			this.buffer.appendString(" ");
		}
		var n2 = last.get_x();
		this.buffer.appendString(n2 + "");
		this.buffer.appendString(" ");
		var n3 = last.get_y();
		this.buffer.appendString(n3 + "");
	}
	,point: function(p) {
		var n = p.get_x();
		this.buffer.appendString(n + "");
		this.buffer.appendString(" ");
		var n1 = p.get_y();
		this.buffer.appendString(n1 + "");
	}
	,'float': function(n) {
		this.buffer.appendString(n + "");
	}
	,bool: function(v) {
		this.buffer.appendString(v?"1":"0");
	}
	,w: function(s) {
		this.buffer.appendString(s);
	}
	,buffer: null
	,commands: null
	,__class__: vex_svg_path_Printer
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
function $arrayPushClosure(a) { return function(x) { a.push(x); }; }
if(Array.prototype.indexOf) HxOverrides.indexOf = function(a,o,i) {
	return Array.prototype.indexOf.call(a,o,i);
};
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
if(Array.prototype.map == null) Array.prototype.map = function(f) {
	var a = [];
	var _g1 = 0;
	var _g = this.length;
	while(_g1 < _g) {
		var i = _g1++;
		a[i] = f(this[i]);
	}
	return a;
};
if(Array.prototype.filter == null) Array.prototype.filter = function(f1) {
	var a1 = [];
	var _g11 = 0;
	var _g2 = this.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		var e = this[i1];
		if(f1(e)) a1.push(e);
	}
	return a1;
};
bplayer_display_Icons.icon_data = { pause : "M 26.9167,23.75L 33.25,23.75L 33.25,52.25L 26.9167,52.25L 26.9167,23.75 Z M 42.75,23.75L 49.0833,23.75L 49.0833,52.25L 42.75,52.25L 42.75,23.75 Z", sound3 : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 57.0079,38.0053C 57.0079,42.8155 55.0582,47.1702 51.906,50.3225L 49.6665,48.083C 52.2456,45.5039 53.8408,41.9409 53.8408,38.0053C 53.8408,34.0279 52.2115,30.431 49.5839,27.8457L 51.4982,25.2933C 54.8892,28.4715 57.0079,32.991 57.0079,38.0053 Z M 50.6737,38.0053C 50.6737,41.4696 49.0845,44.5627 46.5954,46.5954L 44.3398,44.3399C 46.2628,42.8953 47.5066,40.5956 47.5066,38.0053C 47.5066,35.4151 46.2628,33.1153 44.3398,31.6708L 46.5954,29.4152C 49.0845,31.4479 50.6737,34.541 50.6737,38.0053 Z M 44.3395,38.0053C 44.3395,40.1167 42.9621,41.9064 41.0568,42.5248L 39.5889,39.5889C 40.4634,39.5889 41.1724,38.8799 41.1724,38.0053C 41.1724,37.1307 40.4634,36.4218 39.5889,36.4218L 41.0568,33.4858C 42.9621,34.1042 44.3395,35.8939 44.3395,38.0053 Z", sound2 : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 50.6737,38.0053C 50.6737,41.4696 49.0845,44.5627 46.5954,46.5954L 44.3398,44.3399C 46.2628,42.8953 47.5066,40.5956 47.5066,38.0053C 47.5066,35.4151 46.2628,33.1153 44.3398,31.6708L 46.5954,29.4152C 49.0845,31.4479 50.6737,34.541 50.6737,38.0053 Z M 44.3395,38.0053C 44.3395,40.1167 42.9621,41.9064 41.0568,42.5248L 39.5889,39.5889C 40.4634,39.5889 41.1724,38.8799 41.1724,38.0053C 41.1724,37.1307 40.4634,36.4218 39.5889,36.4218L 41.0568,33.4858C 42.9621,34.1042 44.3395,35.8939 44.3395,38.0053 Z", sound1 : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 44.3395,38.0053C 44.3395,40.1167 42.9621,41.9064 41.0568,42.5248L 39.5889,39.5889C 40.4634,39.5889 41.1724,38.8799 41.1724,38.0053C 41.1724,37.1307 40.4634,36.4218 39.5889,36.4218L 41.0568,33.4858C 42.9621,34.1042 44.3395,35.8939 44.3395,38.0053 Z", sound0 : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z", previous : "M 33.6458,38L 49.4792,53.8333L 38.7917,53.8333L 22.1667,38L 38.7917,22.1667L 49.4792,22.1667L 33.6458,38 Z", 'sound-muted' : "M 20.5862,33.2547L 26.9204,33.2546L 36.4217,25.3369L 36.4217,52.2573L 26.9204,42.756L 20.5862,42.756C 18.8371,42.756 17.4191,41.338 17.4191,39.5889L 17.4191,36.4218C 17.4191,34.6726 18.8371,33.2547 20.5862,33.2547 Z M 40.9242,44.3957L 46.5229,38.797L 40.9242,33.1983L 44.2834,29.8391L 49.8821,35.4378L 55.4807,29.8392L 58.8399,33.1985L 53.2414,38.797L 58.8401,44.3957L 55.4808,47.7549L 49.8821,42.1562L 44.2834,47.7549L 40.9242,44.3957 Z", tag : "M 24.5416,19L 33.25,19L 55.4167,41.1667C 56.6533,42.4033 56.6533,44.4083 55.4167,45.645L 45.645,55.4167C 44.4084,56.6533 42.4033,56.6533 41.1667,55.4167L 19,33.25L 19,24.5417C 19,22.6945 19,20.8472 19.9236,19.9236C 20.8472,19 22.6944,19 24.5416,19 Z M 26.9167,23.75C 25.1678,23.75 23.75,25.1678 23.75,26.9167C 23.75,28.6656 25.1678,30.0833 26.9167,30.0833C 28.6656,30.0833 30.0833,28.6656 30.0833,26.9167C 30.0833,25.1678 28.6656,23.75 26.9167,23.75 Z", cog : "M 27.5314,21.8628L 33.0126,19.4224L 34.7616,23.3507C 36.6693,22.9269 38.6044,22.8903 40.4668,23.2026L 42.0083,19.1868L 47.6098,21.337L 46.0683,25.3528C 47.6612,26.3669 49.0747,27.6889 50.2088,29.2803L 54.1371,27.5313L 56.5776,33.0126L 52.6493,34.7616C 53.0731,36.6693 53.1097,38.6043 52.7974,40.4668L 56.8131,42.0083L 54.6629,47.6097L 50.6472,46.0683C 49.6331,47.6613 48.3111,49.0748 46.7197,50.2089L 48.4686,54.1372L 42.9874,56.5776L 41.2384,52.6493C 39.3307,53.0731 37.3957,53.1097 35.5333,52.7974L 33.9918,56.8131L 28.3903,54.6629L 29.9318,50.6472C 28.3388,49.6331 26.9252,48.3111 25.7911,46.7196L 21.8628,48.4686L 19.4224,42.9873L 23.3507,41.2383C 22.9269,39.3307 22.8903,37.3957 23.2026,35.5332L 19.1869,33.9918L 21.3371,28.3903L 25.3528,29.9318C 26.3669,28.3388 27.6889,26.9252 29.2804,25.7911L 27.5314,21.8628 Z M 34.3394,29.7781C 29.7985,31.7998 27.7564,37.1198 29.7781,41.6606C 31.7998,46.2015 37.1198,48.2436 41.6606,46.2219C 46.2015,44.2002 48.2436,38.8802 46.2219,34.3394C 44.2002,29.7985 38.8802,27.7564 34.3394,29.7781 Z", shuffle : "M 14.25,45.9166L 20.5834,45.9167L 39.1874,23.75L 47.8958,23.75L 41.1667,17.4167L 51.4583,17.4167L 61.75,26.9166L 51.4583,36.4167L 41.1667,36.4167L 47.8958,30.0833L 41.1667,30.0833L 22.1667,52.25L 14.25,52.25L 14.25,45.9166 Z M 14.25,30.0833L 14.25,23.75L 22.1667,23.75L 29.6875,32.5243L 26.1226,36.6834L 20.5833,30.0833L 14.25,30.0833 Z M 41.1667,45.9167L 47.8958,45.9167L 41.1666,39.5833L 51.4583,39.5834L 61.75,49.0834L 51.4583,58.5833L 41.1666,58.5833L 47.8958,52.25L 39.1873,52.25L 31.9416,43.6167L 35.5684,39.3854L 41.1667,45.9167 Z", bluetooth : "M 51,47L 36,61L 36,43L 28.25,50L 25.25,46.75L 35,38L 25.25,29.25L 28.25,26L 36,32L 36,14L 51,29L 42,38L 51,47 Z M 41,43L 41,50.5L 44.5,46.5L 41,43 Z M 41,33L 44.5,29.5L 41,25.3995L 41,33 Z", sort : "M 51.25,40L 38,53.25L 24.75,40L 51.25,40 Z M 51.25,36L 24.75,36L 38,22.75L 51.25,36 Z", plus : "M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z", play : "M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z", next : "M 42.3542,38L 26.5208,53.8333L 37.2083,53.8333L 53.8333,38L 37.2083,22.1667L 26.5208,22.1667L 42.3542,38 Z", close : "M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z", clock : "M 38,23.75C 46.7445,23.75 53.8333,30.8388 53.8333,39.5833C 53.8333,48.3278 46.7445,55.4167 38,55.4167C 29.2555,55.4167 22.1667,48.3278 22.1667,39.5833C 22.1667,30.8388 29.2555,23.75 38,23.75 Z M 38,27.7083C 31.4416,27.7083 26.125,33.025 26.125,39.5833C 26.125,46.1417 31.4416,51.4583 38,51.4583C 44.5584,51.4583 49.875,46.1417 49.875,39.5833C 49.875,33.025 44.5584,27.7083 38,27.7083 Z M 37.6042,30.875C 38.4786,30.875 39.1875,31.5839 39.1875,32.4583L 39.1875,38.3959L 45.125,38.3959C 45.9994,38.3959 46.7083,39.1047 46.7083,39.9792L 46.7083,40.7708C 46.7083,41.6453 45.9994,42.3542 45.125,42.3542L 38,42.3542C 37.2083,42.2222 36.4167,42.0903 35.9548,41.6285C 35.493,41.1667 35.3611,40.375 35.2292,39.5833L 35.2292,32.4583C 35.2292,31.5839 35.938,30.875 36.8125,30.875L 37.6042,30.875 Z M 49.0833,20.5833C 52.5811,20.5833 55.4167,23.4189 55.4167,26.9167C 55.4167,28.4256 54.889,29.8113 54.008,30.8993C 51.9429,27.1006 48.5651,24.1189 44.4835,22.5632C 45.6379,21.3439 47.2718,20.5833 49.0833,20.5833 Z M 26.9167,20.5834C 28.7282,20.5834 30.3621,21.3439 31.5165,22.5632C 27.4349,24.1189 24.0571,27.1006 21.992,30.8993C 21.111,29.8113 20.5833,28.4256 20.5833,26.9167C 20.5833,23.4189 23.4189,20.5834 26.9167,20.5834 Z", clear : "M 18.0147,41.5355C 16.0621,39.5829 16.0621,36.4171 18.0147,34.4645L 26.9646,25.5149C 28.0683,24.4113 29,24 31,24L 52,24C 54.7614,24 57,26.2386 57,29L 57,47C 57,49.7614 54.7614,52 52,52L 31,52C 29,52 28.0683,51.589 26.9646,50.4854L 18.0147,41.5355 Z M 47.5281,42.9497L 42.5784,37.9999L 47.5281,33.0502L 44.9497,30.4717L 40,35.4215L 35.0502,30.4717L 32.4718,33.0502L 37.4215,37.9999L 32.4718,42.9497L 35.0502,45.5281L 40,40.5783L 44.9497,45.5281L 47.5281,42.9497 Z", collapse : "M 54.2499,34L 42,34L 42,21.7501L 45.9999,17.7501L 45.9999,26.7501L 53.9999,18.7501L 57.2499,22.0001L 49.2499,30.0001L 58.2499,30.0001L 54.2499,34 Z M 34,21.7501L 34,34L 21.75,34L 17.75,30.0001L 26.75,30.0001L 18.75,22.0001L 22,18.7501L 30,26.7501L 30,17.7501L 34,21.7501 Z M 21.75,42L 34,42L 34,54.25L 30,58.25L 30,49.25L 22,57.25L 18.75,54L 26.75,46L 17.75,46L 21.75,42 Z M 42,54.25L 42,42L 54.2499,42L 58.2499,46L 49.2499,46.0001L 57.2499,54L 53.9999,57.25L 45.9999,49.25L 45.9999,58.25L 42,54.25 Z", expand : "M 30.25,58L 18,58L 18,45.75L 22,41.75L 22,50.75L 30,42.75L 33.25,46L 25.25,54L 34.25,54L 30.25,58 Z M 58,45.75L 58,58L 45.75,58L 41.75,54L 50.75,54L 42.75,46L 46,42.75L 54,50.75L 54,41.75L 58,45.75 Z M 45.75,18L 58,18L 58,30.25L 54,34.25L 54,25.25L 46,33.25L 42.75,30L 50.75,22L 41.75,22L 45.75,18 Z M 18,30.25L 18,18L 30.25,18L 34.25,22L 25.25,22L 33.25,30L 30,33.25L 22,25.25L 22,34.25L 18,30.25 Z", cast : "M 53,49C 55.2091,49 57,50.7909 57,53C 57,55.2091 55.2091,57 53,57C 50.7909,57 49,55.2091 49,53C 49,50.7909 50.7909,49 53,49 Z M 57,24C 38.7746,24 24,38.7746 24,57L 19,57C 19,36.0132 36.0132,19 57,19L 57,24 Z M 57,34C 44.2974,34 34,44.2975 34,57L 29,57C 29,41.536 41.536,29 57,29L 57,34 Z M 57,44C 49.8203,44 44,49.8203 44,57L 39,57C 39,47.0589 47.0589,39 57,39L 57,44 Z", back : "M 57,42L 57,34L 32.25,34L 42.25,24L 31.75,24L 17.75,38L 31.75,52L 42.25,52L 32.25,42L 57,42 Z"};
var __map_reserved = {}
var q = window.jQuery;
var js = js || {}
js.JQuery = q;
var ArrayBuffer = typeof(window) != "undefined" && window.ArrayBuffer || typeof(global) != "undefined" && global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
var DataView = typeof(window) != "undefined" && window.DataView || typeof(global) != "undefined" && global.DataView || js_html_compat_DataView;
var Uint8Array = typeof(window) != "undefined" && window.Uint8Array || typeof(global) != "undefined" && global.Uint8Array || js_html_compat_Uint8Array._new;
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
bplayer_db_ApplicationMediaDatabase.DBNAME = "library";
bplayer_db_ApplicationSessions.MAINSESS = "main";
gryffin_audio_Audio.FPS = 30;
gryffin_display_Video.FPS = 30;
foundation_Widget.DATAKEY = "haxe-foundation-widget";
chrome_Windows.lib = chrome.app.window;
foundation_Foundation.mqBreakpoints = ["small","medium","large","xlarge","xxlarge"];
gryffin_Tools.used_idents = [];
gryffin_core_Stage.selectorCache = new haxe_ds_StringMap();
gryffin_display_Image.registry = new haxe_ds_StringMap();
gryffin_fx_Animations.registry = [];
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = Type;
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var x = new haxe__$Int64__$_$_$Int64(0,0);
	$r = x;
	return $r;
}(this));
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved.lt != null) h.setReserved("lt","<"); else h.h["lt"] = "<";
	if(__map_reserved.gt != null) h.setReserved("gt",">"); else h.h["gt"] = ">";
	if(__map_reserved.amp != null) h.setReserved("amp","&"); else h.h["amp"] = "&";
	if(__map_reserved.quot != null) h.setReserved("quot","\""); else h.h["quot"] = "\"";
	if(__map_reserved.apos != null) h.setReserved("apos","'"); else h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
js_Boot.__toStr = {}.toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
tannus_css_vals__$Unit_Unit_$Impl_$.Em = "em";
tannus_css_vals__$Unit_Unit_$Impl_$.Ex = "ex";
tannus_css_vals__$Unit_Unit_$Impl_$.Ch = "ch";
tannus_css_vals__$Unit_Unit_$Impl_$.Rem = "rem";
tannus_css_vals__$Unit_Unit_$Impl_$.Vpw = "vw";
tannus_css_vals__$Unit_Unit_$Impl_$.Vph = "vh";
tannus_css_vals__$Unit_Unit_$Impl_$.Perc = "%";
tannus_css_vals__$Unit_Unit_$Impl_$.Cm = "cm";
tannus_css_vals__$Unit_Unit_$Impl_$.Mm = "mm";
tannus_css_vals__$Unit_Unit_$Impl_$.In = "in";
tannus_css_vals__$Unit_Unit_$Impl_$.Px = "px";
tannus_css_vals__$Unit_Unit_$Impl_$.Pt = "pt";
tannus_css_vals__$Unit_Unit_$Impl_$.Pc = "pc";
tannus_dom_CData.DATAKEY = "__tandata";
tannus_dom_CElement.DATAKEY = "__tandata";
tannus_ds_Memory.state = 0;
tannus_ds_Memory.used = [];
tannus_events__$Key_Key_$Impl_$.CapsLock = 20;
tannus_events__$Key_Key_$Impl_$.NumpadDot = 110;
tannus_events__$Key_Key_$Impl_$.NumpadForwardSlash = 111;
tannus_events__$Key_Key_$Impl_$.Command = 91;
tannus_events__$Key_Key_$Impl_$.ForwardSlash = 191;
tannus_events__$Key_Key_$Impl_$.Enter = 13;
tannus_events__$Key_Key_$Impl_$.Shift = 16;
tannus_events__$Key_Key_$Impl_$.Space = 32;
tannus_events__$Key_Key_$Impl_$.PageUp = 33;
tannus_events__$Key_Key_$Impl_$.Backspace = 8;
tannus_events__$Key_Key_$Impl_$.Tab = 9;
tannus_events__$Key_Key_$Impl_$.NumpadPlus = 107;
tannus_events__$Key_Key_$Impl_$.Dot = 190;
tannus_events__$Key_Key_$Impl_$.OpenBracket = 219;
tannus_events__$Key_Key_$Impl_$.Home = 36;
tannus_events__$Key_Key_$Impl_$.Left = 37;
tannus_events__$Key_Key_$Impl_$.Equals = 187;
tannus_events__$Key_Key_$Impl_$.Apostrophe = 222;
tannus_events__$Key_Key_$Impl_$.Right = 39;
tannus_events__$Key_Key_$Impl_$.CloseBracket = 221;
tannus_events__$Key_Key_$Impl_$.NumLock = 144;
tannus_events__$Key_Key_$Impl_$.BackSlash = 220;
tannus_events__$Key_Key_$Impl_$.PageDown = 34;
tannus_events__$Key_Key_$Impl_$.End = 35;
tannus_events__$Key_Key_$Impl_$.Minus = 189;
tannus_events__$Key_Key_$Impl_$.SemiColon = 186;
tannus_events__$Key_Key_$Impl_$.Down = 40;
tannus_events__$Key_Key_$Impl_$.Esc = 27;
tannus_events__$Key_Key_$Impl_$.Comma = 188;
tannus_events__$Key_Key_$Impl_$.Delete = 46;
tannus_events__$Key_Key_$Impl_$.NumpadAsterisk = 106;
tannus_events__$Key_Key_$Impl_$.BackTick = 192;
tannus_events__$Key_Key_$Impl_$.Ctrl = 17;
tannus_events__$Key_Key_$Impl_$.Insert = 45;
tannus_events__$Key_Key_$Impl_$.ScrollLock = 145;
tannus_events__$Key_Key_$Impl_$.NumpadMinus = 109;
tannus_events__$Key_Key_$Impl_$.Up = 38;
tannus_events__$Key_Key_$Impl_$.Alt = 18;
tannus_events__$Key_Key_$Impl_$.LetterA = 65;
tannus_events__$Key_Key_$Impl_$.LetterB = 66;
tannus_events__$Key_Key_$Impl_$.LetterC = 67;
tannus_events__$Key_Key_$Impl_$.LetterD = 68;
tannus_events__$Key_Key_$Impl_$.LetterE = 69;
tannus_events__$Key_Key_$Impl_$.LetterF = 70;
tannus_events__$Key_Key_$Impl_$.LetterG = 71;
tannus_events__$Key_Key_$Impl_$.LetterH = 72;
tannus_events__$Key_Key_$Impl_$.LetterI = 73;
tannus_events__$Key_Key_$Impl_$.LetterJ = 74;
tannus_events__$Key_Key_$Impl_$.LetterK = 75;
tannus_events__$Key_Key_$Impl_$.LetterL = 76;
tannus_events__$Key_Key_$Impl_$.LetterM = 77;
tannus_events__$Key_Key_$Impl_$.LetterN = 78;
tannus_events__$Key_Key_$Impl_$.LetterO = 79;
tannus_events__$Key_Key_$Impl_$.LetterP = 80;
tannus_events__$Key_Key_$Impl_$.LetterQ = 81;
tannus_events__$Key_Key_$Impl_$.LetterR = 82;
tannus_events__$Key_Key_$Impl_$.LetterS = 83;
tannus_events__$Key_Key_$Impl_$.LetterT = 84;
tannus_events__$Key_Key_$Impl_$.LetterU = 85;
tannus_events__$Key_Key_$Impl_$.LetterV = 86;
tannus_events__$Key_Key_$Impl_$.LetterW = 87;
tannus_events__$Key_Key_$Impl_$.LetterX = 88;
tannus_events__$Key_Key_$Impl_$.LetterY = 89;
tannus_events__$Key_Key_$Impl_$.LetterZ = 90;
tannus_events__$Key_Key_$Impl_$.F1 = 112;
tannus_events__$Key_Key_$Impl_$.F2 = 113;
tannus_events__$Key_Key_$Impl_$.F3 = 114;
tannus_events__$Key_Key_$Impl_$.F4 = 115;
tannus_events__$Key_Key_$Impl_$.F5 = 116;
tannus_events__$Key_Key_$Impl_$.F6 = 117;
tannus_events__$Key_Key_$Impl_$.F7 = 118;
tannus_events__$Key_Key_$Impl_$.F8 = 119;
tannus_events__$Key_Key_$Impl_$.F9 = 120;
tannus_events__$Key_Key_$Impl_$.F10 = 121;
tannus_events__$Key_Key_$Impl_$.F11 = 122;
tannus_events__$Key_Key_$Impl_$.F12 = 123;
tannus_events__$Key_Key_$Impl_$.Number0 = 48;
tannus_events__$Key_Key_$Impl_$.Number1 = 49;
tannus_events__$Key_Key_$Impl_$.Number2 = 50;
tannus_events__$Key_Key_$Impl_$.Number3 = 51;
tannus_events__$Key_Key_$Impl_$.Number4 = 52;
tannus_events__$Key_Key_$Impl_$.Number5 = 53;
tannus_events__$Key_Key_$Impl_$.Number6 = 54;
tannus_events__$Key_Key_$Impl_$.Number7 = 55;
tannus_events__$Key_Key_$Impl_$.Number8 = 56;
tannus_events__$Key_Key_$Impl_$.Number9 = 57;
tannus_geom_Bezier.PRECISION = 100;
tannus_geom_Matrix.__identity = new tannus_geom_Matrix();
tannus_http__$WebRequest_ResponseType_$Impl_$.TText = "text";
tannus_http__$WebRequest_ResponseType_$Impl_$.TJson = "json";
tannus_http__$WebRequest_ResponseType_$Impl_$.TArrayBuffer = "arraybuffer";
tannus_http__$WebRequest_ResponseType_$Impl_$.TBlob = "blob";
tannus_http__$WebRequest_ResponseType_$Impl_$.TDoc = "document";
tannus_math_TMath.E = 2.718281828459045;
tannus_math_TMath.LN2 = 0.6931471805599453;
tannus_math_TMath.LN10 = 2.302585092994046;
tannus_math_TMath.LOG2E = 1.4426950408889634;
tannus_math_TMath.LOG10E = 0.43429448190325176;
tannus_math_TMath.PI = 3.141592653589793;
tannus_math_TMath.SQRT1_2 = 0.7071067811865476;
tannus_math_TMath.SQRT2 = 1.4142135623730951;
tannus_math_TMath.KAPPA = 4 * (Math.sqrt(2) - 1) / 3;
tannus_math_TMath.INT_MIN = -2147483648;
tannus_math_TMath.INT_MAX = 2147483647;
tannus_math_TMath.FLOAT_MIN = -1.79769313486231e+308;
tannus_math_TMath.FLOAT_MAX = 1.79769313486231e+308;
tannus_mvc_BaseAttribute.N = "Not implemented";
tannus_sys_Mimes.initted = false;
tannus_sys_Mimes.primitive = { '3dml' : "text/vnd.in3d.3dml", '3ds' : "image/x-3ds", '3g2' : "video/3gpp2", '3gp' : "video/3gpp", '7z' : "application/x-7z-compressed", 'aab' : "application/x-authorware-bin", 'aac' : "audio/x-aac", 'aam' : "application/x-authorware-map", 'aas' : "application/x-authorware-seg", 'abw' : "application/x-abiword", 'ac' : "application/pkix-attr-cert", 'acc' : "application/vnd.americandynamics.acc", 'ace' : "application/x-ace-compressed", 'acu' : "application/vnd.acucobol", 'acutc' : "application/vnd.acucorp", 'adp' : "audio/adpcm", 'aep' : "application/vnd.audiograph", 'afm' : "application/x-font-type1", 'afp' : "application/vnd.ibm.modcap", 'ahead' : "application/vnd.ahead.space", 'ai' : "application/postscript", 'aif' : "audio/x-aiff", 'aifc' : "audio/x-aiff", 'aiff' : "audio/x-aiff", 'air' : "application/vnd.adobe.air-application-installer-package+zip", 'ait' : "application/vnd.dvb.ait", 'ami' : "application/vnd.amiga.ami", 'apk' : "application/vnd.android.package-archive", 'appcache' : "text/cache-manifest", 'application' : "application/x-ms-application", 'apr' : "application/vnd.lotus-approach", 'arc' : "application/x-freearc", 'asa' : "text/plain", 'asax' : "application/octet-stream", 'asc' : "application/pgp-signature", 'ascx' : "text/plain", 'asf' : "video/x-ms-asf", 'ashx' : "text/plain", 'asm' : "text/x-asm", 'asmx' : "text/plain", 'aso' : "application/vnd.accpac.simply.aso", 'asp' : "text/plain", 'aspx' : "text/plain", 'asx' : "video/x-ms-asf", 'atc' : "application/vnd.acucorp", 'atom' : "application/atom+xml", 'atomcat' : "application/atomcat+xml", 'atomsvc' : "application/atomsvc+xml", 'atx' : "application/vnd.antix.game-component", 'au' : "audio/basic", 'avi' : "video/x-msvideo", 'aw' : "application/applixware", 'axd' : "text/plain", 'azf' : "application/vnd.airzip.filesecure.azf", 'azs' : "application/vnd.airzip.filesecure.azs", 'azw' : "application/vnd.amazon.ebook", 'bat' : "application/x-msdownload", 'bcpio' : "application/x-bcpio", 'bdf' : "application/x-font-bdf", 'bdm' : "application/vnd.syncml.dm+wbxml", 'bed' : "application/vnd.realvnc.bed", 'bh2' : "application/vnd.fujitsu.oasysprs", 'bin' : "application/octet-stream", 'blb' : "application/x-blorb", 'blorb' : "application/x-blorb", 'bmi' : "application/vnd.bmi", 'bmp' : "image/bmp", 'book' : "application/vnd.framemaker", 'box' : "application/vnd.previewsystems.box", 'boz' : "application/x-bzip2", 'bpk' : "application/octet-stream", 'btif' : "image/prs.btif", 'bz' : "application/x-bzip", 'bz2' : "application/x-bzip2", 'c' : "text/x-c", 'c11amc' : "application/vnd.cluetrust.cartomobile-config", 'c11amz' : "application/vnd.cluetrust.cartomobile-config-pkg", 'c4d' : "application/vnd.clonk.c4group", 'c4f' : "application/vnd.clonk.c4group", 'c4g' : "application/vnd.clonk.c4group", 'c4p' : "application/vnd.clonk.c4group", 'c4u' : "application/vnd.clonk.c4group", 'cab' : "application/vnd.ms-cab-compressed", 'caf' : "audio/x-caf", 'cap' : "application/vnd.tcpdump.pcap", 'car' : "application/vnd.curl.car", 'cat' : "application/vnd.ms-pki.seccat", 'cb7' : "application/x-cbr", 'cba' : "application/x-cbr", 'cbr' : "application/x-cbr", 'cbt' : "application/x-cbr", 'cbz' : "application/x-cbr", 'cc' : "text/x-c", 'cct' : "application/x-director", 'ccxml' : "application/ccxml+xml", 'cdbcmsg' : "application/vnd.contact.cmsg", 'cdf' : "application/x-netcdf", 'cdkey' : "application/vnd.mediastation.cdkey", 'cdmia' : "application/cdmi-capability", 'cdmic' : "application/cdmi-container", 'cdmid' : "application/cdmi-domain", 'cdmio' : "application/cdmi-object", 'cdmiq' : "application/cdmi-queue", 'cdx' : "chemical/x-cdx", 'cdxml' : "application/vnd.chemdraw+xml", 'cdy' : "application/vnd.cinderella", 'cer' : "application/pkix-cert", 'cfc' : "application/x-coldfusion", 'cfm' : "application/x-coldfusion", 'cfs' : "application/x-cfs-compressed", 'cgm' : "image/cgm", 'chat' : "application/x-chat", 'chm' : "application/vnd.ms-htmlhelp", 'chrt' : "application/vnd.kde.kchart", 'cif' : "chemical/x-cif", 'cii' : "application/vnd.anser-web-certificate-issue-initiation", 'cil' : "application/vnd.ms-artgalry", 'cla' : "application/vnd.claymore", 'class' : "application/java-vm", 'clkk' : "application/vnd.crick.clicker.keyboard", 'clkp' : "application/vnd.crick.clicker.palette", 'clkt' : "application/vnd.crick.clicker.template", 'clkw' : "application/vnd.crick.clicker.wordbank", 'clkx' : "application/vnd.crick.clicker", 'clp' : "application/x-msclip", 'cmc' : "application/vnd.cosmocaller", 'cmdf' : "chemical/x-cmdf", 'cml' : "chemical/x-cml", 'cmp' : "application/vnd.yellowriver-custom-menu", 'cmx' : "image/x-cmx", 'cod' : "application/vnd.rim.cod", 'coffee' : "text/coffeescript", 'com' : "application/x-msdownload", 'conf' : "text/plain", 'cpio' : "application/x-cpio", 'cpp' : "text/x-c", 'cpt' : "application/mac-compactpro", 'crd' : "application/x-mscardfile", 'crl' : "application/pkix-crl", 'crt' : "application/x-x509-ca-cert", 'crx' : "application/octet-stream", 'cryptonote' : "application/vnd.rig.cryptonote", 'cs' : "text/plain", 'csh' : "application/x-csh", 'csml' : "chemical/x-csml", 'csp' : "application/vnd.commonspace", 'css' : "text/css", 'cst' : "application/x-director", 'csv' : "text/csv", 'cu' : "application/cu-seeme", 'curl' : "text/vnd.curl", 'cww' : "application/prs.cww", 'cxt' : "application/x-director", 'cxx' : "text/x-c", 'dae' : "model/vnd.collada+xml", 'daf' : "application/vnd.mobius.daf", 'dart' : "application/vnd.dart", 'dataless' : "application/vnd.fdsn.seed", 'davmount' : "application/davmount+xml", 'dbk' : "application/docbook+xml", 'dcr' : "application/x-director", 'dcurl' : "text/vnd.curl.dcurl", 'dd2' : "application/vnd.oma.dd2+xml", 'ddd' : "application/vnd.fujixerox.ddd", 'deb' : "application/x-debian-package", 'def' : "text/plain", 'deploy' : "application/octet-stream", 'der' : "application/x-x509-ca-cert", 'dfac' : "application/vnd.dreamfactory", 'dgc' : "application/x-dgc-compressed", 'dic' : "text/x-c", 'dir' : "application/x-director", 'dis' : "application/vnd.mobius.dis", 'dist' : "application/octet-stream", 'distz' : "application/octet-stream", 'djv' : "image/vnd.djvu", 'djvu' : "image/vnd.djvu", 'dll' : "application/x-msdownload", 'dmg' : "application/x-apple-diskimage", 'dmp' : "application/vnd.tcpdump.pcap", 'dms' : "application/octet-stream", 'dna' : "application/vnd.dna", 'doc' : "application/msword", 'docm' : "application/vnd.ms-word.document.macroenabled.12", 'docx' : "application/vnd.openxmlformats-officedocument.wordprocessingml.document", 'dot' : "application/msword", 'dotm' : "application/vnd.ms-word.template.macroenabled.12", 'dotx' : "application/vnd.openxmlformats-officedocument.wordprocessingml.template", 'dp' : "application/vnd.osgi.dp", 'dpg' : "application/vnd.dpgraph", 'dra' : "audio/vnd.dra", 'dsc' : "text/prs.lines.tag", 'dssc' : "application/dssc+der", 'dtb' : "application/x-dtbook+xml", 'dtd' : "application/xml-dtd", 'dts' : "audio/vnd.dts", 'dtshd' : "audio/vnd.dts.hd", 'dump' : "application/octet-stream", 'dvb' : "video/vnd.dvb.file", 'dvi' : "application/x-dvi", 'dwf' : "model/vnd.dwf", 'dwg' : "image/vnd.dwg", 'dxf' : "image/vnd.dxf", 'dxp' : "application/vnd.spotfire.dxp", 'dxr' : "application/x-director", 'ecelp4800' : "audio/vnd.nuera.ecelp4800", 'ecelp7470' : "audio/vnd.nuera.ecelp7470", 'ecelp9600' : "audio/vnd.nuera.ecelp9600", 'ecma' : "application/ecmascript", 'edm' : "application/vnd.novadigm.edm", 'edx' : "application/vnd.novadigm.edx", 'efif' : "application/vnd.picsel", 'ei6' : "application/vnd.pg.osasli", 'elc' : "application/octet-stream", 'emf' : "application/x-msmetafile", 'eml' : "message/rfc822", 'emma' : "application/emma+xml", 'emz' : "application/x-msmetafile", 'eol' : "audio/vnd.digital-winds", 'eot' : "application/vnd.ms-fontobject", 'eps' : "application/postscript", 'epub' : "application/epub+zip", 'es3' : "application/vnd.eszigno3+xml", 'esa' : "application/vnd.osgi.subsystem", 'esf' : "application/vnd.epson.esf", 'et3' : "application/vnd.eszigno3+xml", 'etx' : "text/x-setext", 'eva' : "application/x-eva", 'evy' : "application/x-envoy", 'exe' : "application/x-msdownload", 'exi' : "application/exi", 'ext' : "application/vnd.novadigm.ext", 'ez' : "application/andrew-inset", 'ez2' : "application/vnd.ezpix-album", 'ez3' : "application/vnd.ezpix-package", 'f' : "text/x-fortran", 'f4v' : "video/x-f4v", 'f77' : "text/x-fortran", 'f90' : "text/x-fortran", 'fbs' : "image/vnd.fastbidsheet", 'fcdt' : "application/vnd.adobe.formscentral.fcdt", 'fcs' : "application/vnd.isac.fcs", 'fdf' : "application/vnd.fdf", 'fe_launch' : "application/vnd.denovo.fcselayout-link", 'fg5' : "application/vnd.fujitsu.oasysgp", 'fgd' : "application/x-director", 'fh' : "image/x-freehand", 'fh4' : "image/x-freehand", 'fh5' : "image/x-freehand", 'fh7' : "image/x-freehand", 'fhc' : "image/x-freehand", 'fig' : "application/x-xfig", 'flac' : "audio/x-flac", 'fli' : "video/x-fli", 'flo' : "application/vnd.micrografx.flo", 'flv' : "video/x-flv", 'flw' : "application/vnd.kde.kivio", 'flx' : "text/vnd.fmi.flexstor", 'fly' : "text/vnd.fly", 'fm' : "application/vnd.framemaker", 'fnc' : "application/vnd.frogans.fnc", 'for' : "text/x-fortran", 'fpx' : "image/vnd.fpx", 'frame' : "application/vnd.framemaker", 'fsc' : "application/vnd.fsc.weblaunch", 'fst' : "image/vnd.fst", 'ftc' : "application/vnd.fluxtime.clip", 'fti' : "application/vnd.anser-web-funds-transfer-initiation", 'fvt' : "video/vnd.fvt", 'fxp' : "application/vnd.adobe.fxp", 'fxpl' : "application/vnd.adobe.fxp", 'fzs' : "application/vnd.fuzzysheet", 'g2w' : "application/vnd.geoplan", 'g3' : "image/g3fax", 'g3w' : "application/vnd.geospace", 'gac' : "application/vnd.groove-account", 'gam' : "application/x-tads", 'gbr' : "application/rpki-ghostbusters", 'gca' : "application/x-gca-compressed", 'gdl' : "model/vnd.gdl", 'geo' : "application/vnd.dynageo", 'gex' : "application/vnd.geometry-explorer", 'ggb' : "application/vnd.geogebra.file", 'ggt' : "application/vnd.geogebra.tool", 'ghf' : "application/vnd.groove-help", 'gif' : "image/gif", 'gim' : "application/vnd.groove-identity-message", 'gml' : "application/gml+xml", 'gmx' : "application/vnd.gmx", 'gnumeric' : "application/x-gnumeric", 'gph' : "application/vnd.flographit", 'gpx' : "application/gpx+xml", 'gqf' : "application/vnd.grafeq", 'gqs' : "application/vnd.grafeq", 'gram' : "application/srgs", 'gramps' : "application/x-gramps-xml", 'gre' : "application/vnd.geometry-explorer", 'grv' : "application/vnd.groove-injector", 'grxml' : "application/srgs+xml", 'gsf' : "application/x-font-ghostscript", 'gtar' : "application/x-gtar", 'gtm' : "application/vnd.groove-tool-message", 'gtw' : "model/vnd.gtw", 'gv' : "text/vnd.graphviz", 'gxf' : "application/gxf", 'gxt' : "application/vnd.geonext", 'gz' : "application/x-gzip", 'h' : "text/x-c", 'h261' : "video/h261", 'h263' : "video/h263", 'h264' : "video/h264", 'hal' : "application/vnd.hal+xml", 'hbci' : "application/vnd.hbci", 'hdf' : "application/x-hdf", 'hh' : "text/x-c", 'hlp' : "application/winhlp", 'hpgl' : "application/vnd.hp-hpgl", 'hpid' : "application/vnd.hp-hpid", 'hps' : "application/vnd.hp-hps", 'hqx' : "application/mac-binhex40", 'hta' : "application/octet-stream", 'htc' : "text/html", 'htke' : "application/vnd.kenameaapp", 'htm' : "text/html", 'html' : "text/html", 'hvd' : "application/vnd.yamaha.hv-dic", 'hvp' : "application/vnd.yamaha.hv-voice", 'hvs' : "application/vnd.yamaha.hv-script", 'hx' : "text/haxe", 'hxml' : "text/haxe.hxml", 'i2g' : "application/vnd.intergeo", 'icc' : "application/vnd.iccprofile", 'ice' : "x-conference/x-cooltalk", 'icm' : "application/vnd.iccprofile", 'ico' : "image/x-icon", 'ics' : "text/calendar", 'ief' : "image/ief", 'ifb' : "text/calendar", 'ifm' : "application/vnd.shana.informed.formdata", 'iges' : "model/iges", 'igl' : "application/vnd.igloader", 'igm' : "application/vnd.insors.igm", 'igs' : "model/iges", 'igx' : "application/vnd.micrografx.igx", 'iif' : "application/vnd.shana.informed.interchange", 'imp' : "application/vnd.accpac.simply.imp", 'ims' : "application/vnd.ms-ims", 'in' : "text/plain", 'ini' : "text/plain", 'ink' : "application/inkml+xml", 'inkml' : "application/inkml+xml", 'install' : "application/x-install-instructions", 'iota' : "application/vnd.astraea-software.iota", 'ipa' : "application/octet-stream", 'ipfix' : "application/ipfix", 'ipk' : "application/vnd.shana.informed.package", 'irm' : "application/vnd.ibm.rights-management", 'irp' : "application/vnd.irepository.package+xml", 'iso' : "application/x-iso9660-image", 'itp' : "application/vnd.shana.informed.formtemplate", 'ivp' : "application/vnd.immervision-ivp", 'ivu' : "application/vnd.immervision-ivu", 'jad' : "text/vnd.sun.j2me.app-descriptor", 'jam' : "application/vnd.jam", 'jar' : "application/java-archive", 'java' : "text/x-java-source", 'jisp' : "application/vnd.jisp", 'jlt' : "application/vnd.hp-jlyt", 'jnlp' : "application/x-java-jnlp-file", 'joda' : "application/vnd.joost.joda-archive", 'jpe' : "image/jpeg", 'jpeg' : "image/jpeg", 'jpg' : "image/jpeg", 'jpgm' : "video/jpm", 'jpgv' : "video/jpeg", 'jpm' : "video/jpm", 'js' : "text/javascript", 'json' : "application/json", 'jsonml' : "application/jsonml+json", 'kar' : "audio/midi", 'karbon' : "application/vnd.kde.karbon", 'kfo' : "application/vnd.kde.kformula", 'kia' : "application/vnd.kidspiration", 'kml' : "application/vnd.google-earth.kml+xml", 'kmz' : "application/vnd.google-earth.kmz", 'kne' : "application/vnd.kinar", 'knp' : "application/vnd.kinar", 'kon' : "application/vnd.kde.kontour", 'kpr' : "application/vnd.kde.kpresenter", 'kpt' : "application/vnd.kde.kpresenter", 'kpxx' : "application/vnd.ds-keypoint", 'ksp' : "application/vnd.kde.kspread", 'ktr' : "application/vnd.kahootz", 'ktx' : "image/ktx", 'ktz' : "application/vnd.kahootz", 'kwd' : "application/vnd.kde.kword", 'kwt' : "application/vnd.kde.kword", 'lasxml' : "application/vnd.las.las+xml", 'latex' : "application/x-latex", 'lbd' : "application/vnd.llamagraphics.life-balance.desktop", 'lbe' : "application/vnd.llamagraphics.life-balance.exchange+xml", 'les' : "application/vnd.hhe.lesson-player", 'less' : "text/less", 'lha' : "application/x-lzh-compressed", 'link66' : "application/vnd.route66.link66+xml", 'list' : "text/plain", 'list3820' : "application/vnd.ibm.modcap", 'listafp' : "application/vnd.ibm.modcap", 'lnk' : "application/x-ms-shortcut", 'log' : "text/plain", 'lostxml' : "application/lost+xml", 'lrf' : "application/octet-stream", 'lrm' : "application/vnd.ms-lrm", 'ltf' : "application/vnd.frogans.ltf", 'lvp' : "audio/vnd.lucent.voice", 'lwp' : "application/vnd.lotus-wordpro", 'lz' : "application/x-lzip", 'lzh' : "application/x-lzh-compressed", 'lzma' : "application/x-lzma", 'lzo' : "application/x-lzop", 'm13' : "application/x-msmediaview", 'm14' : "application/x-msmediaview", 'm1v' : "video/mpeg", 'm21' : "application/mp21", 'm2a' : "audio/mpeg", 'm2v' : "video/mpeg", 'm3a' : "audio/mpeg", 'm3u' : "audio/x-mpegurl", 'm3u8' : "application/vnd.apple.mpegurl", 'm4a' : "audio/mp4", 'm4u' : "video/vnd.mpegurl", 'm4v' : "video/mp4", 'ma' : "application/mathematica", 'mads' : "application/mads+xml", 'mag' : "application/vnd.ecowin.chart", 'maker' : "application/vnd.framemaker", 'man' : "text/troff", 'mar' : "application/octet-stream", 'mathml' : "application/mathml+xml", 'mb' : "application/mathematica", 'mbk' : "application/vnd.mobius.mbk", 'mbox' : "application/mbox", 'mc1' : "application/vnd.medcalcdata", 'mcd' : "application/vnd.mcd", 'mcurl' : "text/vnd.curl.mcurl", 'mdb' : "application/x-msaccess", 'mdi' : "image/vnd.ms-modi", 'md' : "text/markdown", 'me' : "text/troff", 'mesh' : "model/mesh", 'meta4' : "application/metalink4+xml", 'metalink' : "application/metalink+xml", 'mets' : "application/mets+xml", 'mfm' : "application/vnd.mfmp", 'mft' : "application/rpki-manifest", 'mgp' : "application/vnd.osgeo.mapguide.package", 'mgz' : "application/vnd.proteus.magazine", 'mid' : "audio/midi", 'midi' : "audio/midi", 'mie' : "application/x-mie", 'mif' : "application/vnd.mif", 'mime' : "message/rfc822", 'mj2' : "video/mj2", 'mjp2' : "video/mj2", 'mk3d' : "video/x-matroska", 'mka' : "audio/x-matroska", 'mks' : "video/x-matroska", 'mkv' : "video/x-matroska", 'mlp' : "application/vnd.dolby.mlp", 'mmd' : "application/vnd.chipnuts.karaoke-mmd", 'mmf' : "application/vnd.smaf", 'mmr' : "image/vnd.fujixerox.edmics-mmr", 'mng' : "video/x-mng", 'mny' : "application/x-msmoney", 'mobi' : "application/x-mobipocket-ebook", 'mods' : "application/mods+xml", 'mov' : "video/quicktime", 'movie' : "video/x-sgi-movie", 'mp2' : "audio/mpeg", 'mp21' : "application/mp21", 'mp2a' : "audio/mpeg", 'mp3' : "audio/mpeg", 'mp4' : "video/mp4", 'mp4a' : "audio/mp4", 'mp4s' : "application/mp4", 'mp4v' : "video/mp4", 'mpc' : "application/vnd.mophun.certificate", 'mpe' : "video/mpeg", 'mpeg' : "video/mpeg", 'mpg' : "video/mpeg", 'mpg4' : "video/mp4", 'mpga' : "audio/mpeg", 'mpkg' : "application/vnd.apple.installer+xml", 'mpm' : "application/vnd.blueice.multipass", 'mpn' : "application/vnd.mophun.application", 'mpp' : "application/vnd.ms-project", 'mpt' : "application/vnd.ms-project", 'mpy' : "application/vnd.ibm.minipay", 'mqy' : "application/vnd.mobius.mqy", 'mrc' : "application/marc", 'mrcx' : "application/marcxml+xml", 'ms' : "text/troff", 'mscml' : "application/mediaservercontrol+xml", 'mseed' : "application/vnd.fdsn.mseed", 'mseq' : "application/vnd.mseq", 'msf' : "application/vnd.epson.msf", 'msh' : "model/mesh", 'msi' : "application/x-msdownload", 'msl' : "application/vnd.mobius.msl", 'msty' : "application/vnd.muvee.style", 'mts' : "model/vnd.mts", 'mus' : "application/vnd.musician", 'musicxml' : "application/vnd.recordare.musicxml+xml", 'mvb' : "application/x-msmediaview", 'mwf' : "application/vnd.mfer", 'mxf' : "application/mxf", 'mxl' : "application/vnd.recordare.musicxml", 'mxml' : "application/xv+xml", 'mxs' : "application/vnd.triscape.mxs", 'mxu' : "video/vnd.mpegurl", 'n-gage' : "application/vnd.nokia.n-gage.symbian.install", 'n3' : "text/n3", 'nb' : "application/mathematica", 'nbp' : "application/vnd.wolfram.player", 'nc' : "application/x-netcdf", 'ncx' : "application/x-dtbncx+xml", 'nfo' : "text/x-nfo", 'ngdat' : "application/vnd.nokia.n-gage.data", 'nitf' : "application/vnd.nitf", 'nlu' : "application/vnd.neurolanguage.nlu", 'nml' : "application/vnd.enliven", 'nnd' : "application/vnd.noblenet-directory", 'nns' : "application/vnd.noblenet-sealer", 'nnw' : "application/vnd.noblenet-web", 'npx' : "image/vnd.net-fpx", 'nsc' : "application/x-conference", 'nsf' : "application/vnd.lotus-notes", 'ntf' : "application/vnd.nitf", 'nzb' : "application/x-nzb", 'oa2' : "application/vnd.fujitsu.oasys2", 'oa3' : "application/vnd.fujitsu.oasys3", 'oas' : "application/vnd.fujitsu.oasys", 'obd' : "application/x-msbinder", 'obj' : "application/x-tgif", 'oda' : "application/oda", 'odb' : "application/vnd.oasis.opendocument.database", 'odc' : "application/vnd.oasis.opendocument.chart", 'odf' : "application/vnd.oasis.opendocument.formula", 'odft' : "application/vnd.oasis.opendocument.formula-template", 'odg' : "application/vnd.oasis.opendocument.graphics", 'odi' : "application/vnd.oasis.opendocument.image", 'odm' : "application/vnd.oasis.opendocument.text-master", 'odp' : "application/vnd.oasis.opendocument.presentation", 'ods' : "application/vnd.oasis.opendocument.spreadsheet", 'odt' : "application/vnd.oasis.opendocument.text", 'oga' : "audio/ogg", 'ogg' : "audio/ogg", 'ogv' : "video/ogg", 'ogx' : "application/ogg", 'omdoc' : "application/omdoc+xml", 'onepkg' : "application/onenote", 'onetmp' : "application/onenote", 'onetoc' : "application/onenote", 'onetoc2' : "application/onenote", 'opf' : "application/oebps-package+xml", 'opml' : "text/x-opml", 'oprc' : "application/vnd.palm", 'org' : "application/vnd.lotus-organizer", 'osf' : "application/vnd.yamaha.openscoreformat", 'osfpvg' : "application/vnd.yamaha.openscoreformat.osfpvg+xml", 'otc' : "application/vnd.oasis.opendocument.chart-template", 'otf' : "application/x-font-otf", 'otg' : "application/vnd.oasis.opendocument.graphics-template", 'oth' : "application/vnd.oasis.opendocument.text-web", 'oti' : "application/vnd.oasis.opendocument.image-template", 'otp' : "application/vnd.oasis.opendocument.presentation-template", 'ots' : "application/vnd.oasis.opendocument.spreadsheet-template", 'ott' : "application/vnd.oasis.opendocument.text-template", 'oxps' : "application/oxps", 'oxt' : "application/vnd.openofficeorg.extension", 'p' : "text/x-pascal", 'py' : "application/python", 'p10' : "application/pkcs10", 'p12' : "application/x-pkcs12", 'p7b' : "application/x-pkcs7-certificates", 'p7c' : "application/pkcs7-mime", 'p7m' : "application/pkcs7-mime", 'p7r' : "application/x-pkcs7-certreqresp", 'p7s' : "application/pkcs7-signature", 'p8' : "application/pkcs8", 'pas' : "text/x-pascal", 'paw' : "application/vnd.pawaafile", 'pbd' : "application/vnd.powerbuilder6", 'pbm' : "image/x-portable-bitmap", 'pcap' : "application/vnd.tcpdump.pcap", 'pcf' : "application/x-font-pcf", 'pcl' : "application/vnd.hp-pcl", 'pclxl' : "application/vnd.hp-pclxl", 'pct' : "image/x-pict", 'pcurl' : "application/vnd.curl.pcurl", 'pcx' : "image/x-pcx", 'pdb' : "application/vnd.palm", 'pdf' : "application/pdf", 'pfa' : "application/x-font-type1", 'pfb' : "application/x-font-type1", 'pfm' : "application/x-font-type1", 'pfr' : "application/font-tdpfr", 'pfx' : "application/x-pkcs12", 'pgm' : "image/x-portable-graymap", 'pgn' : "application/x-chess-pgn", 'pgp' : "application/pgp-encrypted", 'phar' : "application/octet-stream", 'php' : "text/plain", 'phps' : "application/x-httpd-phps", 'pic' : "image/x-pict", 'pkg' : "application/octet-stream", 'pki' : "application/pkixcmp", 'pkipath' : "application/pkix-pkipath", 'plb' : "application/vnd.3gpp.pic-bw-large", 'plc' : "application/vnd.mobius.plc", 'plf' : "application/vnd.pocketlearn", 'plist' : "application/x-plist", 'pls' : "application/pls+xml", 'pml' : "application/vnd.ctc-posml", 'png' : "image/png", 'pnm' : "image/x-portable-anymap", 'portpkg' : "application/vnd.macports.portpkg", 'pot' : "application/vnd.ms-powerpoint", 'potm' : "application/vnd.ms-powerpoint.template.macroenabled.12", 'potx' : "application/vnd.openxmlformats-officedocument.presentationml.template", 'ppam' : "application/vnd.ms-powerpoint.addin.macroenabled.12", 'ppd' : "application/vnd.cups-ppd", 'ppm' : "image/x-portable-pixmap", 'pps' : "application/vnd.ms-powerpoint", 'ppsm' : "application/vnd.ms-powerpoint.slideshow.macroenabled.12", 'ppsx' : "application/vnd.openxmlformats-officedocument.presentationml.slideshow", 'ppt' : "application/vnd.ms-powerpoint", 'pptm' : "application/vnd.ms-powerpoint.presentation.macroenabled.12", 'pptx' : "application/vnd.openxmlformats-officedocument.presentationml.presentation", 'pqa' : "application/vnd.palm", 'prc' : "application/x-mobipocket-ebook", 'pre' : "application/vnd.lotus-freelance", 'prf' : "application/pics-rules", 'ps' : "application/postscript", 'psb' : "application/vnd.3gpp.pic-bw-small", 'psd' : "image/vnd.adobe.photoshop", 'psf' : "application/x-font-linux-psf", 'pskcxml' : "application/pskc+xml", 'ptid' : "application/vnd.pvi.ptid1", 'pub' : "application/x-mspublisher", 'pvb' : "application/vnd.3gpp.pic-bw-var", 'pwn' : "application/vnd.3m.post-it-notes", 'pya' : "audio/vnd.ms-playready.media.pya", 'pyv' : "video/vnd.ms-playready.media.pyv", 'qam' : "application/vnd.epson.quickanime", 'qbo' : "application/vnd.intu.qbo", 'qfx' : "application/vnd.intu.qfx", 'qps' : "application/vnd.publishare-delta-tree", 'qt' : "video/quicktime", 'qwd' : "application/vnd.quark.quarkxpress", 'qwt' : "application/vnd.quark.quarkxpress", 'qxb' : "application/vnd.quark.quarkxpress", 'qxd' : "application/vnd.quark.quarkxpress", 'qxl' : "application/vnd.quark.quarkxpress", 'qxt' : "application/vnd.quark.quarkxpress", 'ra' : "audio/x-pn-realaudio", 'ram' : "audio/x-pn-realaudio", 'rar' : "application/x-rar-compressed", 'ras' : "image/x-cmu-raster", 'rb' : "text/plain", 'rcprofile' : "application/vnd.ipunplugged.rcprofile", 'rdf' : "application/rdf+xml", 'rdz' : "application/vnd.data-vision.rdz", 'rep' : "application/vnd.businessobjects", 'res' : "application/x-dtbresource+xml", 'resx' : "text/xml", 'rgb' : "image/x-rgb", 'rif' : "application/reginfo+xml", 'rip' : "audio/vnd.rip", 'ris' : "application/x-research-info-systems", 'rl' : "application/resource-lists+xml", 'rlc' : "image/vnd.fujixerox.edmics-rlc", 'rld' : "application/resource-lists-diff+xml", 'rm' : "application/vnd.rn-realmedia", 'rmi' : "audio/midi", 'rmp' : "audio/x-pn-realaudio-plugin", 'rms' : "application/vnd.jcp.javame.midlet-rms", 'rmvb' : "application/vnd.rn-realmedia-vbr", 'rnc' : "application/relax-ng-compact-syntax", 'roa' : "application/rpki-roa", 'roff' : "text/troff", 'rp9' : "application/vnd.cloanto.rp9", 'rpm' : "application/x-rpm", 'rpss' : "application/vnd.nokia.radio-presets", 'rpst' : "application/vnd.nokia.radio-preset", 'rq' : "application/sparql-query", 'rs' : "application/rls-services+xml", 'rsd' : "application/rsd+xml", 'rss' : "application/rss+xml", 'rtf' : "application/rtf", 'rtx' : "text/richtext", 's' : "text/x-asm", 's3m' : "audio/s3m", 's7z' : "application/x-7z-compressed", 'saf' : "application/vnd.yamaha.smaf-audio", 'safariextz' : "application/octet-stream", 'sass' : "text/x-sass", 'sbml' : "application/sbml+xml", 'sc' : "application/vnd.ibm.secure-container", 'scd' : "application/x-msschedule", 'scm' : "application/vnd.lotus-screencam", 'scq' : "application/scvp-cv-request", 'scs' : "application/scvp-cv-response", 'scss' : "text/x-scss", 'scurl' : "text/vnd.curl.scurl", 'sda' : "application/vnd.stardivision.draw", 'sdc' : "application/vnd.stardivision.calc", 'sdd' : "application/vnd.stardivision.impress", 'sdkd' : "application/vnd.solent.sdkm+xml", 'sdkm' : "application/vnd.solent.sdkm+xml", 'sdp' : "application/sdp", 'sdw' : "application/vnd.stardivision.writer", 'see' : "application/vnd.seemail", 'seed' : "application/vnd.fdsn.seed", 'sema' : "application/vnd.sema", 'semd' : "application/vnd.semd", 'semf' : "application/vnd.semf", 'ser' : "application/java-serialized-object", 'setpay' : "application/set-payment-initiation", 'setreg' : "application/set-registration-initiation", 'sfd-hdstx' : "application/vnd.hydrostatix.sof-data", 'sfs' : "application/vnd.spotfire.sfs", 'sfv' : "text/x-sfv", 'sgi' : "image/sgi", 'sgl' : "application/vnd.stardivision.writer-global", 'sgm' : "text/sgml", 'sgml' : "text/sgml", 'sh' : "application/x-sh", 'shar' : "application/x-shar", 'shf' : "application/shf+xml", 'sid' : "image/x-mrsid-image", 'sig' : "application/pgp-signature", 'sil' : "audio/silk", 'silo' : "model/mesh", 'sis' : "application/vnd.symbian.install", 'sisx' : "application/vnd.symbian.install", 'sit' : "application/x-stuffit", 'sitx' : "application/x-stuffitx", 'skd' : "application/vnd.koan", 'skm' : "application/vnd.koan", 'skp' : "application/vnd.koan", 'skt' : "application/vnd.koan", 'sldm' : "application/vnd.ms-powerpoint.slide.macroenabled.12", 'sldx' : "application/vnd.openxmlformats-officedocument.presentationml.slide", 'slt' : "application/vnd.epson.salt", 'sm' : "application/vnd.stepmania.stepchart", 'smf' : "application/vnd.stardivision.math", 'smi' : "application/smil+xml", 'smil' : "application/smil+xml", 'smv' : "video/x-smv", 'smzip' : "application/vnd.stepmania.package", 'snd' : "audio/basic", 'snf' : "application/x-font-snf", 'so' : "application/octet-stream", 'spc' : "application/x-pkcs7-certificates", 'spf' : "application/vnd.yamaha.smaf-phrase", 'spl' : "application/x-futuresplash", 'spot' : "text/vnd.in3d.spot", 'spp' : "application/scvp-vp-response", 'spq' : "application/scvp-vp-request", 'spx' : "audio/ogg", 'sql' : "application/x-sql", 'src' : "application/x-wais-source", 'srt' : "application/x-subrip", 'sru' : "application/sru+xml", 'srx' : "application/sparql-results+xml", 'ssdl' : "application/ssdl+xml", 'sse' : "application/vnd.kodak-descriptor", 'ssf' : "application/vnd.epson.ssf", 'ssml' : "application/ssml+xml", 'st' : "application/vnd.sailingtracker.track", 'stc' : "application/vnd.sun.xml.calc.template", 'std' : "application/vnd.sun.xml.draw.template", 'stf' : "application/vnd.wt.stf", 'sti' : "application/vnd.sun.xml.impress.template", 'stk' : "application/hyperstudio", 'stl' : "application/vnd.ms-pki.stl", 'str' : "application/vnd.pg.format", 'stw' : "application/vnd.sun.xml.writer.template", 'styl' : "text/x-styl", 'sub' : "image/vnd.dvb.subtitle", 'sus' : "application/vnd.sus-calendar", 'susp' : "application/vnd.sus-calendar", 'sv4cpio' : "application/x-sv4cpio", 'sv4crc' : "application/x-sv4crc", 'svc' : "application/vnd.dvb.service", 'svd' : "application/vnd.svd", 'svg' : "image/svg+xml", 'svgz' : "image/svg+xml", 'swa' : "application/x-director", 'swf' : "application/x-shockwave-flash", 'swi' : "application/vnd.aristanetworks.swi", 'sxc' : "application/vnd.sun.xml.calc", 'sxd' : "application/vnd.sun.xml.draw", 'sxg' : "application/vnd.sun.xml.writer.global", 'sxi' : "application/vnd.sun.xml.impress", 'sxm' : "application/vnd.sun.xml.math", 'sxw' : "application/vnd.sun.xml.writer", 't' : "text/troff", 't3' : "application/x-t3vm-image", 'taglet' : "application/vnd.mynfc", 'tao' : "application/vnd.tao.intent-module-archive", 'tar' : "application/x-tar", 'tcap' : "application/vnd.3gpp2.tcap", 'tcl' : "application/x-tcl", 'teacher' : "application/vnd.smart.teacher", 'tei' : "application/tei+xml", 'teicorpus' : "application/tei+xml", 'tex' : "application/x-tex", 'texi' : "application/x-texinfo", 'texinfo' : "application/x-texinfo", 'text' : "text/plain", 'tfi' : "application/thraud+xml", 'tfm' : "application/x-tex-tfm", 'tga' : "image/x-tga", 'tgz' : "application/x-gzip", 'thmx' : "application/vnd.ms-officetheme", 'tif' : "image/tiff", 'tiff' : "image/tiff", 'tmo' : "application/vnd.tmobile-livetv", 'torrent' : "application/x-bittorrent", 'tpl' : "application/vnd.groove-tool-template", 'tpt' : "application/vnd.trid.tpt", 'tr' : "text/troff", 'tra' : "application/vnd.trueapp", 'trm' : "application/x-msterminal", 'tsd' : "application/timestamped-data", 'tsv' : "text/tab-separated-values", 'ttc' : "application/x-font-ttf", 'ttf' : "application/x-font-ttf", 'ttl' : "text/turtle", 'twd' : "application/vnd.simtech-mindmapper", 'twds' : "application/vnd.simtech-mindmapper", 'txd' : "application/vnd.genomatix.tuxedo", 'txf' : "application/vnd.mobius.txf", 'txt' : "text/plain", 'u32' : "application/x-authorware-bin", 'udeb' : "application/x-debian-package", 'ufd' : "application/vnd.ufdl", 'ufdl' : "application/vnd.ufdl", 'ulx' : "application/x-glulx", 'umj' : "application/vnd.umajin", 'unityweb' : "application/vnd.unity", 'uoml' : "application/vnd.uoml+xml", 'uri' : "text/uri-list", 'uris' : "text/uri-list", 'urls' : "text/uri-list", 'ustar' : "application/x-ustar", 'utz' : "application/vnd.uiq.theme", 'uu' : "text/x-uuencode", 'uva' : "audio/vnd.dece.audio", 'uvd' : "application/vnd.dece.data", 'uvf' : "application/vnd.dece.data", 'uvg' : "image/vnd.dece.graphic", 'uvh' : "video/vnd.dece.hd", 'uvi' : "image/vnd.dece.graphic", 'uvm' : "video/vnd.dece.mobile", 'uvp' : "video/vnd.dece.pd", 'uvs' : "video/vnd.dece.sd", 'uvt' : "application/vnd.dece.ttml+xml", 'uvu' : "video/vnd.uvvu.mp4", 'uvv' : "video/vnd.dece.video", 'uvva' : "audio/vnd.dece.audio", 'uvvd' : "application/vnd.dece.data", 'uvvf' : "application/vnd.dece.data", 'uvvg' : "image/vnd.dece.graphic", 'uvvh' : "video/vnd.dece.hd", 'uvvi' : "image/vnd.dece.graphic", 'uvvm' : "video/vnd.dece.mobile", 'uvvp' : "video/vnd.dece.pd", 'uvvs' : "video/vnd.dece.sd", 'uvvt' : "application/vnd.dece.ttml+xml", 'uvvu' : "video/vnd.uvvu.mp4", 'uvvv' : "video/vnd.dece.video", 'uvvx' : "application/vnd.dece.unspecified", 'uvvz' : "application/vnd.dece.zip", 'uvx' : "application/vnd.dece.unspecified", 'uvz' : "application/vnd.dece.zip", 'vcard' : "text/vcard", 'vcd' : "application/x-cdlink", 'vcf' : "text/x-vcard", 'vcg' : "application/vnd.groove-vcard", 'vcs' : "text/x-vcalendar", 'vcx' : "application/vnd.vcx", 'vis' : "application/vnd.visionary", 'viv' : "video/vnd.vivo", 'vob' : "video/x-ms-vob", 'vor' : "application/vnd.stardivision.writer", 'vox' : "application/x-authorware-bin", 'vrml' : "model/vrml", 'vsd' : "application/vnd.visio", 'vsf' : "application/vnd.vsf", 'vss' : "application/vnd.visio", 'vst' : "application/vnd.visio", 'vsw' : "application/vnd.visio", 'vtu' : "model/vnd.vtu", 'vxml' : "application/voicexml+xml", 'w3d' : "application/x-director", 'wad' : "application/x-doom", 'wav' : "audio/x-wav", 'wax' : "audio/x-ms-wax", 'wbmp' : "image/vnd.wap.wbmp", 'wbs' : "application/vnd.criticaltools.wbs+xml", 'wbxml' : "application/vnd.wap.wbxml", 'wcm' : "application/vnd.ms-works", 'wdb' : "application/vnd.ms-works", 'wdp' : "image/vnd.ms-photo", 'weba' : "audio/webm", 'webm' : "video/webm", 'webp' : "image/webp", 'wg' : "application/vnd.pmi.widget", 'wgt' : "application/widget", 'wks' : "application/vnd.ms-works", 'wm' : "video/x-ms-wm", 'wma' : "audio/x-ms-wma", 'wmd' : "application/x-ms-wmd", 'wmf' : "application/x-msmetafile", 'wml' : "text/vnd.wap.wml", 'wmlc' : "application/vnd.wap.wmlc", 'wmls' : "text/vnd.wap.wmlscript", 'wmlsc' : "application/vnd.wap.wmlscriptc", 'wmv' : "video/x-ms-wmv", 'wmx' : "video/x-ms-wmx", 'wmz' : "application/x-ms-wmz", 'woff' : "application/x-font-woff", 'wpd' : "application/vnd.wordperfect", 'wpl' : "application/vnd.ms-wpl", 'wps' : "application/vnd.ms-works", 'wqd' : "application/vnd.wqd", 'wri' : "application/x-mswrite", 'wrl' : "model/vrml", 'wsdl' : "application/wsdl+xml", 'wspolicy' : "application/wspolicy+xml", 'wtb' : "application/vnd.webturbo", 'wvx' : "video/x-ms-wvx", 'x32' : "application/x-authorware-bin", 'x3d' : "model/x3d+xml", 'x3db' : "model/x3d+binary", 'x3dbz' : "model/x3d+binary", 'x3dv' : "model/x3d+vrml", 'x3dvz' : "model/x3d+vrml", 'x3dz' : "model/x3d+xml", 'xaml' : "application/xaml+xml", 'xap' : "application/x-silverlight-app", 'xar' : "application/vnd.xara", 'xbap' : "application/x-ms-xbap", 'xbd' : "application/vnd.fujixerox.docuworks.binder", 'xbm' : "image/x-xbitmap", 'xdf' : "application/xcap-diff+xml", 'xdm' : "application/vnd.syncml.dm+xml", 'xdp' : "application/vnd.adobe.xdp+xml", 'xdssc' : "application/dssc+xml", 'xdw' : "application/vnd.fujixerox.docuworks", 'xenc' : "application/xenc+xml", 'xer' : "application/patch-ops-error+xml", 'xfdf' : "application/vnd.adobe.xfdf", 'xfdl' : "application/vnd.xfdl", 'xht' : "application/xhtml+xml", 'xhtml' : "application/xhtml+xml", 'xhvml' : "application/xv+xml", 'xif' : "image/vnd.xiff", 'xla' : "application/vnd.ms-excel", 'xlam' : "application/vnd.ms-excel.addin.macroenabled.12", 'xlc' : "application/vnd.ms-excel", 'xlf' : "application/x-xliff+xml", 'xlm' : "application/vnd.ms-excel", 'xls' : "application/vnd.ms-excel", 'xlsb' : "application/vnd.ms-excel.sheet.binary.macroenabled.12", 'xlsm' : "application/vnd.ms-excel.sheet.macroenabled.12", 'xlsx' : "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", 'xlt' : "application/vnd.ms-excel", 'xltm' : "application/vnd.ms-excel.template.macroenabled.12", 'xltx' : "application/vnd.openxmlformats-officedocument.spreadsheetml.template", 'xlw' : "application/vnd.ms-excel", 'xm' : "audio/xm", 'xml' : "application/xml", 'xo' : "application/vnd.olpc-sugar", 'xop' : "application/xop+xml", 'xpi' : "application/x-xpinstall", 'xpl' : "application/xproc+xml", 'xpm' : "image/x-xpixmap", 'xpr' : "application/vnd.is-xpr", 'xps' : "application/vnd.ms-xpsdocument", 'xpw' : "application/vnd.intercon.formnet", 'xpx' : "application/vnd.intercon.formnet", 'xsl' : "application/xml", 'xslt' : "application/xslt+xml", 'xsm' : "application/vnd.syncml+xml", 'xspf' : "application/xspf+xml", 'xul' : "application/vnd.mozilla.xul+xml", 'xvm' : "application/xv+xml", 'xvml' : "application/xv+xml", 'xwd' : "image/x-xwindowdump", 'xyz' : "chemical/x-xyz", 'xz' : "application/x-xz", 'yaml' : "text/yaml", 'yang' : "application/yang", 'yin' : "application/yin+xml", 'yml' : "text/yaml", 'z' : "application/x-compress", 'z1' : "application/x-zmachine", 'z2' : "application/x-zmachine", 'z3' : "application/x-zmachine", 'z4' : "application/x-zmachine", 'z5' : "application/x-zmachine", 'z6' : "application/x-zmachine", 'z7' : "application/x-zmachine", 'z8' : "application/x-zmachine", 'zaz' : "application/vnd.zzazz.deck+xml", 'zip' : "application/zip", 'zir' : "application/vnd.zul", 'zirz' : "application/vnd.zul", 'zmm' : "application/vnd.handheld-entertainment+xml", '123' : "application/vnd.lotus-1-2-3"};
BPlayer.main();
})(typeof console != "undefined" ? console : {log:function(){}}, typeof window != "undefined" ? window : exports);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"buffer":1}]},{},[5]);
